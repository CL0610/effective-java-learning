{"index":{"version":"0.5.12","fields":[{"name":"title","boost":10},{"name":"keywords","boost":15},{"name":"body","boost":1}],"ref":"url","documentStore":{"store":{"./":["introduct","这是我的gitbook"],"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":["//可选参数","//可选参数的默认值","//调用方式","2.多个参数使用builder模式创建对象","=","address(str","address){","address;","address=\"\";","age){","age;","build(){","builder","builder(str","builder){","builder.address;","builder.age;","builder.phonenumber;","builder.username;","builder{","builder模式可以对其参数加以约束，build方法可以检验这些约束条件，将参数从builder拷贝到对象中之后，并在对象域而不是builder域中对它们进行检验，如果违反了任何约束，build方法就应该抛出illegalstateexception。builder模式十分灵活，可以利用单个builder构建多个对象。唯一的不足在于：为了创建对象必须先创建一个中间对象，builder模式还使得构造的过程更加冗长。","class","int","javabean模式","new","phonenumber(str","phonenumber){","phonenumber;","phonenumber=\"\";","privat","public","return","static","string","this.address","this.ag","this.phonenumb","this.usernam","this;","user","user(build","user(this);","user.builder(\"test\",18).address(\"test\").phonenumber(\"test\").build();","username,","username;","{","}","在所构建的对象中，有多个可选参数的话，可采用builder方式来构建对象：","如果类的构造器或者静态工厂中具有多个参数时，设计这种类时，builder模式就是种不错的选择，特别是当大多数参数都是可选的时候，与使用传统的重叠构造器模式项目，使用builder模式代码可读性更强，也比javabean的方式更加安全。","提供一个只有必要参数的构造器，第二个构造器有一个可选参数，第三个构造器有两个可选参数，依次类推，直到最后一个构造器包含所有的可选参数。","答案","结论","缺点：构造过程被分到了几个调用之中，在构造过程中无法保证javabean的一致性，容易出现线程安全的问题。","缺点：重叠构造器模式在有许多可选参数的时候，代码可读性很差，而且调用者想知道每个参数的意思，甚至需要深入到源码中去看每个参数的意义。如果多个参数的类型相同，调用者颠倒了参数的位置，编译的时候也不会报错，就会产生一些微妙的错误。","通过一个无参构造器创建对象，然后调用setter方法来设置每个必要的参数。这样创建实例很容易，产生的代码读起来也比较容易，因为通过setter的方法名能知道设置的参数是哪一个。","那么，当构建对象的时候有多个可选参数的时候，应该如何处理？","重叠构造器","问题","静态工厂和构造器有个共同特征，就是无法支持多个可选参数。如果构建一个多个可选参数的对象，常用的方式有重叠构造器和javabean的方式："],"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":["...","......","//","3.使用枚举类型强化singleton","=","care","class","collector","elvi","enum","final","garbag","getinstance(){","imperson","instanc","instance;","leavethebuilding()","method","new","object","on","preserv","privat","properti","public","readresolv","readresolve()","return","serializable”是不够的。为了维护并保证singleton，必须声名所有的实例都是transient，并提供一个readresolve方法。否则的话每次反序列化的时候都会创建一个新的实例，这个时候要加入以下代码：","singleton","singleton();","singleton(){","singleton(){};","singleton{","singleton的最佳方法。","static","take","true","void","{","}","但是还是存在第1种方法里的反射机制进行攻击的问题。以上两种方法还有一个问题，就是在实现singleton类序列化的时候，仅仅在声名中加上“impl","但需要创建singleton时，可以使用枚举的方式实现，这种实现方式既简洁又能保证序列化安全和反射安全。","实现singleton最安全可靠的方式，可以编写包含单个元素的枚举元素：","常用的实现singleton有两种方式，都是将构造器私有，然后通过导出public的静态域。一种是通过public的静态final成员变量实现：","结论","缺点：这种方式，可以通过反射改变构造器的私有属性，创建多个实例对象，这样需要在构造方法中加入逻辑判断不允许创建第二个实例。","解决","还有一种方式，是通过导出public的静态方法：","这种方法更加简洁，无偿的提供了序列化机制，绝对防止多次实例化（由enum保证），即使是在面对复杂的序列化或者反序列化或者反射攻击的时候也可以保证唯一。这已成为实现","那么，构建singleton最简单安全可靠的方式是什么？","问题"],"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html":["//","//或者被反射攻击","//防止在类的内部被调用实例化","4.私有构造器以强化对象不可实例化","assertionerror();","class","constructor","default","new","noninstanti","privat","public","suppress","throw","util","utilityclass","utilityclass()","{","}","可以通过将构造器方法访问标识符设置为private，将构造器方法私有化，从而将对象强化为不可实例化。比如在只包含静态域和静态方法的工具类，就有必要通过私有化构造器的方式，让工具类不可被实例化。","当诸如工具类这种类，被实例化是没有多大意义的，**应该强制将构造器私有化，以强化类的不可实例化属性。","我们通常将包含静态方法和静态域的类作为工具类。比如说可以用这种类来组织某种基本类型的相关方法（java.lang.math），也可以通过java.util.collections方式把实现特定接口的对象上的静态方法组织起来，最后还能利用这种类把final类上的方法组织起来，以取代扩展该类的做法。","结论","解决","这种工具类的实例化是没有任何用处的，但是需要注意到的是在不提供构造函数的时候，编译器会自动提供一个默认的构造器，这会造成无意识的实例化。一种补救方法是企图将类做成抽象类来阻止实例化，但是这种方法并不可靠，因为抽象类可以被继承，而它的子类是可以实例化的，这样甚至会误导用户以为这个类就是做出来让用户来继承使用的。针对这种工具类应该如何避免被实例化？","避免被实例化最简单而且可靠的方法是，通过显示的提供一个私有的构造函数来阻止实例化。比如：","问题"],"第一章 创建和销毁对象/5.避免创建不必要的对象.html":["\"test\";","&&","(long","*","*/","/**","//","0);","0,","0;","0l;","1,","5.避免创建不必要的对象","=","alloc","args)","babi","birthdate.compareto(boom_end)还有一个问题，就是如果改进后person类被初始化了，它的isbabyboomer方法永远不会被调用，那么就没有必要初始化两个静态域了。通过延迟初始化则有可能消除这些不必要的初始化方法，但是不建议这样做。这样做使方法的实现变的更加复杂，从而无法将性能显著提高到超过已经达到的水平；","birthdate.compareto(boom_start)>=0","birthdate.compareto(boomend)在isbabyboomer每次被调用的时候，都会新建一个calendar，一个timezone和两个date实例，这是不必要的，因这它们一旦被创建即无需改变了。下面是一个用静态的初始化器的版本，避免了这种效率的情况。","birthdate.compareto(boomstart)>=0","birthdate;","boolean","boom","boom_end;","boom_start;","boomend","boomstart","calendar","calendar.getinstance(timezone.gettimezone(\"gmt\"));","calendar.january,","class","constructor","date","don't","end","expens","fields,","final","gmtcal","gmtcal.gettime();","gmtcal.set(1946,","gmtcal.set(1965,","isbabyboomer()","long","main(string[]","methods,","new","object","ommit","person","privat","public","return","s","start","static","string","string(\"test\");","sum","this!","unnecessari","void","{","}","一般来说，最好能重用对象而不是在每次需要的时候就创建一个相同功能的实例，如果对象是不可变的，那么它就始终可以被重用。作为一个反例，代码如下","为了避免创建对象，而重用对象是为了提升性能，但是，这也应该有一个”度“。比如小对象的构造器只做很少量的工作，所以，小对象的创建和回收是非常廉价的，特别是在现在的jvm上，此时，就不需要刻意的为了重用对象而让代码逻辑更加混乱。反之，维护自己的对象池来避免创建对象并不是一种好的做法，除非池中的对象是非常重量级的。比如说数据库连接池，建立数据库连接的代价非常昂贵，因为重用这些对象很有意义。","为了避免重复对象，在实际编码过程中可以从这几个方面来思考：","如果这条语句出现在循环中就会在每一次循环时生成一个新的string实例，而这些string实例的功能完成一样，这会造成资源的巨大浪费，改进版本如下","对于同时提供了静态工厂方法和构造器的不可变类，通常可以使用静态工厂方法而不是构造器，原因在于构造器在每次被调用的时候都会创造一个新的对象，而静态工厂方法则不要求这样做，完成可以返回同一个对象的引用。例如静态工厂方法boolean.valueof(string)总是优先于boolean(string)；","结论","解决","警惕自动装箱和拆箱。在自动装箱(autoboxing)的机制下，可以将基本类型和装箱基本类型混用，但是这两种类型在性能上有着比较明显的差别，如反例:","这种写法只用了一个string实例，而不是每次都创建一个新的实例，而且，它可以保证在所有同一台虚拟机上运行的代码，只要它们包含的字符串字面量相同，就可以保证该对象会被重用。","那么，在使用对象避免反复创建对象有哪些原则？","问题","问题在于sum被声名成long而不是long，long是装箱基本类型，而long是基本类型，这样就在无意的情况了增加了拆装箱的开销，结论是：要优先使用基本类型而不是装箱基本类型，要当心无意识的自动装箱。","除了重用不可变的对象之外，也可以重用那些已知不会被修改的可变对象。例如下面的例子："],"第一章 创建和销毁对象/6.消除过期的对象引用.html":["(elements.length","(size","*","*/","+","/**","0)","0;","1);","16;","2","6.消除过期的对象引用","=","==","array","arrays.copyof(elements,","capac","class","default_initial_capac","doubl","e)","e;","each","element","element,","elements;","elements[","elements[size++]","elements[size]","emptystackexception();","ensur","ensurecapacity()","ensurecapacity();","final","grow.","int","more","need","new","null","obj","object","object[]","object[default_initial_capacity];","on","pop()","privat","public","push(object","reference)是指永远不会再被解除的引用，由于jvm有垃圾回收机制，如果存在过期引用，被引用的对象不会被回收掉，容易造成内存泄漏。那么，常见的内存泄漏有哪几种情况？","return","roughli","size","size)","size];","space","stack","stack()","static","throw","time","void","{","}","内存泄漏另一个常见来源是缓存：一旦把对象引用放到了缓存，当很长一段时间没有使用之后仍然存在于缓存之中。如果在缓存之外存在对某个数据项的键的引用的话，该缓存项才有意义。这样的场景是适合用weakhashmap。","内存泄漏第三个常见来源是监听器和回调：如果注册了回调，并没有显式的进行注销，也会造成内存泄漏的问题。确保回调会被正常的垃圾回收，只需要保存他们的弱引用即可，例如，只将它们保存为weakhashmap中的键。","在使用stack，list等“数据容器”的数据结构时，应该时刻关注容器中的数据元素是否有存在内存泄漏的情况，比如，下例中：","如果一个stack先增后减，那么会弹出的对象并不会被当成垃圾回收，原因在于stack内部维持着对这些对象的过期引用（在这里是数组的原因），这样就造成了内存泄漏。因此，在弹出数据元素的时，最好是释放元素引用，如:","如果代码中存在过期引用，很容易造成内存泄漏，甚至会导致系统崩溃，在实际编码过程中需要仔细检查代码，或者借助于heap工具去检查内存泄漏的问题。","结论","解决","过期引用(obsolet","问题"],"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html":["8.覆盖equals方法请遵守通用规定","equality)”的测试功能。如java.util.random覆盖了equals，以检查两个random实例是否产生相同的随机序列，但是调用者并不期望这样的功能。在这样的情况下，从object继承得到的equals实现已经足够了；","一致性：对于任何非null得引用值x和y，只要equals的比较操作在对象中所用的信息没有被修改，那么多次调用x.equals(y)就会一致的返回true，或者一致的返回false；","不关心类是否提供了“逻辑相等(logic","不要将所覆盖的equals方法中的入参object对象替换成其他对象，应该使用@override。","传递性：对于任何非null得引用值x、y和z，如果x.equals(y)返回true时，并且y.equals(z)也返回true，那么x.equals(z)也返回true;","使用==操作符检查“参数是否为这个对象的引用”；","使用instanceof操作符检查“参数是否为正确的类型”；","判断各个域值是否相等的逻辑不要过于复杂；","在覆盖equals方法时，需要遵守的约定有：","在面对equals方法时，会有这样的疑问，什么时候该覆盖equals方法，什么时候不应该覆盖，也就是说覆盖equals方法的时机是什么？如果覆盖equals方法，那么应该写？","对于该类中的每个“关键”域，检查参数中的域是否与该对象中对应的域相匹配。对于不是double和float的基本类型，可以使用==进行比较，对于引用类型，可以递归调用equals方法，对于float域，可以使用float.compare方法，对于double域，可以使用double.compare方法；","对称性：对于任何非null的引用值x，y，当且仅当y.equals(x)返回true时，x.equals(y)也应该返回true；","当编写完equals方法时，应该问自己三个问题：它是否满足对称性、传递性、以及一致性；","当面对equals方法时，应该根据覆盖equals方法的时机去判断是否需要覆盖equals方法，如果需要覆盖equals方法时，要严格遵守equals方法的规范。","类是私有的或是包级私有的，可以确定它的equals方法永远不会被调用。","类的每个实例本质上都是唯一的。对于代表活动实体而不是值（value）的类来说确实如此，例如thread。object提供的equals实现对于这些类来说是正确的行为；","经过instanceof类型检查之后把参数转换成正确的类型；","结论","编写的技巧有：","自反性：对于任何非null的引用值x，x.equals(x)必须返回true;","覆盖equals方法总要覆盖hashcode()方法；","覆盖equals方法的时机","覆盖equals方法的规范写法","覆盖equals方法看起来似乎很简单，但是有许多覆盖方式会导致错误，并且后果非常严重，最容易避免这类问题的办法就是不覆盖equals方法，在这种情况下，类的每个实例都只与它自身相等。下面这几种情况就不需要覆盖equals()方法：","解决","超类已经覆盖了equals，从超类继承过来的行为对于子类来说也是合适的。例如大多数set实现都从abstractset继承equals实现，类似的有list和map等；","问题","非空性：对于任何非null的引用值x，x.equals(null)必须返回false；"],"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":["*","+","0)","1","1)","17;","2).","3)","3.","31","4)","5)","6)","7)","9.覆盖equals时要同时覆盖hashcod",":","=","?","@overrid","a.","areacode;","b.","c;","class","final","hashcode()","hashcode的写法","int","linenumber;","object.hashcode规范","phonenumb","prefix;","privat","public","result","result;","return","short","string、integer、date，都可以把它们的hashcode方法返回确切值规定为该实例的一个函数，一般来说，这并不是一个好主意，因为这样做严格地限制了在将来的版本中改进散列函数的能力。","{","}","​","一个好的散列函数通常倾向于“为不相等的对象产生不相等的hashcode”，编写好的hashcode也如下这种简单的方式：","不要试图从散列码计算中排除一个对象的关键部分来提高性能。虽然这样可能使计算的速度得到提升，但是效果并不见得会好，可以会导致散列表慢到根本无法使用，如果因此大量的实例映射到极少的散列码上，那基于散列的集合将会显示出平方级的性能。java平台类库中的许多类如","为该域计算int类型的散列码c:","在应用程序的执行期间，只要对象的equals方法的比较操作所用到的信息没有被修改，那么对这同一个对象调用多次，hashcode方法必须都始终如一地返回同一个整数","在每个覆盖了equals方法的类中，也必须覆盖hashcode方法，如果不这样的话，就会违反了object.hashcode的通用约定，从而导致该类无法结合所有基于散列的集合一起正常动作，比如说hashmap，hashset，hashtable。那么，object.hashcode规范是什么？以及一个性能良好的hashcode应该怎样写？","如果两个对象根据equals(object)方法比较是不相等的，那么调用这两个对象中的任意一个对象的hashcode方法，则不一定要产生不同的整数结果。","如果两个对象根据equals(object)方法比较是相等的。那么调用这两个对象中任意一个对象的hashcode方法都必须产生同样的整数结果。","如果覆盖了equals方法一定要覆盖hashcode方法，否则会造成基于散列值得集合使用出现问题，如hashmap或者hashset等；","如果该域是boolean类型，则计算(f","如果该域是byte、char、short或者int类型，则计算(int)f","如果该域是double类型，则计算double.doubletolongbits(f)，然后按照步","如果该域是float类型，则计算float.floattointbits(f)。","如果该域是long类型，则计算(int)(f^(f>>>32))。","如果该域是一个对象引用，并且该类的equals方法通过递归地调用equals方式来比较这个域，则同样为这个域递归地调用hashcode。如果需要更复杂的比较，则为这个域计算一个范式，然后针对这个范式调用hashcode。如果这个域的值为null，则返回0（不绝对，但通常是0）。","如果该域是一个数组，则要把每个元素当做单独的域来处理。也就是说，递归地应用上面的规则，对每个重要的元素计算一个散列码。然后再用2中的方法组合起来。如果数组中的每个元素都很重要，则可以用arrays.hashcode方法。","对于对象中的每个关键域f(指equals方法中涉及的每个域)，完成以下步骤：","把某个非零的常数值，比如说17保存在一个名为result的int类型的变量中。","按照下面的公式，把步骤2.a计算得到的散列码c合并到result中。","示例","结论","解决","返回result。","问题","骤2.a.3)，为得到的long类型值计算散列值。"],"第二章 对象通用的方法/10.覆盖toString.html":["10.覆盖tostr","object中默认的tostring方法，它返回的字符串只类类名加上一个“＠符号”，后面是十六进制形式的hashcode，这些信息对我们来说用处不大，所以为了提供更好的关于类和对象的说明，我们应该总是覆盖tostring()方法来提供更加清晰的说明，覆盖tostring方法的好处以及覆盖tostring的注意事项？","tostring方法虽然不会像equals这样的方法对类造成那么大的影响，但是一个好的tostring可以使类用起来更加的舒服。当对象被传给println、printf、字符串联操作符(+)以及assert或者被调试器打印出来时，tostring方法会被自动调用。这是一种重要的调用手段，如果不重写tostring提供更明确的信息，这将很难让人理解。tostring的输出，也可以方便我们debug","在实际应用中，tostring方法应该返回对象中包含的所有值得关注的信息，如果对象太大或者对象中包含的状态信息难以用字符来表达，这样做就有点不切实际了，在这种情况下tostring方法应该返回类的关键域信息；","在实际开发过程中最好要覆盖tostring方法，将类的有用信息使用tostring方法进行输出，这样就可以方便调试或者打印的时候输出","在覆盖tostring时可以指定输出格式，这样就可以编写相应的代码来解析这种字符串表示法，产生字符串表示法，以及把字符串表示嵌入到持久的数据中。但是，将来一旦输出格式变化了，会造成更大的问题。是否指定输出格式应该权衡。","总结","覆盖tostring方法的好处","覆盖tostring的注意事项","解决","问题"],"第二章 对象通用的方法/12.考虑实现Comparable接口.html":["!=","&&","(0","(areacod","(areacodediff","(linenumb","(prefix","(short)","(x.equals(y))，但是这个并非绝对必要。一般来说，任何实现了comparable接口的类，若违反了这个条件，都应该明确予以说明。推荐使用这样的说法：“注意，该类具有内在的排序功能，但是与equals不一致”。","0","0)","0)暗示着x.compareto(z)","0;","0也成立。对应着equals使用规范里面的传递性。","0暗示着所有的z都满足sgn(x.compareto(z))","12.考虑实现comparable接口","1;","1、0、1。","=","==",">","@overrid","areacod","areacode,","areacode;","areacodediff","areacodediff;","class","compar","compareto(phonenumb","compareto方法是comparable接口中唯一的方法，不但允许进行简单的等同性比较，而且允许执行顺序比较。一旦实现了comparable接口，就可以跟许多泛型方法以及依赖于该接口的集合实现类进行协作。实现compareto方法有哪些规范？","final","implement","int","j有可能会溢出，并且返回一个负值。","linenumb","linenumber)","linenumber;","phonenumb","phonenumber(int","pn)","pn.areacode)","pn.areacode;","pn.linenumber)","pn.linenumber;","pn.prefix)","pn.prefix;","prefix","prefix,","prefix;","prefixdiff","prefixdiff)","prefixdiff;","privat","public","return","sgn(y.compareto(x))。这也暗示着当且仅当y.compareto(x)抛出异常时，x.compareto(y)才抛出异常。","sgn(y.compareto(z))。","short","this.areacod","this.linenumb","this.prefix","y.compareto(z)","{","}","使用compareto方法有一个重要的约定，就是通常情况下compareto方法施加的等同性测试和equals方法一致。如果不一致的话，集合接口一般是使用equals方法来进行等同性测试，而有序集合是采用compareto方法进行等同性测试，如果两者不一致的话，容易造成灾难性的后果；","使用这种方法的时候需要注意，有符号的32位整数还不足以大到能够表达任意两个32位整数的差值，如果i是一个很大的正整数，j是一个很小的负整数，i","可以改进如下：","在实现comparable接口时，应该遵守这些规范，特别是在做等同性测试的时候，要和equals等同性测试结果保持一致。","如果一个类有多个关键域，那么比较这些关键域的顺序非常关键。必须从最关键的域开始,逐步进行到所有的重要域。如果某个域的比较产生了非零的结果(0代表着相等)，则整个比较操作结束，并返回该结果。如果最关键的域是相等的，则再比较下一个关键域，以此类推，如果所有域都是相等的，那么才返回0。例如下面的例子：","将对象与指定的对象进行比较。当该对象小于、等于或者大于指定对象的时候，分别返回一个负整数，零或者正整数，如果由于指定对象的类型而无法与该对象进行比较，则抛出classcastexception。在下面的说明中，符号sgn(表达式)表示数学中的signum函数，它根据表达式(expression)的值为负值、零和正值，分别返回","强烈建议(x.compareto(y)","必须确保x.compareto(y)","必须确保所有的x和y都满足sgn(x.compareto(y))","必须确保这个比较关系是可传递的：(x.compareto(y)","示例","结论","解决","问题"],"第三章 类和接口/13.使类和成员的可访问性最小化.html":["13.使类和成员的可访问性最小化","privat","protected访问级别","包级访问；3.","在任何地方均可访问到；","在该类中私有访问；2.","如果类中覆盖了父类中的方法，那么子类中的访问级别不得低于父类中的访问级别，这样就可以保证在任何使用到父类实例的地方可以继续使用子类。如果一个类实现了某接口，那么在类中所有的接口的方法都必须是public的；","实例域决不能是公有的，如何非final实例域指向了可变对象，并且该实例域为public的话，那么包含该实例域的类就是线程不安全的；","尽可能使每个类或者成员不被外界访问，应该使用与你正在编写的软件的对应功能相一致的、尽可能最小的访问级别；对于成员（域、方法、嵌套类或者嵌套接口）有四种访问级别：1.","总之，在设计类和成员时，应该尽可能的降低可访问性，除了公有静态final域的特殊情形之外，公有类都不应该包含公有域，并且要确保公有的静态final域所引用的对象是不可变的。","总结","要区分设计良好的模块和设计不好的模块，最重要的因素在于，这个模块对于外部其他模块而言，是否隐藏其内部数据和其他细节。设计良好的模块会隐藏所有的实现细节，把它的api于它的实现清晰的隔离起来，模块之间只通过它们的api进行通信，那么，在设计类和成员时有怎样的设计原则？","解决","设计类和成员有这样几个基本原则：","该类的子类或者包类所有类均可访问到；4.public","问题","默认级别"],"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html":["14.在公有类中使用访问方法而非公有域","=","class","doubl","getx()","gety()","point","point(doubl","privat","public","return","setx(doubl","sety(doubl","this.i","this.x","void","x)","x,","x;","y)","y;","{","}","公有类永远都不应该暴露可变的域，有时候会需要用包级私有的或者私有的嵌套类来暴露域，无论这个类的域是可变的还是不可变的。","如上这样的类绝不应该声名为public，因为一旦声名为了public，该类中所有的数据就全部暴露出来，并且无法改变它的数据表示法，也无法强加任何约束条件，当被访问的时候，无法采取任何辅助措施，这么多问题，归结原因就是因为如果类声明不当，那么可能会将整个数据域全部暴露给客户端。虽然，对于可变类来说，应该用包含私有域和仅有设置方法的类代替：","如果类的数据域可在它所在的包外部进行访问，就提供访问方法，这样可以保留该类内部表示的灵活性。如果公有类暴露了它的数据域，要想将来想改变公有类的内部数据接口，那是不太可能的事情了，因为使用公有类的数据域已经遍布整个系统中了；","对于公有类有一个约定，公有类永远都不应该暴露可变的域。","有这样一个反例：","结论","解决","那么，对类中的数据域的访问级别应该如何设计？","问题"],"第三章 类和接口/15.使可变性最小化.html":["*/","...","....","/**","//","0","0,","15.使可变性最小化","=","arrays.copyof","arrays.copyof(value,","cach","char","char[]","char[value.length];","charact","charsequ","class","code","comparable,","count","count;","default","final","first","hash","hash;","implement","index","initi","int","issu","java.io.serializable,","new","number","offset","offset;","order","privat","public","result,","result;","result[]","return","storag","storage.","string","string(char","string.","string内部所有成员都设置为私有变量","string类被final修饰，不可继承","system.arraycopy(value,","this.valu","tochararray()","us","used.","valu","value.length);","value[])","value[];","{","}","不可变类是其实例不能被修改的类，没有实例中所包含的数据域，在实例被创建的时候被初始化，且在实例的生命周期中不能被修改。java中有许多不可变类，如string，值的基本包装类型，biginteger和bigdecimal等，不可变类是线程安全的。不可变有很多优点，那么设计不可变类的原则有哪些？","不可变类有很多好处，因此合适的适用场景下，可以考虑将类设计生不可变类，并遵守不可变类的设计原则。","不存在value的sett","不要提供任何修改实例数据域的setter方法；","例如，string不可变类的具体实现为：","保证类不会被扩展：防止子类恶意修改实例对象，应该禁止类被子类扩展，可以将其定义为final；或者让类所有的构造器都变成私有的或者包级私有的，并添加公有的静态工厂来代替公有的构造器；","如上代码所示，可以观察到以下设计细节:","并将value和offset设置为final。","当传入可变数组value[]时，进行深拷贝而不是直接将value[]复制给内部变量.","所有的域都成为私有的，这样可以防止客户端获得访问被域引用的可变对象的权限，并防止客户端修改这些对象；","所有的域都是final的；","确保对于任何可变组件的互斥性访问：如果类具有指向可变对象的域，则必须确保客户端无法获得指向这些对象的引用；","示例","结论","获取value时不是直接返回对象引用，而是返回对象的copy.","解决","设计不可变类有以下几条规则：","问题"],"第三章 类和接口/16.复合优于继承.html":["+=","//","0.75f);","0;","16.复合优于继承","=","@overrid","a\"的关系的时候，类b才应该扩展a。如果打算让类b扩展类a，就应该确定一个问题：b确实也是a吗？如果不能确定答案是肯定的，那么b就不应该扩展a。如果答案是否定的，通常情况下b应该包含a的一个私有实例，并且暴露一个较小的、较简单的api：a本质上不是b的一部分，只是它的实现细节而已(使用api的客户端无需知道)。","a)","add(","addall(collect","addcount","addcount++;","addcount;","args)","boolean","c)","c.size();","class","clear()","composit","contains(object","containsall(collect","count","count++;","count;","e)","equals(object","extend","final","float","forward","forwardingset","forwardingset(set","getaddcount()","getcount()","hashcode()","hashset","hashset.addall(arrays.aslist(new","implement","inherit","initcap,","instrumentedset","instrumentedset(set","int","isempty()","iter","iterator()","loadfactor)","loadfactor);","main(string[]","new","o)","object[]","place","privat","public","remove(object","removeall(collect","retainall(collect","return","reusabl","s)","s.add(e);","s.addall(c);","s.clear();","s.contains(o);","s.containsall(c);","s.equals(o);","s.hashcode();","s.isempty();","s.iterator();","s.remove(o);","s.removeall(c);","s.retainall(c);","s.size();","s.toarray();","s.toarray(a);","s.tostring();","s;","set","size()","static","string","string[]{\"1\",\"2\",\"3\"}));","super(initcap,","super(s);","super.add(e);","super.addall(c);","system.out.println(hashset.getcount());","t[]","testhashset","testhashset(16,","testhashset(int","this.","toarray()","toarray(t[]","tostring()","us","void","wrapper","{","}","与方法调用不同的是，继承打破封装性。子类依赖于父类，如果父类的具体实现细节改变，子类也会跟着相应改变。除非父类就是专门为扩展而设计的，并且有良好的文档说明；2.","什么时候使用继承？","只有当子类真正是超类的子类型(subtype)时，才适合用继承。对于两个类a和b，只有当两者之间确实存在\"i","在上面这个例子里构造了两个类，一个是用来扩展操作的包裹类，一个是用来与现有类进行交互的转发类，可以看到，在现在这个实现中包裹类不再直接扩展set，而是扩展了他的转发类，而在转发类内部，现有set类是作为它的一个数据域存在的，转发类实现了set接口，这样它就包括了现有类的基本操作。每个转发动作都直接调用现有类的相应方法并返回相应结果。这样就将信赖于set的实现细节排除在包裹类之外。有的时候，复合和转发的结合被错误的称为\"委托(delegation)\"。从技术的角度来说，这不是委托，除非包装对象把自身传递给被包装的对象。","当通过子类继承父类并不是代码重用的最好手段，有这样的缺点：1.","总结","按照预想的会打印输出3，但实际上打印输出6。这是因为，addall()方法内部实现调用了add()方法，因此总共的次数就是3+3=6。这种情况就是父类方法中”自用性“导致的。那么，针对由继承带来的问题应该如何解决？","父类方法中的”自用性“问题，导致的子类方法逻辑出错，比如统计hashset自创建以来插入了多少个元素，需要覆盖add()方法和addall()方法：","简而言之，继承的功能非常强大，但是也存在诸多问题，因为它违反了封装原则。只有当子类和超类之间确实存在子类型的关系时，使用继承才是恰当的。即使如此，如果子类和超类处在不同的包中，并且超类并不是为了继承而设计的，那么继承将会导致脆弱性。为了避免这种情况，可以使用复合和转发机制来代替继承，尤其是当存在适当的接口可以实现包装类的时候。包装类不仅比子类更加健壮，而且功能也更强大","解决","采用复合/转发的方式重写上面的testhash，包含了两个部分：新类本身以及被包含的转发类：","针对继承带来的问题，可以采用复合的方式进行解决，即不用扩展现有的类，而是在新的类中增加一个私有域，它引用现有类的一个实例。因此现有类变成了一个新类的一个组件，新类中的每个实例方法就可以调用被包含的类的实例方法，并返回相应的结果，这称之为转发。","问题"],"第三章 类和接口/17.要么为继承而设计，并提供文档说明，要么就禁止继承.html":["17.要么为继承而设计，并提供文档说明，要么就禁止继承","关于程序文档的格言：好的api文档应该描述一个给定的方法做了什么工作，而不是描述它是如何做到的。由此看来，上面的这段文档违背了这一格言，这正是继承破坏了封装性所带来的不幸后果，因为在上面这段文档中它必须要说明清楚调用可覆盖方法所带来的影响。所以，为了设计一个类的文档，以便它能够被安全的子类化，必须描述清楚那些有可能未定义的实现细节。","在16条中阐述了贸然的将不是为了继承而设计的类进行继承，而实现子类化，是多么的危险，那么，在实际开发中，针对继承而设计的类怎样的处理才算是安全可靠的？","如果具体的类没有实现标准的接口，那么禁止继承可能会给有些程序员带来不便，如果认为必须允许从这样的类继承，一种合理的办法就是确保这个类永远不会调用它的任何可覆盖的方法，并在文档中说明这一点。否则，就禁止被子类化。","对于专门为了继承而设计并且具有良好文档说明的类而言，该类的文档必须精确地描述覆盖每个方法所带来的影响。该类必须有文档说明它可覆盖的方法的自用性。对于每个公有的或受保护的方法或者构造器，它的文档必须指明该方法或者构造器调用了哪些可覆盖的方法，是以什么顺序调用的，每个调用的结果又是如何影响后续的处理过程的。更一般的，类必须在文档中说明，在哪些情况下它会调用可覆盖的方法。","对于那些并非为了安全地进行子类化而设计和编写文档的类，要禁止子类化。有两种办法可以禁止子类化：第一，把这个类声名为final。第二、把所有的构造器都声名为private，或者包级私有并增加一些静态工厂来替代构造器。","方法将不会如预期执行；","结论","解决","还要注意，因继承而需要的特殊文档会打乱正常的文档信息，普通的文档被设计用来让程序员可以创建该类的实例，并调用类的方法。而特殊文档看起来混用了很多内容。为了允许继承，类还必须遵守其他的一些约束。构造器决不能调用可被覆盖的方法，无论是直接调用还是间接调用。这是因为超类的构造器在子类的构造器之前运行，所以，子类中覆盖版本的方法将会在子类的构造器运行之前就先被调用。如果该覆盖版本的方法信赖于子类构造器所执行的任何初始化操作，该","针对自用性问题，也可以机械的消除类中可覆盖方法的自用特征，而不改变它们的行为。将每个可覆盖方法的代码体移动到一个私有的辅助方法中。并且让每个可覆盖的方法调用它的私有辅助方法。然后，用”直接调用可覆盖方法的私有辅助方法“来代替”可覆盖方法的每个自用调用“。","问题"],"第三章 类和接口/19.接口只用于定义类型.html":["1.12588456e","19.接口只用于定义类型","23;","6.23156412e23;","=","avogadros_numb","boltzmann_const","class","doubl","final","interface)：这种接口不包含任何方法，它只包含静态的final域，每个域都导出一个常量。","physicalconst","physicalconstants()","privat","public","static","{","{}","}","使用不可实例化的工具类来导出这些常量，例如：","使用接口一种典型的错误方式就是：常量接口。常量接口(constant","在java平台类库中所有的数值包装类都导出min_value和max_value常量。如果这些常量最好被看作是枚举类型成员，那就应该用枚举类型来导出。","如果这些常量与某些现有的类或者接口紧密相关，就应该把这些常量添加到这个类或者接口中，注意，这里说添加到接口中并不是指的常量接口。","常量接口是对接口的一种不良使用，主要有这样两个原因：","当类实现接口时，接口就充当可以引用这个类的实例类型。因此，类实现了接口，就表明客户端对这个类的实例可以实施某些动作。为了任何其他目的而定义的接口是不恰当的。那么，在实际开发中存在哪些定义接口不恰当的方式？","接口只适用被用来定义类型，不应该被用来导出常量。","类在内部使用某些常量，纯粹是实现细节，实现常量接口，会导致把这样的实现细节泄露到该类的导出api中，因为接口中所有的域都是及方法public的。","类实现常量接口，这对于这个类的用户来讲并没有实际的价值。实际上，这样做返回会让他们感到更糊涂，这还代表了一种承诺：如果在将来的发行版本中，这个类被修改了，它不再需要使用这些常量了，依然必须实现这个接口，以确保二进制兼容性。如果非final类实现了常量接口，它的所有子类的命名空间都受到了污染。java平台类库中存在几个常量å接口，如java.io.objectstreamconstants，这些接口都是反面典型，不值得效仿。","结论","解决","那既然不适合存在全部都是导出常量的常量接口，那么如果需要导出常量，它们应该放在哪里呢？","问题"],"第三章 类和接口/20.类层次优于标签类.html":["(doubl","(radiu","(shape){","*","//constructor","//tag","//these","//thi","20.类层次优于标签类","=","abstract","area()","area();","area(){","assertionerror();","case","case而导致运行时失败的可能；","circl","circle(doubl","circle:return","class","class）有着许多的缺点。它们中充斥着样板代码，包括枚举声明、标签域以及条件语句。","default:throw","doubl","enum","extend","field","figur","figure(doubl","final","java提供了其他更好的方法来定义能表示多种风格对象的单个数据类型：子类型化。标签类正是类层次的一种简单效仿。","lenght,doubl","length","length*width;","length,","length;","math.pi","math.pi*(radiu","new","public","radius)","radius);","radius;","rectangl","rectangle(doubl","rectangle,circl","rectangle:return","redius){","return","shape","shape;","shape=shape.circle;","shape=shape.rectangle;","switch","this.length","this.length=lenght;","this.radiu","this.radius=radius;","this.width","this.width=width;","us","width)","width;","{","}","};","为了将标签类转化成类层次，有这样一些步骤：","同样的，如果所有的方法都用到了某些数据域，就应该把他们放在这个类中。","域不能做成final的，除非构造器初始化相关的域，如果不需要初始化相关域，那就会需要增加更多的样板代码；","增加了内存的占用，因为实例承担着属于其他风格的不相关域；","多个实现乱七八糟地挤在了单个类中，破坏了可读性；","多个程序员可以独立的扩展层次结构。并且不用访问根类的源代码就能相互操作；","如上例就是一个典型的标签类，一个类通过标签域shape来实现了圆形和矩形这两个不同类型的实例。","如果还有其他的方法行为不依赖于某个标签的值，就把这样的方法放到这个类中；","对于顶层类中声名的每个抽象方法，都确保有一个实现。这样就杜绝了因为遗漏switch","将上面的标签类figure转换成类层次结构：","数据类型没有提供任何关于其风格的线索；","无法给标签类添加风格，除非可以修改它的源文件，如果一定要添加风格，就必须记得给每个条件语句都添加一个条件，否则类就会在运行时失败；","有时候通过一个标签域，让一个类实现多种风格的类的实例，这种类称之为标签类。","标签类很少有适用的时候。当想要编写一个包含显示标签域的类时，应该考虑一下，这个标签是否可以被取消，是否可以用类层次来代替。当遇到一个包含标签域的现有类时，就要考虑一下将它重构到一个层次结构中去。","标签类过于冗长、容易出错，并且效率低下。","每个类型的实现都配有自己的类，这些类都没有受到不相关域的拖累。所有的域都是final的。编译器确保每个类的构造器都初始化它的数据域；","每种类型都有一种相关的独立的数据类型，就是相应的子类类型，允许程序员指明变量的类型，限制变量，并将参数输入到特殊的类型；","类层次的另一个好处在于，它们可以用来反映类型之间本质上的层次关系。有助于增强灵活性，并进行更好的编译时类型检查。","结论","解决","这个抽象类是类层次的根；","这个类层次纠正了前面提到过的标签类的所有缺点：","这段代码简洁而清楚，没有包含在原来的版本中所见到的所有样本代码；","这种标签类（tag","问题","首先要为标签类中的每一个方法都定义一个包含抽象方法的抽象类，这每个方法的行为都依赖于标签值。在figure类中，只有一个这样的方法：area。"],"第三章 类和接口/21.用函数对象表示策略.html":["......","//","21.用函数对象表示策略","=","arrays.sort(stringarray,","class","compar","comparator()","comparator,","compare(str","compare(t","final","host","implement","instanc","int","interfac","java没有提供函数指针，但是可以用对象引用实现同样的功能。调用对象上的方法通常是执行该对象上的某个操作。然而，我们也可能定义这样一种对象，它的方法执行其他对象上的操作。如果一个类仅仅导出这样的一个方法，它的实例上就等同于一个指向该方法的指针。这样的实例被称为函数对象。考虑这样一个类：","new","privat","public","return","s1,","s1.length()","s2)","s2.length();","serializ","static","strategi","string","string_length_compar","stringlengthcompar","stringlengthcomparator()","stringlengthcomparator();","strlencmp","strlencmp();","t","t1,","t2);","{","{}","}","});","但是，用这述这种方法有个问题，就是规定了参数的类型，这样就无法传递任何其他的比较策略。相反，对于这种情况，应该定义一个comparator接口，并修改stringlengthcomparator来实现这个接口。换句话说，在设计具体的策略类时，还需要定义一个策略接口：","具体策略类往往使用匿名类声明：","函数指针的主要作用就是实现策略模式，为了在java中实现这种模式，要声名一个接口来表示策略，并且为每个具体策略声名一个实现了该接口的类；","因为策略接口被用做所有具体策略实例的类型，所以我们并不需要为了导出具体策略而把具体策略类做成公有的。可以导出公有的静态域或者静态工厂方法，其类型是策略接口，具体的策略类可以是宿主类的私有嵌套类：","在这里，指向stringlengthcomparator对象的引用可以被当作是一个指向该对象内部比较器compare的“函数指针”，可以在任意一对字符串上被调用，stringlengthcomparator实例是用于比较字符串比较操作的具体策略。对于这种具体策略类，它的所有实例在功能上是相互等价的，所以根据前面的原则，将它作成是singleton是非常合适的：","当一个具体策略只被使用一次时，通常使用匿名类来声名和实例化这个具体策略；","当一个具体策略是设计用来重复使用的时候，它的类通常就要被实现为私有的静态成员类，并通过公有的静态final域或静态工厂方法导出，其类型为策略接口。","有些语言支持函数指针、代理、lambda表达式，或者支持类似的机制，允许程序把”调用特殊函数的能力”储存起来并传递这种能力。最常用的例子就是比较函数，通过传入不同的比较策略会得到不同的比较结果，这也正是策略模式的一个例子。可是java没有提供函数指针。","此时，前面的具体策略类声名如下：","结论","解决方案","这样，在传递具体策略类的对象的时候，只需要将参数类型定为接口类型(使用接口做类型定义)，现在可以传递其他的比较策略了,","这里存在一个问题，就是在每次执行调用的时候都会创建一个新的实例。如果它被重复执行，那就应该考虑将函数对象存储到一个私有的静态final域里并重用它。这样做的另一个好处就是为这个函数对象取一个有意义的声明。","问题"],"第三章 类和接口/22.优先考虑静态成员类.html":["22.优先考虑静态成员类","abstractset","class","class）、匿名类（anonym","class）、非静态成员类（nonstat","class）。嵌套类有四种：静态成员类（stat","class）。那么，在什么情况下使用应该使用哪种嵌套类才是合适的？","class）。除了第一种之外，其他三种都被称为内部类（inn","class）和局部类（loc","class）提供服务。如果嵌套类将来可能会用于其他的某个环境中，它就应该是顶层类（top","class）是指被定义在另一个类的内部的类。嵌套类存在的目的应该是为它的外围类（enclos","extend","implement","instance）相关联。在非静态成员类的实例方法内部，可以调用外围实例上的方法，或者利用修饰过的this获得外围实例的引用。如果嵌套类的实例可以在外围类的实例之外独立存在，这个嵌套类就必须是静态成员类，在没有外围实例的情况下，要想创建非静态成员类的实例是不可能的。","iter","iterator(){","iterator{","level","member","memberclass(args)来手工建立这种关系也是有可能的，但是很少使用。","myiter","myiterator();","myset","new","privat","public","return","view），这些集合视图是由map的keyset、entryset和values方法返回的。同样地，诸如set和list这种集合接口的实现往往也是用非静态成员类来实现他们的迭代器（iterator）：","vs","{","}","从语法上讲，静态成员类和非静态成员类之间唯一的区别是，静态成员类的声明中包含了修饰符static。尽管他们的语法非常的相似，但是这两种嵌套类有很大的不同。非静态成员类的每个实例都隐含着与外围类的一个外围实例（enclos","假设调用一个方法（如array.sort()），该方法的入参需要创建一个实例，并且已经有一个确定的类型，创建该类的实例时就可以采用创建匿名类的方式来创建该类的实例。如果没有一个现有的类型，就设计成局部类。","匿名类","匿名类多用于表示具体策略的函数对象，比如arrays.sort()方法中定义的比较器comparator，还可用于创建thread时的runnable等。","匿名类没有类名，它不是外围类的一个成员，并不与其他的成员一起被声明，而是在使用的同时被声明和实例化。匿名类可以出现在代码中任何允许存在表达式的地方。当且仅当匿名类出现在非静态的环境中时，它才有外围实例。但是即使它们出现在静态的环境中，也不可能拥有任何静态成员。","匿名类的适用性受到诸多的限制。除了在它们被声明的时候之外，是无法将它们实例化的，你不能执行instanceof测试。你无法声明一个匿名类来实现多个接口，或者扩展一个类，并同时扩展类和实现接口。由于匿名类出现在表达式当中，它们必须保持简短——大约10行或者更少些——否则会影响程序的可读性。","如果一个嵌套类需要在单个方法之外仍然可见的，或者它太长了，不适合于放在方法内部，就应该使用成员类；","如果声明成员类不要求访问外围实例，就要始终把static修饰符放在它的生命中，使它成为静态成员类，而不是非静态成员类。如果省略了static修饰符，则每个实例都将包含一个额外的指向外围对象的引用。保存这份引用要消耗时间和空间，并且会导致外围实例在符合垃圾回收时仍然得以保留，造成内存泄漏；","如果成员类的每个示例都需要一个指向外围实例的引用，就要把成员类做成非静态的；否则，就做成静态的；","如果没有外围实例的情况下，也需要分配内部类实例，就不能使用非静态成员类，因为非静态成员类的实例必须要有一个外围实例。","局部类","局部类是四种嵌套类中用的最少的类。在任何“可以声明局部变量”的地方，都可以声明局部类，并且局部类也遵守同样的作用域规则。局部类与其他三种嵌套类中的每一种都有一些共同的属性。与成员类一样，局部类有名字，可以被重复使用。与匿名类一样，只有当局部类实在非静态环境中定义的时候，才有外围实例，它们也不能包含静态成员。与匿名类一样，它们必须简短以便不会影响到可读性。","嵌套类（nest","当非静态成员类的实例被创建的时候，它和外围实例之间的关联关系也随之建立起来；而且，这种关联关系以后也不能被修改。通常情况下，当在外围类的某个实例方法的内部调用了非静态成员类的构造器时，这种管理就自动建立起来。使用表达式enclosinginstance.new","总结","私有静态成员类的一种常见用法用来代表外围类所代表的对象的组件。例如，考虑一个map实例，他把键和值关联起来。许多map实现的内部都有一个entry对象，对应于map中的每个键值对。虽然每个entry都与一个map关联，但是entry上的方法并不需要访问该map。因此，使用非静态成员来表示entry是很浪费的：private修饰的静态成员类是最佳的选择。如果不小心漏掉了entry声明中的static修饰符，该map依然可以工作，但是每个entry中将会包含一个指向该map的引用，这样就浪费了空间和时间。","简而言之，共有四种不同的嵌套类，每一种都有自己的用途。","解决方案","问题","静态成员类","静态成员类是最简单的一种嵌套类。最好把它看作是普通的类，只是碰巧被声明在另一个类的内部而已，它可以访问外围类的所有成员，包括那些声明为私有的成员。静态成员类是外围类的一个静态成员，与其他的静态成员一样，也遵守同样的可访问性规则。如果它被声明为私有的，它就只能在外围类的内部才可以被访问。","静态成员类的一种常见的用法就是作为公有的辅助类，仅当它的外部类一起使用时才有意义。例如，一个描述了计算器支持的各种操作的枚举。operation枚举应该是calculator类的公有静态成员类，然后使用calculator类的客户端就可以用诸如calculator.operation.plus这样的名称来引用这些操作。","非静态成员类","非静态成员类常见用法是定义一个adapter，它允许外部类的实例被看作是另一个不相关的类的实例。例如，map接口的实现往往使用非静态成员类来实现它们的集合视图（collect"],"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":["23.使用泛型不要使用原生类型","=","args)","arraylist();","integer(20));","list","list,","list.add(o);","main(string[]","namelist","namelist.add(\"test\");","namelist.add(1);","new","o){","object","privat","public","set","set。这是最普通的参数化set集合，可以持有任何集合。通配符类型是安全的，原生态类型不安全。由于可以将任何元素放进原生态类型的集合中，因此很容易破坏改集合的类型约束条件。","static","str","string","strlist","strlist.get(0);","unsafeadd(list","unsafeadd(strlist,","void","{","}","上例代码中使用了原生态泛型，编译可以通过，但是很显然由于添加了integer类型，在get集合元素的时候会出现classcastexception。但是如果使用list的话，由于list并不是list的子类型，编译就不会通过，这样的代码就更加安全。","不严格的说，前者逃避了泛型的检查，后者明确告诉编译器，它能够持有任意类型的对象。虽然你可以将list传递给类型list的参数，但是不能将它传给类型list的参数。这是因为泛型有子类型化规则，list","使用原生态类型虽然也是合法的，但是不应该这样做，因为这会失去泛型在安全性和表述性方面的所有优势。原生态类型存在的理由是因为老代码的移植兼容性。","则是一个通配符类型，表示只能包含某种未知对象类型的一个集合；set则是原生态类型，它脱离了泛型安全性检查规则。前两个是安全的，最后一种不安全。","原生态类型list和参数化类型list之间到底有什么区别呢？","如上例代码，如果我们在声明泛型的时候使用了原生态类型的泛型，但是在添加数据元素一次添加了integer，一次添加了string，编译却能通过，但是很显然会出现运行时异常。因此，如果使用原生类型，就失掉了泛型在安全性和表述性方面的所有优势。","当实例对象插入到集合中时会进行类型判断，可以将类型不匹配问题在编译时期就可以知道，而不至于等到运行时出现classcastexception；2.","总之，使用原生态类型会在运行时导致异常，因此不要再新代码中使用。但就有人问既然这么不推荐使用，为什么还要存在原生态类型呢？原生态类型只是为了与引入泛型之前的遗留代码进行兼容和互换而提供的；","无限制通配符","是个参数化类型，所以可以包含任何对象类型的一个集合；set","是原生态类型list的一个子类型，而不是参数化类型list的子类型。因此，如果使用像list这样的原生态类型，就会丢失类型安全性，但是如果使用像list这样的参数化类型，则不会丢失类型安全性。例如下例代码：","每个泛型都定义一个原生态类型，即不带任何实际类型参数的泛型名称，如list对应的原生态类型是list。","泛型指声明中具有一个或者多个类型参数的类或者接口。每种泛型定义一组参数化的类型，构成格式为：类或者接口的名称，接着用尖括号<>把实际类型参数列表括起来。例如list，是一个参数化的类型，表示元素类型为string的列表，（string是与形式类型参数e相对应的实际类型参数）。","泛型的优势在于：1.","由于集合已经知道装载的是哪种类型的实例对象，因此从集合中取出对象时就无需再进行转换；","的无限制通配符类型为","结论","虽然不应该在新代码中使用想list这样原生态类型，使用参数化的类型以允许插入任意对象，如list","要使用泛型，但不确定或者不关心实际的类型参数，就可以使用一个问号替代。例如，泛型set","解决方案","那么如何使用泛型以插入任意对象？","那么，是否应该使用原生态类型？","问题","，这还是可以的。"],"第四章 泛型/24.消除非受检警告.html":["24.消除非受检警告","cast","convers","suppresswarnings注解的时候都应该添加一条注释以说明为什么这么做是安全的，这样可以帮助其他人理解代码，更重要的是，可以尽量减少其他人修改代码后导致计算不安全的概率。","warning)、非受检方法调用警告、非受检普通数组创建警告以及非受检转换警告(uncheck","warnings)，要尽可能消除每一个警告，以确保代码安全。","仔细检查代码逻辑，确定在类型转换上没有错误，尽力通过ide提示，消除每一个警告；","如果发现要在长度不止一行的方法或构造器中使用suppresswarnings注解，可以将它移到一个局部变量的声名中。suppresswarnings注解方在return","如果无法消除警告，同时又可以证明引起警告的代码是类型安全的。可以用一个@suppresswarnings(\"unchecked\")注解来禁止这条警告。suppresswarnings注解可以用任何粒度的级别中，从单独的局部变量声明到整个类都是可以的。应该始终在尽可能小的范围内使用suppresswarnings注解，永远不要在整个类上使用suppresswarnings注解，这么做很可能会掩盖了重要的警告，以更小粒度的使用该注解；","总之，非受检警告很重要，不要忽略它们。每一条警告都表示可能在运行时抛出classcastexception异常。要尽最大的努力去消除这些警告。如果无法消除但是可以证明引起警告的代码是安全的，就可以在尽可能小的范围中，使用＠suppresswarnings(\"unchecked\")注解来禁止警告，但是要把禁止的原因记录下来。","用泛型编程的时候，会遇到许多的编译器警告：非受检强制转化警告(uncheck","结论","解决方案","语句中是非法的，可以通过增加一个局部变量，在变量上使用suppresswarnings注解，然后将这个变量return的方式解决；","问题"],"第四章 泛型/25.List优于数组.html":["\"i","//","//假设可以创建参数化类型数组","//取数据时目标类型是string，但是实际类型为integer，","//因此就会出现classcastexcept","//数组赋值在运行时进行，由于initlist在运行时会擦除","//由于数组是协变的，可以赋值","//类型信息，转换为list，因此可以插入到数组中","25.list优于数组","=","array","arraylist();","arrays.aslist(42);","arraystoreexcept","creating错误。为什么会禁止行为？","don't","e[]都是非法的。这些在编译的时候会产生一个gener","fit","in\");","in\";","incompat","intlist","intlist;","list","list[1];","list[]","list[]、new","list[]和new","list是不可变的，编译无法通过","long[1];","new","object","object[]","objectarray","objectarray[0]","objects[0]","ol","ol.add(\"i","s","string","stringlist","stringlists;","stringlists[0].get(0);","throw","type","从上例的代码可以看出，数组是协变的，因为long是object的子类型，所以long[]是object[]的子类型，第一段代码会编译通过。但是运行时，objectarray运行时类型是long的list，插入string类型的数据就会抛出arraystoreexception。而list是不可变的，泛型在运行时会类型擦除，类型检查会放在编译期间，因此第二段代码在编译期间就不会通过，将问题暴露在编译期间，这样才是可靠的。","原因及解决方法","基于以上两点原因，创建泛型、参数化类型或者是类型参数的数组都是非法的。如：new","数组和泛型化数组的主要区别有：","数组和泛型化的列表在实际使用中经常会被用来装载数据元素，但是不清楚数组和泛型化list之间的区别，经常会造成数组和list的混用；","数组和泛型有着非常不同的类型规则。数组是协变且可具体化的，泛型是不可变的且是可被擦除的。因此，数组提供了运行时的类型安全，但是没有编译时的类型安全，反之，泛型也一样，一般来说，数组和泛型不能很好的混合使用，如果发现自己将它们混合起来使用，并且得到了编译时错误或警告，那么就要考虑用列表代替数组。","数组是具体化的(reified)，数组在运行时才会约束数据类型是否匹配。泛型则是通过擦除(erasure)来实现，因此泛型只在编译时强化它们的类型信息，并在运行时丢弃（或者擦除）它们的元素类型约束。类型擦除主要是为了兼容之前没有泛型特性的代码。","数组是协变的而泛型是不可变的，协变的意思是如果sub为super的子类型，那么数组类型sub[]就是super[]的子类型，不可变的意思是对于任意两个不同的类型type1和type2，list既不是list的子类型，也不是list的超类型。可以看下面这个例子：","数组是协变的，因此编译可以通过，但是会出现运行时异常","结论","针对上面的分析，可以看出禁止创建参数化类型数组等情况是合理的，能够将错误暴露在编译期。像e、list、list这样的类型应称作不可具体化的类型。唯一可具体化的参数化类型是无限制的通配符类型，如list和map。虽然不常用，但是创建无限制通配类型的数组是合法的。","问题"],"第五章 枚举和注解/30.使用枚举代替int 常量.html":["\"","\")","%f","%f%n\",","%s","(4.869e+24,","(5.685e+26,","(5.975e+24,","(6.419e+23,","(8.683e+25,","(oper","(planet","(radiu","*","+","/","//","//2.000000","//args[0]=30输出结果","//weight","//输入2","0.500000","0;","11.337201","11.388120","11;","1;","2.000000","2.439e6),","2.477e7);","2.556e7),","27.145664","27.151530","2;","2;1234567","3.393e6),","30.000000","30.使用枚举代替int常量","31.965423","34.087906","4","4.000000","6.000000","6.027e7),","6.052e6),","6.378e6),","6.67300e","7.149e7),","75.890383","8.000000","8;",":","=","@overrid","abstract","appl","apple_fuji","apple_fuji,","apple_granny_smith","apple_granny_smith;","apple_pippin","apple_pippin,","apply(doubl","args)","assertionerror(\"unknown","basepay","break;","calcul","case","class","constant","constructor","default:","divid","divide(\"/\")","divide:","divide;","doubl","double.parsedouble(args[0]);","double.parsedouble(args[1]);","earth","earthweight","enum","enum使用方法","enum枚举常量来分发不同的方法","enum枚举数据域和方法","enum默认构建","f","final","friday(paytype.weekday),","friday,","g","gravit","hours_per_shift","hours_per_shift;","hourswork","hoursworked,","int","inverse(oper","jupit","jupiter(1.899e+27,","kg","kilogram","m","m^3","ma","main(string[]","map","maps.newhashmap();","mar","mass","mass()","mass)","mass,","mass;","mercuri","mercury(3.302e+23,","meter","minu","minus(\"","minus,","minus:","monday","monday,","mondy(paytype.weekday),","neptun","neptune(1.024e+26,","new","op","op)","op);","op,","op.apply(x,","op:","oper","operation(str","operation.divide;","operation.minus;","operation.plus;","operation.times;","operation.values())","operationdemo","opers_map","opers_map.put(op.tostring(),","orang","orange_blood","orange_blood;","orange_navel","orange_navel,","orange_templ","orange_temple,","overtim","overtimepay","overtimepay(doubl","overtimepay;","p","p,","p.surfaceweight(mass));","pay","pay(doubl","payrat","payrate)","payrate);","payrate;","payrol","payroll(paytyp","payrollday","paytyp","paytype)","paytype.pay(hoursworked,","paytype;","planet","planet(doubl","planet.earth.surfacegravity();","planet.values())","planetdemo","plu","plus(\"+\")","plus,","plus:","privat","public","radius()","radius)","radius);","radius;","return","s^2","saturday(paytype.weekend),","saturday,","saturday:","saturn","static","string","sunday(paytype.weekend);","sunday:","sunday;","surfacegrav","surfacegravity()","surfacegravity;","surfaceweight(doubl","switch(op)","switch(this)","symbol)","symbol;","system.out.printf(\"weight","system.out.println(string.format(\"%f","this);","this.mass","this.paytyp","this.radiu","this.symbol","throw","thursday(paytype.weekday),","thursday,","time","times(\"*\")","times,","times:","tostring()","tuesday(paytype.weekday),","tuesday,","univers","uranu","venu","void","wednesday(paytype.weekday),","wednesday,","weekday","x","x,","y","y)","y)));","y);","y,","y;","{","}","},","};","一般，enum中重写了tostring方法之后，enum中自生成的valueof(string)方法不能根据枚举常量的字符串(tostring生成)来获取枚举常量。我们通常需要在enum中新增个静态常量来获取。如：","与int常量相比，枚举的可读性更强，并且更加安全，功能更加强大，在实际开发中应该使用enum代替int枚举模式。","从上面可以看出，不推荐在enum中使用switch...case...来判断不同的行为。那什么时候可以使用呢？主要是适用于给外部的枚举类型增加特定于常量的行为。如，假设operation枚举不受开发者自己控制，但是希望它有一个实例方法来返回每个运算的反运算，则可以：","以上代码是计算工人工资。平时工作8小时，超过8小时，以加班工资方式另外计算；如果是双休日，都按照加班方式处理工资。上面代码的写法和上一小节给出的差不多，通过switch来分拆计算。还是一样的问题，如果此时新增加一种工资的计算方式，枚举常量需要改，pay方法也需要改。按上一小节的介绍继续修改：","以上面的apple、orange为例，用enum重写：","你可以写的更详细些：","可以通过调用operation.opers_map.get(op.tostring())来获取对应的枚举常量。","因为int常量是编译时常量，被编译到使用它们的客户端中。若与枚举常量关联的int发生了变化，客户端需重新编译，否则它们的行为就不确定；","在enum类中同样可以有自己的数据域和方法。","在有些特定的情况下，此写法有个缺点，即如果每个枚举常量都有公共的部分处理该怎么办，如果每个枚举常量关联的方法里都有公共的部分，那不仅不美观，还违反了dry原则。这就是下面的枚举策略模式。","在枚举类型出现之前，一般都常常使用int常量或者string常量表示列举相关事物。如：","在类型安全方面，如果你想使用的是orange_navel，但是传递是apple_fuji，编译器并不能检测出错误；","在调用的时候，直接使用enum类型，在编译的时候可以直接指定类型，否则编译不通过；并且debug的时候，显示的是enum中的常量（apple_fuji这样的），可以一眼看出是否用错；最后由于枚举导出的常量域（apple_fuji等）与客户端之间是通过枚举来引用的，再增加或者重排序枚举类型中的常量后，并不需要重新编译客户端代码","大家一开始都会这样写的。实际开发中，有很多开发者也这样写。但是有个不足：如果需要新增加运算，譬如模运算，不仅仅需要添加枚举类型常量，还需要修改apply方法。万一忘记修改了，那就是运行时错误。将代码修改如下：","如以太阳系为例，每个行星都拥有质量和半径，可以依据这两个属性计算行星表面物体的重量。代码如下：","如果你想使用string常量，虽然可以打印，但是字符串的比较是对性能有较大的影响的。另外，容易将字符串硬编码到代码之中；","有时候会使用枚举中的值来作为逻辑条件来分发至不同的方法，如采用枚举来写加、减、乘、除的运算。代码如下：","枚举策略模式","每次新增加运算种类，都需要重写apply方法，这样就不会有遗漏修改。","没有便利方法将int常量翻译成可打印的字符串。这里的意思应该是比如你想调用的是orange_navel，debug的时候显示的是0，但你不能确定是apple_fuji还是orange_navel；","直接上例子来分析：","看了上面的代码，我觉得大家都不会这样写吧。其实细想一下，最主要的不同就是计算加班时间的工资方式不同，也就是分工作日和双休日的。继续修改：","结论","虽然看起来代码不够简洁，但是修改起来确实比较安全，不怕有遗漏。","补充一点","解决","那么，针对这样的情况应该怎样解决？","针对int常量以下不足：","针对这样的情况，可以采用enum来解决。","问题"],"第五章 枚举和注解/32.用EnumSet代替位域.html":["//实现方案","//客户端调用该方法为","1这段代码旨在通过位操作的方式将多种text风格进行组合。但是，很显然这是一种int枚举的方式，自然存在很多问题（见31条），应该使用什么样的类型数据能够替代位域？","32.用enumset代替位域","=","applystyles(set","byte","class","enum","final","public","static","style_bold","styles){","style{bold,italic,underline,strikethrough}","text","text.applystyles(enumset.of(style.bold,style.italic));","text{","void","{","}","当需要将多个操作（或变量）进行组合时，可以使用enumset来代替使用int枚举进行位域操作的方式。enumset类集位域的简洁和性能的优势，以及枚举类型的所有优点与一身。实际上enumset也有个缺点,即它无法创建不可变的enumset(java1.6为止没有解决)。同时，可以用collections.unmodifiable将enumset封装起来,但是间接性和性能会受到影响。","所谓位域是指利用就是用int枚举模式，将2的不同倍数赋予每个常量，这样就可以通过位操作将多个常量进行组合来表达具体的业务意义，比如下面的代码实例：","结论","解决","避免使用位域组合的方式的弊端，可以采用enumset类型数据。enumset支持从枚举类型中提取多个枚举常量进行组合的方式，并且这个类实现了set接口，也具有类型安全性。使用enumset将上面的例子重写如下：","问题"],"第五章 枚举和注解/33.用EnumMap代替序数索引.html":["(set[])new",",","//","0;i();","33.用enummap代替序数索引","=","@overrid","annual,","biennial,","class","enum","enum.ordin","enummap>","enummap>(herb.type.class);","enummap不允许使用null作为key值，但允许使用null作为value。如果试图使用null作为key将抛出nullpointerexception异常。如果仅仅只是查询是否包含值为null的key、或者仅仅只是使用删除值为null的key，都不会抛出异常。","enummap在内部以数组形式保存，所以这种实现形式非常紧凑、高效。","enummap是一个与枚举类一起使用的map实现，enummap中所有key都必须是单个枚举类的枚举值。创建enummap时必须显式或隐式指定它对应的枚举类。","enummap根据key的自然顺序（即枚举值在枚举类中的定义顺序）来维护来维护key","enummap的介绍","final","for(herb","for(herb.typ","for(int","garden","h:garden)","h:garden){","hashset());","herb","herb(\"1\",","herb(\"2\",","herb(\"3\",","herb(str","herb[]","herbsbytyp","herbsbytype.get(h.type).add(h);","herbsbytype.put(t,","herbsbytype[h.type.ordinal()].add(h);","map>","name,","name;","new","null;","perennt","privat","public","return","set[]","set[herb.type.values().length];","static","string","system.out.println(herbsbytype);","t:herb.type.values()){","this.nam","this.typ","tostring()","type","type)","type.annual),","type.biennial),","type.perenntal)","type;","type顺序进行排序，在构建的garden数组是与枚举元素的序数强依赖的，加入type中的枚举元素一不小心调换了顺序，而garden并没有改变，再按照枚举元素在枚举类中的序数从garden数组中获取数据自然而然会出错。","value对的次序。当程序通过keyset()、entryset()、values()等方法来遍历enummap时即可看到这种顺序。","{","}","};","}}","。代码中一般情况下都不使用","。如果你所表示的这种关系是多维的","上例中的代码旨在将herb类型按照enum","即使要用也是因为特殊情况。","可以看出由enummap改造后，程序更加简洁，也更加安全。总之，试图通过ordinal()方法，利用枚举元素在枚举中的位置做逻辑处理的，这种代码一般都是不可取和不安全的。","在31条说过在使用enum时最好不要企图通过ordinal()方法以获取枚举元素在枚举类中的索引顺序，然后在其他代码中依赖这种顺序，这样的代码是不安全的。比如代码中数组的索引依赖于enum的序数：","实际上，上例是想通过枚举值作为数组的索引，是枚举到数组值之间的映射关系，枚举充当着“索引键”的关系，在这样的使用场景下，可以采用enummap，该类专门用于枚举键，更加安全可靠。","将上例由enummap改写","就使用","总结","数组索引顺序与枚举元素的序数强依赖","最好不要用序数来索引数组","解决","那么如何解决？","问题"],"第五章 枚举和注解/35.注解优于命名模式.html":["\"","%d%n\",","%d,","(except","(invocationtargetexcept","(m.isannotationpresent(test.class))","(method","+","0;","1.5之前，一般使用命名模式表明有些程序元素需要通过某种工具或者框架进行特殊处理。例如，在老版本的junit测试框架原本要求用户一定要用test作为测试方法名称的开头，这种方式就是命名模式。","35.注解优于命名模式","3不会报错，但它也不会执行测试，导致错误的安全感；","3也不会出错，但它也不会执行测试；","3能够自动测试其所有方法，而不管它们的名称如何。",":","=","@interfac","@retention(retentionpolicy.runtime)","@retention（retentionpolicy.runtime）元注解指示test注解应该在运行时保留。","@target(elementtype.method)","@target.get（elementtype.method）元注解表明test注解只对方法声明合法：它不能应用于类声明，属性声明或其他程序元素。target的取值有这些：","@test","@test:","args)","catch","class","class.forname(args[0]);","constructor:用于描述构造器","exc","exc)","exc);","except","failed:","field:用于描述域","int","java","junit","local_variable:用于描述局部变量","m","m);","m.invoke(null);","m1()","main(string[]","method:用于描述方法","package:用于描述包","parameter:用于描述参数","pass","passed);","passed++;","passed,","public","retentionpolicy.class——","retentionpolicy.runtim","retentionpolicy.sourc","retention的取值有这些：","runtest","static","system.out.printf(\"passed:","system.out.println(\"invalid","system.out.println(m","test","testclass","testclass.getdeclaredmethods())","tests++;","test注解对标注的注解元素的语义没有直接影响。","test注解类型的声明本身使用retention和target注解进行标记。","throw","throwabl","tri","type:用于描述类、接口(包括注解类型)","void","wrappedexc)","wrappedexc.getcause();","{","}","——","上例代码通过反射，让使用了@test注解的方法能够执行，并且统计了被@test标注的方法的个数以及方法成功执行的个数。可以看出，只有让注解和反射结合起来使用时，才能发挥更强大的语义作用。","他们只提供信息供相关程序使用。","以下是test注解在实践中的应用。","使用注解","例如定义一个test的注解：","例如，假设调用了testsafetymechanisms类，希望junit","利用反射和注解结合发挥语义上的作用","同样，junit","命名模式的缺点：","如何定义注解","如果程序员错拼test或将test注解应用于程序元素而不是方法声明，则该程序将无法编译。","它被称为标记注解，因为它没有参数，只是“标记”注解元素。","当可以使用注解代替时，没有理由使用命名模式。实际上java已经提供了很多预定义的注解类型，在实际项目中应该尽可能多使用注解。另外，请考虑使用ide或静态分析工具提供的注解。","总结","或enum声明","文字拼写错误导致失败，测试方法没有执行，也没有报错。例如，假设意外地命名了测试方法tsetsafetyoverride而不是testsafetyoverride。","无法确保它们只用于相应的程序元素上，","更一般地说，注解不会改变注解代码的语义，但是可以将反射和注解结合起来，发挥更强大的作用。","没有提供将参数值与程序元素关联起来的好方法。","注解很好地解决了由命名模式带来的所有这些问题，实际上junit4也开始采用注解的方式代替了以往的命名模式。","注解类型声明上的这种注解称为元注解。","解决","这些注解可以提高这些工具提供的诊断信息的质量。","这种类型的annotations只在源代码级别保留，编译时就会被忽略","这种类型的annotations将被jvm保留,所以他们能在运行时被jvm或其他使用反射机制的代码所读取和使用.","这种类型的annotations编译时被保留,在class文件中存在,但jvm将会忽略","针对命名模式带来的这些问题，该如何解决？","问题"],"第六章 方法/38.检查方法参数的有效性.html":["38.检查方法参数的有效性","为了避免由于方法入参不符合规范，将异常扩散到方法执行过程之中，在设计方法或者构造器时，应该考虑方法的入参有哪些限制，应该在方法开头显式的进行参数有效性判断，也应该将这些参数有效性写入在文档中；","在文档中说明违反参数值限制时会抛出的异常。通常这样的异常为illegalargumentexception，indexoutofboundsexception。","对于公有的方法，要用javadoc的@throws标签","每当编写方法或者构造器的时候，应该考虑它的参数有哪些限制，应该把这些限制写在文档中，并且在这个方法体的开头处，通过显示的检查来实施这些限制。养成这样的习惯是非常重要的。","结论","绝大多数方法和构造器对于传递给他们的参数值都会有某些限制。例如索引值必须是非负数，对象引用不能为null等等。在编写方法有一个普遍的原则是“应该在发生错误之后尽快检测出错误”，按照这样的原则，在实际开发中应该怎样做？","解决","问题"],"第六章 方法/39.参数进行保护性拷贝.html":["\"","+","//remaind","0){","39.参数进行保护性拷贝","=",">","class","date","date();","date(end.gettime());","date(start.gettime());","end","end()","end(){","end)","end);","end.setyear(78);","end;","final","if(start.compareto(end)","if(this.start.compareto(this.end)","illegalargumentexception(start","illegalargumentexception(this.start","import","java.util.date;","new","omit","period","period(d","period(start,","privat","public","return","start","start()","start(){","start,dat","start;","this.end","this.end);","this.start","throw","{","}","什么时候考虑使用保护性拷贝？","因此，为了让period更加安全可靠，需要对构造器进行保护性拷贝，将上面这段代码改变如下这种形式：","如果上例中的成员域提供了访问方法，那么，period仍然是不安全的。如果不进行保护性拷贝的话，引用类型数据就有可能在类的外部被改变，因此影响类内部的数据结构，污染到类。针对成员域的访问方法，可做如下的保护性拷贝：","如果类具有从客户端得到或者返回到客户端的可变组件，类就必须保护性地拷贝这些组件。如果拷贝的成本受到限制，并且类信任它的客户端不会不恰当地修改这些组件，就可以在文档中进行说明。","对类成员域进行保护性拷贝","对类构造器进行保护性拷贝","每当编写方法或者构造器时，如果它允许由客户端提供对象进入到类的内部数据结构时，就需要考虑，客户端提供的对象是否有可能是可变的。如果是，就要考虑能否忍受对象可变时，对类的内部的数据结构发生改变。如果不能，则要在构造器或者方法上对外部对象进行保护性拷贝，让拷贝后的对象进入到类，而不是原始的可变的对象。例如，如果使用外部的对象作为set的元素或者作为map的key，就应该意识到，这个对象在插入之后再被修改，相应的set或者map就会遭到破坏。","注意：保护性拷贝在参数有效性检查之前，并且参数有效性检查针对的是已拷贝的对象，而非是原始对象。","示例代码为：","类的内部成员域为引用类型数据，而非是基本类型数据时，就要在类构造器和成员域的访问方法上考虑对这些内部成员域进行保护，以防止外界条件破坏了这种约束，对实例对象的状态发生改变。那么，对类的成员域为引用类型数据时，应该怎样处理？","结论","解决","这段代码看上去没有什么问题，本意以为是period被构造后，状态是不会被改变的，但是由于date是可变的，period的状态也是会被改变的，如下面的这样的使用：","问题"],"第六章 方法/40.谨慎的设计方法签名.html":["40.谨慎的设计方法签名","上述的这些规则能够保证设计的方法可读性更强，性能更好，在实际开发中，应该遵守这些规则。","不要过于追求提供便利的方法：每个方法不要做太多逻辑，导致方法体过长，应该尽力去拆分，每个方法都应有尽其所能即可；","在设计api时，应该遵守一些哪些通用的规则来设计方法，以保证方法可读性更强，更安全可靠？","结论","解决","谨慎的选择方法的名称：遵循标准的命名规范；","避免过长的参数列表：方法参数个数不能超过四个，否则让人难以理解参数的意义。减小参数个数有三种方式：1.拆分出子方法；2.将多个参数抽象成一个实体类，这样方法的入参就仅仅只是这一个实体类；3.使用builder模式","问题"],"第六章 方法/41.慎用重载.html":["\"list\";","\"set\";","\"unknown","(collect","(int","2,0,2。这里最根本的原因在于，由于泛型和自动拆箱和装箱，使得remove(e)和remove(i)这两个方法中的参类型上数并没有“根本的不同”。","3;","41.慎用重载",":","=","args)","arraylist(),","arraylist();","c","c)","class","classify(collect","classify(list","classify(set","collect","collection\";","collection[]","collectionclassifi","collections)","collection。因此，在使用重载是应该注意哪些问题？","collection。实际上，它的输出是unknown","collection。这是因为classify方法被重载了，实际上调用哪个重载方法，是在编译时就已经决定了。在这个例子中编译器都认为是collection类，所以输出的是三个unknown","hashmap().values()","hashset(),","list","lst)","main(string[]","new","public","return","s)","set","setlist","set的输出结果如同我们想的一样，但是list的结果不一样。实际发生的情况是：set.remove(e)，选择重载方法的参数实际上是integer，这里进行了自动装箱，把int装箱成了integer；对于list，有两个重载函数，这里直接重载了list.remove(i)，并没有重载到list.remove(e)，是从list的指定位置进行remove，得到结果为","static","string","system.out.println(classify(c));","treeset();","void","{","}","};","使用重载，安全而保守的策略是：永远不要写两个具有相同参数数目的重载方法；","先来看一个错误的例子：","如果一定要重载，那么对于一对重载方法，至少要有一个对应的参数在两个重载方法中的类型“完全不同”。可以看下面这个例子：","我们希望打出的是set，list，unknown","结论","能够重载并不意味者应该重载，一般来说，对于多个具有相同参数数目的重载方法，还是尽量避免使用重载。如果不能避免重载，就需要保证每一个重载方法的参数类型无论经过怎样的转换（如泛型和自动拆箱和装箱）后都能“完全不同”，从而根据参数类型能够指向不同的重载方法。","解决","调用哪个具体的重载方法是在编译时就决定了，根据方法中参数的编译时类型。而对于被覆盖的方法的选择则是动态的，是根据调用该方法的对象的运行时类型，来选择合适的“被覆盖的版本”。覆盖是用来实现多态的，而重载并不是；","问题"],"第六章 方法/42.慎用可变参数.html":["\"too\",","\"two\");","....","//输出结果为","1,","2,","3,","4,","42.慎用可变参数","5","=","[[i@15db9742]","[to,","a1,","a1}","a2,","a2}","a3,","a3}","arguments!\");","arrays.aslist(\"to\",","defaultparam,","digit","few","foo()","homophon","if(args.length==0){","illegalrgumentexception(\"too","int","int...","int...args){","int[]","list","min(int","min(int...args){","new","public","rest}","static","system.out.println(arrays.aslist(digits));","system.out.println(homophones);","throw","too,","two]","void","{","{int","{}","}","};","使用可变参数的场景","使用可变参数的规律为：方法强制要求的默认参数，在方法入参明确给出，可变参数用于进行兜底不确定参数个数的情况。","可变参数可以被用来接受0个或者多个指定类型的参数。","在重视性能的情况下，使用可变参数机制要小心，因为可变参数方法的每次调用都会导致进行一次数组分配和初始化，有一种折中的解决方案，假设确定某个方法大部分调用会有3个或者更少的参数，就声明该方法的5个重载，每个重载带有0至3个普通参数，当参数数目超过3个时，使用可变参数方法。","当不确定参数个数的时候可以采用可变参数，那么，在使用可变参数时有哪些需要注意的？","当数组元素为int基本类型数据时，arrays.aslist方法将int类型的数组的引用集中到单个元素数组中,并封装成list。","总之，和其他规则一样，尽管可变参数是一个很方便的方式，但是它们不应该被过度滥用。除非有必要，尽量不要使用这种方法。","由于该方法要求参数至少有1个，但是可变参数可以接受的是0个或者多个指定类型的参数，因此需要判断当前的参数args的长度是否为0，最终的结果是将这种检验放到了运行时而不是编译时。针对这种情况，做这样的调整：","由于通过方法入参要求了必须传入一个参数defaultparam，因此就少了参数个数的判断，方法变得优雅。","示例：当方法需要1个或者多个参数的方法时，直接使用可变参数就会变得不优雅：","结论","解决","遍历数组","采用arrays.tostring()方法遍历数组，而不要采用arrays.tolist().tostring去遍历数组，这是因为tolist方法接受的是可变参数，如果想要正确输出数组内容的话，数组里元素必须是对象引用型数据，而不能是基本类型数据。如下例：","问题"],"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":["!=","&&","(cheesesinstock.s","...;","0)","43.返回长度为0的集合或者数组，而不是null",";","=","==","arraylist(cheesesinstock);","arrays.aslist(cheeses).contains(cheese.stilton)){","chees","cheese[]","cheesesinstock","collections.emptylist();//alway","final","getcheeselist(){","getcheeses(){","good,just","if(chees","if(cheeseinstock.isempt())","list","new","null","null;","privat","public","return","same","shop.getcheeses();","system.out.println(\"jolli","thing.\")","}","也就是说由于cheesesinstock在特殊情况下返回了null，因此，给调用方增加了额外的判断为null的代码，而从业务意义上来说，null一般是指异常情况下的返回值，那么，针对返回值为集合或者数组来说，特殊情况下应该返回什么？","先来看一个反例：","对于方法如果返回为null，则调用方每一次都要去判断是否为null，从而解决nullpointexception。因此，方法返回类型是数组或者集合时，特殊情况不应该返回null，而是应该返回一个空的集合或者数组。","将上例进行修改：","有时候会有人认为：null返回值比零长度数组更好，因为它避免了分配数组所需要的开销。这种观点是站不住脚的，原因有两点。第一这个级别上担心性能问题是不明智的，除非分析表明这个方法正是造成性能问题的真正源头。第二每次都返回同一个零长度数组有可能的，因为零长度数组是不可变的，而不可变的对象有可能被自由的共享。","结论","解决","调用方客户端代码：","返回类型为数组或者集合的方法没理由返回null，而应该返回一个长度为零的数组或者集合。","问题"],"第六章 方法/44.API需要编写文档注释.html":["44.api需要编写文档注释","@param","@return","b","effect）","safety）（详见70条）","true","为了正确地编写api文档，必须在每个被导出的类、接口、构造器、方法和域声明之前增加一个文档注释；","前提条件是指为了使客户能够调用这个方法，而必须满足的条件；","前提条件（precondition）","副作用是指系统状态中可以观察到的变化，它不是为了获得后置条件而明确要求的变化；","副作用（side","后置条件（postcondition）","在每个类、接口、构造器、方法和域生命处都应该有详细的文档注释，那么好的文档注释有哪些元素？","如果要想使一个api真正可用，就必须为其编写文档。传统意义上的api文档是手动生成的，所以保持文档与代码同步是一件很繁琐的事情。java环境提供了一种被称为javadoc的实用工具来完成文档注释的编写；","当一个类的实例或者静态方法被并发使用时，这个类行为的并发情况。","所谓后置条件是指在调用成功完成之后，哪些条件必须要满足；","文档注释的三个部分：","方法的文档注释应该简洁的描述出它和客户端之间的约定。这个约定应该说明这个方法做了什么，而不是说明它是如何完成这项工作的。文档注释应该列举如下内容：","没有返回值","添加文档注释规范：","第一部分是简述。文档中，对于属性和方法都是先有一个列表，然后才在后面一个一个的详细的说明；","第三部分是特殊说明部分。这部分包括版本说明、参数说明、返回值说明等。","第二部分是详细说明部分。该部分对属性或者方法进行详细的说明，在格式上没有什么特殊的要求，可以包含若干个点号；","类或者方法的线程安全性（thread","结论","表示显示，fals","表示隐藏","要为api编写文档，文档注释是最好、最有效的途径。对于所有可导出的api元素来说，使用文档注释应该被看作是强制性的。要采用一致的风格来遵循标准的约定。在文档注释内部出现任何html标签都是允许的，但是html字符必须要经过转义。","解决","问题"],"第七章 通用程序设计/45.将局部变量的作用域最小化.html":["45.将局部变量的作用域最小化","为了方法局部变量域污染到其他的作用域，需要将局部变量域尽可能缩小，这样能够增强代码的可读性和可维护性。","为了避免局部变量扩大作用域，污染到其他作用域。局部变量的作用域应该最小化，即在第一次使用它的地方进行声明，尽可能在声明处进行初始化。典型的例子是，使用for循环，变量作用域在循环内，而不会扩散。所以，如果循环终止之后不再需要循环变量的内容，for循环就优于while循环；","使方法小而集中。如果把两个操作合并到同一个方法中，与其中一个操作相关的局部变量就有可能会出现在执行另一个操作的代码范围之内。为了防止这种情况发生，只要把这个方法分成两个，每个方法各自执行一个操作；","几乎每个局部变量的声明都应该包含一个初始化表达式，如果没有足够信息来对一个变量进行有意义的初始化，就应该推迟这个声明,直到可以初始化为止，例外情况是与try..catch有关。","将局部变量的作用域最小化，可以增强代码的可读性和可维护性，并降低出错的可能性。那么，常用的将局部变量作用域最小化的方式有哪几个方面？","结论","解决","问题"],"第七章 通用程序设计/46.for-each循环优于传统的for循环.html":["(element","(int","(iter","(no",")","//","0;","1.5)","46.for",":","=","befor","c.iterator();","dosomething((element)","dosomething(e);","e","each循环不仅可以遍历集合和数组，还可以遍历任何实现iterable接口的对象。同时，使用for","each循环也有以下局限性：","each循环优于传统的for循环","each循环的性能要优于传统的for循环，并且能够减少异常的发生，for","each循环的方式去遍历集合和数组，只有在过滤、转换、平行迭代的时候才需要采用传统的迭代器和索引的方式进行遍历。","each遍历的方式，比如下面这种示例代码：","elements)","gener","i.hasnext();","i.next());","{","}","在java1.5之前，对集合的遍历习惯用下面这种方式：","在大多数情况下都应该使用for","在集合和数组的遍历时，优先采用for","对数组的遍历，习惯采用下面这种方式：","平行迭代：如果需要并行的遍历多个集合，就需要显式的控制迭代器和索引变量，以便所有的迭代器和索引能够同步前移。","结论","解决","转换：如果在遍历的过程中，需要转换部分元素，就需要使用迭代器或者索引，一遍设定特定的元素；","过滤：如果需要在遍历的过程中删除特定的元素，就需要用显式的迭代器，调用remove方法进行删除；","这些习惯用法要好于while循环，但也不完美。代迭器与索引都有些混乱。而且，它们还可能引起错误。在上面的循环中迭代器与索引都出现了三次，其中有两个地方可能带来错误，如果的确出现了这种错误，却无法保证编译器能捕获到这些错误。那么，在集合和数组的遍历中优先采用哪种方式？","问题"],"第七章 通用程序设计/47.多使用类库.html":["47.多使用类库","不必纠结于已有解决方案的问题，而专注于自身的逻辑；","可以利用别人的使用经验，和利用社区的智慧；","在实际开发中，有些公共功能已有成熟的解决方案，可以采用开源的组件，利用这些开源的组件的优势在哪里？","总之，在大多数情况下不需要重复造轮子，如果你要做的事情看起来十分常见的，就可以考虑去使用开源的组件，通常这些由社区维护的组件在性能上是有保障的，并且会持续迭代更新。","结论","自己的代码可以融入主流，更方便让其他人阅读和理解。","解决","问题","项目中如果部分功能，开源社区有相应的类库可以实现，应该充分利用开源的类库，原因有："],"第七章 通用程序设计/48.需要精确答案，请避免使用float和double.html":["//输出","0.42)","0.580000000000001","48.需要精确答案，请避免使用float和doubl","float和double类型主要是为了科学计算与工程计算而设计的，它们并没有提供完全精确的结果，所以不应该被用于需要精确结果的场合。比如：","system.out.println(1.0","、*、/等算术运算符直接对其对象进行数学运算，而必须调用其相对应的方法，方法中的参数也必须是bigdecimal的对象；","任何需要精确答案的计算任务，都不要使用float和double，可以使用int、long或者bigdecimal。使用bigdecimal可以很方便的选择舍入的方式，它一共提供了8种方式；","在需要精确结果的时候需要使用bigdecimal，bigdecimal所创建的是对象，我们不能使用传统的+、","如果数值范围没有超过9为十进制数字，使用int；如果超过9位但不超过18位数字，可以使用long；如果有可能超过18位数字，就必须使用bigdecimal。","总之，对于任何需要精确答案的计算任务，请不要使用float或者double，如果你想让系统来记录十进制小数点，并且不介意因为不使用基本类型带来的不便，就可以使用bigdecimal。","结论","解决","那么，当需要精确结果的时候，应该怎样处理？","问题"],"第七章 通用程序设计/49.基本类型优先于装箱基本类型.html":["49.基本类型优先于装箱基本类型","integer(42)==new","integer(42)，虽然这两个装箱类型都是表示数字42，但是同一性判断会返回false；","java有一个数据类型由两部分组成，包含基本类型（primitive），如int、double和boolean，和引用类型（refer","primitive）。由于java自动装箱和拆箱机制，会使得在实际开发中基本类型和装箱类型混用，那么它们之间有什么区别？","type），如string和list。","什么时候用装箱类型","使用参数化类型时，如threadlocal类时，只能使用装箱类型","在使用集合时，键、值都只能使用装箱类型；","基本类型只具有具体功能值，如数值等，而装箱类型还具有非功能值null；","基本类型只有值，而装箱类型具有和它们值不同的统一性，即new","基本类型和装箱类型主要有3个主要区别：","基本类型通常要比装箱类型更节省空间和运行时间。","当可以选择的时候，基本类型要优先于装箱类型。基本类型更加方便简单，性能更好。如果没办法避免使用装箱类型时，注意类型间同一性的比较，以及nullpointexception。","每个基本类型都有一个对应的引用类型，称为装箱基本类型（box","注意：如果基本类型和装箱类型混合使用，装箱类型会拆箱为基本类型，这时，如果装箱类型为null，就会容易报nullpointexception。","结论","解决","问题"],"第七章 通用程序设计/50.尽量避免使用字符串.html":["\"#\"","+","50.尽量避免使用字符串","=","class","classnam","compundkey","get(key","get(str","getkey()","i.next()，更好的做法是编写一个类来描述这个数据集，通常是一个私有的静态成员类；","key","key()","key();","key);","key,","new","object","privat","public","return","set(key","set(str","static","threadloc","threadlocal()","value);","void","{","{}","}","字符串不适合代替其他值的类型：当原始类型为int、float等其他类型时，就不要使用字符串替代；","字符串不适合代替枚举类型：枚举类型比字符串更适合用来表示枚举的常量；","字符串不适合代替聚集类型：如果一个实体有多个组件，用字符串来表示这个实体通常不恰当，string","字符串不适合作为授权键：有时候，字符串被用于对某种功能进行授权访问，考虑设计一个提供线程局部变量的机制，这个机制提供的变量在每个线程中都有自己的值，示例代码：","字符串在实际开发中被高频使用，同样也存在着被滥用的情况，那么，字符串不应该使用在哪些情形下呢？","总之，如果可以使用更加合适的数据类型，或者可以编写更加适当的数据类型，就应该避免使用字符串来表示对象。如果使用不当，字符串会比其他类型更加笨拙、速度更慢。字符串经常被错误的用来替代基本类型、枚举类型。","结论","解决","这种方法的问题在于，字符串键代表一个共享的全局命名空间，要使这种办法可行，客户端提供的字符串必须是唯一的，如果使用了相同的字符串，实际上就共享了这个变量。可以采用以下这种方式进行修正：","这种采用对象实例作为授权键的话，就能够保证全局唯一。事实上，threadlocal也是采用这种方式，将threadlocal实例作为了threadlocalmap的键。","问题"],"第七章 通用程序设计/51.谨慎使用字符串连接符.html":["51.谨慎使用字符串连接符","不要使用字符串连接操作符来合并多个字符串，除非性能无关紧要。相反，应该使用stringbuilder的append方法。","使用字符串连接符（+）将多个字符串拼接起来，是很不合适的。因为string是不可变的，每次拼接都需要拷贝因此非常影响性能。涉及到字符串拼接，应该使用stringbuilder。","对于java的字符串连接操作符（+）将字符串进行拼接，在产生一行输出是合适的。如果在循环中或者大量使用拼接符这是十分不合适的，由于字符串不可变，每次拼接都需要拷贝，性能极差。那么，在频繁的拼接字符串时应该怎么解决？","结论","解决","问题"],"第七章 通用程序设计/52.通过接口引用对象.html":["52.通过接口引用对象","arraylist();","list","list=","new","vector","vector();","什么时候应该让具体类去声明变量呢？","代码依赖于具体类的特殊属性，比如上例中假设程序中需要利用vector的线程安全的特性，如果采用接口声明变量的话，无意间将实现类改成了arraylist就会造成极大的错误。","例如java.util.timertask抽象类，应该用相关的基类（往往是抽象类）来引用对象，而不是它的实现类；","像上例中采用接口的方式声明变量更加合适，如：","先来看一个反例：","具有的优点：程序更加灵活，如果其他代码使用的是list接口中的方法，当你想改变具体实现类的时候，比如这里将vector换成了arraylist，只需要改变构造器就可以，对其他地方的代码而言是无感知的，并不会影响其他地方的操作。","大多数情况下，我们都喜欢用具体的类型来声明变量，这里有一个弊端，如果将来想将vector换成arraylist的话，可能会影响其他的代码。在声明变量是最佳的实践是什么？","如果有合适的接口类型存在，那么对于参数、返回值、变量和域来说，都应该使用接口类型进行声明。这样做可以让程序变得更加灵活，如果改变接口的具体实现类，其他代码都可以继续工作。","如果没有合适的接口存在，可以用类来引用对象。例如，考虑值类（string、biginteger）很少用多个实现编写，他们通常是final的，并且很少有对应的接口。使用这种值类作为参数、变量、域或者返回值类型就比较合适；","结论","解决","问题","顶层类是抽象类的情况，"],"第七章 通用程序设计/53.慎用反射机制.html":["53.慎用反射机制","catch；","丧失了编译时类型检查的好处：如果程序企图用反射访问不存在的方法时，在运行时将会失败；","反射很强大的功能机制不能否认，对于特定复杂系统编程任务，反射机制很有用途，但是他也有很多缺点，对于普通的方法调用，建议不采用反射机制。","反射机制提供了通过程序来访问关于已装载的类的信息的能力，给定一个class实例，可以获得constructor、method、field实例，这些对象提供了类构造器、访问类成员名称、域类型、方法签名等信息。反射机制很强大，但使用起来有哪些注意事项呢？","在使用反射机制的时候需要注意如下几点：","性能损失：反射方法调用比普通方法调用要慢很多。","执行反射访问的方法代码很冗长：由于使用反射，会有很多的exception需要tri","结论","解决","问题"],"第七章 通用程序设计/54.慎用本地方法.html":["54.慎用本地方法","interface（jni）允许java应用程序调用本地方法，所谓本地方法是指用c或者c++编写的特殊方法，本地方法在本地语言中可以执行任意的计算任务，并返回到java程序设计语言中。使用本地方法来访问特定于平台的机制是合法的，但是随着java平台的不断成熟，它提供了越来越多以前只有在宿主平台上才拥有的特性。那么，本地方法是否应该像java方法一样方便使用，有哪些注意事项？","java","nativ","使用本地方法来提供性能的做法是不值得提倡的，在早期的发型版本中，这样的做法往往是很有必要，但是jvm实现变得越来越快，对于大多数任务，现在即使是不使用本地方法也能获得很好的性能；","本地方法不是安全的，并且依赖于平台的具体实现，编写的方法不再是可自由移植的；","极少数的情况会需要使用本地方法来提高性能，如果必须要使用本地方法来访问底层资源，需要全面的进行测试。**使用本地方法来提高性能的做法是不被建议使用的。","程序更难调试，进入和退出本地方法都需要巨大性能消耗，如果仅仅是实现简单的逻辑，使用本地方法就是得不偿失的；","答案","结论","问题"],"第七章 通用程序设计/55.谨慎的进行优化.html":["(inform",")。同样地，在适合使用复合模式的公有类中使用继承，会把这个类与它的超类永远地束缚在一起，从而人为地限制了子类的性能",")。这可能会导致大量不必要的保护性拷贝（见第39条：必要时进行保护性拷贝","1.","2.","3.","55.谨慎的进行优化","a.wulf[wulf72]","e.knuth[knuth74]","hiding）的原则：只要有可能，它们就会把设计决策集中在单个模块中，因此，可以改变单个决策，而不会影响到系统的其他部分；","——donald","——m.a.jackson[jackson75]","——william","不要去计校效率上的一些小小的得失，在97％的情况下。不成熟的优化才是一切问题的根源。","不要因为性能而牺牲合理的结构。要努力编写好的程序而不足快的栏序。如果好的程序不够快，它的结构将使它可以得到优化。好的程序体现了信息隐藏","努力避免那些限制性能的设计决策。当一个系统设计完成之后，其中最难以更改的组件是那些指定了模块之间交互关系以及模块与外界交互关系的组件。在这些设计组件之中，最主要的是api协议以及永久数据格式。这些设计组件不仅在事后难以甚至不可能改变，而且它们都有可能对系统本该达到的性能产生严重的限制；","在优化方面，我们应该遵守两条规则：","在大多数情况下，不成熟的优化都会造成更严重的问题，在进行性能优化的时候应该着重关注于哪些方面？","很多计算上的过失都被归咎于效率（没有必要达到的效率），而不是任何其他的原因，——甚至包括盲目地做傻事。","总而言之，不要费力去编写快速的程序——应该努力编写好的程序，速度自然会随之而来。在设计系统的时候，特别是在设计api、线路层协议和永久数据格式的时候，一定要考虑性能的因素。当构建完系统之后，要测量它的性能。如果它足够快，你的任务就完成了。如果不够快，则可以在性能剖析器的帮助下，找到问题的根源，然后设法优化系统中相关的部分。第一个步骤是检查所选择的算法：再多的底层优化也无法弥补算法的选择不当。必要时重复这个过程，在每次改变之后都要测量性能，直到满意为止。","有三条与优化有关的格言是每个人都应该知道的：","答案","结论","要考虑api设计决策的性能后果。使公有的类型成为可变的（mut","规则1：不要进行优化。","规则2（仅针对专家）：还是不要进行优化一一也就是说，在你还没有绝对清晰的未优化方案之前，请不要进行优化．","问题"],"第七章 通用程序设计/56.遵守普遍接受的命名规则.html":["1。常量域是唯一一个推荐使用下划线的情形；","56.遵守普遍接受的命名规则","=","com.sun","convention），其中有许多命名惯例包含在《th","final","get_associations_act","int","isempty、isenable、hassiblings；","java","java平台建立了一套很好的命名惯例（nam","languag","privat","specification》中。不严格的讲，这些命名惯例分为两大类：字面的和语法的。具体的，在实际开发中应该遵守哪些命名规范？","static","t表示任意类型的，e表示集合元素类型，k和v表示映射的键和值类型，x表示异常。任何类型的序列可以是t、u、v或者t1、t2、t3；","utils而不是utilities。只取首字母缩写形似也是可以接受的，例如awt。","包名称的其余部分应该包括一个或者多个描述该包的组成部分。这些组成部分","包的命名：包的名称应该是层次状的，用句号分隔每部分。每个部分都包括小写字母和数字（很少使用数字）。任何将在你的组织之外使用包，其名称都应该以你的组织的internet域名开头，并且顶级域名放在前面，例如：edu.cmu","对于返回boolean值的方法，其名词往往以单词“is”开头，后面跟名词或者名词短语或者具有形容词功能的单词和短语，例如isdigit、isprobaleprime、","常量域：包括一个或多个大写的单词，中间用下划线隔开，例如","应该比较简短，通常不超过8个字符。鼓励使用有意义的缩写形式，例如，使用","执行某个动作方法通常用动词或者动词短语来命名，例如append和drawimage；","把标准的命名规范当做是一种内在的机制看待，按照规范命名，不仅会让代码的可读性更强，而且会减少一些不必要的错误。","方法和域的名称","方法和域的名称与类和接口的名称一样，都遵守相同的字面惯例，只不过方法或者域的名称的第一个字母应该小写，例如remove，ensurecapacity。","每个组成部分通常都应该由一个单词或者一个缩写词组成；","答案","类和接口的命名，包括枚举和注解类型的名称，都应该包括一个或者多个单词没个单词都首字母大写；","类型参数名称通常由单个字母组成。这个字母通常是以下五种类型之一；","结论","转换类型的方法、返回不同的类型对象方法，通常被称为totype，例如tostring和toarray。","返回一个与被调对象同值的基本类型的方法，通常被称为typevalue，例如intvalue；","返回视图的方法通常被称为astype。例如aslist。","问题","静态工厂的常用名称为valueof、of、getinstance、newinstance、gettype和newtyp"],"第八章 异常/57.只针对异常的情况才使用异常.html":["(arrayindexoutofboundsexception){","0;","57.只针对异常的情况才使用异常","=","catch","catch块中反而阻止了现代jvm可能会执行的一些优化操作；","int","range[i++].climb();","try{","while(true){","}","例如，上面的反例；","先来看一个反例：","在上面这个企图利用数组越界的异常从而跳出死循环。如果针对的是数组遍历的场景，这么做的目的是企图利用java异常机制，来跳过遍历中每次都需要检查是否越界来达到性能优化。但是，这种用法显然是不合理的，那么，对异常的使用应该注意哪些问题？","在使用异常的时候，应该坚持异常只应该被当做异常来处理，而不应该企图利用异常来达到性能优化的目的。","异常应该只用于异常处理的情况，永远不应该应用到控制流中，","异常机制的设计初衷是用于不正常的情形，所以jvm实现不会对其优化，所以企图用异常来达到性能优化，是不可行的；","把代码放在tri","答案","结论","针对上例，对数组标准的遍历模式并不会导致冗余的检查，jvm会对其进行优化；","问题"],"第八章 异常/58.选择合适的异常.html":[")方法但无法执行",")方法试图建立一个类","58.选择合适的异常","classnotfoundexcept","clone(","cloneable所产生的异常；","clonenotsupportedexcept","error(错误)表示系统级的错误和程序不必处理的异常，是java运行环境中的内部错误或者硬件问题，比如，内存资源不足、操作系统出错。在大多数情况下，当遇到这样的错误时，建议让该程序中断。这样的异常超出了程序可控制的范围。","exception）和错误（error）。那么，这三种异常结构的使用场景是什么？","illegalaccessexcept","instance时所产生的异常；","instantiationexcept","interruptedexcept","java一共有三种可抛出结构：受检的异常、运行时异常（runtim","java异常体系中一共有三种异常结构，应该根据具体的使用场景选择合适的异常，而不是胡乱使用。","newinstance(","使用","使用对象的","受检的异常","如果期望调用者能够在适当的情况下进行恢复，则使用可受检的异常，让调用者在catch中进行捕获或者继续throws出去。常见的受检异常有","找不到类或接口所产生的异常；","目前线程等待执行，另一线程中断目前线程所产生的异常。","答案","类定义不明确所产生的异常；","结论","运行时异常","运行时异常通常用来表明程序错误，大多数运行时异常是指前提条件违例，api提供方和api调用方没有遵守双方的约定，比如在访问数组时，访问的索引超过了数组的长度就会出现arrayindexoutofboundsexception。如果，不想调用者恢复异常情况，则可以抛出运行时异常。常见的运行时异常有arithmeticexception、arraystoreexception、arrayindexoutofboundsexception等等。","错误","问题","："],"第八章 异常/59.避免不必要的使用受检的异常.html":["(obj.actionpermitted(args))","//","//invoc","59.避免不必要的使用受检的异常","catch(thecheckedexcept","check","condit","e)","except","handl","invoc","method","obj.action(args);","obj.action(args);.","state","test","tri","uncheck","{","}","“把调用具有受检异常的方法进行重构”的一种方法是，把这个抛出异常的方法分成两个方法，其中第一个方法返回一个boolean，表明状态测试，代表是否应该抛出异常，例如下面的示例代码：","上面的这种重构方式虽然代码调用更加复杂，但是让程序更有灵活性。但是，需要注意的时候，凡是涉及到状态更新和状态测试的时候，都需要考虑线程安全的问题。","受检异常通过强制调用者通过catch处理异常情况，能够从一定程度上确保程序的可靠性。如果api设计时，抛出多个受检异常，那么调用方就必须使用多个catch进行相应的处理，或者将它们在throws出去，反而让调用方增加了负担。那么，在设计方法是否抛出异常的时候应该有哪些原则？","在设计方法抛出异常的时候，应该换位思考，如果自己是调用方使用你设计的api，处理你抛出的异常应该怎样处理？如果有明确的思路，就说明这个异常抛出来是合适的。也就是说，异常是api中不可避免的，并且一旦产生，调用方能够合理的处理，就说明抛出受检异常是合适的，一定要求这两个前提条件全部成立；","由于受检异常，需要调用方必须做出处理，因此，在设计api的时候就需要着重去考虑所抛出的受检异常，是否真的是合理的，要站在调用方的角度去考虑。","结论","重构为：","问题"],"第八章 异常/61.抛出与抽象相对应的异常.html":["...","//use","61.抛出与抽象相对应的异常","abstract","bid","cause)","cause){","class","e){","except","extend","higherlevelexcept","higherlevelexception(...);","higherlevelexception(cause);","higherlevelexceptioncthrow","highlevelexception的构造器为：","level","lower","new","super(cause);","throw","try{","{","}","}cache(lowerlevelexcept","一种特殊的异常转译形式称为异常链（exceptionchaining)，如果低层的异常对于调试导致髙层异常的问题非常有帮助，使用异常链就很合适。低层的异常（原因）被传到髙层的异常，髙层的异常提供访问方法（thmwable.getcause)来获得低层的异常。例如：","如果不能阻止或者处理来自更低层的异常，一般的做法是使用异常转译，除非低层方法碰巧可以保证它抛出的所有异常对髙层也合适才可以将异常从低层传播到高居。异常链对髙层和低层异常都提供了最佳的功能：它允许抛出适当的髙层异常，同时又能捕获底层的原因进行失败分析。","如果方法抛出的异常与它所执行的任务没有明显的联系，这种情形物会使人不知所措。当方法将低层异常在高层继续抛出的时候，往往会发生这种情况。除了使人感到困惑之外，这也让实现细节污染了更高层的api。如果高层的实现在后续的发行版本中发生了变化，它所抛出的异常也可能会跟着发生变化，从而潜在地破坏现有的客户端程序。那么，在高低层api处理异常时应该怎么做呢？","如果无法避免低层异常，次选方案是，让高层api中通过判断绕开这些异常，从而将高层方法的调用者与低层的问题隔离开来。在这种情况下，可以使用日志工具进行记录。","尽管异常转译与直接在高层将底层的异常继续抛出相比有所改进，但是它也不能被滥用。如有可能，处理来自低层异常的最好做法是，应该极力避免底层异常的发生。有时候，可以在给低层传递参数之前，检査更高层方法的参数的有效性，从而避免低层方法抛出异常；","更高层的实现应该捕获低层的异常，同时抛出可以按照高层抽象进行解释的异常。这种做法被称为异常转译（exceptiontranslation)，如下所示：","答案","结论","这种方式要求在高层api中，捕获到底层异常的时候抛出与高层业务意义吻合的高层异常highlevelexception，而不是直接将底层异常继续抛出去。","问题","面对异常到底应该怎样做？"],"第八章 异常/62.每个方法抛出的异常都要有文档.html":["62.每个方法抛出的异常都要有文档","throwable”。这样的声明没有给开发者关于”这个方法抛出哪些异常”的任何有用信息，实际上掩盖了该方法在同样的执行环境下可能抛出的任何其他异常，","使用javacdoc的@throws标签可以显示方法可能抛出的运行时异常，但是不要使用throws关键字将运行时异常包含在方法的声明中。使用api的程序员必须知道哪些异常是需要受检的,哪些是不需要受检的。","因此会妨碍该方法的使用；","在设计方法api时，异常是应该着重关注的，同样地，方法的文档注释上异常条件也需要显式的说明，因此，在针对异常编写文档时，有哪些需要注意的地方？","始终要单独地声明受检异常，并且使用javadoc的@throws标记,准确地记录下抛出每个异常的条件。如果方法抛出多个异常类，不要使用它抛出异常类的父类，永远不要声明方法”throwsexception”，或更糟糕的声明它”throw","答案","结论","要为你编写的每个方法所抛出的每个异常建立文档，对受检的异常和未受检的异常，就像对于抽象和具体的方法都一样。要为每个受检的异常提供单独的throws字句，不要为未受检的异常提供throws语句。如果没有为可以抛出的异常建立文档,那么其他开发人员很难或者根本不可能有效使用你的类或接口。","问题"],"第八章 异常/63.编写合适的异常信息.html":["63.编写合适的异常信息","message）。程序员会根据打印出来的异常信息进行排错，也就是说，如果异常信息不够充足的话，会减缓排错的速度，那么，应该如何编写合适的异常信息？","representation），即它的tostring方法的调用结果。它通常包含该异常的类名，紧随其后的是细节消息（detail","堆栈轨迹的用途是与源文件结合起来进行分析，它通常包含抛出该异常的确切文件和行数，以及堆栈中所有其他方法调用所在的文件和行数。因此，如果描述异常信息量过多，实际上也是冗余的，有些信息可以通过阅读源代码而获得；","异常的细节消息不应该与“用户层次的错误消息”混为一谈，后者对于最终用户而言必须是可理解的。与用户层次的错误消息不同，异常的字符串表示法主要是让程序员或者域服务人员用来分析失败的原因。","当异常被捕获的时候，如果有关键的异常信息的时候，可以很方便的进行排错，添加关键的异常信息是很有必要的。","当程序由于未被捕获的异常而失败的时候，系统会自动地打印出该异常的堆栈轨迹。在堆栈轨迹中包含该异常的字符串表示法（string","有一个很重要的原则，异常的细节消息应该清晰的描述出异常，便于以后分析。为了清晰的描述异常，异常的细节信息应该包含所有“对该异常有贡献”的参数和域的值。例如，indexoutofboundsexception异常的细节消息应该包含下界、上界以及没有落在界内的下标值。该细节消息提供了许多关于失败的信息。这三个值中任何一个或者全部都有可能是错的。实标的下标值可能小于下界或等于上界（“越界错误”），或者它可能是个无效值，太小或太大。下界也有可能大于上界（严重违反内部约束条件的一种情况）。每一种情形都代表了不同的问题，如果程序员知道应该去查找哪种错误，就可以极大地加速排错过程；为了确保在异常的细节消息中包含足够的能捕获失败的信息，一种办法是在异常的构造器中引入这些信息。","答案","结论","问题"],"第八章 异常/65.不要忽略异常.html":["...","65.不要忽略异常","e）","tri","{","}","}catch","上面例子，虽然捕获了异常，但是是空的catch块，会不经意间忘记处理异常，这样会埋下隐患，面对异常应该有哪些基本的原则？","千万不要忽略异常：尽管这条原则是很显而易见的，但是它却常常被违反，当api的设计者声明一个方法将抛出某个异常的时候，他们等于正在试图说明一些危险情况，所以，千万不要忽略；","有这样的反例：","答案","结论","这条原则同样适用于受检异常和未受检的异常，不管异常代表了可预见的异常条件，还是编程错误，用空的catch块忽略它，将会导致程序在遇到错误的情况下悄然地执行下去。然后，有可能在将来的某个点上，当程序不能再容忍与错误源明显相关的问题时，它就会让系统失败。","问题","面对异常，最基本最重要的原则是，不要忽略异常，必须对异常进行处理。","（someexcept"],"第九章 并发/66.同步访问共享的可变数据.html":["(!stoprequested())","(!stoprequested)","0;","66.同步访问共享的可变数据","=","@overrid","args)","backgroundthread","backgroundthread.start();","boolean","generateserialnumber()","i++;","int","interruptedexcept","main(string[]","new","nextserialnumb","nextserialnumber++;","privat","public","requeststop()","requeststop();","return","run()","runnable()","static","stoprequest","stoprequested()","stoprequested;","synchron","thread","thread(new","throw","timeunit.seconds.sleep(1);","true;","void","volatil","{","}","});","但是需要注意到volatile并不能保证原子性，例如下面的例子：","关键字synchronized：synchronized是保证线程安全的一大利器，它可以保证同一时刻，只有一个线程可以执行某个方法和修改某一个可变数据，但是仅仅将它理解成是互斥的也是不完全正确的，它主要有两种意义：","关键字volatile：volatile最重要的功能是能够保证数据可见性，当一个线程修改可变数据后，另一个线程会立刻知道最新的数据。在上面的例子中，因为stoprequested变量的读写本身就是原子的，因此利用synchronized只是利用到它的数据可见性，但是由于synchronized会加锁，如果想性能更优的话，上面的例子就可以采用volatile进行修改：","另外，java语言规范保证读写一个变量是原子的，除非这个变量是double或者long，即使没有在保证同步的情况下也是如此。","可变数据也就是状态变量stoprequested，被同步方法修改，这里也就是保证stoprequested被修改后，能够被其他线程立即可见。","同步不仅可以阻止一个线程看到对象处于不一致的状态，还可以保证进入同步方法或者同步代码块的每个线程，都看到由同一个锁保护的之前所有的修改效果。","尽管使用了volatile，但是由于++运算符不是原子的，因此在多线程的时候会出错。++运算符执行两项操作：1、读取值；2、写回新值（相当于原值+1）。如果第二个线程在第一个线程读取旧值和写会新值的时候读取了这个域，就会产生错误，他们会得到相同的serialnumber。这个时候就需要使用synchorized来使得线程间互斥访问，从而保证原子性。","并发程序要比单线程程序的设计更加复杂，并且失败难以重现。但是又无法避免采用多线程，因为采用多线程并发是能够从多核计算机获得最佳性能的一个有效途径。在并发时，如果涉及到可变数据的时候，就是我们需要着重去思考的地方，在面对可变数据的并发访问的时候，有哪些方式可以保证线程安全性？","当一个对象被一个线程修改的时候，可以阻止另一个线程观察到对象内部不一致的状态；","总结","答案","考虑到这样一个示例，线程通过轮询标志位而达到优雅的停止线程的功能，示例代码如下：","解决这一问题的最好办法其实是尽量避免在线程间共享可变数据，将可变数据限制在单线程中。如果想要多个线程共享可变数据，那么读写都需要进行同步。","问题"],"第九章 并发/68.executor和task优于创建线程.html":["68.executor和task优于创建线程","创建多种类型的线程池：可以创建单个线程、固定的多个线程以及线程个数可变的线程池，也可以通过threadpoolexecutor类创建适合应用场景的线程池；","在涉及到多线程程序时，不要使用thread的方式创建线程，应该使用executor来管理和创建线程，它最大的好处在于工作单元（线程）和任务之间的解耦。","由于并发程序很容易出现线程安全的问题，并且线程的管理也是件很复杂的事情，所以当创建一个线程时，不要通过thread的方式手动创建，可以使用executor框架进行管理。executor的优点是什么？","等待任务执行完成的方式多样：当前线程可以等待提交到executor中的线程集合全部执行完成（invokeall()或invokeany()）,也可以优雅的等待结束（awaittermination()），也可以在任务完成时逐个获取这些任务的结果（利用executorcompletionservice）等等；","答案","线程和执行间的解耦：使用executor最大的好处在于将线程执行机制和任务解耦开，之前的thread类既充当了工作单元又是执行机制，更好管理和使用起来更加安全可靠。","结论","问题"],"第九章 并发/69.优先使用提供的并发工具.html":["69.优先使用提供的并发工具","j.u.c包下的并发工具分为三类：1.负责管理线程的executor框架；2.并发集合；3.同步器。其中，负责管理线程的executor在第68条已经说过，不再单独描述。","j.u.c包下跟我们提供了多种保证线程安全的数据结构，在实际开发中应该使用这些性能和安全性已经得到保证的工具，而不是重复造轮子，并且很难保证安全性。比如，在之前的代码中“生产者","同步器：同步器能够完成线程之间的协调，最常用的有countdownlatch和semaphore，较不常用的有cyclicbarrier和exechanger。","并发集合：并发集合针对标准的集合接口（如list、queue和map）做了进一步的处理，提供了高性能的并发实现，常用的有courrenthashmap，它就扩展了map接口并保证了线程安全。另外，blockingqueue实现了可阻塞的操作，即当队列为空的时候，会阻塞“取数据”线程，直至队列不为空位置，当队列满时，会阻塞“插入数据”的线程，直至队列未满。blockingqueue被广泛的应用在“生产者","消费者”中；","消费者”使用wait和notify的方式去实现，代码就很难维护，如果使用可阻塞操作的blockingqueue代码更加简洁，逻辑也更加清晰。","答案","结论","问题","高并发程序既很难保证线程安全的问题，而且一旦出现问题之后，也很难排错和分析出来原因。而j.u.c包中提供了很多线程安全的工具，应该在实际开发中多使用这些性能已经得到了验证的工具，这使得我们的开发能够十分方便又能保证我们代码的稳定性。常用的并发工具有哪些？"],"第九章 并发/70.线程安全性的文档化.html":["(i.hasnext())","...","//","70.线程安全性的文档化","=","block","c","c.iterator();","collect","collections.synchronizedcollection(mycollection);","collection进行迭代时，用户必须手工在返回的","final","foo(){","foo(i.next());","hostile）：即便所有的方法都被外部同步保卫，这个类仍不能安全的被多个线程并发使用。这种类或者方法非常少，比如system.runfinalizersonexit方法是线程队里的，但已经废除了。","iter","lock","new","object","object();","privat","public","synchron","synchronized(c)","synchronized(lock){","threadsafe）：某些方法需要为了线程安全需要在外部使用的时候进行同步。如collection.synchronized返回的集合，对它们进行迭代时就需要外部同步。如下代码，当对synchronizecolletcion返回的","threadsafe）：该类的实例是可变的，但是这个类有足够的的内部同步。所以，它的实例可以被并发使用，无需任何外部同步，如random和concurrenthashmap。","void","{","}","“只要是加了synchronized关键字的方法或者代码块就一定是线程安全的，而没有加这个关键字的代码就不是线程安全的”。这种观点将synchronized于线程安全等同起来，并且认为线程安全只有两种极端的情况，要么是线程安全的，要么是线程不安全的。","上进行同步，不遵从此建议将导致无法确定的行为：","不可变的(immutable)：类的实例不可变（不可变类），一定线程安全，如string、long、biginteger等。","在文档中描述有条件的线程安全类要特别小心，必须指明哪个调用方法需要外部同步，并且需要获得哪一把锁；","如果使用类使用的是“一个可公有访问的锁对象”的话，很可能被其他线程超时地保持公有可访问锁，而造成当前线程一直无法获得锁对象，这种行为被称为“拒绝服务攻击”，为了避免这种攻击可以采用","总结","无条件的线程安全（uncondition","有条件的线程安全（condition","有这样几种错误的说法：","每个类都应该利用严谨的说明或者线程安全注解，清楚地在文档中说明它的线程安全属性。有条件的线程安全类，应该说明哪些方法需要同步访问，以及获得哪把锁。无条件的线程安全类可以采用私有锁对象来防止“拒绝服务攻击”。涉及到线程安全的问题，应该严格按照规范编写文档。","私有锁对象，例如：","答案","线程对立的（thread","线程的安全性级别：","这时，私有锁对象只能被当前类内部访问到，并不能被外部访问到，因此不可能妨碍到当前类的同步，就可以避免“拒绝服务攻击”。但是，这种方式只适合“无条件线程安全”级别，并不能适用于“有条件性的线程安全”的级别，有条件的线程安全级别，必须在文档中说明，在调用方法时应该获得哪把锁。","这是两种普遍错误的观点，事实上，线程安全性是有多种级别的，那么，应该如何建立线程安全性的文档？","通过查看文档是否出现synchronized修饰符，来判断当前方法是否是安全的。这种说话的错误在于，synchronized并不会通过javadoc输出，成为api文档的一部分，这是因为synchronized是方法具体的实现细节，并不属于导出api和外界模块通信的一部分；","问题","非线程安全（unthreadsafe）：该类是实例可变的，如需安全地并发使用，必须外部手动同步。如hashmap和arraylist；"],"第九章 并发/71.慎用延迟初始化.html":["(result","(this)","71.慎用延迟初始化","=","==","class","computefieldvalue();","computefieldvalues();","field","field;","field=","fieldholder{","fieldtyp","fieldtype.field;","fildtyp","final","getfield()","getfield(){","holder","if(field","initi","initialization)是延迟到需要域的值时才将它初始化的这种行为。如果永远不需要这个值，这个域就永远不会被初始化。这种方法既适用于静态域，也适用于实例域。和大多数优化一样，不成熟的优化是大部分错误的源头。那么针对线程安全的延迟初始化有哪些可靠的方式？","null)","null){","privat","public","result","result;","return","static","synchron","volatil","{","}","下面是正常初始化实例域的方式，但是要注意采用了final修饰符：","双重检测：这种模式避免了在初始化之后，再次访问这个域时的锁定开销（在普通的方法里面，会使用synchronized对方法进行同步，每次访问方法的时候都要进行锁定）。这种模式的思想是：两次检查域的值，第一次检查时不锁定，看看其是否初始化；第二次检查时锁定。只用当第二次检查时，表明其没有被初始化，才会调用computefieldvalue方法对其进行初始化。如果已经被初始化了，就不会锁定了，另外该域被声明为volatile非常重要，示例代码为：","同步方法：在实例化域值得时候，可以使用同步方法从而保证线程安全性，如：","大多数正常的初始化都要优于延迟初始化。如果非要进行延迟初始化的话，针对实例域采用双重检测方式，针对静态域，可以利用静态内部类的第一次访问才进行初始化的特性，使用静态内部类来完成延迟初始化。","延迟初始化（lazi","模式。在jvm的优化下，这种方式不仅可以达到延迟初始化的效果，也能保证线程安全。示例代码为：","现在要对这个实例域进行延迟初始化，有这样几种方式：","答案","结论","问题","静态内部类：为了减小上面这种方式的同步访问成本，可以采用静态内部类的方式，被称之为lazi"],"第九章 并发/72.不要依赖于线程调度器.html":["72.不要依赖于线程调度器","千万不能让程序依赖线程调度器，这样会失去健壮性和可移植性。而thread.yield和线程优先级这些特性，是最不具有可移植性，程序中不应该使用它们。","千万不要企图通过调整线程优先级来达到程序的正确性，线程的优先级是最不可移植的特性。","当有多个线程运行时，由线程调度器决定哪些线程将会运行，分配cpu时间片。但是，在大多数系统采用的调度策略都是不太相同的，因此，任何依赖于线程调度器来达到程序性能和正确性的并发程序都是不安全和不可移植的。那么，在编写可移植的，健壮性强的并发程序有哪些好的方法？","当程序不正确的时候，是因为线程无法获得足够的时间片的话，不要企图使用thread.yield的方式，让其他线程让出时间片，来满足自身的需求。这是因为，不同的jvm上对thread.yield语义的是不相同的，这样就失去了可移值性。另外，在测试期间，使用thread.yield人为地来增加线程并发性，应该由thread.sleep(1)来代替thread.yield；","最好的方式是，保证可运行的线程尽可能少，或不明显高于处理器的数量。如果，可运行的线程足够少，对线程调度器而言就不需要“纠结”为哪个线程分配时间片，只需要让多核处理器处理这些线程就好了。从侧面来说，就降低了对线程调度器的调度策略的依赖。那么，保证尽可能少的线程数唯一的方法就是，让每个线程都做有意义任务，从整体而言，就会降低总线程的个数；","答案","结论","问题"],"第九章 并发/73.避免使用线程组.html":["73.避免使用线程组","threadgroup的api非常脆弱；","答案","线程组并没有提供太多有用的功能，而且它们提供的许多功能还都是有缺陷的。当管理线程或处理线程组逻辑时，应该考虑使用executor。","结论","问题","除了安全性没有达到预期外，可用的基本功能很少；","除了线程、锁和监视器外，线程系统还提供了另外一个抽象单元：线程组。线程组的设计初衷是作为隔离applet的机制，达到安全性。但是，实际上并未达到所期待的安全性，甚至都差到在java安全模型上都未提及。除了安全性的糟点外，还有哪些缺陷？"],"第十章 序列化/74.谨慎的实现Serializable接口.html":["2.serializable适用场景","3.serializable不适用场景","74.谨慎的实现serializable接口","serializable的缺点","​","为了继承而设计的类应该尽可能少地去实现serializable接口，用户接口也应该尽可能不继承serializable接口，原因是子类或实现类也要承担序列化的风险。大多数情况下需要遵守这条原则，极为特殊的情况可以打破这项原则，比如实现serializable接口的的类有throwable类(异常可以从服务器端传到客户端)、component类(gui可以被发送、保存和恢复)、httpservlet抽象类(会话session可以被缓存)；","内部类不应该实现serializable，内部类需要保存指向外部类实例的引用及保存来自外部作用域的局部变量的值。这些域如何对应到类定义中不确定。因此内部类的默认序列化形式定义不清楚。","如果被序列化的类没有显示的指定serialversionuid标识（序列版本uid），系统会自动根据这个类来调用一个复杂的运算过程生成该标识。此标识是根据类名称、接口名称、所有公有和受保护的成员名称生成的一个标志号。如果改变了类的内部结构，如添加了一个方法，自动产生的序列版本uid也会发生变化。因此，如果没有显式的声明一个版本号的话，兼容性就会遭到破坏，在运行时导致invalidclassexception。","序列化过程是将“一个对象编码成一个字节流”，相反的处理过程被称之为“反序列化过程”。当一个对象被序列化后，它的编码就可以从一台虚拟机传至另一个台虚拟机，可以被保存在磁盘上，方便以后反序列化使用。长期以来有一个误解，为了实现序列化，只需要实现serializable接口即可，事实上这种方式存在诸多危害，贪图这种序列化方式的方便，会带来长期维护的成本。关于serilizable有哪些注意事项？","总之，千万不要将序列化就等同于简单的实现serilizable接口，应该要考虑着重考虑seriablizable的应用场景和上面所述的这些注意事项。","更容易引发bug和安全漏洞：一般对象是由构造器创建的，而序列化也是一种对象创建机制，反序列化也可以构造对象。由于反序列化机制中没有显式的构造器，反序列化要确保：由真正的构造器建立的约束关系，并且不允许攻击者访问正在构造过程中的对象的内部信息。依靠默认的反序列化机制，很容易使对象的约束关系遭到破坏，以及遭受到非法访问。","直接实现serializable接口有如下这些缺点：","相关测试负担加重：当一个可序列化的类被修改后，需要检查“在新版中序列化一个实例，在旧版本中反序列化”及“在旧版本中序列化一个实例，在新版本反序列化”是否正常，当发布版本增多时，这种测试量与“可序列化的类的数量和发行版本号”的乘积成正比。","答案","结论","若一个类要加入某个框架，而该框架是依赖序列化来实现对象的传输和持久化，那么该类实现seriablizable就是有必要，更进一步来看，一个类属于一个组件，如果父组件实现了seriablizable接口，那么该类也需要实现seriablizable接口。根据经验，比如date和biginteger这样的值类应该实现serializable，大多数集合类也需要实现。","问题","降低灵活性：如果一个类实现了serializable接口，它的字节流编码也变成了它导出api的一部分，一旦这个类被广泛使用，就必须永远支持这种序列化方法。并且，如果使用了默认的serializable，这个类中私有的和包即级私有的实例域都会变成导出的api的一部分，这不符合域最小访问级别的设计原则。另外，如果改变了类的内部结构的话，客户端企图用类的旧版本来序列化，而使用新版本来进行反序列化的话，程序就会出错。"],"第十章 序列化/75.考虑使用自定义的序列化形式.html":["...","75.考虑使用自定义的序列化形式","class","final","firstname;","implement","lastname;","middlename;","name","privat","public","serializ","string","{","}","从逻辑的角度而言，name类可以简单的由lastname、firstname以及middlename三个属性来进行表示，也就是说，这三个属性可以精确的反映出它的逻辑内容。因此，这种情况可以采用默认的序列化形式，同样也需要在readobject中进行参数有效性检测和保护性拷贝。","使用默认序列化形式，当一个或多个域字段被标记为transient","同样重要，因此在没有认真考虑好默认的序列化形式是否合适之前，不要贸然使用默认的序列化行为。在作出决定之前，你需要从灵活性、性能和正确性多个角度对这种编码形式进行考察。一般来讲，只有当你自行设计的自定义序列化形式与默认的形式基本相同时，才能接受默认的序列化形式。选择合适的序列化方式，有哪些注意事项？","和objectinputstream.defaultreadobject()方法，这样就可以保证向前或者向后的兼容性；","和readobject()，因此可以在readobject和writeobject方法中实现自己的序列化逻辑。就算没有实现特定的逻辑也应该调用默认的objectoutputstream.defaultwriteobject()","在序列化过程中，虚拟机会试图调用对象类里的writeobject()","域所修饰，你就必须提供一个readobject方法。它首先调用defaultreadobject，然后再把这些transi","域进行恢复为之前的初始值；同样的，在序列化过程中，被transient修饰的实例域会被省略掉","当你决定将一个类设计成可序列化的时候，就应该详细考虑应该采用什么样的序列化形式。只有当默认的序列化形式能够合理的描述对象的逻辑状态时，才能使用默认的序列化形式。否则就要设计一个自定义的序列化形式，通过它合理的描述出对象的状态。","无论你选择了哪种序列化形式，都要为自己编写的每个可序列化的类声明一个显式的序列版本uid。这样可以避免序列版本uid成为潜在的不兼容根源，同时也会带来小小的性能好处，因为不需要去算序列版本uid。","时，如果要进行反序列化，这些域字段都将被初始化为其类型默认值，如对象引用域被置为null，数值基本域的默认值为0，boolean域的默认值为false。如果这些值不能被任何transi","有这样一个例子","答案","结论","设计一个类的序列化形式和设计该类的api","问题","默认的序列化形式描述了该兑现内部所包含的数据，以及每一个可以从这个对象到达的其他对象的内部数据，即完整了描述了所有对象被链接起来的拓扑结构。对于一个对象来说，理想的序列化形式应该只包含该对象所表示的逻辑数据，而逻辑数据和物理表示应该是相互独立。也就是说，如果一个对象的物理表示等同于它的逻辑内容的话，就适合使用默认的序列化形式。"],"第十章 序列化/76.保护性地编写readObject方法.html":["\"+","\"after\"","(start.compareto(end)","+","+\"","+end);","//","0)","76.保护性地编写readobject方法","=",">","check","class","classnotfoundexcept","compon","copi","date","date(end.gettime());","date(start.gettime());","defens","end","end);","end){","end;","final","getend()","getstart()","if(this.start.compareto(this.end)>0){","illegalargumentexception(start","invalidobjectexception(start","invari","ioexception,","mutabl","new","period(d","period{","privat","public","readobject(objectinputstream","readobject方法中都不要调用可覆盖的方法，无论是间接的方式还是直接的方式","return","s)","s.defaultreadobject();","satisfi","start","start,","start;","static","this.end","this.start","throw","void","{","}","但是如果将这个类进行序列化的时候，就可能这个类会出现不满足start和end的约束关系了，那么，应该怎样保证在序列化的时候也能保障对象的关键约束关系？","在第39条里介绍到了为了让程序更加安全可靠，需要针对可变域在构造器和访问方法中进行保护性拷贝，例如下面的代码：","如果整个对象图在被反序列化之后必须进行验证，就应该使用objectinputvalidation接口；","对于任何约束条件，如果检查失败，则抛出一个invalidobjectexception异常。这些检查动作应该跟在所有的保护性拷贝之后；","对于对象引用域必须保持为私有的，要保护性地拷贝这些域中的每个对象。不可变类的可变组件就属于这一类别；","并且需要注意的是，保护性拷贝在参数有效性检查的前面，并且不能使用clone方法进行拷贝对象。","总而言之，每当你编写readobject方法的时候，都要这样想：你正在编写一个公有的构造器，无论给它传递什么样的字节流，它都必须产生一个有效的实例。下面这些经验，有助于编写出更加健壮的readobject方法：","答案","结论","问题","除了构造器构造对象外，反序列化也是一种构造对象的方式，因此，也需要在构造对象的时候进行参数有效性检查以及保护性拷贝。所以在readobject方法也需要确保period的关键约束不变以及保持它的不可变性："],"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":["\"heartbreak","\"hound","...","//","77.单例模式，枚举类型优先于readresolv","=","={","approach","better!","care","class","collector","control","dog\",","elvi","elvis()","elvis();","enum","favoritesong","final","garbag","hotel\"","impersonator.","instanc","instance;","leavethebuilding()","new","object","on","prefer","printfavorites()","privat","public","readresolv","readresolve()","return","singleton","static","string[]","system.out.println(arrays.tostring(favoritesongs));","take","true","void","{","}","};","利用readresolve方法：readresolve特性允许你用readobject创建的实例代替另一个实例。对于一个正在被反序列化的对象，如果它的类定义了一个readresolve方法，并且具备正确的声明，那么在反序列化之后，新建对象上的readresolve方法就会被调用。然后，该方法返回的对象引用将被返回，取代新建的对象。因此，在每次反序列化的时候，就可以在readresolve方法中返回之前的实例对象，这样就可以确保被多次反序列化后的对象也只会有一个。示例代码为：","如果类被序列化了，不论是采用默认的序列化方式还是采用自定义的序列化方式，或者在readobject方法中进行所谓的处理，这个类都将不会是单例的了。那么针对这种要满足可序列化的单例应该怎样实现？","实现可序列化最简单安全的方式是采用枚举的形式，应该尽可能采用这种方式。如果采用readresolve实现的话，呀确保该类的所有实例域都为基本类型，或者是transient的。","答案","结论","要满足可序列化的单例，有两种方式：","该方法忽略了被反序列化的对象，只返回该类初始化时创建的那个特殊的elvis实例。事实上，如果依赖readresolve进行实例控制，带有对象引用类型的所有实例域则都必须声明为transient的。否则，利用readresolve方法实现的单例也会遭受到攻击。","采用枚举实现：可以采用枚举实现可序列化的单例，这种安全性由jvm提供保障，而且代码十分简洁，实例域也不需要用transient修饰：","针对singleton，最简单的一种方式是：","问题"],"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":["\"","\"起始时间：\"","*","*/","+",",","/**","//","1l;","78.考虑用序列化代理代替序列化实例","=","==","@overrid","@param","@return","@throw","class","date","date(end.gettime()));","date(end.gettime());","date(start.gettime()),","date(start.gettime());","end","end(){","end)","end;","final","if(nul","illegalargumentexception(\"请传入正确的时间区间!\");","implement","invalidobjectexcept","invalidobjectexception(\"proxi","invalidobjectexception{","long","new","null","object","oi","ois)","p){","p.end;","p.start;","period","period(d","period(new","privat","proxy），它应该有一个单独的构造器，其参数类型就是那个外围类。这个构造器只从它的参数中复制数据：它不需要进行任何一致性检查或者保护性拷贝。按设计，序列代理的默认序列化形式是外围类最好的序列化形式。外围类及其序列代理都必须声明实现serializable接口。例如，下面这种形式：","public","readobject(objectinputstream","readresolve(){","required!\");","return","serializable{","serializabtionproxi","serializabtionproxy(period","serializabtionproxy(this);","serialversionuid","start","start(){","start,","start.after(end)){","start;","static","string","system.out.println(\"进入readresolve()方法，将返回period对象！\");","system.out.println(\"进入writereplace()方法！\");","this.end","this.start","throw","tostring(){","void","writereplace(){","{","||","}","内部类中的readresolve方法是利用类本身的构造器和静态工厂去创建对象，这样就避免了为了安全反序列化而遵守类的约束条件而产生的大量代码。","反序列化这个类时，虚拟机会调用这个方法，最后返回的对象是一个period对象！这里同样调用了period的构造函数，会和原来的实例对象一样","在外围类要通过readobject方法中抛出异常，即表明禁止调用者调用readobject，杜绝攻击者企图通过readobject进行伪字节流攻击和内部域盗用攻击；","如果攻击者伪造了一个字节码文件，然后来反序列化也无法成功，因为外围类的readobject方法直接抛异常！","序列化外围类时，通过这个方法，最后其实是序列化了一个内部的代理类对象！","有这样几点需要注意：","每当写readobject或者writeobject方法的时候，就应该考虑使用序列化代理模式。要想稳健地将带有重要约束条件的对象序列化时，这种模式可能是最容易的方法。","由于反序列化也可以作为一种构造对象的方式，但是往往因为这种利用语言之外的机制来创建，而不是普通的构造器，就容易遭受攻击。在反序列化时，实例的创建是由readobject方法来完成的。由于这是一个不同于构造函数的创建类实例的通道，因此在构造函数中的状态约束条件在readobjetc中也得一条不落下的实现。而且readobject的出现，让伪字节流攻击和内部域的盗用攻击成为可能。伪字节流攻击就是伪造一个字节流，通过readobject读取，内部域的盗用攻击是指用一个外部类包含该类，用外部类的字段去指向该类的可变对象。那么应该使用哪种方式，能够极大的减少风险？","答案","结束时间：\"","结论","要确保能够安全的进行反序列化构造对象，可以采用序列化代理模式。所谓序列化代理模式相当简单，首先，为可序列化的类设计一个私有的静态嵌套类，精确地表示外围类的实例的逻辑状态。这个嵌套类被称作序列化代理（serial","这里进行保护性拷贝！","问题","需要将writereplace方法添加到外围类中，该方法可以产生一个序列化代理对象来代替外围类的实例。换句话说，writereplace方法在序列化之前，将外围类的实例转换成了它的代理对象；"],"第一章 创建和销毁对象/7.避免使用finalize方法.html":["7.避免使用finalize()方法","finalize()方法的缺点在于不能保证会及时的执行。从一个对象变成不可达开始，到它的终结方法被执行，所花费的时间是任意长的。这意味着，注重时间的任务不应该由finalize()方法来完成。例如，使用finalize()方法来关闭已经打开的文件，这就是十分严重的错误。因此，不应该以来finalize()方法来更新重要的持久状态。还有一点，使用finalize()方法有非常严重的性能损失；","finalize()方法的缺点：","finalize()通常是不可预测的，也是很危险的，一般情况下也是不必要的。使用finalize()会导致行为不稳定、降低性能，以及可移植性的问题。虽然终结方法也有可用之处，但是还是应该避免使用它，finalize()方法的缺点和用途有哪些？","finalize方法有这样的两个用途：","java的语言规范不仅不保证终结方法被及时执行，而且根本就不保证它们会被执行。当一个程序终结的时候，某些已经无法访问的对象上的终结方法却根本没有被执行，这是完全可能的。这里得到的结论就是：不应该依赖终结方法来更新重要的持久状态。例如，依赖终结方法来释放共享资源（比如，数据库）上的永久锁，很容易让整个分布式系统跨掉。","peer)有关。本地对等体是一个本地对象，普通对象通过本地方法委托给一个本地对象，因为本地对等体不是一个普通的对象，所以垃圾回收器并不知道它，当它的java对等体被回收的时候，它却不会被回收掉。在本地对等体并不拥有关键资源的前提下，终结方法正好被用来执行回收本地对等体。","queue队列速度大于出队速度的话，就会造成大量对象没有被及时回收；","为类提供finalize()方法，可能会随意地延迟其实例的回收过程。如果对象进入f","及时的执行finalize方法是垃圾回收过程中一个重要步骤，这种算法在不同的jvm实现平台上会有很大的差别，也许在测试的jvm平台上测试性能良好，却可能在其他平台上的性能很差。","如果对象的所有者忘记显示关闭对象（如文件流，数据库session等），可使用finalize()方法作为最后的兜底，虽然这样做并不能保证终结方法能被及时的调用，但是在客户端无法通过调用显式的终结方法来正常结束操作的情况下，晚一点释放总比不释放的好。但是如果终结方法发现资源还未被终止，应该在日志中记录一条日志信息，因为这表明客户端代码中的一个bug，应该得到修复；","第二种合理用途与对象的本地对等体(natvi","结论","解决","问题","除非使用finalze()来作为回收对象最后的兜底操作，就不要使用finalize()方法。如果使用了finalize()方法就要调用super.finalize，并且要在日志上记录使用了finalize()的特殊情况，应该当做bug去修复。"],"第五章 枚举和注解/31.用实例域代替序数.html":["+",",octet,","1;","31.用实例域代替序数","=","dectet(10),","dectet;","double_quartet(8),","duet(2),","duet,","ensembl","ensemble(int","ensemble{","enum","enum规范中谈到ordinal时这么写到：“大多数的程序员都不需要这个方法。它是设计成用于像enumset和enummap这种基于枚举的通用数据结构的。”除非你在编写的是这种数据结构，否则最好完全避免使用ordinal方法。","final","int","nonet(9),","nonet,","numberofmusicians(){","numberofmusicians;","octet(8),","ordinal()","privat","public","quintet(4),","quintet,","return","septet","septet(7),","sextet(5),","sextet,","size){","size;","solo(1),","solo,","this.numberofmusician","trio(3),","trio,","triple_quartrt(12);","{","}","原因","枚举类有一个ordinal方法，用来表示枚举值在类型中的索引位置，这个方法看起来很美好，但是真的方便维护吗？","结论","许多枚举天生就与一个单独的int值相关联。所有的枚举都有一个ordinal方法，它返回每个枚举常量在类型中的数字位置，如下例：","这个方法的本意是通过枚举常量在类中的序号来表示每种音乐类型演奏的人数。虽然这个枚举不错，但是维护起来就像一场噩梦。如果常量重新排序，numberofmusicians方法就会遭到破坏。好的做法应该是：永远不要根据枚举的序号导出与它有关的值，而是要将它保存到一个实例中：","问题"]},"length":66},"tokenStore":{"root":{"0":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936},"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}},")":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669},"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909},"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.015873015873015872},"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":{"ref":"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html","tf":0.019230769230769232},"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901}},";":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.025974025974025976}}},"暗":{"docs":{},"示":{"docs":{},"着":{"docs":{},"x":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"z":{"docs":{},")":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}}}}}}}}}}}}}}}}}}},"{":{"docs":{"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.015748031496062992}}}},",":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.05194805194805195},"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.01834862385321101}}},";":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.006493506493506494},"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669},"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936},"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.007142857142857143},"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441},"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.014388489208633094},"第七章 通用程序设计/46.for-each循环优于传统的for循环.html":{"ref":"第七章 通用程序设计/46.for-each循环优于传统的for循环.html","tf":0.025},"第八章 异常/57.只针对异常的情况才使用异常.html":{"ref":"第八章 异常/57.只针对异常的情况才使用异常.html","tf":0.043478260869565216},"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.024}},"i":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}}}}}}},"l":{"docs":{},";":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.006493506493506494}}}},"也":{"docs":{},"成":{"docs":{},"立":{"docs":{},"。":{"docs":{},"对":{"docs":{},"应":{"docs":{},"着":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"使":{"docs":{},"用":{"docs":{},"规":{"docs":{},"范":{"docs":{},"里":{"docs":{},"面":{"docs":{},"的":{"docs":{},"传":{"docs":{},"递":{"docs":{},"性":{"docs":{},"。":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}}}}}}}}}}}}}}}}}}}}}}}}}},"暗":{"docs":{},"示":{"docs":{},"着":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"z":{"docs":{},"都":{"docs":{},"满":{"docs":{},"足":{"docs":{},"s":{"docs":{},"g":{"docs":{},"n":{"docs":{},"(":{"docs":{},"x":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"z":{"docs":{},")":{"docs":{},")":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"4":{"2":{"docs":{},")":{"docs":{"第七章 通用程序设计/48.需要精确答案，请避免使用float和double.html":{"ref":"第七章 通用程序设计/48.需要精确答案，请避免使用float和double.html","tf":0.07142857142857142}}}},"docs":{}},"5":{"0":{"0":{"0":{"0":{"0":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"8":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"1":{"docs":{"第七章 通用程序设计/48.需要精确答案，请避免使用float和double.html":{"ref":"第七章 通用程序设计/48.需要精确答案，请避免使用float和double.html","tf":0.07142857142857142}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"7":{"5":{"docs":{},"f":{"docs":{},")":{"docs":{},";":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}},"docs":{}},"docs":{}}},"1":{"0":{"docs":{},".":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"第二章 对象通用的方法/10.覆盖toString.html":{"ref":"第二章 对象通用的方法/10.覆盖toString.html","tf":10}}}}}}}}}}},"1":{"docs":{},".":{"3":{"3":{"7":{"2":{"0":{"1":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"8":{"8":{"1":{"2":{"0":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},";":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}},"2":{"docs":{},".":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"实":{"docs":{},"现":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"接":{"docs":{},"口":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":10}}}}}}}}}}}}}}}}}}}},"3":{"docs":{},".":{"docs":{},"使":{"docs":{},"类":{"docs":{},"和":{"docs":{},"成":{"docs":{},"员":{"docs":{},"的":{"docs":{},"可":{"docs":{},"访":{"docs":{},"问":{"docs":{},"性":{"docs":{},"最":{"docs":{},"小":{"docs":{},"化":{"docs":{"第三章 类和接口/13.使类和成员的可访问性最小化.html":{"ref":"第三章 类和接口/13.使类和成员的可访问性最小化.html","tf":10}}}}}}}}}}}}}}}}},"4":{"docs":{},".":{"docs":{},"在":{"docs":{},"公":{"docs":{},"有":{"docs":{},"类":{"docs":{},"中":{"docs":{},"使":{"docs":{},"用":{"docs":{},"访":{"docs":{},"问":{"docs":{},"方":{"docs":{},"法":{"docs":{},"而":{"docs":{},"非":{"docs":{},"公":{"docs":{},"有":{"docs":{},"域":{"docs":{"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html":{"ref":"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html","tf":10}}}}}}}}}}}}}}}}}}}},"5":{"docs":{},".":{"docs":{},"使":{"docs":{},"可":{"docs":{},"变":{"docs":{},"性":{"docs":{},"最":{"docs":{},"小":{"docs":{},"化":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":10}}}}}}}}}}},"6":{"docs":{},";":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669}}},".":{"docs":{},"复":{"docs":{},"合":{"docs":{},"优":{"docs":{},"于":{"docs":{},"继":{"docs":{},"承":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":10}}}}}}}}}},"7":{"docs":{},";":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909}}},".":{"docs":{},"要":{"docs":{},"么":{"docs":{},"为":{"docs":{},"继":{"docs":{},"承":{"docs":{},"而":{"docs":{},"设":{"docs":{},"计":{"docs":{},"，":{"docs":{},"并":{"docs":{},"提":{"docs":{},"供":{"docs":{},"文":{"docs":{},"档":{"docs":{},"说":{"docs":{},"明":{"docs":{},"，":{"docs":{},"要":{"docs":{},"么":{"docs":{},"就":{"docs":{},"禁":{"docs":{},"止":{"docs":{},"继":{"docs":{},"承":{"docs":{"第三章 类和接口/17.要么为继承而设计，并提供文档说明，要么就禁止继承.html":{"ref":"第三章 类和接口/17.要么为继承而设计，并提供文档说明，要么就禁止继承.html","tf":10}}}}}}}}}}}}}}}}}}}}}}}}}}}},"9":{"docs":{},".":{"docs":{},"接":{"docs":{},"口":{"docs":{},"只":{"docs":{},"用":{"docs":{},"于":{"docs":{},"定":{"docs":{},"义":{"docs":{},"类":{"docs":{},"型":{"docs":{"第三章 类和接口/19.接口只用于定义类型.html":{"ref":"第三章 类和接口/19.接口只用于定义类型.html","tf":10}}}}}}}}}}}}},"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909}},",":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.025974025974025976},"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012}}},")":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909}},";":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669}}}},";":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.023809523809523808},"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441},"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.016666666666666666}}},"、":{"0":{"docs":{},"、":{"1":{"docs":{},"。":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}}}},"docs":{}}},"docs":{}},".":{"1":{"2":{"5":{"8":{"8":{"4":{"5":{"6":{"docs":{},"e":{"docs":{"第三章 类和接口/19.接口只用于定义类型.html":{"ref":"第三章 类和接口/19.接口只用于定义类型.html","tf":0.02702702702702703}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"5":{"docs":{},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"一":{"docs":{},"般":{"docs":{},"使":{"docs":{},"用":{"docs":{},"命":{"docs":{},"名":{"docs":{},"模":{"docs":{},"式":{"docs":{},"表":{"docs":{},"明":{"docs":{},"有":{"docs":{},"些":{"docs":{},"程":{"docs":{},"序":{"docs":{},"元":{"docs":{},"素":{"docs":{},"需":{"docs":{},"要":{"docs":{},"通":{"docs":{},"过":{"docs":{},"某":{"docs":{},"种":{"docs":{},"工":{"docs":{},"具":{"docs":{},"或":{"docs":{},"者":{"docs":{},"框":{"docs":{},"架":{"docs":{},"进":{"docs":{},"行":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"处":{"docs":{},"理":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"在":{"docs":{},"老":{"docs":{},"版":{"docs":{},"本":{"docs":{},"的":{"docs":{},"j":{"docs":{},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"测":{"docs":{},"试":{"docs":{},"框":{"docs":{},"架":{"docs":{},"原":{"docs":{},"本":{"docs":{},"要":{"docs":{},"求":{"docs":{},"用":{"docs":{},"户":{"docs":{},"一":{"docs":{},"定":{"docs":{},"要":{"docs":{},"用":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"作":{"docs":{},"为":{"docs":{},"测":{"docs":{},"试":{"docs":{},"方":{"docs":{},"法":{"docs":{},"名":{"docs":{},"称":{"docs":{},"的":{"docs":{},"开":{"docs":{},"头":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"就":{"docs":{},"是":{"docs":{},"命":{"docs":{},"名":{"docs":{},"模":{"docs":{},"式":{"docs":{},"。":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"第七章 通用程序设计/46.for-each循环优于传统的for循环.html":{"ref":"第七章 通用程序设计/46.for-each循环优于传统的for循环.html","tf":0.025}}}},"docs":{"第七章 通用程序设计/55.谨慎的进行优化.html":{"ref":"第七章 通用程序设计/55.谨慎的进行优化.html","tf":0.038461538461538464}}},"这":{"docs":{},"段":{"docs":{},"代":{"docs":{},"码":{"docs":{},"旨":{"docs":{},"在":{"docs":{},"通":{"docs":{},"过":{"docs":{},"位":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"将":{"docs":{},"多":{"docs":{},"种":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"风":{"docs":{},"格":{"docs":{},"进":{"docs":{},"行":{"docs":{},"组":{"docs":{},"合":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"，":{"docs":{},"很":{"docs":{},"显":{"docs":{},"然":{"docs":{},"这":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"自":{"docs":{},"然":{"docs":{},"存":{"docs":{},"在":{"docs":{},"很":{"docs":{},"多":{"docs":{},"问":{"docs":{},"题":{"docs":{},"（":{"docs":{},"见":{"3":{"1":{"docs":{},"条":{"docs":{},"）":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"使":{"docs":{},"用":{"docs":{},"什":{"docs":{},"么":{"docs":{},"样":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"数":{"docs":{},"据":{"docs":{},"能":{"docs":{},"够":{"docs":{},"替":{"docs":{},"代":{"docs":{},"位":{"docs":{},"域":{"docs":{},"？":{"docs":{"第五章 枚举和注解/32.用EnumSet代替位域.html":{"ref":"第五章 枚举和注解/32.用EnumSet代替位域.html","tf":0.03125}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{},"常":{"docs":{},"量":{"docs":{},"域":{"docs":{},"是":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"一":{"docs":{},"个":{"docs":{},"推":{"docs":{},"荐":{"docs":{},"使":{"docs":{},"用":{"docs":{},"下":{"docs":{},"划":{"docs":{},"线":{"docs":{},"的":{"docs":{},"情":{"docs":{},"形":{"docs":{},"；":{"docs":{"第七章 通用程序设计/56.遵守普遍接受的命名规则.html":{"ref":"第七章 通用程序设计/56.遵守普遍接受的命名规则.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},";":{"docs":{"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.011834319526627219}}}}},"2":{"0":{"docs":{},".":{"docs":{},"类":{"docs":{},"层":{"docs":{},"次":{"docs":{},"优":{"docs":{},"于":{"docs":{},"标":{"docs":{},"签":{"docs":{},"类":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":10}}}}}}}}}}}},"1":{"docs":{},".":{"docs":{},"用":{"docs":{},"函":{"docs":{},"数":{"docs":{},"对":{"docs":{},"象":{"docs":{},"表":{"docs":{},"示":{"docs":{},"策":{"docs":{},"略":{"docs":{"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":10}}}}}}}}}}}}},"2":{"docs":{},".":{"docs":{},"优":{"docs":{},"先":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"静":{"docs":{},"态":{"docs":{},"成":{"docs":{},"员":{"docs":{},"类":{"docs":{"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":10}}}}}}}}}}}}},"3":{"docs":{},";":{"docs":{"第三章 类和接口/19.接口只用于定义类型.html":{"ref":"第三章 类和接口/19.接口只用于定义类型.html","tf":0.02702702702702703}}},".":{"docs":{},"使":{"docs":{},"用":{"docs":{},"泛":{"docs":{},"型":{"docs":{},"不":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{},"原":{"docs":{},"生":{"docs":{},"类":{"docs":{},"型":{"docs":{"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":10}}}}}}}}}}}}}}}},"4":{"docs":{},".":{"docs":{},"消":{"docs":{},"除":{"docs":{},"非":{"docs":{},"受":{"docs":{},"检":{"docs":{},"警":{"docs":{},"告":{"docs":{"第四章 泛型/24.消除非受检警告.html":{"ref":"第四章 泛型/24.消除非受检警告.html","tf":10}}}}}}}}}}},"5":{"docs":{},".":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"优":{"docs":{},"于":{"docs":{},"数":{"docs":{},"组":{"docs":{"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":10}}}}}}}}}}}},"7":{"docs":{},".":{"1":{"4":{"5":{"6":{"6":{"4":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"5":{"1":{"5":{"3":{"0":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669}},".":{"0":{"0":{"0":{"0":{"0":{"0":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"4":{"3":{"9":{"docs":{},"e":{"6":{"docs":{},")":{"docs":{},",":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}},"docs":{}}},"docs":{}},"7":{"7":{"docs":{},"e":{"7":{"docs":{},")":{"docs":{},";":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}},"docs":{}}},"docs":{}},"docs":{}},"5":{"5":{"6":{"docs":{},"e":{"7":{"docs":{},")":{"docs":{},",":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{"第七章 通用程序设计/55.谨慎的进行优化.html":{"ref":"第七章 通用程序设计/55.谨慎的进行优化.html","tf":0.038461538461538464}},"多":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"使":{"docs":{},"用":{"docs":{},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"模":{"docs":{},"式":{"docs":{},"创":{"docs":{},"建":{"docs":{},"对":{"docs":{},"象":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":10}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"适":{"docs":{},"用":{"docs":{},"场":{"docs":{},"景":{"docs":{"第十章 序列化/74.谨慎的实现Serializable接口.html":{"ref":"第十章 序列化/74.谨慎的实现Serializable接口.html","tf":0.058823529411764705}}}}}}}}}}}}}}}}}}},")":{"docs":{},".":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909}}}},";":{"1":{"2":{"3":{"4":{"5":{"6":{"7":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441}}},",":{"0":{"docs":{},",":{"2":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"最":{"docs":{},"根":{"docs":{},"本":{"docs":{},"的":{"docs":{},"原":{"docs":{},"因":{"docs":{},"在":{"docs":{},"于":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"泛":{"docs":{},"型":{"docs":{},"和":{"docs":{},"自":{"docs":{},"动":{"docs":{},"拆":{"docs":{},"箱":{"docs":{},"和":{"docs":{},"装":{"docs":{},"箱":{"docs":{},"，":{"docs":{},"使":{"docs":{},"得":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},")":{"docs":{},"和":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},")":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"的":{"docs":{},"参":{"docs":{},"类":{"docs":{},"型":{"docs":{},"上":{"docs":{},"数":{"docs":{},"并":{"docs":{},"没":{"docs":{},"有":{"docs":{},"“":{"docs":{},"根":{"docs":{},"本":{"docs":{},"的":{"docs":{},"不":{"docs":{},"同":{"docs":{},"”":{"docs":{},"。":{"docs":{"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012}}}},"3":{"0":{"docs":{},".":{"0":{"0":{"0":{"0":{"0":{"0":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"使":{"docs":{},"用":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"代":{"docs":{},"替":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"常":{"docs":{},"量":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":10}}}}}}}}}}}}}}},"1":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.03636363636363636}},".":{"9":{"6":{"5":{"4":{"2":{"3":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"用":{"docs":{},"实":{"docs":{},"例":{"docs":{},"域":{"docs":{},"代":{"docs":{},"替":{"docs":{},"序":{"docs":{},"数":{"docs":{"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":10}}}}}}}}}}}},"2":{"docs":{},".":{"docs":{},"用":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"代":{"docs":{},"替":{"docs":{},"位":{"docs":{},"域":{"docs":{"第五章 枚举和注解/32.用EnumSet代替位域.html":{"ref":"第五章 枚举和注解/32.用EnumSet代替位域.html","tf":10}}}}}}}}}}}}}}}},"3":{"docs":{},".":{"docs":{},"用":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"代":{"docs":{},"替":{"docs":{},"序":{"docs":{},"数":{"docs":{},"索":{"docs":{},"引":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":10}}}}}}}}}}}}}}}}}},"4":{"docs":{},".":{"0":{"8":{"7":{"9":{"0":{"6":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"5":{"docs":{},".":{"docs":{},"注":{"docs":{},"解":{"docs":{},"优":{"docs":{},"于":{"docs":{},"命":{"docs":{},"名":{"docs":{},"模":{"docs":{},"式":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":10}}}}}}}}}}}},"8":{"docs":{},".":{"docs":{},"检":{"docs":{},"查":{"docs":{},"方":{"docs":{},"法":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"有":{"docs":{},"效":{"docs":{},"性":{"docs":{"第六章 方法/38.检查方法参数的有效性.html":{"ref":"第六章 方法/38.检查方法参数的有效性.html","tf":10}}}}}}}}}}}}}},"9":{"docs":{},".":{"docs":{},"参":{"docs":{},"数":{"docs":{},"进":{"docs":{},"行":{"docs":{},"保":{"docs":{},"护":{"docs":{},"性":{"docs":{},"拷":{"docs":{},"贝":{"docs":{"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":10}}}}}}}}}}}}},"docs":{},".":{"3":{"9":{"3":{"docs":{},"e":{"6":{"docs":{},")":{"docs":{},",":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909},"第七章 通用程序设计/55.谨慎的进行优化.html":{"ref":"第七章 通用程序设计/55.谨慎的进行优化.html","tf":0.038461538461538464}},"使":{"docs":{},"用":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"类":{"docs":{},"型":{"docs":{},"强":{"docs":{},"化":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":10}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"不":{"docs":{},"适":{"docs":{},"用":{"docs":{},"场":{"docs":{},"景":{"docs":{"第十章 序列化/74.谨慎的实现Serializable接口.html":{"ref":"第十章 序列化/74.谨慎的实现Serializable接口.html","tf":0.058823529411764705}}}}}}}}}}}}}}}}}}}},")":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909}}},"不":{"docs":{},"会":{"docs":{},"报":{"docs":{},"错":{"docs":{},"，":{"docs":{},"但":{"docs":{},"它":{"docs":{},"也":{"docs":{},"不":{"docs":{},"会":{"docs":{},"执":{"docs":{},"行":{"docs":{},"测":{"docs":{},"试":{"docs":{},"，":{"docs":{},"导":{"docs":{},"致":{"docs":{},"错":{"docs":{},"误":{"docs":{},"的":{"docs":{},"安":{"docs":{},"全":{"docs":{},"感":{"docs":{},"；":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}}}}}},"也":{"docs":{},"不":{"docs":{},"会":{"docs":{},"出":{"docs":{},"错":{"docs":{},"，":{"docs":{},"但":{"docs":{},"它":{"docs":{},"也":{"docs":{},"不":{"docs":{},"会":{"docs":{},"执":{"docs":{},"行":{"docs":{},"测":{"docs":{},"试":{"docs":{},"；":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}},"能":{"docs":{},"够":{"docs":{},"自":{"docs":{},"动":{"docs":{},"测":{"docs":{},"试":{"docs":{},"其":{"docs":{},"所":{"docs":{},"有":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"管":{"docs":{},"它":{"docs":{},"们":{"docs":{},"的":{"docs":{},"名":{"docs":{},"称":{"docs":{},"如":{"docs":{},"何":{"docs":{},"。":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.010752688172043012}}},",":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012}}}},"4":{"0":{"docs":{},".":{"docs":{},"谨":{"docs":{},"慎":{"docs":{},"的":{"docs":{},"设":{"docs":{},"计":{"docs":{},"方":{"docs":{},"法":{"docs":{},"签":{"docs":{},"名":{"docs":{"第六章 方法/40.谨慎的设计方法签名.html":{"ref":"第六章 方法/40.谨慎的设计方法签名.html","tf":10}}}}}}}}}}}}},"1":{"docs":{},".":{"docs":{},"慎":{"docs":{},"用":{"docs":{},"重":{"docs":{},"载":{"docs":{"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":10}}}}}}}},"2":{"docs":{},".":{"docs":{},"慎":{"docs":{},"用":{"docs":{},"可":{"docs":{},"变":{"docs":{},"参":{"docs":{},"数":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":10}}}}}}}}}},"3":{"docs":{},".":{"docs":{},"返":{"docs":{},"回":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"0":{"docs":{},"的":{"docs":{},"集":{"docs":{},"合":{"docs":{},"或":{"docs":{},"者":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":{"ref":"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html","tf":10}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}},"4":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"需":{"docs":{},"要":{"docs":{},"编":{"docs":{},"写":{"docs":{},"文":{"docs":{},"档":{"docs":{},"注":{"docs":{},"释":{"docs":{"第六章 方法/44.API需要编写文档注释.html":{"ref":"第六章 方法/44.API需要编写文档注释.html","tf":10}}}}}}}}}}}}}}},"5":{"docs":{},".":{"docs":{},"将":{"docs":{},"局":{"docs":{},"部":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"作":{"docs":{},"用":{"docs":{},"域":{"docs":{},"最":{"docs":{},"小":{"docs":{},"化":{"docs":{"第七章 通用程序设计/45.将局部变量的作用域最小化.html":{"ref":"第七章 通用程序设计/45.将局部变量的作用域最小化.html","tf":10}}}}}}}}}}}}}}}},"6":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"第七章 通用程序设计/46.for-each循环优于传统的for循环.html":{"ref":"第七章 通用程序设计/46.for-each循环优于传统的for循环.html","tf":5}}}}}}},"7":{"docs":{},".":{"docs":{},"多":{"docs":{},"使":{"docs":{},"用":{"docs":{},"类":{"docs":{},"库":{"docs":{"第七章 通用程序设计/47.多使用类库.html":{"ref":"第七章 通用程序设计/47.多使用类库.html","tf":10}}}}}}}}},"8":{"docs":{},".":{"docs":{},"需":{"docs":{},"要":{"docs":{},"精":{"docs":{},"确":{"docs":{},"答":{"docs":{},"案":{"docs":{},"，":{"docs":{},"请":{"docs":{},"避":{"docs":{},"免":{"docs":{},"使":{"docs":{},"用":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{},"和":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"第七章 通用程序设计/48.需要精确答案，请避免使用float和double.html":{"ref":"第七章 通用程序设计/48.需要精确答案，请避免使用float和double.html","tf":10}}}}}}}}}}}}}}}}}}}}}}}}}}},"9":{"docs":{},".":{"docs":{},"基":{"docs":{},"本":{"docs":{},"类":{"docs":{},"型":{"docs":{},"优":{"docs":{},"先":{"docs":{},"于":{"docs":{},"装":{"docs":{},"箱":{"docs":{},"基":{"docs":{},"本":{"docs":{},"类":{"docs":{},"型":{"docs":{"第七章 通用程序设计/49.基本类型优先于装箱基本类型.html":{"ref":"第七章 通用程序设计/49.基本类型优先于装箱基本类型.html","tf":10}}}}}}}}}}}}}}}}},"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}},".":{"0":{"0":{"0":{"0":{"0":{"0":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.004968944099378882}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"私":{"docs":{},"有":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"以":{"docs":{},"强":{"docs":{},"化":{"docs":{},"对":{"docs":{},"象":{"docs":{},"不":{"docs":{},"可":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html":{"ref":"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html","tf":10}}}}}}}}}}}}}}}}}},")":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909}}},",":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012}}}},"5":{"0":{"docs":{},".":{"docs":{},"尽":{"docs":{},"量":{"docs":{},"避":{"docs":{},"免":{"docs":{},"使":{"docs":{},"用":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"第七章 通用程序设计/50.尽量避免使用字符串.html":{"ref":"第七章 通用程序设计/50.尽量避免使用字符串.html","tf":10}}}}}}}}}}}}},"1":{"docs":{},".":{"docs":{},"谨":{"docs":{},"慎":{"docs":{},"使":{"docs":{},"用":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"连":{"docs":{},"接":{"docs":{},"符":{"docs":{"第七章 通用程序设计/51.谨慎使用字符串连接符.html":{"ref":"第七章 通用程序设计/51.谨慎使用字符串连接符.html","tf":10}}}}}}}}}}}}}},"2":{"docs":{},".":{"docs":{},"通":{"docs":{},"过":{"docs":{},"接":{"docs":{},"口":{"docs":{},"引":{"docs":{},"用":{"docs":{},"对":{"docs":{},"象":{"docs":{"第七章 通用程序设计/52.通过接口引用对象.html":{"ref":"第七章 通用程序设计/52.通过接口引用对象.html","tf":10}}}}}}}}}}}},"3":{"docs":{},".":{"docs":{},"慎":{"docs":{},"用":{"docs":{},"反":{"docs":{},"射":{"docs":{},"机":{"docs":{},"制":{"docs":{"第七章 通用程序设计/53.慎用反射机制.html":{"ref":"第七章 通用程序设计/53.慎用反射机制.html","tf":10}}}}}}}}}},"4":{"docs":{},".":{"docs":{},"慎":{"docs":{},"用":{"docs":{},"本":{"docs":{},"地":{"docs":{},"方":{"docs":{},"法":{"docs":{"第七章 通用程序设计/54.慎用本地方法.html":{"ref":"第七章 通用程序设计/54.慎用本地方法.html","tf":10}}}}}}}}}},"5":{"docs":{},".":{"docs":{},"谨":{"docs":{},"慎":{"docs":{},"的":{"docs":{},"进":{"docs":{},"行":{"docs":{},"优":{"docs":{},"化":{"docs":{"第七章 通用程序设计/55.谨慎的进行优化.html":{"ref":"第七章 通用程序设计/55.谨慎的进行优化.html","tf":10}}}}}}}}}}},"6":{"docs":{},".":{"docs":{},"遵":{"docs":{},"守":{"docs":{},"普":{"docs":{},"遍":{"docs":{},"接":{"docs":{},"受":{"docs":{},"的":{"docs":{},"命":{"docs":{},"名":{"docs":{},"规":{"docs":{},"则":{"docs":{"第七章 通用程序设计/56.遵守普遍接受的命名规则.html":{"ref":"第七章 通用程序设计/56.遵守普遍接受的命名规则.html","tf":10}}}}}}}}}}}}}}},"7":{"docs":{},".":{"docs":{},"只":{"docs":{},"针":{"docs":{},"对":{"docs":{},"异":{"docs":{},"常":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"才":{"docs":{},"使":{"docs":{},"用":{"docs":{},"异":{"docs":{},"常":{"docs":{"第八章 异常/57.只针对异常的情况才使用异常.html":{"ref":"第八章 异常/57.只针对异常的情况才使用异常.html","tf":10}}}}}}}}}}}}}}}}},"8":{"docs":{},".":{"docs":{},"选":{"docs":{},"择":{"docs":{},"合":{"docs":{},"适":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{"第八章 异常/58.选择合适的异常.html":{"ref":"第八章 异常/58.选择合适的异常.html","tf":10}}}}}}}}}}},"9":{"docs":{},".":{"docs":{},"避":{"docs":{},"免":{"docs":{},"不":{"docs":{},"必":{"docs":{},"要":{"docs":{},"的":{"docs":{},"使":{"docs":{},"用":{"docs":{},"受":{"docs":{},"检":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{"第八章 异常/59.避免不必要的使用受检的异常.html":{"ref":"第八章 异常/59.避免不必要的使用受检的异常.html","tf":10}}}}}}}}}}}}}}}}},"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012}},".":{"docs":{},"避":{"docs":{},"免":{"docs":{},"创":{"docs":{},"建":{"docs":{},"不":{"docs":{},"必":{"docs":{},"要":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":10}}}}}}}}}}}}},")":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909}}}},"6":{"1":{"docs":{},".":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"与":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"相":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{"第八章 异常/61.抛出与抽象相对应的异常.html":{"ref":"第八章 异常/61.抛出与抽象相对应的异常.html","tf":10}}}}}}}}}}}}}}},"2":{"docs":{},".":{"docs":{},"每":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{},"都":{"docs":{},"要":{"docs":{},"有":{"docs":{},"文":{"docs":{},"档":{"docs":{"第八章 异常/62.每个方法抛出的异常都要有文档.html":{"ref":"第八章 异常/62.每个方法抛出的异常都要有文档.html","tf":10}}}}}}}}}}}}}}}}}},"3":{"docs":{},".":{"docs":{},"编":{"docs":{},"写":{"docs":{},"合":{"docs":{},"适":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{},"信":{"docs":{},"息":{"docs":{"第八章 异常/63.编写合适的异常信息.html":{"ref":"第八章 异常/63.编写合适的异常信息.html","tf":10}}}}}}}}}}}}},"5":{"docs":{},".":{"docs":{},"不":{"docs":{},"要":{"docs":{},"忽":{"docs":{},"略":{"docs":{},"异":{"docs":{},"常":{"docs":{"第八章 异常/65.不要忽略异常.html":{"ref":"第八章 异常/65.不要忽略异常.html","tf":10}}}}}}}}}},"6":{"docs":{},".":{"docs":{},"同":{"docs":{},"步":{"docs":{},"访":{"docs":{},"问":{"docs":{},"共":{"docs":{},"享":{"docs":{},"的":{"docs":{},"可":{"docs":{},"变":{"docs":{},"数":{"docs":{},"据":{"docs":{"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":10}}}}}}}}}}}}}}},"8":{"docs":{},".":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"和":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"优":{"docs":{},"于":{"docs":{},"创":{"docs":{},"建":{"docs":{},"线":{"docs":{},"程":{"docs":{"第九章 并发/68.executor和task优于创建线程.html":{"ref":"第九章 并发/68.executor和task优于创建线程.html","tf":10}}}}}}}}}}}}}}}}}}}}}}},"9":{"docs":{},".":{"docs":{},"优":{"docs":{},"先":{"docs":{},"使":{"docs":{},"用":{"docs":{},"提":{"docs":{},"供":{"docs":{},"的":{"docs":{},"并":{"docs":{},"发":{"docs":{},"工":{"docs":{},"具":{"docs":{"第九章 并发/69.优先使用提供的并发工具.html":{"ref":"第九章 并发/69.优先使用提供的并发工具.html","tf":10}}}}}}}}}}}}}}},"docs":{},".":{"0":{"0":{"0":{"0":{"0":{"0":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"2":{"7":{"docs":{},"e":{"7":{"docs":{},")":{"docs":{},",":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}},"docs":{}}},"docs":{}},"5":{"2":{"docs":{},"e":{"6":{"docs":{},")":{"docs":{},",":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}},"docs":{}}},"docs":{}},"docs":{}},"2":{"3":{"1":{"5":{"6":{"4":{"1":{"2":{"docs":{},"e":{"2":{"3":{"docs":{},";":{"docs":{"第三章 类和接口/19.接口只用于定义类型.html":{"ref":"第三章 类和接口/19.接口只用于定义类型.html","tf":0.02702702702702703}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"3":{"7":{"8":{"docs":{},"e":{"6":{"docs":{},")":{"docs":{},",":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}},"docs":{}}},"docs":{}},"docs":{}},"6":{"7":{"3":{"0":{"0":{"docs":{},"e":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"消":{"docs":{},"除":{"docs":{},"过":{"docs":{},"期":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"引":{"docs":{},"用":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":10}}}}}}}}}}}},")":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909}}}},"7":{"0":{"docs":{},".":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"性":{"docs":{},"的":{"docs":{},"文":{"docs":{},"档":{"docs":{},"化":{"docs":{"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":10}}}}}}}}}}}}},"1":{"docs":{},".":{"docs":{},"慎":{"docs":{},"用":{"docs":{},"延":{"docs":{},"迟":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":10}}}}}}}}}}},"2":{"docs":{},".":{"docs":{},"不":{"docs":{},"要":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"于":{"docs":{},"线":{"docs":{},"程":{"docs":{},"调":{"docs":{},"度":{"docs":{},"器":{"docs":{"第九章 并发/72.不要依赖于线程调度器.html":{"ref":"第九章 并发/72.不要依赖于线程调度器.html","tf":10}}}}}}}}}}}}}},"3":{"docs":{},".":{"docs":{},"避":{"docs":{},"免":{"docs":{},"使":{"docs":{},"用":{"docs":{},"线":{"docs":{},"程":{"docs":{},"组":{"docs":{"第九章 并发/73.避免使用线程组.html":{"ref":"第九章 并发/73.避免使用线程组.html","tf":10}}}}}}}}}}},"4":{"docs":{},".":{"docs":{},"谨":{"docs":{},"慎":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"接":{"docs":{},"口":{"docs":{"第十章 序列化/74.谨慎的实现Serializable接口.html":{"ref":"第十章 序列化/74.谨慎的实现Serializable接口.html","tf":10}}}}}}}}}}}}}}}}}}}}}}},"5":{"docs":{},".":{"8":{"9":{"0":{"3":{"8":{"3":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"考":{"docs":{},"虑":{"docs":{},"使":{"docs":{},"用":{"docs":{},"自":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"形":{"docs":{},"式":{"docs":{"第十章 序列化/75.考虑使用自定义的序列化形式.html":{"ref":"第十章 序列化/75.考虑使用自定义的序列化形式.html","tf":10}}}}}}}}}}}}}}}}},"6":{"docs":{},".":{"docs":{},"保":{"docs":{},"护":{"docs":{},"性":{"docs":{},"地":{"docs":{},"编":{"docs":{},"写":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"方":{"docs":{},"法":{"docs":{"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":10}}}}}}}}}}}}}}}}}}}}}},"7":{"docs":{},".":{"docs":{},"单":{"docs":{},"例":{"docs":{},"模":{"docs":{},"式":{"docs":{},"，":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"类":{"docs":{},"型":{"docs":{},"优":{"docs":{},"先":{"docs":{},"于":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":10}}}}}}}}}}}}}}}}}}}}}}}}}},"8":{"docs":{},".":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"用":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"代":{"docs":{},"理":{"docs":{},"代":{"docs":{},"替":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"实":{"docs":{},"例":{"docs":{"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":10}}}}}}}}}}}}}}}}}}},"docs":{},")":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909}}},".":{"1":{"4":{"9":{"docs":{},"e":{"7":{"docs":{},")":{"docs":{},",":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{},"避":{"docs":{},"免":{"docs":{},"使":{"docs":{},"用":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{"第一章 创建和销毁对象/7.避免使用finalize方法.html":{"ref":"第一章 创建和销毁对象/7.避免使用finalize方法.html","tf":10}}}}}}}}}}}}}}}}}}}},"8":{"docs":{},".":{"0":{"0":{"0":{"0":{"0":{"0":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"覆":{"docs":{},"盖":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"方":{"docs":{},"法":{"docs":{},"请":{"docs":{},"遵":{"docs":{},"守":{"docs":{},"通":{"docs":{},"用":{"docs":{},"规":{"docs":{},"定":{"docs":{"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html":{"ref":"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html","tf":10}}}}}}}}}}}}}}}}}}}},";":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}},"9":{"docs":{},".":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"时":{"docs":{},"要":{"docs":{},"同":{"docs":{},"时":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":10}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.02702702702702703},"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.019417475728155338},"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.01818181818181818},"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.047619047619047616},"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.027522935779816515},"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.02142857142857143},"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.03875968992248062},"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.008695652173913044},"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.014388489208633094},"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.053763440860215055},"第七章 通用程序设计/56.遵守普遍接受的命名规则.html":{"ref":"第七章 通用程序设计/56.遵守普遍接受的命名规则.html","tf":0.02857142857142857},"第八章 异常/57.只针对异常的情况才使用异常.html":{"ref":"第八章 异常/57.只针对异常的情况才使用异常.html","tf":0.043478260869565216},"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.032},"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.05}},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":10.5}}}}}}}},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.015503875968992248}},"e":{"docs":{},")":{"docs":{},"：":{"docs":{},"这":{"docs":{},"种":{"docs":{},"接":{"docs":{},"口":{"docs":{},"不":{"docs":{},"包":{"docs":{},"含":{"docs":{},"任":{"docs":{},"何":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"它":{"docs":{},"只":{"docs":{},"包":{"docs":{},"含":{"docs":{},"静":{"docs":{},"态":{"docs":{},"的":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"域":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"域":{"docs":{},"都":{"docs":{},"导":{"docs":{},"出":{"docs":{},"一":{"docs":{},"个":{"docs":{},"常":{"docs":{},"量":{"docs":{},"。":{"docs":{"第三章 类和接口/19.接口只用于定义类型.html":{"ref":"第三章 类和接口/19.接口只用于定义类型.html","tf":0.02702702702702703}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"（":{"docs":{},"j":{"docs":{},"n":{"docs":{},"i":{"docs":{},"）":{"docs":{},"允":{"docs":{},"许":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"应":{"docs":{},"用":{"docs":{},"程":{"docs":{},"序":{"docs":{},"调":{"docs":{},"用":{"docs":{},"本":{"docs":{},"地":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"所":{"docs":{},"谓":{"docs":{},"本":{"docs":{},"地":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"指":{"docs":{},"用":{"docs":{},"c":{"docs":{},"或":{"docs":{},"者":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"编":{"docs":{},"写":{"docs":{},"的":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"本":{"docs":{},"地":{"docs":{},"方":{"docs":{},"法":{"docs":{},"在":{"docs":{},"本":{"docs":{},"地":{"docs":{},"语":{"docs":{},"言":{"docs":{},"中":{"docs":{},"可":{"docs":{},"以":{"docs":{},"执":{"docs":{},"行":{"docs":{},"任":{"docs":{},"意":{"docs":{},"的":{"docs":{},"计":{"docs":{},"算":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{},"到":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"程":{"docs":{},"序":{"docs":{},"设":{"docs":{},"计":{"docs":{},"语":{"docs":{},"言":{"docs":{},"中":{"docs":{},"。":{"docs":{},"使":{"docs":{},"用":{"docs":{},"本":{"docs":{},"地":{"docs":{},"方":{"docs":{},"法":{"docs":{},"来":{"docs":{},"访":{"docs":{},"问":{"docs":{},"特":{"docs":{},"定":{"docs":{},"于":{"docs":{},"平":{"docs":{},"台":{"docs":{},"的":{"docs":{},"机":{"docs":{},"制":{"docs":{},"是":{"docs":{},"合":{"docs":{},"法":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"随":{"docs":{},"着":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"平":{"docs":{},"台":{"docs":{},"的":{"docs":{},"不":{"docs":{},"断":{"docs":{},"成":{"docs":{},"熟":{"docs":{},"，":{"docs":{},"它":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"越":{"docs":{},"来":{"docs":{},"越":{"docs":{},"多":{"docs":{},"以":{"docs":{},"前":{"docs":{},"只":{"docs":{},"有":{"docs":{},"在":{"docs":{},"宿":{"docs":{},"主":{"docs":{},"平":{"docs":{},"台":{"docs":{},"上":{"docs":{},"才":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"的":{"docs":{},"特":{"docs":{},"性":{"docs":{},"。":{"docs":{},"那":{"docs":{},"么":{"docs":{},"，":{"docs":{},"本":{"docs":{},"地":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"否":{"docs":{},"应":{"docs":{},"该":{"docs":{},"像":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"方":{"docs":{},"法":{"docs":{},"一":{"docs":{},"样":{"docs":{},"方":{"docs":{},"便":{"docs":{},"使":{"docs":{},"用":{"docs":{},"，":{"docs":{},"有":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"注":{"docs":{},"意":{"docs":{},"事":{"docs":{},"项":{"docs":{},"？":{"docs":{"第七章 通用程序设计/54.慎用本地方法.html":{"ref":"第七章 通用程序设计/54.慎用本地方法.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"第八章 异常/58.选择合适的异常.html":{"ref":"第八章 异常/58.选择合适的异常.html","tf":0.030303030303030304},"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.016}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"2":{"0":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082}}}}}},"docs":{}},"4":{"2":{"docs":{},")":{"docs":{},"=":{"docs":{},"=":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"第七章 通用程序设计/49.基本类型优先于装箱基本类型.html":{"ref":"第七章 通用程序设计/49.基本类型优先于装箱基本类型.html","tf":0.05555555555555555}}}}}}},"，":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"装":{"docs":{},"箱":{"docs":{},"类":{"docs":{},"型":{"docs":{},"都":{"docs":{},"是":{"docs":{},"表":{"docs":{},"示":{"docs":{},"数":{"docs":{},"字":{"4":{"2":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"同":{"docs":{},"一":{"docs":{},"性":{"docs":{},"判":{"docs":{},"断":{"docs":{},"会":{"docs":{},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"；":{"docs":{"第七章 通用程序设计/49.基本类型优先于装箱基本类型.html":{"ref":"第七章 通用程序设计/49.基本类型优先于装箱基本类型.html","tf":0.05555555555555555}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888}},";":{"docs":{"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888}}}}}}},".":{"docs":{},".":{"docs":{},".":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},")":{"docs":{},"{":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012}}}}}}}}}}},"[":{"docs":{},"]":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.023255813953488372},"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.007751937984496124},"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.023809523809523808}},"e":{"docs":{},";":{"docs":{"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.03488372093023256},"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.023809523809523808}}},"）":{"docs":{},"相":{"docs":{},"关":{"docs":{},"联":{"docs":{},"。":{"docs":{},"在":{"docs":{},"非":{"docs":{},"静":{"docs":{},"态":{"docs":{},"成":{"docs":{},"员":{"docs":{},"类":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"方":{"docs":{},"法":{"docs":{},"内":{"docs":{},"部":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"调":{"docs":{},"用":{"docs":{},"外":{"docs":{},"围":{"docs":{},"实":{"docs":{},"例":{"docs":{},"上":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"利":{"docs":{},"用":{"docs":{},"修":{"docs":{},"饰":{"docs":{},"过":{"docs":{},"的":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"获":{"docs":{},"得":{"docs":{},"外":{"docs":{},"围":{"docs":{},"实":{"docs":{},"例":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"嵌":{"docs":{},"套":{"docs":{},"类":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"外":{"docs":{},"围":{"docs":{},"类":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"之":{"docs":{},"外":{"docs":{},"独":{"docs":{},"立":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"嵌":{"docs":{},"套":{"docs":{},"类":{"docs":{},"就":{"docs":{},"必":{"docs":{},"须":{"docs":{},"是":{"docs":{},"静":{"docs":{},"态":{"docs":{},"成":{"docs":{},"员":{"docs":{},"类":{"docs":{},"，":{"docs":{},"在":{"docs":{},"没":{"docs":{},"有":{"docs":{},"外":{"docs":{},"围":{"docs":{},"实":{"docs":{},"例":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"要":{"docs":{},"想":{"docs":{},"创":{"docs":{},"建":{"docs":{},"非":{"docs":{},"静":{"docs":{},"态":{"docs":{},"成":{"docs":{},"员":{"docs":{},"类":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"是":{"docs":{},"不":{"docs":{},"可":{"docs":{},"能":{"docs":{},"的":{"docs":{},"。":{"docs":{"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"所":{"docs":{},"产":{"docs":{},"生":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{},"；":{"docs":{"第八章 异常/58.选择合适的异常.html":{"ref":"第八章 异常/58.选择合适的异常.html","tf":0.030303030303030304}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"第八章 异常/58.选择合适的异常.html":{"ref":"第八章 异常/58.选择合适的异常.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505},"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":0.011111111111111112}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},"是":{"docs":{},"延":{"docs":{},"迟":{"docs":{},"到":{"docs":{},"需":{"docs":{},"要":{"docs":{},"域":{"docs":{},"的":{"docs":{},"值":{"docs":{},"时":{"docs":{},"才":{"docs":{},"将":{"docs":{},"它":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"的":{"docs":{},"这":{"docs":{},"种":{"docs":{},"行":{"docs":{},"为":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"永":{"docs":{},"远":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"这":{"docs":{},"个":{"docs":{},"值":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"域":{"docs":{},"就":{"docs":{},"永":{"docs":{},"远":{"docs":{},"不":{"docs":{},"会":{"docs":{},"被":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"。":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"既":{"docs":{},"适":{"docs":{},"用":{"docs":{},"于":{"docs":{},"静":{"docs":{},"态":{"docs":{},"域":{"docs":{},"，":{"docs":{},"也":{"docs":{},"适":{"docs":{},"用":{"docs":{},"于":{"docs":{},"实":{"docs":{},"例":{"docs":{},"域":{"docs":{},"。":{"docs":{},"和":{"docs":{},"大":{"docs":{},"多":{"docs":{},"数":{"docs":{},"优":{"docs":{},"化":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"不":{"docs":{},"成":{"docs":{},"熟":{"docs":{},"的":{"docs":{},"优":{"docs":{},"化":{"docs":{},"是":{"docs":{},"大":{"docs":{},"部":{"docs":{},"分":{"docs":{},"错":{"docs":{},"误":{"docs":{},"的":{"docs":{},"源":{"docs":{},"头":{"docs":{},"。":{"docs":{},"那":{"docs":{},"么":{"docs":{},"针":{"docs":{},"对":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"延":{"docs":{},"迟":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"有":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"可":{"docs":{},"靠":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"？":{"docs":{"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},",":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888}}}},";":{"docs":{"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{"第八章 异常/59.避免不必要的使用受检的异常.html":{"ref":"第八章 异常/59.避免不必要的使用受检的异常.html","tf":0.024390243902439025}}}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901}}}}}}},"\"":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"x":{"docs":{},"i":{"docs":{"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}}}}}}}},"{":{"docs":{"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901}}}}}}},"m":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.011627906976744186}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.011904761904761904}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936},"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505},"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713},"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.015503875968992248},"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082},"第十章 序列化/75.考虑使用自定义的序列化形式.html":{"ref":"第十章 序列化/75.考虑使用自定义的序列化形式.html","tf":0.02631578947368421},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.011834319526627219}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.007874015748031496}}}}}}},"s":{"docs":{},"b":{"docs":{},"a":{"docs":{},"b":{"docs":{},"y":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.012987012987012988}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}},"、":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"、":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"；":{"docs":{"第七章 通用程序设计/56.遵守普遍接受的命名规则.html":{"ref":"第七章 通用程序设计/56.遵守普遍接受的命名规则.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713},"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082},"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}},"{":{"docs":{"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082}}}}},"{":{"docs":{"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082}}}}}}}}}},"f":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},")":{"docs":{"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},")":{"docs":{"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.007874015748031496}},">":{"0":{"docs":{},")":{"docs":{},"{":{"docs":{"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"=":{"docs":{},"=":{"0":{"docs":{},")":{"docs":{},"{":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012}}}}},"docs":{}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"e":{"docs":{},"s":{"docs":{"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":{"ref":"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html","tf":0.019230769230769232}},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":{"ref":"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html","tf":0.019230769230769232}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":0.011111111111111112}}}}}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}}}}}},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.007874015748031496},"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.007874015748031496}}}}}}}}}}}},"\"":{"docs":{},"请":{"docs":{},"传":{"docs":{},"入":{"docs":{},"正":{"docs":{},"确":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"区":{"docs":{},"间":{"docs":{},"!":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"第八章 异常/58.选择合适的异常.html":{"ref":"第八章 异常/58.选择合适的异常.html","tf":0.030303030303030304}}}}}}}}}}}}}},"r":{"docs":{},"g":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"t":{"docs":{},"o":{"docs":{},"o":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第七章 通用程序设计/46.for-each循环优于传统的for循环.html":{"ref":"第七章 通用程序设计/46.for-each循环优于传统的for循环.html","tf":0.025}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"第七章 通用程序设计/46.for-each循环优于传统的for循环.html":{"ref":"第七章 通用程序设计/46.for-each循环优于传统的for循环.html","tf":0.025}}}},"，":{"docs":{},"更":{"docs":{},"好":{"docs":{},"的":{"docs":{},"做":{"docs":{},"法":{"docs":{},"是":{"docs":{},"编":{"docs":{},"写":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"来":{"docs":{},"描":{"docs":{},"述":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"集":{"docs":{},"，":{"docs":{},"通":{"docs":{},"常":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"私":{"docs":{},"有":{"docs":{},"的":{"docs":{},"静":{"docs":{},"态":{"docs":{},"成":{"docs":{},"员":{"docs":{},"类":{"docs":{},"；":{"docs":{"第七章 通用程序设计/50.尽量避免使用字符串.html":{"ref":"第七章 通用程序设计/50.尽量避免使用字符串.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.016}}}}},"o":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901}}}}}}}}}}}}}},"这":{"docs":{},"是":{"docs":{},"我":{"docs":{},"的":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.5}}}}}}}}}}},"两":{"docs":{},"种":{"docs":{},"普":{"docs":{},"遍":{"docs":{},"错":{"docs":{},"误":{"docs":{},"的":{"docs":{},"观":{"docs":{},"点":{"docs":{},"，":{"docs":{},"事":{"docs":{},"实":{"docs":{},"上":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"性":{"docs":{},"是":{"docs":{},"有":{"docs":{},"多":{"docs":{},"种":{"docs":{},"级":{"docs":{},"别":{"docs":{},"的":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"如":{"docs":{},"何":{"docs":{},"建":{"docs":{},"立":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"性":{"docs":{},"的":{"docs":{},"文":{"docs":{},"档":{"docs":{},"？":{"docs":{"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"更":{"docs":{},"加":{"docs":{},"简":{"docs":{},"洁":{"docs":{},"，":{"docs":{},"无":{"docs":{},"偿":{"docs":{},"的":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"机":{"docs":{},"制":{"docs":{},"，":{"docs":{},"绝":{"docs":{},"对":{"docs":{},"防":{"docs":{},"止":{"docs":{},"多":{"docs":{},"次":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"（":{"docs":{},"由":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"保":{"docs":{},"证":{"docs":{},"）":{"docs":{},"，":{"docs":{},"即":{"docs":{},"使":{"docs":{},"是":{"docs":{},"在":{"docs":{},"面":{"docs":{},"对":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"或":{"docs":{},"者":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"或":{"docs":{},"者":{"docs":{},"反":{"docs":{},"射":{"docs":{},"攻":{"docs":{},"击":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"保":{"docs":{},"证":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"。":{"docs":{},"这":{"docs":{},"已":{"docs":{},"成":{"docs":{},"为":{"docs":{},"实":{"docs":{},"现":{"docs":{"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"在":{"docs":{},"于":{"docs":{},"，":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"键":{"docs":{},"代":{"docs":{},"表":{"docs":{},"一":{"docs":{},"个":{"docs":{},"共":{"docs":{},"享":{"docs":{},"的":{"docs":{},"全":{"docs":{},"局":{"docs":{},"命":{"docs":{},"名":{"docs":{},"空":{"docs":{},"间":{"docs":{},"，":{"docs":{},"要":{"docs":{},"使":{"docs":{},"这":{"docs":{},"种":{"docs":{},"办":{"docs":{},"法":{"docs":{},"可":{"docs":{},"行":{"docs":{},"，":{"docs":{},"客":{"docs":{},"户":{"docs":{},"端":{"docs":{},"提":{"docs":{},"供":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"必":{"docs":{},"须":{"docs":{},"是":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"的":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"就":{"docs":{},"共":{"docs":{},"享":{"docs":{},"了":{"docs":{},"这":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"采":{"docs":{},"用":{"docs":{},"以":{"docs":{},"下":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"进":{"docs":{},"行":{"docs":{},"修":{"docs":{},"正":{"docs":{},"：":{"docs":{"第七章 通用程序设计/50.尽量避免使用字符串.html":{"ref":"第七章 通用程序设计/50.尽量避免使用字符串.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"式":{"docs":{},"要":{"docs":{},"求":{"docs":{},"在":{"docs":{},"高":{"docs":{},"层":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"中":{"docs":{},"，":{"docs":{},"捕":{"docs":{},"获":{"docs":{},"到":{"docs":{},"底":{"docs":{},"层":{"docs":{},"异":{"docs":{},"常":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"与":{"docs":{},"高":{"docs":{},"层":{"docs":{},"业":{"docs":{},"务":{"docs":{},"意":{"docs":{},"义":{"docs":{},"吻":{"docs":{},"合":{"docs":{},"的":{"docs":{},"高":{"docs":{},"层":{"docs":{},"异":{"docs":{},"常":{"docs":{},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"直":{"docs":{},"接":{"docs":{},"将":{"docs":{},"底":{"docs":{},"层":{"docs":{},"异":{"docs":{},"常":{"docs":{},"继":{"docs":{},"续":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"去":{"docs":{},"。":{"docs":{"第八章 异常/61.抛出与抽象相对应的异常.html":{"ref":"第八章 异常/61.抛出与抽象相对应的异常.html","tf":0.020833333333333332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"工":{"docs":{},"具":{"docs":{},"类":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"是":{"docs":{},"没":{"docs":{},"有":{"docs":{},"任":{"docs":{},"何":{"docs":{},"用":{"docs":{},"处":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"需":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"到":{"docs":{},"的":{"docs":{},"是":{"docs":{},"在":{"docs":{},"不":{"docs":{},"提":{"docs":{},"供":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"会":{"docs":{},"自":{"docs":{},"动":{"docs":{},"提":{"docs":{},"供":{"docs":{},"一":{"docs":{},"个":{"docs":{},"默":{"docs":{},"认":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"，":{"docs":{},"这":{"docs":{},"会":{"docs":{},"造":{"docs":{},"成":{"docs":{},"无":{"docs":{},"意":{"docs":{},"识":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"。":{"docs":{},"一":{"docs":{},"种":{"docs":{},"补":{"docs":{},"救":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"企":{"docs":{},"图":{"docs":{},"将":{"docs":{},"类":{"docs":{},"做":{"docs":{},"成":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{},"来":{"docs":{},"阻":{"docs":{},"止":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"并":{"docs":{},"不":{"docs":{},"可":{"docs":{},"靠":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"继":{"docs":{},"承":{"docs":{},"，":{"docs":{},"而":{"docs":{},"它":{"docs":{},"的":{"docs":{},"子":{"docs":{},"类":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"的":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"甚":{"docs":{},"至":{"docs":{},"会":{"docs":{},"误":{"docs":{},"导":{"docs":{},"用":{"docs":{},"户":{"docs":{},"以":{"docs":{},"为":{"docs":{},"这":{"docs":{},"个":{"docs":{},"类":{"docs":{},"就":{"docs":{},"是":{"docs":{},"做":{"docs":{},"出":{"docs":{},"来":{"docs":{},"让":{"docs":{},"用":{"docs":{},"户":{"docs":{},"来":{"docs":{},"继":{"docs":{},"承":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"。":{"docs":{},"针":{"docs":{},"对":{"docs":{},"这":{"docs":{},"种":{"docs":{},"工":{"docs":{},"具":{"docs":{},"类":{"docs":{},"应":{"docs":{},"该":{"docs":{},"如":{"docs":{},"何":{"docs":{},"避":{"docs":{},"免":{"docs":{},"被":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"？":{"docs":{"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html":{"ref":"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html","tf":0.03225806451612903}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"写":{"docs":{},"法":{"docs":{},"只":{"docs":{},"用":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"实":{"docs":{},"例":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"每":{"docs":{},"次":{"docs":{},"都":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"，":{"docs":{},"而":{"docs":{},"且":{"docs":{},"，":{"docs":{},"它":{"docs":{},"可":{"docs":{},"以":{"docs":{},"保":{"docs":{},"证":{"docs":{},"在":{"docs":{},"所":{"docs":{},"有":{"docs":{},"同":{"docs":{},"一":{"docs":{},"台":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"上":{"docs":{},"运":{"docs":{},"行":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"只":{"docs":{},"要":{"docs":{},"它":{"docs":{},"们":{"docs":{},"包":{"docs":{},"含":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"字":{"docs":{},"面":{"docs":{},"量":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"保":{"docs":{},"证":{"docs":{},"该":{"docs":{},"对":{"docs":{},"象":{"docs":{},"会":{"docs":{},"被":{"docs":{},"重":{"docs":{},"用":{"docs":{},"。":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.006493506493506494}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"标":{"docs":{},"签":{"docs":{},"类":{"docs":{},"（":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}}}},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"只":{"docs":{},"在":{"docs":{},"源":{"docs":{},"代":{"docs":{},"码":{"docs":{},"级":{"docs":{},"别":{"docs":{},"保":{"docs":{},"留":{"docs":{},"，":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"就":{"docs":{},"会":{"docs":{},"被":{"docs":{},"忽":{"docs":{},"略":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}},"将":{"docs":{},"被":{"docs":{},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{},"保":{"docs":{},"留":{"docs":{},",":{"docs":{},"所":{"docs":{},"以":{"docs":{},"他":{"docs":{},"们":{"docs":{},"能":{"docs":{},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"被":{"docs":{},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{},"或":{"docs":{},"其":{"docs":{},"他":{"docs":{},"使":{"docs":{},"用":{"docs":{},"反":{"docs":{},"射":{"docs":{},"机":{"docs":{},"制":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"所":{"docs":{},"读":{"docs":{},"取":{"docs":{},"和":{"docs":{},"使":{"docs":{},"用":{"docs":{},".":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"被":{"docs":{},"保":{"docs":{},"留":{"docs":{},",":{"docs":{},"在":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"文":{"docs":{},"件":{"docs":{},"中":{"docs":{},"存":{"docs":{},"在":{"docs":{},",":{"docs":{},"但":{"docs":{},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{},"将":{"docs":{},"会":{"docs":{},"忽":{"docs":{},"略":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"采":{"docs":{},"用":{"docs":{},"对":{"docs":{},"象":{"docs":{},"实":{"docs":{},"例":{"docs":{},"作":{"docs":{},"为":{"docs":{},"授":{"docs":{},"权":{"docs":{},"键":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"就":{"docs":{},"能":{"docs":{},"够":{"docs":{},"保":{"docs":{},"证":{"docs":{},"全":{"docs":{},"局":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"。":{"docs":{},"事":{"docs":{},"实":{"docs":{},"上":{"docs":{},"，":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"也":{"docs":{},"是":{"docs":{},"采":{"docs":{},"用":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"将":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"实":{"docs":{},"例":{"docs":{},"作":{"docs":{},"为":{"docs":{},"了":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"的":{"docs":{},"键":{"docs":{},"。":{"docs":{"第七章 通用程序设计/50.尽量避免使用字符串.html":{"ref":"第七章 通用程序设计/50.尽量避免使用字符串.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"个":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{},"是":{"docs":{},"类":{"docs":{},"层":{"docs":{},"次":{"docs":{},"的":{"docs":{},"根":{"docs":{},"；":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}}}}}}},"类":{"docs":{},"层":{"docs":{},"次":{"docs":{},"纠":{"docs":{},"正":{"docs":{},"了":{"docs":{},"前":{"docs":{},"面":{"docs":{},"提":{"docs":{},"到":{"docs":{},"过":{"docs":{},"的":{"docs":{},"标":{"docs":{},"签":{"docs":{},"类":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"缺":{"docs":{},"点":{"docs":{},"：":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"本":{"docs":{},"意":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"常":{"docs":{},"量":{"docs":{},"在":{"docs":{},"类":{"docs":{},"中":{"docs":{},"的":{"docs":{},"序":{"docs":{},"号":{"docs":{},"来":{"docs":{},"表":{"docs":{},"示":{"docs":{},"每":{"docs":{},"种":{"docs":{},"音":{"docs":{},"乐":{"docs":{},"类":{"docs":{},"型":{"docs":{},"演":{"docs":{},"奏":{"docs":{},"的":{"docs":{},"人":{"docs":{},"数":{"docs":{},"。":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"这":{"docs":{},"个":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"不":{"docs":{},"错":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"维":{"docs":{},"护":{"docs":{},"起":{"docs":{},"来":{"docs":{},"就":{"docs":{},"像":{"docs":{},"一":{"docs":{},"场":{"docs":{},"噩":{"docs":{},"梦":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"常":{"docs":{},"量":{"docs":{},"重":{"docs":{},"新":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"m":{"docs":{},"u":{"docs":{},"s":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"方":{"docs":{},"法":{"docs":{},"就":{"docs":{},"会":{"docs":{},"遭":{"docs":{},"到":{"docs":{},"破":{"docs":{},"坏":{"docs":{},"。":{"docs":{},"好":{"docs":{},"的":{"docs":{},"做":{"docs":{},"法":{"docs":{},"应":{"docs":{},"该":{"docs":{},"是":{"docs":{},"：":{"docs":{},"永":{"docs":{},"远":{"docs":{},"不":{"docs":{},"要":{"docs":{},"根":{"docs":{},"据":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"的":{"docs":{},"序":{"docs":{},"号":{"docs":{},"导":{"docs":{},"出":{"docs":{},"与":{"docs":{},"它":{"docs":{},"有":{"docs":{},"关":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"要":{"docs":{},"将":{"docs":{},"它":{"docs":{},"保":{"docs":{},"存":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"实":{"docs":{},"例":{"docs":{},"中":{"docs":{},"：":{"docs":{"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.016666666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"段":{"docs":{},"代":{"docs":{},"码":{"docs":{},"简":{"docs":{},"洁":{"docs":{},"而":{"docs":{},"清":{"docs":{},"楚":{"docs":{},"，":{"docs":{},"没":{"docs":{},"有":{"docs":{},"包":{"docs":{},"含":{"docs":{},"在":{"docs":{},"原":{"docs":{},"来":{"docs":{},"的":{"docs":{},"版":{"docs":{},"本":{"docs":{},"中":{"docs":{},"所":{"docs":{},"见":{"docs":{},"到":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"样":{"docs":{},"本":{"docs":{},"代":{"docs":{},"码":{"docs":{},"；":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"看":{"docs":{},"上":{"docs":{},"去":{"docs":{},"没":{"docs":{},"有":{"docs":{},"什":{"docs":{},"么":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"本":{"docs":{},"意":{"docs":{},"以":{"docs":{},"为":{"docs":{},"是":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"d":{"docs":{},"被":{"docs":{},"构":{"docs":{},"造":{"docs":{},"后":{"docs":{},"，":{"docs":{},"状":{"docs":{},"态":{"docs":{},"是":{"docs":{},"不":{"docs":{},"会":{"docs":{},"被":{"docs":{},"改":{"docs":{},"变":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"由":{"docs":{},"于":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"是":{"docs":{},"可":{"docs":{},"变":{"docs":{},"的":{"docs":{},"，":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"d":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"也":{"docs":{},"是":{"docs":{},"会":{"docs":{},"被":{"docs":{},"改":{"docs":{},"变":{"docs":{},"的":{"docs":{},"，":{"docs":{},"如":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"使":{"docs":{},"用":{"docs":{},"：":{"docs":{"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"样":{"docs":{},"，":{"docs":{},"在":{"docs":{},"传":{"docs":{},"递":{"docs":{},"具":{"docs":{},"体":{"docs":{},"策":{"docs":{},"略":{"docs":{},"类":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"将":{"docs":{},"参":{"docs":{},"数":{"docs":{},"类":{"docs":{},"型":{"docs":{},"定":{"docs":{},"为":{"docs":{},"接":{"docs":{},"口":{"docs":{},"类":{"docs":{},"型":{"docs":{},"(":{"docs":{},"使":{"docs":{},"用":{"docs":{},"接":{"docs":{},"口":{"docs":{},"做":{"docs":{},"类":{"docs":{},"型":{"docs":{},"定":{"docs":{},"义":{"docs":{},")":{"docs":{},"，":{"docs":{},"现":{"docs":{},"在":{"docs":{},"可":{"docs":{},"以":{"docs":{},"传":{"docs":{},"递":{"docs":{},"其":{"docs":{},"他":{"docs":{},"的":{"docs":{},"比":{"docs":{},"较":{"docs":{},"策":{"docs":{},"略":{"docs":{},"了":{"docs":{},",":{"docs":{"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"里":{"docs":{},"存":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"在":{"docs":{},"每":{"docs":{},"次":{"docs":{},"执":{"docs":{},"行":{"docs":{},"调":{"docs":{},"用":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"都":{"docs":{},"会":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"它":{"docs":{},"被":{"docs":{},"重":{"docs":{},"复":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"那":{"docs":{},"就":{"docs":{},"应":{"docs":{},"该":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"将":{"docs":{},"函":{"docs":{},"数":{"docs":{},"对":{"docs":{},"象":{"docs":{},"存":{"docs":{},"储":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"私":{"docs":{},"有":{"docs":{},"的":{"docs":{},"静":{"docs":{},"态":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"域":{"docs":{},"里":{"docs":{},"并":{"docs":{},"重":{"docs":{},"用":{"docs":{},"它":{"docs":{},"。":{"docs":{},"这":{"docs":{},"样":{"docs":{},"做":{"docs":{},"的":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"好":{"docs":{},"处":{"docs":{},"就":{"docs":{},"是":{"docs":{},"为":{"docs":{},"这":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"对":{"docs":{},"象":{"docs":{},"取":{"docs":{},"一":{"docs":{},"个":{"docs":{},"有":{"docs":{},"意":{"docs":{},"义":{"docs":{},"的":{"docs":{},"声":{"docs":{},"明":{"docs":{},"。":{"docs":{"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"进":{"docs":{},"行":{"docs":{},"保":{"docs":{},"护":{"docs":{},"性":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"！":{"docs":{"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}}}}}}}}}},"些":{"docs":{},"注":{"docs":{},"解":{"docs":{},"可":{"docs":{},"以":{"docs":{},"提":{"docs":{},"高":{"docs":{},"这":{"docs":{},"些":{"docs":{},"工":{"docs":{},"具":{"docs":{},"提":{"docs":{},"供":{"docs":{},"的":{"docs":{},"诊":{"docs":{},"断":{"docs":{},"信":{"docs":{},"息":{"docs":{},"的":{"docs":{},"质":{"docs":{},"量":{"docs":{},"。":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}}},"习":{"docs":{},"惯":{"docs":{},"用":{"docs":{},"法":{"docs":{},"要":{"docs":{},"好":{"docs":{},"于":{"docs":{},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"循":{"docs":{},"环":{"docs":{},"，":{"docs":{},"但":{"docs":{},"也":{"docs":{},"不":{"docs":{},"完":{"docs":{},"美":{"docs":{},"。":{"docs":{},"代":{"docs":{},"迭":{"docs":{},"器":{"docs":{},"与":{"docs":{},"索":{"docs":{},"引":{"docs":{},"都":{"docs":{},"有":{"docs":{},"些":{"docs":{},"混":{"docs":{},"乱":{"docs":{},"。":{"docs":{},"而":{"docs":{},"且":{"docs":{},"，":{"docs":{},"它":{"docs":{},"们":{"docs":{},"还":{"docs":{},"可":{"docs":{},"能":{"docs":{},"引":{"docs":{},"起":{"docs":{},"错":{"docs":{},"误":{"docs":{},"。":{"docs":{},"在":{"docs":{},"上":{"docs":{},"面":{"docs":{},"的":{"docs":{},"循":{"docs":{},"环":{"docs":{},"中":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"与":{"docs":{},"索":{"docs":{},"引":{"docs":{},"都":{"docs":{},"出":{"docs":{},"现":{"docs":{},"了":{"docs":{},"三":{"docs":{},"次":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"地":{"docs":{},"方":{"docs":{},"可":{"docs":{},"能":{"docs":{},"带":{"docs":{},"来":{"docs":{},"错":{"docs":{},"误":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"的":{"docs":{},"确":{"docs":{},"出":{"docs":{},"现":{"docs":{},"了":{"docs":{},"这":{"docs":{},"种":{"docs":{},"错":{"docs":{},"误":{"docs":{},"，":{"docs":{},"却":{"docs":{},"无":{"docs":{},"法":{"docs":{},"保":{"docs":{},"证":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"能":{"docs":{},"捕":{"docs":{},"获":{"docs":{},"到":{"docs":{},"这":{"docs":{},"些":{"docs":{},"错":{"docs":{},"误":{"docs":{},"。":{"docs":{},"那":{"docs":{},"么":{"docs":{},"，":{"docs":{},"在":{"docs":{},"集":{"docs":{},"合":{"docs":{},"和":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"中":{"docs":{},"优":{"docs":{},"先":{"docs":{},"采":{"docs":{},"用":{"docs":{},"哪":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"？":{"docs":{"第七章 通用程序设计/46.for-each循环优于传统的for循环.html":{"ref":"第七章 通用程序设计/46.for-each循环优于传统的for循环.html","tf":0.025}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"条":{"docs":{},"原":{"docs":{},"则":{"docs":{},"同":{"docs":{},"样":{"docs":{},"适":{"docs":{},"用":{"docs":{},"于":{"docs":{},"受":{"docs":{},"检":{"docs":{},"异":{"docs":{},"常":{"docs":{},"和":{"docs":{},"未":{"docs":{},"受":{"docs":{},"检":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{},"，":{"docs":{},"不":{"docs":{},"管":{"docs":{},"异":{"docs":{},"常":{"docs":{},"代":{"docs":{},"表":{"docs":{},"了":{"docs":{},"可":{"docs":{},"预":{"docs":{},"见":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{},"条":{"docs":{},"件":{"docs":{},"，":{"docs":{},"还":{"docs":{},"是":{"docs":{},"编":{"docs":{},"程":{"docs":{},"错":{"docs":{},"误":{"docs":{},"，":{"docs":{},"用":{"docs":{},"空":{"docs":{},"的":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"块":{"docs":{},"忽":{"docs":{},"略":{"docs":{},"它":{"docs":{},"，":{"docs":{},"将":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"程":{"docs":{},"序":{"docs":{},"在":{"docs":{},"遇":{"docs":{},"到":{"docs":{},"错":{"docs":{},"误":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"悄":{"docs":{},"然":{"docs":{},"地":{"docs":{},"执":{"docs":{},"行":{"docs":{},"下":{"docs":{},"去":{"docs":{},"。":{"docs":{},"然":{"docs":{},"后":{"docs":{},"，":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"在":{"docs":{},"将":{"docs":{},"来":{"docs":{},"的":{"docs":{},"某":{"docs":{},"个":{"docs":{},"点":{"docs":{},"上":{"docs":{},"，":{"docs":{},"当":{"docs":{},"程":{"docs":{},"序":{"docs":{},"不":{"docs":{},"能":{"docs":{},"再":{"docs":{},"容":{"docs":{},"忍":{"docs":{},"与":{"docs":{},"错":{"docs":{},"误":{"docs":{},"源":{"docs":{},"明":{"docs":{},"显":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"时":{"docs":{},"，":{"docs":{},"它":{"docs":{},"就":{"docs":{},"会":{"docs":{},"让":{"docs":{},"系":{"docs":{},"统":{"docs":{},"失":{"docs":{},"败":{"docs":{},"。":{"docs":{"第八章 异常/65.不要忽略异常.html":{"ref":"第八章 异常/65.不要忽略异常.html","tf":0.0625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"，":{"docs":{},"私":{"docs":{},"有":{"docs":{},"锁":{"docs":{},"对":{"docs":{},"象":{"docs":{},"只":{"docs":{},"能":{"docs":{},"被":{"docs":{},"当":{"docs":{},"前":{"docs":{},"类":{"docs":{},"内":{"docs":{},"部":{"docs":{},"访":{"docs":{},"问":{"docs":{},"到":{"docs":{},"，":{"docs":{},"并":{"docs":{},"不":{"docs":{},"能":{"docs":{},"被":{"docs":{},"外":{"docs":{},"部":{"docs":{},"访":{"docs":{},"问":{"docs":{},"到":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"不":{"docs":{},"可":{"docs":{},"能":{"docs":{},"妨":{"docs":{},"碍":{"docs":{},"到":{"docs":{},"当":{"docs":{},"前":{"docs":{},"类":{"docs":{},"的":{"docs":{},"同":{"docs":{},"步":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"避":{"docs":{},"免":{"docs":{},"“":{"docs":{},"拒":{"docs":{},"绝":{"docs":{},"服":{"docs":{},"务":{"docs":{},"攻":{"docs":{},"击":{"docs":{},"”":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"只":{"docs":{},"适":{"docs":{},"合":{"docs":{},"“":{"docs":{},"无":{"docs":{},"条":{"docs":{},"件":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"”":{"docs":{},"级":{"docs":{},"别":{"docs":{},"，":{"docs":{},"并":{"docs":{},"不":{"docs":{},"能":{"docs":{},"适":{"docs":{},"用":{"docs":{},"于":{"docs":{},"“":{"docs":{},"有":{"docs":{},"条":{"docs":{},"件":{"docs":{},"性":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"”":{"docs":{},"的":{"docs":{},"级":{"docs":{},"别":{"docs":{},"，":{"docs":{},"有":{"docs":{},"条":{"docs":{},"件":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"级":{"docs":{},"别":{"docs":{},"，":{"docs":{},"必":{"docs":{},"须":{"docs":{},"在":{"docs":{},"文":{"docs":{},"档":{"docs":{},"中":{"docs":{},"说":{"docs":{},"明":{"docs":{},"，":{"docs":{},"在":{"docs":{},"调":{"docs":{},"用":{"docs":{},"方":{"docs":{},"法":{"docs":{},"时":{"docs":{},"应":{"docs":{},"该":{"docs":{},"获":{"docs":{},"得":{"docs":{},"哪":{"docs":{},"把":{"docs":{},"锁":{"docs":{},"。":{"docs":{"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"/":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.012422360248447204}},"/":{"2":{"docs":{},".":{"0":{"0":{"0":{"0":{"0":{"0":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.004968944099378882}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.03488372093023256},"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html":{"ref":"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html","tf":0.06451612903225806},"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.025974025974025976},"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.01834862385321101},"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.007142857142857143},"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.015503875968992248},"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.05555555555555555},"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.009937888198757764},"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.015151515151515152},"第七章 通用程序设计/46.for-each循环优于传统的for循环.html":{"ref":"第七章 通用程序设计/46.for-each循环优于传统的for循环.html","tf":0.025},"第八章 异常/59.避免不必要的使用受检的异常.html":{"ref":"第八章 异常/59.避免不必要的使用受检的异常.html","tf":0.07317073170731707},"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886},"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.019801980198019802},"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.047619047619047616},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}},"可":{"docs":{},"选":{"docs":{},"参":{"docs":{},"数":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.009009009009009009}},"的":{"docs":{},"默":{"docs":{},"认":{"docs":{},"值":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.009009009009009009}}}}}}}}}},"调":{"docs":{},"用":{"docs":{},"方":{"docs":{},"式":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.009009009009009009}}}}}},"或":{"docs":{},"者":{"docs":{},"被":{"docs":{},"反":{"docs":{},"射":{"docs":{},"攻":{"docs":{},"击":{"docs":{"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html":{"ref":"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html","tf":0.03225806451612903}}}}}}}}},"防":{"docs":{},"止":{"docs":{},"在":{"docs":{},"类":{"docs":{},"的":{"docs":{},"内":{"docs":{},"部":{"docs":{},"被":{"docs":{},"调":{"docs":{},"用":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html":{"ref":"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html","tf":0.03225806451612903}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.012048192771084338}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}},"i":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}},"假":{"docs":{},"设":{"docs":{},"可":{"docs":{},"以":{"docs":{},"创":{"docs":{},"建":{"docs":{},"参":{"docs":{},"数":{"docs":{},"化":{"docs":{},"类":{"docs":{},"型":{"docs":{},"数":{"docs":{},"组":{"docs":{"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888}}}}}}}}}}}}}}},"取":{"docs":{},"数":{"docs":{},"据":{"docs":{},"时":{"docs":{},"目":{"docs":{},"标":{"docs":{},"类":{"docs":{},"型":{"docs":{},"是":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"实":{"docs":{},"际":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"，":{"docs":{"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"因":{"docs":{},"此":{"docs":{},"就":{"docs":{},"会":{"docs":{},"出":{"docs":{},"现":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"进":{"docs":{},"行":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"会":{"docs":{},"擦":{"docs":{},"除":{"docs":{"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"由":{"docs":{},"于":{"docs":{},"数":{"docs":{},"组":{"docs":{},"是":{"docs":{},"协":{"docs":{},"变":{"docs":{},"的":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"赋":{"docs":{},"值":{"docs":{"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888}}}}}}}}}}}}}}},"类":{"docs":{},"型":{"docs":{},"信":{"docs":{},"息":{"docs":{},"，":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"可":{"docs":{},"以":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},"=":{"3":{"0":{"docs":{},"输":{"docs":{},"出":{"docs":{},"结":{"docs":{},"果":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}},"docs":{}},"docs":{}}}},"docs":{}}}}}},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.009937888198757764}}}}}}}},"输":{"docs":{},"入":{"2":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}},"docs":{}},"出":{"docs":{"第七章 通用程序设计/48.需要精确答案，请避免使用float和double.html":{"ref":"第七章 通用程序设计/48.需要精确答案，请避免使用float和double.html","tf":0.07142857142857142}},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012}}}}}}},"实":{"docs":{},"现":{"docs":{},"方":{"docs":{},"案":{"docs":{"第五章 枚举和注解/32.用EnumSet代替位域.html":{"ref":"第五章 枚举和注解/32.用EnumSet代替位域.html","tf":0.03125}}}}}},"客":{"docs":{},"户":{"docs":{},"端":{"docs":{},"调":{"docs":{},"用":{"docs":{},"该":{"docs":{},"方":{"docs":{},"法":{"docs":{},"为":{"docs":{"第五章 枚举和注解/32.用EnumSet代替位域.html":{"ref":"第五章 枚举和注解/32.用EnumSet代替位域.html","tf":0.03125}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.007874015748031496}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"o":{"docs":{},"c":{"docs":{"第八章 异常/59.避免不必要的使用受检的异常.html":{"ref":"第八章 异常/59.避免不必要的使用受检的异常.html","tf":0.024390243902439025}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{"第八章 异常/61.抛出与抽象相对应的异常.html":{"ref":"第八章 异常/61.抛出与抽象相对应的异常.html","tf":0.041666666666666664}}}}}},"*":{"docs":{},"*":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.006493506493506494},"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669},"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.03669724770642202},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.01775147928994083}}}}},"=":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.08108108108108109},"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.023255813953488372},"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.06493506493506493},"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.06796116504854369},"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.045454545454545456},"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.03968253968253968},"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html":{"ref":"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html","tf":0.05405405405405406},"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.01834862385321101},"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.014285714285714285},"第三章 类和接口/19.接口只用于定义类型.html":{"ref":"第三章 类和接口/19.接口只用于定义类型.html","tf":0.05405405405405406},"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.018072289156626505},"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.015503875968992248},"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.04918032786885246},"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.1111111111111111},"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.03850931677018633},"第五章 枚举和注解/32.用EnumSet代替位域.html":{"ref":"第五章 枚举和注解/32.用EnumSet代替位域.html","tf":0.03125},"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.06060606060606061},"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.02877697841726619},"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.05511811023622047},"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.043010752688172046},"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.021505376344086023},"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":{"ref":"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html","tf":0.038461538461538464},"第七章 通用程序设计/46.for-each循环优于传统的for循环.html":{"ref":"第七章 通用程序设计/46.for-each循环优于传统的for循环.html","tf":0.05},"第七章 通用程序设计/50.尽量避免使用字符串.html":{"ref":"第七章 通用程序设计/50.尽量避免使用字符串.html","tf":0.013333333333333334},"第七章 通用程序设计/56.遵守普遍接受的命名规则.html":{"ref":"第七章 通用程序设计/56.遵守普遍接受的命名规则.html","tf":0.02857142857142857},"第八章 异常/57.只针对异常的情况才使用异常.html":{"ref":"第八章 异常/57.只针对异常的情况才使用异常.html","tf":0.043478260869565216},"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.056},"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.05660377358490566},"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":0.06666666666666667},"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.039603960396039604},"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.011904761904761904},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.03550295857988166},"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.016666666666666666}},"=":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.019417475728155338},"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.03968253968253968},"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":{"ref":"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html","tf":0.019230769230769232},"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":0.03333333333333333},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.011834319526627219}}},"{":{"docs":{"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.011904761904761904}}}},"a":{"1":{"docs":{},",":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.03225806451612903}}},"}":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012}}}},"2":{"docs":{},",":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.021505376344086023}}},"}":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012}}}},"3":{"docs":{},",":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012}}},"}":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012}}}},"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.009009009009009009}}}}}},")":{"docs":{},"{":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.009009009009009009}}}},";":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.018018018018018018}}},"=":{"docs":{},"\"":{"docs":{},"\"":{"docs":{},";":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.009009009009009009}}}}}}}}}},"(":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.010714285714285714}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.010714285714285714}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.007142857142857143}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}},";":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},")":{"docs":{},"{":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.009009009009009009}}}},";":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.02702702702702703}}}}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html":{"ref":"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html","tf":0.03225806451612903},"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}},"\"":{"docs":{},"u":{"docs":{},"n":{"docs":{},"k":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.006493506493506494}}}}}},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},")":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.006493506493506494},"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713},"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082},"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441},"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547},"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.021505376344086023},"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.016}}}},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"!":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669},"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888}},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},"o":{"docs":{},"f":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},",":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},",":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},",":{"docs":{"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"4":{"2":{"docs":{},")":{"docs":{},";":{"docs":{"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888}}}}},"docs":{}},"docs":{},"\"":{"docs":{},"t":{"docs":{},"o":{"docs":{},"\"":{"docs":{},",":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},")":{"docs":{},"{":{"docs":{"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":{"ref":"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html","tf":0.019230769230769232}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.03278688524590164},"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888},"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.010752688172043012},"第七章 通用程序设计/52.通过接口引用对象.html":{"ref":"第七章 通用程序设计/52.通过接口引用对象.html","tf":0.047619047619047616}}},",":{"docs":{"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.010752688172043012}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},")":{"docs":{},";":{"docs":{"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":{"ref":"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html","tf":0.019230769230769232}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}},"e":{"docs":{},";":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.01818181818181818},"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.015873015873015872}}},",":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}}},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}},";":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.012048192771084338}},";":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}},"{":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}}},".":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909}},"w":{"docs":{},"u":{"docs":{},"l":{"docs":{},"f":{"docs":{},"[":{"docs":{},"w":{"docs":{},"u":{"docs":{},"l":{"docs":{},"f":{"7":{"2":{"docs":{},"]":{"docs":{"第七章 通用程序设计/55.谨慎的进行优化.html":{"ref":"第七章 通用程序设计/55.谨慎的进行优化.html","tf":0.038461538461538464}}}},"docs":{}},"docs":{}}}}}}}}}}},"\"":{"docs":{},"的":{"docs":{},"关":{"docs":{},"系":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"类":{"docs":{},"b":{"docs":{},"才":{"docs":{},"应":{"docs":{},"该":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"a":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"打":{"docs":{},"算":{"docs":{},"让":{"docs":{},"类":{"docs":{},"b":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"类":{"docs":{},"a":{"docs":{},"，":{"docs":{},"就":{"docs":{},"应":{"docs":{},"该":{"docs":{},"确":{"docs":{},"定":{"docs":{},"一":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"：":{"docs":{},"b":{"docs":{},"确":{"docs":{},"实":{"docs":{},"也":{"docs":{},"是":{"docs":{},"a":{"docs":{},"吗":{"docs":{},"？":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"能":{"docs":{},"确":{"docs":{},"定":{"docs":{},"答":{"docs":{},"案":{"docs":{},"是":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"的":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"b":{"docs":{},"就":{"docs":{},"不":{"docs":{},"应":{"docs":{},"该":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"a":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"答":{"docs":{},"案":{"docs":{},"是":{"docs":{},"否":{"docs":{},"定":{"docs":{},"的":{"docs":{},"，":{"docs":{},"通":{"docs":{},"常":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"b":{"docs":{},"应":{"docs":{},"该":{"docs":{},"包":{"docs":{},"含":{"docs":{},"a":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"私":{"docs":{},"有":{"docs":{},"实":{"docs":{},"例":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"暴":{"docs":{},"露":{"docs":{},"一":{"docs":{},"个":{"docs":{},"较":{"docs":{},"小":{"docs":{},"的":{"docs":{},"、":{"docs":{},"较":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"：":{"docs":{},"a":{"docs":{},"本":{"docs":{},"质":{"docs":{},"上":{"docs":{},"不":{"docs":{},"是":{"docs":{},"b":{"docs":{},"的":{"docs":{},"一":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"只":{"docs":{},"是":{"docs":{},"它":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"细":{"docs":{},"节":{"docs":{},"而":{"docs":{},"已":{"docs":{},"(":{"docs":{},"使":{"docs":{},"用":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"的":{"docs":{},"客":{"docs":{},"户":{"docs":{},"端":{"docs":{},"无":{"docs":{},"需":{"docs":{},"知":{"docs":{},"道":{"docs":{},")":{"docs":{},"。":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}},"v":{"docs":{},"o":{"docs":{},"g":{"docs":{},"a":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"_":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"第三章 类和接口/19.接口只用于定义类型.html":{"ref":"第三章 类和接口/19.接口只用于定义类型.html","tf":0.02702702702702703}}}}}}}}}}}}}}},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.012048192771084338},"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0037267080745341614},"第八章 异常/61.抛出与抽象相对应的异常.html":{"ref":"第八章 异常/61.抛出与抽象相对应的异常.html","tf":0.041666666666666664}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}},"e":{"docs":{},"_":{"docs":{},"f":{"docs":{},"u":{"docs":{},"j":{"docs":{},"i":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}},",":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"y":{"docs":{},"_":{"docs":{},"s":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}},";":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}}}}}},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}},",":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}},"y":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.01987577639751553}}}}}}}},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"第五章 枚举和注解/32.用EnumSet代替位域.html":{"ref":"第五章 枚举和注解/32.用EnumSet代替位域.html","tf":0.03125}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.011904761904761904}}}}}}}}},"n":{"docs":{},"n":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}}}}}}}}},"b":{"docs":{"第六章 方法/44.API需要编写文档注释.html":{"ref":"第六章 方法/44.API需要编写文档注释.html","tf":0.03333333333333333}},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},"{":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.009009009009009009}}}}},"e":{"docs":{},"r":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.018018018018018018}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.009009009009009009}}}}}},")":{"docs":{},"{":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.009009009009009009}}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},";":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.009009009009009009}}}}}}}}},"g":{"docs":{},"e":{"docs":{},";":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.009009009009009009}}}}}},"p":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},";":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.009009009009009009}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},";":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.009009009009009009}}}}}}}}}}}},"{":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.009009009009009009}}},"模":{"docs":{},"式":{"docs":{},"可":{"docs":{},"以":{"docs":{},"对":{"docs":{},"其":{"docs":{},"参":{"docs":{},"数":{"docs":{},"加":{"docs":{},"以":{"docs":{},"约":{"docs":{},"束":{"docs":{},"，":{"docs":{},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"方":{"docs":{},"法":{"docs":{},"可":{"docs":{},"以":{"docs":{},"检":{"docs":{},"验":{"docs":{},"这":{"docs":{},"些":{"docs":{},"约":{"docs":{},"束":{"docs":{},"条":{"docs":{},"件":{"docs":{},"，":{"docs":{},"将":{"docs":{},"参":{"docs":{},"数":{"docs":{},"从":{"docs":{},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"到":{"docs":{},"对":{"docs":{},"象":{"docs":{},"中":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"并":{"docs":{},"在":{"docs":{},"对":{"docs":{},"象":{"docs":{},"域":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"域":{"docs":{},"中":{"docs":{},"对":{"docs":{},"它":{"docs":{},"们":{"docs":{},"进":{"docs":{},"行":{"docs":{},"检":{"docs":{},"验":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"违":{"docs":{},"反":{"docs":{},"了":{"docs":{},"任":{"docs":{},"何":{"docs":{},"约":{"docs":{},"束":{"docs":{},"，":{"docs":{},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"方":{"docs":{},"法":{"docs":{},"就":{"docs":{},"应":{"docs":{},"该":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"。":{"docs":{},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"模":{"docs":{},"式":{"docs":{},"十":{"docs":{},"分":{"docs":{},"灵":{"docs":{},"活":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"利":{"docs":{},"用":{"docs":{},"单":{"docs":{},"个":{"docs":{},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"构":{"docs":{},"建":{"docs":{},"多":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"的":{"docs":{},"不":{"docs":{},"足":{"docs":{},"在":{"docs":{},"于":{"docs":{},"：":{"docs":{},"为":{"docs":{},"了":{"docs":{},"创":{"docs":{},"建":{"docs":{},"对":{"docs":{},"象":{"docs":{},"必":{"docs":{},"须":{"docs":{},"先":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"中":{"docs":{},"间":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"模":{"docs":{},"式":{"docs":{},"还":{"docs":{},"使":{"docs":{},"得":{"docs":{},"构":{"docs":{},"造":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"更":{"docs":{},"加":{"docs":{},"冗":{"docs":{},"长":{"docs":{},"。":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.009009009009009009}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.006493506493506494}}}},"s":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441}}}}}}},"c":{"docs":{},"k":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.016}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.016}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},")":{"docs":{},"还":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"如":{"docs":{},"果":{"docs":{},"改":{"docs":{},"进":{"docs":{},"后":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"类":{"docs":{},"被":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"了":{"docs":{},"，":{"docs":{},"它":{"docs":{},"的":{"docs":{},"i":{"docs":{},"s":{"docs":{},"b":{"docs":{},"a":{"docs":{},"b":{"docs":{},"y":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"方":{"docs":{},"法":{"docs":{},"永":{"docs":{},"远":{"docs":{},"不":{"docs":{},"会":{"docs":{},"被":{"docs":{},"调":{"docs":{},"用":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"就":{"docs":{},"没":{"docs":{},"有":{"docs":{},"必":{"docs":{},"要":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"两":{"docs":{},"个":{"docs":{},"静":{"docs":{},"态":{"docs":{},"域":{"docs":{},"了":{"docs":{},"。":{"docs":{},"通":{"docs":{},"过":{"docs":{},"延":{"docs":{},"迟":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"则":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"消":{"docs":{},"除":{"docs":{},"这":{"docs":{},"些":{"docs":{},"不":{"docs":{},"必":{"docs":{},"要":{"docs":{},"的":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"不":{"docs":{},"建":{"docs":{},"议":{"docs":{},"这":{"docs":{},"样":{"docs":{},"做":{"docs":{},"。":{"docs":{},"这":{"docs":{},"样":{"docs":{},"做":{"docs":{},"使":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"变":{"docs":{},"的":{"docs":{},"更":{"docs":{},"加":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"无":{"docs":{},"法":{"docs":{},"将":{"docs":{},"性":{"docs":{},"能":{"docs":{},"显":{"docs":{},"著":{"docs":{},"提":{"docs":{},"高":{"docs":{},"到":{"docs":{},"超":{"docs":{},"过":{"docs":{},"已":{"docs":{},"经":{"docs":{},"达":{"docs":{},"到":{"docs":{},"的":{"docs":{},"水":{"docs":{},"平":{"docs":{},"；":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.006493506493506494}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},")":{"docs":{},">":{"docs":{},"=":{"0":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.006493506493506494}}},"docs":{}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},")":{"docs":{},"在":{"docs":{},"i":{"docs":{},"s":{"docs":{},"b":{"docs":{},"a":{"docs":{},"b":{"docs":{},"y":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"每":{"docs":{},"次":{"docs":{},"被":{"docs":{},"调":{"docs":{},"用":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"都":{"docs":{},"会":{"docs":{},"新":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"z":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"和":{"docs":{},"两":{"docs":{},"个":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"实":{"docs":{},"例":{"docs":{},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"不":{"docs":{},"必":{"docs":{},"要":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"这":{"docs":{},"它":{"docs":{},"们":{"docs":{},"一":{"docs":{},"旦":{"docs":{},"被":{"docs":{},"创":{"docs":{},"建":{"docs":{},"即":{"docs":{},"无":{"docs":{},"需":{"docs":{},"改":{"docs":{},"变":{"docs":{},"了":{"docs":{},"。":{"docs":{},"下":{"docs":{},"面":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"用":{"docs":{},"静":{"docs":{},"态":{"docs":{},"的":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"器":{"docs":{},"的":{"docs":{},"版":{"docs":{},"本":{"docs":{},"，":{"docs":{},"避":{"docs":{},"免":{"docs":{},"了":{"docs":{},"这":{"docs":{},"种":{"docs":{},"效":{"docs":{},"率":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"。":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.006493506493506494}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},")":{"docs":{},">":{"docs":{},"=":{"0":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.006493506493506494}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.012987012987012988}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"n":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}}}}}}}}},"d":{"docs":{"第八章 异常/61.抛出与抽象相对应的异常.html":{"ref":"第八章 异常/61.抛出与抽象相对应的异常.html","tf":0.041666666666666664}}}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.012987012987012988},"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.04642857142857143},"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.024}}}}}},"m":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.006493506493506494}},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},";":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.006493506493506494}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},";":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.006493506493506494}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.012987012987012988}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.012987012987012988}}}}}}}}},"l":{"docs":{},"t":{"docs":{},"z":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"第三章 类和接口/19.接口只用于定义类型.html":{"ref":"第三章 类和接口/19.接口只用于定义类型.html","tf":0.02702702702702703}}}}}}}}}}}}}}}},".":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},";":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{"第五章 枚举和注解/32.用EnumSet代替位域.html":{"ref":"第五章 枚举和注解/32.用EnumSet代替位域.html","tf":0.03125}}}}},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"第七章 通用程序设计/46.for-each循环优于传统的for循环.html":{"ref":"第七章 通用程序设计/46.for-each循环优于传统的for循环.html","tf":0.025}}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"!":{"docs":{"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.011904761904761904}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886}}}}}}},"c":{"docs":{"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.010752688172043012},"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.018018018018018018},"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.023255813953488372},"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html":{"ref":"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html","tf":0.06451612903225806},"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.012987012987012988},"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669},"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909},"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936},"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html":{"ref":"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html","tf":0.02702702702702703},"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.01834862385321101},"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.017857142857142856},"第三章 类和接口/19.接口只用于定义类型.html":{"ref":"第三章 类和接口/19.接口只用于定义类型.html","tf":0.02702702702702703},"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.024096385542168676},"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.03875968992248062},"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.03278688524590164},"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441},"第五章 枚举和注解/32.用EnumSet代替位域.html":{"ref":"第五章 枚举和注解/32.用EnumSet代替位域.html","tf":0.0625},"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576},"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.014388489208633094},"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.007874015748031496},"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.021505376344086023},"第七章 通用程序设计/50.尽量避免使用字符串.html":{"ref":"第七章 通用程序设计/50.尽量避免使用字符串.html","tf":0.04},"第八章 异常/61.抛出与抽象相对应的异常.html":{"ref":"第八章 异常/61.抛出与抽象相对应的异常.html","tf":0.020833333333333332},"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":0.022222222222222223},"第十章 序列化/75.考虑使用自定义的序列化形式.html":{"ref":"第十章 序列化/75.考虑使用自定义的序列化形式.html","tf":0.02631578947368421},"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901},"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.011904761904761904},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.011834319526627219}},"）":{"docs":{},"有":{"docs":{},"着":{"docs":{},"许":{"docs":{},"多":{"docs":{},"的":{"docs":{},"缺":{"docs":{},"点":{"docs":{},"。":{"docs":{},"它":{"docs":{},"们":{"docs":{},"中":{"docs":{},"充":{"docs":{},"斥":{"docs":{},"着":{"docs":{},"样":{"docs":{},"板":{"docs":{},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"包":{"docs":{},"括":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"声":{"docs":{},"明":{"docs":{},"、":{"docs":{},"标":{"docs":{},"签":{"docs":{},"域":{"docs":{},"以":{"docs":{},"及":{"docs":{},"条":{"docs":{},"件":{"docs":{},"语":{"docs":{},"句":{"docs":{},"。":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"、":{"docs":{},"匿":{"docs":{},"名":{"docs":{},"类":{"docs":{},"（":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"y":{"docs":{},"m":{"docs":{"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082}}}}}}}}}}}},"非":{"docs":{},"静":{"docs":{},"态":{"docs":{},"成":{"docs":{},"员":{"docs":{},"类":{"docs":{},"（":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}},"。":{"docs":{},"嵌":{"docs":{},"套":{"docs":{},"类":{"docs":{},"有":{"docs":{},"四":{"docs":{},"种":{"docs":{},"：":{"docs":{},"静":{"docs":{},"态":{"docs":{},"成":{"docs":{},"员":{"docs":{},"类":{"docs":{},"（":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}},"那":{"docs":{},"么":{"docs":{},"，":{"docs":{},"在":{"docs":{},"什":{"docs":{},"么":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"使":{"docs":{},"用":{"docs":{},"应":{"docs":{},"该":{"docs":{},"使":{"docs":{},"用":{"docs":{},"哪":{"docs":{},"种":{"docs":{},"嵌":{"docs":{},"套":{"docs":{},"类":{"docs":{},"才":{"docs":{},"是":{"docs":{},"合":{"docs":{},"适":{"docs":{},"的":{"docs":{},"？":{"docs":{"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}},"除":{"docs":{},"了":{"docs":{},"第":{"docs":{},"一":{"docs":{},"种":{"docs":{},"之":{"docs":{},"外":{"docs":{},"，":{"docs":{},"其":{"docs":{},"他":{"docs":{},"三":{"docs":{},"种":{"docs":{},"都":{"docs":{},"被":{"docs":{},"称":{"docs":{},"为":{"docs":{},"内":{"docs":{},"部":{"docs":{},"类":{"docs":{},"（":{"docs":{},"i":{"docs":{},"n":{"docs":{},"n":{"docs":{"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{},"局":{"docs":{},"部":{"docs":{},"类":{"docs":{},"（":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082}}}}}}}}}},"提":{"docs":{},"供":{"docs":{},"服":{"docs":{},"务":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"嵌":{"docs":{},"套":{"docs":{},"类":{"docs":{},"将":{"docs":{},"来":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"用":{"docs":{},"于":{"docs":{},"其":{"docs":{},"他":{"docs":{},"的":{"docs":{},"某":{"docs":{},"个":{"docs":{},"环":{"docs":{},"境":{"docs":{},"中":{"docs":{},"，":{"docs":{},"它":{"docs":{},"就":{"docs":{},"应":{"docs":{},"该":{"docs":{},"是":{"docs":{},"顶":{"docs":{},"层":{"docs":{},"类":{"docs":{},"（":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"指":{"docs":{},"被":{"docs":{},"定":{"docs":{},"义":{"docs":{},"在":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"的":{"docs":{},"内":{"docs":{},"部":{"docs":{},"的":{"docs":{},"类":{"docs":{},"。":{"docs":{},"嵌":{"docs":{},"套":{"docs":{},"类":{"docs":{},"存":{"docs":{},"在":{"docs":{},"的":{"docs":{},"目":{"docs":{},"的":{"docs":{},"应":{"docs":{},"该":{"docs":{},"是":{"docs":{},"为":{"docs":{},"它":{"docs":{},"的":{"docs":{},"外":{"docs":{},"围":{"docs":{},"类":{"docs":{},"（":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}},"docs":{}}}}}}}}}}}}}}},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.010752688172043012}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.010752688172043012}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.010752688172043012}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"第七章 通用程序设计/50.尽量避免使用字符串.html":{"ref":"第七章 通用程序设计/50.尽量避免使用字符串.html","tf":0.013333333333333334}}}},"o":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"第八章 异常/58.选择合适的异常.html":{"ref":"第八章 异常/58.选择合适的异常.html","tf":0.030303030303030304},"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{"第八章 异常/58.选择合适的异常.html":{"ref":"第八章 异常/58.选择合适的异常.html","tf":0.030303030303030304}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"所":{"docs":{},"产":{"docs":{},"生":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{},"；":{"docs":{"第八章 异常/58.选择合适的异常.html":{"ref":"第八章 异常/58.选择合适的异常.html","tf":0.030303030303030304}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"第八章 异常/58.选择合适的异常.html":{"ref":"第八章 异常/58.选择合适的异常.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.011627906976744186},"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.011904761904761904}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.012987012987012988}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"z":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"z":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"g":{"docs":{},"m":{"docs":{},"t":{"docs":{},"\"":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"a":{"docs":{},"n":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},",":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.025974025974025976}}}}}}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669}}}}},"c":{"docs":{},"h":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}}}},"s":{"docs":{},"e":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.012048192771084338},"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.012422360248447204}},"而":{"docs":{},"导":{"docs":{},"致":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"失":{"docs":{},"败":{"docs":{},"的":{"docs":{},"可":{"docs":{},"能":{"docs":{},"；":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}}}}}}}}}},"t":{"docs":{"第四章 泛型/24.消除非受检警告.html":{"ref":"第四章 泛型/24.消除非受检警告.html","tf":0.07142857142857142}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.014388489208633094},"第八章 异常/57.只针对异常的情况才使用异常.html":{"ref":"第八章 异常/57.只针对异常的情况才使用异常.html","tf":0.043478260869565216}},"；":{"docs":{"第七章 通用程序设计/53.慎用反射机制.html":{"ref":"第七章 通用程序设计/53.慎用反射机制.html","tf":0.1}}},"块":{"docs":{},"中":{"docs":{},"反":{"docs":{},"而":{"docs":{},"阻":{"docs":{},"止":{"docs":{},"了":{"docs":{},"现":{"docs":{},"代":{"docs":{},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"一":{"docs":{},"些":{"docs":{},"优":{"docs":{},"化":{"docs":{},"操":{"docs":{},"作":{"docs":{},"；":{"docs":{"第八章 异常/57.只针对异常的情况才使用异常.html":{"ref":"第八章 异常/57.只针对异常的情况才使用异常.html","tf":0.043478260869565216}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"第八章 异常/59.避免不必要的使用受检的异常.html":{"ref":"第八章 异常/59.避免不必要的使用受检的异常.html","tf":0.024390243902439025}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},")":{"docs":{"第八章 异常/61.抛出与抽象相对应的异常.html":{"ref":"第八章 异常/61.抛出与抽象相对应的异常.html","tf":0.020833333333333332}},"{":{"docs":{"第八章 异常/61.抛出与抽象相对应的异常.html":{"ref":"第八章 异常/61.抛出与抽象相对应的异常.html","tf":0.020833333333333332}}}}}}}},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.010752688172043012},"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.03773584905660377}},"o":{"docs":{},"r":{"docs":{"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.011627906976744186},"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.011904761904761904}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"\"":{"docs":{},";":{"docs":{"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.010752688172043012}}}},"[":{"docs":{},"]":{"docs":{"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.010752688172043012}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.010752688172043012}}}}}}}}}},"s":{"docs":{},")":{"docs":{"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.010752688172043012}}},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{},"/":{"docs":{},"/":{"docs":{},"a":{"docs":{},"l":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":{"ref":"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html","tf":0.019230769230769232}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"m":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"在":{"docs":{},"使":{"docs":{},"用":{"docs":{},"重":{"docs":{},"载":{"docs":{},"是":{"docs":{},"应":{"docs":{},"该":{"docs":{},"注":{"docs":{},"意":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"问":{"docs":{},"题":{"docs":{},"？":{"docs":{"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"，":{"docs":{},"它":{"docs":{},"的":{"docs":{},"输":{"docs":{},"出":{"docs":{},"是":{"docs":{},"u":{"docs":{},"n":{"docs":{},"k":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}},"这":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"方":{"docs":{},"法":{"docs":{},"被":{"docs":{},"重":{"docs":{},"载":{"docs":{},"了":{"docs":{},"，":{"docs":{},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"调":{"docs":{},"用":{"docs":{},"哪":{"docs":{},"个":{"docs":{},"重":{"docs":{},"载":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"是":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"就":{"docs":{},"已":{"docs":{},"经":{"docs":{},"决":{"docs":{},"定":{"docs":{},"了":{"docs":{},"。":{"docs":{},"在":{"docs":{},"这":{"docs":{},"个":{"docs":{},"例":{"docs":{},"子":{"docs":{},"中":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"都":{"docs":{},"认":{"docs":{},"为":{"docs":{},"是":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"类":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"输":{"docs":{},"出":{"docs":{},"的":{"docs":{},"是":{"docs":{},"三":{"docs":{},"个":{"docs":{},"u":{"docs":{},"n":{"docs":{},"k":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"进":{"docs":{},"行":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"时":{"docs":{},"，":{"docs":{},"用":{"docs":{},"户":{"docs":{},"必":{"docs":{},"须":{"docs":{},"手":{"docs":{},"工":{"docs":{},"在":{"docs":{},"返":{"docs":{},"回":{"docs":{},"的":{"docs":{"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html":{"ref":"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html","tf":0.03225806451612903},"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.012987012987012988},"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}},":":{"docs":{},"用":{"docs":{},"于":{"docs":{},"描":{"docs":{},"述":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.011904761904761904}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"第四章 泛型/24.消除非受检警告.html":{"ref":"第四章 泛型/24.消除非受检警告.html","tf":0.07142857142857142}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"）":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"有":{"docs":{},"许":{"docs":{},"多":{"docs":{},"命":{"docs":{},"名":{"docs":{},"惯":{"docs":{},"例":{"docs":{},"包":{"docs":{},"含":{"docs":{},"在":{"docs":{},"《":{"docs":{},"t":{"docs":{},"h":{"docs":{"第七章 通用程序设计/56.遵守普遍接受的命名规则.html":{"ref":"第七章 通用程序设计/56.遵守普遍接受的命名规则.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"第八章 异常/59.避免不必要的使用受检的异常.html":{"ref":"第八章 异常/59.避免不必要的使用受检的异常.html","tf":0.04878048780487805}}}}}},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936},"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.031007751937984496}},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"p":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.015873015873015872}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"接":{"docs":{},"口":{"docs":{},"中":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"不":{"docs":{},"但":{"docs":{},"允":{"docs":{},"许":{"docs":{},"进":{"docs":{},"行":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"等":{"docs":{},"同":{"docs":{},"性":{"docs":{},"比":{"docs":{},"较":{"docs":{},"，":{"docs":{},"而":{"docs":{},"且":{"docs":{},"允":{"docs":{},"许":{"docs":{},"执":{"docs":{},"行":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"比":{"docs":{},"较":{"docs":{},"。":{"docs":{},"一":{"docs":{},"旦":{"docs":{},"实":{"docs":{},"现":{"docs":{},"了":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"接":{"docs":{},"口":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"跟":{"docs":{},"许":{"docs":{},"多":{"docs":{},"泛":{"docs":{},"型":{"docs":{},"方":{"docs":{},"法":{"docs":{},"以":{"docs":{},"及":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"于":{"docs":{},"该":{"docs":{},"接":{"docs":{},"口":{"docs":{},"的":{"docs":{},"集":{"docs":{},"合":{"docs":{},"实":{"docs":{},"现":{"docs":{},"类":{"docs":{},"进":{"docs":{},"行":{"docs":{},"协":{"docs":{},"作":{"docs":{},"。":{"docs":{},"实":{"docs":{},"现":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"方":{"docs":{},"法":{"docs":{},"有":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"规":{"docs":{},"范":{"docs":{},"？":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.031007751937984496}}}}},"t":{"docs":{"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.007751937984496124}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.007751937984496124}}}},",":{"docs":{"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.007751937984496124}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}},"n":{"docs":{"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"第七章 通用程序设计/50.尽量避免使用字符串.html":{"ref":"第七章 通用程序设计/50.尽量避免使用字符串.html","tf":0.013333333333333334}}}}}}},"t":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":0.03333333333333333}}}}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"n":{"docs":{"第七章 通用程序设计/56.遵守普遍接受的命名规则.html":{"ref":"第七章 通用程序设计/56.遵守普遍接受的命名规则.html","tf":0.02857142857142857}}}}}}},"d":{"docs":{},"e":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505},"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.007142857142857143}},";":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505},"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}}}},"p":{"docs":{},"i":{"docs":{"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901}}}}},";":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.01834862385321101}},"[":{"docs":{},"]":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"]":{"docs":{},";":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.01834862385321101}}}}},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}}}}}}}},"e":{"docs":{},"e":{"docs":{},"s":{"docs":{"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":{"ref":"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html","tf":0.019230769230769232}},"e":{"docs":{},"[":{"docs":{},"]":{"docs":{"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":{"ref":"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html","tf":0.038461538461538464}}}},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":{"ref":"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html","tf":0.019230769230769232}}}}}}}}}}}}},"c":{"docs":{},"k":{"docs":{"第八章 异常/59.避免不必要的使用受检的异常.html":{"ref":"第八章 异常/59.避免不必要的使用受检的异常.html","tf":0.024390243902439025},"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901}}}}}},")":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.02142857142857143},"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.010752688172043012}}},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.007142857142857143}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第七章 通用程序设计/46.for-each循环优于传统的for循环.html":{"ref":"第七章 通用程序设计/46.for-each循环优于传统的for循环.html","tf":0.025},"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886}}}}}}}}}}}}}},"i":{"docs":{},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.018072289156626505}},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}}},":":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"错":{"docs":{},"误":{"docs":{},"。":{"docs":{},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"会":{"docs":{},"禁":{"docs":{},"止":{"docs":{},"行":{"docs":{},"为":{"docs":{},"？":{"docs":{"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547},"第七章 通用程序设计/54.慎用本地方法.html":{"ref":"第七章 通用程序设计/54.慎用本地方法.html","tf":0.1},"第七章 通用程序设计/56.遵守普遍接受的命名规则.html":{"ref":"第七章 通用程序设计/56.遵守普遍接受的命名规则.html","tf":0.02857142857142857}},"b":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"模":{"docs":{},"式":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.009009009009009009}}}}}}}},".":{"docs":{},"i":{"docs":{},"o":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}}}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},";":{"docs":{"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.007874015748031496}}}}}}}}}}}}},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"其":{"docs":{},"他":{"docs":{},"更":{"docs":{},"好":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"来":{"docs":{},"定":{"docs":{},"义":{"docs":{},"能":{"docs":{},"表":{"docs":{},"示":{"docs":{},"多":{"docs":{},"种":{"docs":{},"风":{"docs":{},"格":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"单":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"类":{"docs":{},"型":{"docs":{},"：":{"docs":{},"子":{"docs":{},"类":{"docs":{},"型":{"docs":{},"化":{"docs":{},"。":{"docs":{},"标":{"docs":{},"签":{"docs":{},"类":{"docs":{},"正":{"docs":{},"是":{"docs":{},"类":{"docs":{},"层":{"docs":{},"次":{"docs":{},"的":{"docs":{},"一":{"docs":{},"种":{"docs":{},"简":{"docs":{},"单":{"docs":{},"效":{"docs":{},"仿":{"docs":{},"。":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"没":{"docs":{},"有":{"docs":{},"提":{"docs":{},"供":{"docs":{},"函":{"docs":{},"数":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"对":{"docs":{},"象":{"docs":{},"引":{"docs":{},"用":{"docs":{},"实":{"docs":{},"现":{"docs":{},"同":{"docs":{},"样":{"docs":{},"的":{"docs":{},"功":{"docs":{},"能":{"docs":{},"。":{"docs":{},"调":{"docs":{},"用":{"docs":{},"对":{"docs":{},"象":{"docs":{},"上":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"通":{"docs":{},"常":{"docs":{},"是":{"docs":{},"执":{"docs":{},"行":{"docs":{},"该":{"docs":{},"对":{"docs":{},"象":{"docs":{},"上":{"docs":{},"的":{"docs":{},"某":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{},"然":{"docs":{},"而":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"也":{"docs":{},"可":{"docs":{},"能":{"docs":{},"定":{"docs":{},"义":{"docs":{},"这":{"docs":{},"样":{"docs":{},"一":{"docs":{},"种":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"它":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"执":{"docs":{},"行":{"docs":{},"其":{"docs":{},"他":{"docs":{},"对":{"docs":{},"象":{"docs":{},"上":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"仅":{"docs":{},"仅":{"docs":{},"导":{"docs":{},"出":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"它":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"上":{"docs":{},"就":{"docs":{},"等":{"docs":{},"同":{"docs":{},"于":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"向":{"docs":{},"该":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"。":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"被":{"docs":{},"称":{"docs":{},"为":{"docs":{},"函":{"docs":{},"数":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"这":{"docs":{},"样":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"：":{"docs":{"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"类":{"docs":{},"型":{"docs":{},"由":{"docs":{},"两":{"docs":{},"部":{"docs":{},"分":{"docs":{},"组":{"docs":{},"成":{"docs":{},"，":{"docs":{},"包":{"docs":{},"含":{"docs":{},"基":{"docs":{},"本":{"docs":{},"类":{"docs":{},"型":{"docs":{},"（":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"）":{"docs":{},"，":{"docs":{},"如":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"、":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"和":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"，":{"docs":{},"和":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"（":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"第七章 通用程序设计/49.基本类型优先于装箱基本类型.html":{"ref":"第七章 通用程序设计/49.基本类型优先于装箱基本类型.html","tf":0.05555555555555555}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"平":{"docs":{},"台":{"docs":{},"建":{"docs":{},"立":{"docs":{},"了":{"docs":{},"一":{"docs":{},"套":{"docs":{},"很":{"docs":{},"好":{"docs":{},"的":{"docs":{},"命":{"docs":{},"名":{"docs":{},"惯":{"docs":{},"例":{"docs":{},"（":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"第七章 通用程序设计/56.遵守普遍接受的命名规则.html":{"ref":"第七章 通用程序设计/56.遵守普遍接受的命名规则.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"共":{"docs":{},"有":{"docs":{},"三":{"docs":{},"种":{"docs":{},"可":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"结":{"docs":{},"构":{"docs":{},"：":{"docs":{},"受":{"docs":{},"检":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{},"、":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"异":{"docs":{},"常":{"docs":{},"（":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"第八章 异常/58.选择合适的异常.html":{"ref":"第八章 异常/58.选择合适的异常.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"异":{"docs":{},"常":{"docs":{},"体":{"docs":{},"系":{"docs":{},"中":{"docs":{},"一":{"docs":{},"共":{"docs":{},"有":{"docs":{},"三":{"docs":{},"种":{"docs":{},"异":{"docs":{},"常":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"根":{"docs":{},"据":{"docs":{},"具":{"docs":{},"体":{"docs":{},"的":{"docs":{},"使":{"docs":{},"用":{"docs":{},"场":{"docs":{},"景":{"docs":{},"选":{"docs":{},"择":{"docs":{},"合":{"docs":{},"适":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"胡":{"docs":{},"乱":{"docs":{},"使":{"docs":{},"用":{"docs":{},"。":{"docs":{"第八章 异常/58.选择合适的异常.html":{"ref":"第八章 异常/58.选择合适的异常.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"语":{"docs":{},"言":{"docs":{},"规":{"docs":{},"范":{"docs":{},"不":{"docs":{},"仅":{"docs":{},"不":{"docs":{},"保":{"docs":{},"证":{"docs":{},"终":{"docs":{},"结":{"docs":{},"方":{"docs":{},"法":{"docs":{},"被":{"docs":{},"及":{"docs":{},"时":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"而":{"docs":{},"且":{"docs":{},"根":{"docs":{},"本":{"docs":{},"就":{"docs":{},"不":{"docs":{},"保":{"docs":{},"证":{"docs":{},"它":{"docs":{},"们":{"docs":{},"会":{"docs":{},"被":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{},"当":{"docs":{},"一":{"docs":{},"个":{"docs":{},"程":{"docs":{},"序":{"docs":{},"终":{"docs":{},"结":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"某":{"docs":{},"些":{"docs":{},"已":{"docs":{},"经":{"docs":{},"无":{"docs":{},"法":{"docs":{},"访":{"docs":{},"问":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"上":{"docs":{},"的":{"docs":{},"终":{"docs":{},"结":{"docs":{},"方":{"docs":{},"法":{"docs":{},"却":{"docs":{},"根":{"docs":{},"本":{"docs":{},"没":{"docs":{},"有":{"docs":{},"被":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"完":{"docs":{},"全":{"docs":{},"可":{"docs":{},"能":{"docs":{},"的":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"结":{"docs":{},"论":{"docs":{},"就":{"docs":{},"是":{"docs":{},"：":{"docs":{},"不":{"docs":{},"应":{"docs":{},"该":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"终":{"docs":{},"结":{"docs":{},"方":{"docs":{},"法":{"docs":{},"来":{"docs":{},"更":{"docs":{},"新":{"docs":{},"重":{"docs":{},"要":{"docs":{},"的":{"docs":{},"持":{"docs":{},"久":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"终":{"docs":{},"结":{"docs":{},"方":{"docs":{},"法":{"docs":{},"来":{"docs":{},"释":{"docs":{},"放":{"docs":{},"共":{"docs":{},"享":{"docs":{},"资":{"docs":{},"源":{"docs":{},"（":{"docs":{},"比":{"docs":{},"如":{"docs":{},"，":{"docs":{},"数":{"docs":{},"据":{"docs":{},"库":{"docs":{},"）":{"docs":{},"上":{"docs":{},"的":{"docs":{},"永":{"docs":{},"久":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"很":{"docs":{},"容":{"docs":{},"易":{"docs":{},"让":{"docs":{},"整":{"docs":{},"个":{"docs":{},"分":{"docs":{},"布":{"docs":{},"式":{"docs":{},"系":{"docs":{},"统":{"docs":{},"跨":{"docs":{},"掉":{"docs":{},"。":{"docs":{"第一章 创建和销毁对象/7.避免使用finalize方法.html":{"ref":"第一章 创建和销毁对象/7.避免使用finalize方法.html","tf":0.06666666666666667}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"溢":{"docs":{},"出":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"返":{"docs":{},"回":{"docs":{},"一":{"docs":{},"个":{"docs":{},"负":{"docs":{},"值":{"docs":{},"。":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"i":{"docs":{},"t":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}},"e":{"docs":{},"r":{"docs":{},"(":{"1":{"docs":{},".":{"8":{"9":{"9":{"docs":{},"e":{"docs":{},"+":{"2":{"7":{"docs":{},",":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}},"docs":{}},"docs":{}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}}}}}},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}},".":{"docs":{},"u":{"docs":{},".":{"docs":{},"c":{"docs":{},"包":{"docs":{},"下":{"docs":{},"的":{"docs":{},"并":{"docs":{},"发":{"docs":{},"工":{"docs":{},"具":{"docs":{},"分":{"docs":{},"为":{"docs":{},"三":{"docs":{},"类":{"docs":{},"：":{"1":{"docs":{},".":{"docs":{},"负":{"docs":{},"责":{"docs":{},"管":{"docs":{},"理":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"框":{"docs":{},"架":{"docs":{},"；":{"2":{"docs":{},".":{"docs":{},"并":{"docs":{},"发":{"docs":{},"集":{"docs":{},"合":{"docs":{},"；":{"3":{"docs":{},".":{"docs":{},"同":{"docs":{},"步":{"docs":{},"器":{"docs":{},"。":{"docs":{},"其":{"docs":{},"中":{"docs":{},"，":{"docs":{},"负":{"docs":{},"责":{"docs":{},"管":{"docs":{},"理":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"在":{"docs":{},"第":{"6":{"8":{"docs":{},"条":{"docs":{},"已":{"docs":{},"经":{"docs":{},"说":{"docs":{},"过":{"docs":{},"，":{"docs":{},"不":{"docs":{},"再":{"docs":{},"单":{"docs":{},"独":{"docs":{},"描":{"docs":{},"述":{"docs":{},"。":{"docs":{"第九章 并发/69.优先使用提供的并发工具.html":{"ref":"第九章 并发/69.优先使用提供的并发工具.html","tf":0.1}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"跟":{"docs":{},"我":{"docs":{},"们":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"多":{"docs":{},"种":{"docs":{},"保":{"docs":{},"证":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"在":{"docs":{},"实":{"docs":{},"际":{"docs":{},"开":{"docs":{},"发":{"docs":{},"中":{"docs":{},"应":{"docs":{},"该":{"docs":{},"使":{"docs":{},"用":{"docs":{},"这":{"docs":{},"些":{"docs":{},"性":{"docs":{},"能":{"docs":{},"和":{"docs":{},"安":{"docs":{},"全":{"docs":{},"性":{"docs":{},"已":{"docs":{},"经":{"docs":{},"得":{"docs":{},"到":{"docs":{},"保":{"docs":{},"证":{"docs":{},"的":{"docs":{},"工":{"docs":{},"具":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"重":{"docs":{},"复":{"docs":{},"造":{"docs":{},"轮":{"docs":{},"子":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"很":{"docs":{},"难":{"docs":{},"保":{"docs":{},"证":{"docs":{},"安":{"docs":{},"全":{"docs":{},"性":{"docs":{},"。":{"docs":{},"比":{"docs":{},"如":{"docs":{},"，":{"docs":{},"在":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"“":{"docs":{},"生":{"docs":{},"产":{"docs":{},"者":{"docs":{"第九章 并发/69.优先使用提供的并发工具.html":{"ref":"第九章 并发/69.优先使用提供的并发工具.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.018018018018018018},"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.023255813953488372},"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html":{"ref":"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html","tf":0.03225806451612903},"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.006493506493506494},"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.019417475728155338},"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505},"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713},"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169},"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.023255813953488372},"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082},"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.04918032786885246},"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.041666666666666664},"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441},"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.06060606060606061},"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.07086614173228346},"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.053763440860215055},"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012},"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":{"ref":"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html","tf":0.019230769230769232},"第七章 通用程序设计/50.尽量避免使用字符串.html":{"ref":"第七章 通用程序设计/50.尽量避免使用字符串.html","tf":0.013333333333333334},"第七章 通用程序设计/52.通过接口引用对象.html":{"ref":"第七章 通用程序设计/52.通过接口引用对象.html","tf":0.09523809523809523},"第八章 异常/61.抛出与抽象相对应的异常.html":{"ref":"第八章 异常/61.抛出与抽象相对应的异常.html","tf":0.041666666666666664},"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.016},"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886},"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.07920792079207921},"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.011904761904761904},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.04142011834319527}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{"第八章 异常/58.选择合适的异常.html":{"ref":"第八章 异常/58.选择合适的异常.html","tf":0.030303030303030304}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669}}}},"p":{"docs":{},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}},"e":{"docs":{},"(":{"1":{"docs":{},".":{"0":{"2":{"4":{"docs":{},"e":{"docs":{},"+":{"2":{"6":{"docs":{},",":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}},"docs":{}},"docs":{}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}}}}}},"x":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.008}},"e":{"docs":{},"r":{"docs":{},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.008}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html":{"ref":"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html","tf":0.06451612903225806}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"(":{"9":{"docs":{},")":{"docs":{},",":{"docs":{"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.016666666666666666}}}}},"docs":{}},",":{"docs":{"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.016666666666666666}}}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669},"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":{"ref":"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html","tf":0.019230769230769232},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}},";":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576},"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":{"ref":"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html","tf":0.019230769230769232}}},")":{"docs":{"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":0.022222222222222223}},"{":{"docs":{"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":0.011111111111111112}}}}}},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}},"o":{"docs":{},"f":{"docs":{},"m":{"docs":{},"u":{"docs":{},"s":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"{":{"docs":{"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.03333333333333333}}}}},";":{"docs":{"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.03333333333333333}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"第十章 序列化/75.考虑使用自定义的序列化形式.html":{"ref":"第十章 序列化/75.考虑使用自定义的序列化形式.html","tf":0.02631578947368421}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082}}}}},"docs":{},"\"":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}},",":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}}},";":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.022727272727272728}}}}},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"第七章 通用程序设计/54.慎用本地方法.html":{"ref":"第七章 通用程序设计/54.慎用本地方法.html","tf":0.1}}}}}}},"p":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909},"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.009009009009009009}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}}}}}},")":{"docs":{},"{":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.009009009009009009}}}},";":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.018018018018018018}}},"=":{"docs":{},"\"":{"docs":{},"\"":{"docs":{},";":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.009009009009009009}}}}}}}}}}}}}}},"y":{"docs":{},"s":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"第三章 类和接口/19.接口只用于定义类型.html":{"ref":"第三章 类和接口/19.接口只用于定义类型.html","tf":0.02702702702702703}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"第三章 类和接口/19.接口只用于定义类型.html":{"ref":"第三章 类和接口/19.接口只用于定义类型.html","tf":0.02702702702702703}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.08108108108108109},"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.046511627906976744},"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html":{"ref":"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html","tf":0.03225806451612903},"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.025974025974025976},"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.038834951456310676},"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.02727272727272727},"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.023809523809523808},"第三章 类和接口/13.使类和成员的可访问性最小化.html":{"ref":"第三章 类和接口/13.使类和成员的可访问性最小化.html","tf":0.0625},"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html":{"ref":"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html","tf":0.02702702702702703},"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.03669724770642202},"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.010714285714285714},"第三章 类和接口/19.接口只用于定义类型.html":{"ref":"第三章 类和接口/19.接口只用于定义类型.html","tf":0.02702702702702703},"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.015503875968992248},"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082},"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082},"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.011180124223602485},"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.022727272727272728},"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.015748031496062992},"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":{"ref":"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html","tf":0.019230769230769232},"第七章 通用程序设计/50.尽量避免使用字符串.html":{"ref":"第七章 通用程序设计/50.尽量避免使用字符串.html","tf":0.02666666666666667},"第七章 通用程序设计/56.遵守普遍接受的命名规则.html":{"ref":"第七章 通用程序设计/56.遵守普遍接受的命名规则.html","tf":0.02857142857142857},"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.04},"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886},"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":0.044444444444444446},"第十章 序列化/75.考虑使用自定义的序列化形式.html":{"ref":"第十章 序列化/75.考虑使用自定义的序列化形式.html","tf":0.07894736842105263},"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.0297029702970297},"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.03571428571428571},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.05917159763313609},"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.016666666666666666}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"）":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"自":{"docs":{},"动":{"docs":{},"装":{"docs":{},"箱":{"docs":{},"和":{"docs":{},"拆":{"docs":{},"箱":{"docs":{},"机":{"docs":{},"制":{"docs":{},"，":{"docs":{},"会":{"docs":{},"使":{"docs":{},"得":{"docs":{},"在":{"docs":{},"实":{"docs":{},"际":{"docs":{},"开":{"docs":{},"发":{"docs":{},"中":{"docs":{},"基":{"docs":{},"本":{"docs":{},"类":{"docs":{},"型":{"docs":{},"和":{"docs":{},"装":{"docs":{},"箱":{"docs":{},"类":{"docs":{},"型":{"docs":{},"混":{"docs":{},"用":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"它":{"docs":{},"们":{"docs":{},"之":{"docs":{},"间":{"docs":{},"有":{"docs":{},"什":{"docs":{},"么":{"docs":{},"区":{"docs":{},"别":{"docs":{},"？":{"docs":{"第七章 通用程序设计/49.基本类型优先于装箱基本类型.html":{"ref":"第七章 通用程序设计/49.基本类型优先于装箱基本类型.html","tf":0.05555555555555555}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"f":{"docs":{},"a":{"docs":{},"v":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.011904761904761904}}}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.011627906976744186}}}}}},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}},";":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.01818181818181818},"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.015873015873015872}}},",":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}}},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}},")":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}}},";":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}}}}}}}}},"e":{"docs":{},"r":{"docs":{"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.011904761904761904}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.011627906976744186}}}}}}},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"访":{"docs":{},"问":{"docs":{},"级":{"docs":{},"别":{"docs":{"第三章 类和接口/13.使类和成员的可访问性最小化.html":{"ref":"第三章 类和接口/13.使类和成员的可访问性最小化.html","tf":0.0625}}}}}}}}}}}},"x":{"docs":{},"y":{"docs":{},"）":{"docs":{},"，":{"docs":{},"它":{"docs":{},"应":{"docs":{},"该":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"单":{"docs":{},"独":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"，":{"docs":{},"其":{"docs":{},"参":{"docs":{},"数":{"docs":{},"类":{"docs":{},"型":{"docs":{},"就":{"docs":{},"是":{"docs":{},"那":{"docs":{},"个":{"docs":{},"外":{"docs":{},"围":{"docs":{},"类":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"只":{"docs":{},"从":{"docs":{},"它":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"中":{"docs":{},"复":{"docs":{},"制":{"docs":{},"数":{"docs":{},"据":{"docs":{},"：":{"docs":{},"它":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"进":{"docs":{},"行":{"docs":{},"任":{"docs":{},"何":{"docs":{},"一":{"docs":{},"致":{"docs":{},"性":{"docs":{},"检":{"docs":{},"查":{"docs":{},"或":{"docs":{},"者":{"docs":{},"保":{"docs":{},"护":{"docs":{},"性":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"。":{"docs":{},"按":{"docs":{},"设":{"docs":{},"计":{"docs":{},"，":{"docs":{},"序":{"docs":{},"列":{"docs":{},"代":{"docs":{},"理":{"docs":{},"的":{"docs":{},"默":{"docs":{},"认":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"形":{"docs":{},"式":{"docs":{},"是":{"docs":{},"外":{"docs":{},"围":{"docs":{},"类":{"docs":{},"最":{"docs":{},"好":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"形":{"docs":{},"式":{"docs":{},"。":{"docs":{},"外":{"docs":{},"围":{"docs":{},"类":{"docs":{},"及":{"docs":{},"其":{"docs":{},"序":{"docs":{},"列":{"docs":{},"代":{"docs":{},"理":{"docs":{},"都":{"docs":{},"必":{"docs":{},"须":{"docs":{},"声":{"docs":{},"明":{"docs":{},"实":{"docs":{},"现":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"接":{"docs":{},"口":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"下":{"docs":{},"面":{"docs":{},"这":{"docs":{},"种":{"docs":{},"形":{"docs":{},"式":{"docs":{},"：":{"docs":{"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.05405405405405406},"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.05813953488372093},"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html":{"ref":"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html","tf":0.03225806451612903},"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.032467532467532464},"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.038834951456310676},"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.01818181818181818},"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.031746031746031744},"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html":{"ref":"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html","tf":0.0945945945945946},"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.027522935779816515},"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.10357142857142858},"第三章 类和接口/19.接口只用于定义类型.html":{"ref":"第三章 类和接口/19.接口只用于定义类型.html","tf":0.08108108108108109},"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.024096385542168676},"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.06201550387596899},"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.03278688524590164},"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082},"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.03229813664596273},"第五章 枚举和注解/32.用EnumSet代替位域.html":{"ref":"第五章 枚举和注解/32.用EnumSet代替位域.html","tf":0.15625},"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.022727272727272728},"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.02877697841726619},"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.05511811023622047},"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.07526881720430108},"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.07526881720430108},"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":{"ref":"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html","tf":0.038461538461538464},"第七章 通用程序设计/50.尽量避免使用字符串.html":{"ref":"第七章 通用程序设计/50.尽量避免使用字符串.html","tf":0.10666666666666667},"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.04},"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886},"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":0.011111111111111112},"第十章 序列化/75.考虑使用自定义的序列化形式.html":{"ref":"第十章 序列化/75.考虑使用自定义的序列化形式.html","tf":0.02631578947368421},"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.039603960396039604},"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.05952380952380952},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.029585798816568046},"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.06666666666666667}}}}}},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.012987012987012988}}}}},"e":{"docs":{},"n":{"docs":{},"n":{"docs":{},"t":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}}}}}},"i":{"docs":{},"o":{"docs":{},"d":{"docs":{"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.023622047244094488},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}},"(":{"docs":{},"d":{"docs":{"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.015748031496062992},"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},",":{"docs":{"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.007874015748031496}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}}}}},"{":{"docs":{"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901}}}}}}},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},"有":{"docs":{},"关":{"docs":{},"。":{"docs":{},"本":{"docs":{},"地":{"docs":{},"对":{"docs":{},"等":{"docs":{},"体":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"本":{"docs":{},"地":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"普":{"docs":{},"通":{"docs":{},"对":{"docs":{},"象":{"docs":{},"通":{"docs":{},"过":{"docs":{},"本":{"docs":{},"地":{"docs":{},"方":{"docs":{},"法":{"docs":{},"委":{"docs":{},"托":{"docs":{},"给":{"docs":{},"一":{"docs":{},"个":{"docs":{},"本":{"docs":{},"地":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"本":{"docs":{},"地":{"docs":{},"对":{"docs":{},"等":{"docs":{},"体":{"docs":{},"不":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"普":{"docs":{},"通":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"器":{"docs":{},"并":{"docs":{},"不":{"docs":{},"知":{"docs":{},"道":{"docs":{},"它":{"docs":{},"，":{"docs":{},"当":{"docs":{},"它":{"docs":{},"的":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"对":{"docs":{},"等":{"docs":{},"体":{"docs":{},"被":{"docs":{},"回":{"docs":{},"收":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"它":{"docs":{},"却":{"docs":{},"不":{"docs":{},"会":{"docs":{},"被":{"docs":{},"回":{"docs":{},"收":{"docs":{},"掉":{"docs":{},"。":{"docs":{},"在":{"docs":{},"本":{"docs":{},"地":{"docs":{},"对":{"docs":{},"等":{"docs":{},"体":{"docs":{},"并":{"docs":{},"不":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"关":{"docs":{},"键":{"docs":{},"资":{"docs":{},"源":{"docs":{},"的":{"docs":{},"前":{"docs":{},"提":{"docs":{},"下":{"docs":{},"，":{"docs":{},"终":{"docs":{},"结":{"docs":{},"方":{"docs":{},"法":{"docs":{},"正":{"docs":{},"好":{"docs":{},"被":{"docs":{},"用":{"docs":{},"来":{"docs":{},"执":{"docs":{},"行":{"docs":{},"回":{"docs":{},"收":{"docs":{},"本":{"docs":{},"地":{"docs":{},"对":{"docs":{},"等":{"docs":{},"体":{"docs":{},"。":{"docs":{"第一章 创建和销毁对象/7.避免使用finalize方法.html":{"ref":"第一章 创建和销毁对象/7.避免使用finalize方法.html","tf":0.06666666666666667}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html":{"ref":"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html","tf":0.02702702702702703}},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html":{"ref":"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html","tf":0.013513513513513514}}}}}}}}}}}},"n":{"docs":{},")":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.015873015873015872}}},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}}},";":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}}},";":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},")":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}}},";":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}},".":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}},"u":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}},"s":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"+":{"docs":{},"\"":{"docs":{},")":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441}}}}}}},",":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}},":":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441}}}}}},",":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},";":{"docs":{"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},";":{"docs":{"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}}}}}},"a":{"docs":{},"y":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0037267080745341614}}}}}}}},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}},"e":{"docs":{},")":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.004968944099378882}},";":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}},";":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441}}}}}},"o":{"docs":{},"l":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}},"l":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441}},"e":{"docs":{},")":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}}}}}}}}}},";":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441}}}}}}}},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},":":{"docs":{},"用":{"docs":{},"于":{"docs":{},"描":{"docs":{},"述":{"docs":{},"包":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"用":{"docs":{},"于":{"docs":{},"描":{"docs":{},"述":{"docs":{},"参":{"docs":{},"数":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}},",":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}},")":{"docs":{},"{":{"docs":{"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}}}},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.02702702702702703},"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.03488372093023256},"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.012987012987012988},"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669},"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909},"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.05555555555555555},"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html":{"ref":"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html","tf":0.02702702702702703},"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505},"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.075},"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.012048192771084338},"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.03875968992248062},"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082},"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.034782608695652174},"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576},"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.031496062992125984},"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.03225806451612903},"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":{"ref":"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html","tf":0.07692307692307693},"第七章 通用程序设计/50.尽量避免使用字符串.html":{"ref":"第七章 通用程序设计/50.尽量避免使用字符串.html","tf":0.013333333333333334},"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.016},"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":0.03333333333333333},"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.019801980198019802},"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.023809523809523808},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.029585798816568046},"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.03333333333333333}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"y":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"—":{"docs":{},"—":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}}}}}},"的":{"docs":{},"取":{"docs":{},"值":{"docs":{},"有":{"docs":{},"这":{"docs":{},"些":{"docs":{},"：":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.011627906976744186},"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.011904761904761904}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.011627906976744186},"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.011904761904761904}},"{":{"docs":{"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}}}}}}}}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"都":{"docs":{},"不":{"docs":{},"要":{"docs":{},"调":{"docs":{},"用":{"docs":{},"可":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"无":{"docs":{},"论":{"docs":{},"是":{"docs":{},"间":{"docs":{},"接":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"还":{"docs":{},"是":{"docs":{},"直":{"docs":{},"接":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},")":{"docs":{},"是":{"docs":{},"指":{"docs":{},"永":{"docs":{},"远":{"docs":{},"不":{"docs":{},"会":{"docs":{},"再":{"docs":{},"被":{"docs":{},"解":{"docs":{},"除":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{},"有":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"机":{"docs":{},"制":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"存":{"docs":{},"在":{"docs":{},"过":{"docs":{},"期":{"docs":{},"引":{"docs":{},"用":{"docs":{},"，":{"docs":{},"被":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"不":{"docs":{},"会":{"docs":{},"被":{"docs":{},"回":{"docs":{},"收":{"docs":{},"掉":{"docs":{},"，":{"docs":{},"容":{"docs":{},"易":{"docs":{},"造":{"docs":{},"成":{"docs":{},"内":{"docs":{},"存":{"docs":{},"泄":{"docs":{},"漏":{"docs":{},"。":{"docs":{},"那":{"docs":{},"么":{"docs":{},"，":{"docs":{},"常":{"docs":{},"见":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"泄":{"docs":{},"漏":{"docs":{},"有":{"docs":{},"哪":{"docs":{},"几":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"？":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.08181818181818182},"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":0.03333333333333333}},";":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909},"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505},"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":0.011111111111111112}}},",":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}}},"[":{"docs":{},"]":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}}}}}}},"t":{"docs":{},"}":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}}},"c":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.018072289156626505}},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}}},",":{"docs":{},"c":{"docs":{},"i":{"docs":{},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}}},":":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"u":{"docs":{},"s":{"docs":{},")":{"docs":{},"{":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"）":{"docs":{},"，":{"docs":{},"即":{"docs":{},"它":{"docs":{},"的":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"调":{"docs":{},"用":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{},"它":{"docs":{},"通":{"docs":{},"常":{"docs":{},"包":{"docs":{},"含":{"docs":{},"该":{"docs":{},"异":{"docs":{},"常":{"docs":{},"的":{"docs":{},"类":{"docs":{},"名":{"docs":{},"，":{"docs":{},"紧":{"docs":{},"随":{"docs":{},"其":{"docs":{},"后":{"docs":{},"的":{"docs":{},"是":{"docs":{},"细":{"docs":{},"节":{"docs":{},"消":{"docs":{},"息":{"docs":{},"（":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"第八章 异常/63.编写合适的异常信息.html":{"ref":"第八章 异常/63.编写合适的异常信息.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.008}},";":{"docs":{"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.008}}}}}}}}}}}},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"!":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{},"l":{"docs":{},"i":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669}}}}}}}},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"u":{"docs":{},"s":{"docs":{},")":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169},"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}},";":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.012048192771084338},"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}},";":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.018072289156626505},"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0037267080745341614}}},"(":{"docs":{},")":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"[":{"docs":{},"i":{"docs":{},"+":{"docs":{},"+":{"docs":{},"]":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"b":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第八章 异常/57.只针对异常的情况才使用异常.html":{"ref":"第八章 异常/57.只针对异常的情况才使用异常.html","tf":0.043478260869565216}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}},"(":{"docs":{},")":{"docs":{"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.016}}}},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.016}}}}}}}}}}}},"s":{"1":{"docs":{},",":{"docs":{"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.031007751937984496}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.031007751937984496}}}}}}}}}}}},"2":{"docs":{},")":{"docs":{"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.031007751937984496}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.031007751937984496}}}}}}}}}}}}},"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.012987012987012988},"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.009009009009009009},"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.03488372093023256},"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.025974025974025976},"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669},"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713},"第三章 类和接口/19.接口只用于定义类型.html":{"ref":"第三章 类和接口/19.接口只用于定义类型.html","tf":0.05405405405405406},"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.023255813953488372},"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.03278688524590164},"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.016149068322981366},"第五章 枚举和注解/32.用EnumSet代替位域.html":{"ref":"第五章 枚举和注解/32.用EnumSet代替位域.html","tf":0.03125},"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576},"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.014388489208633094},"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.053763440860215055},"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.021505376344086023},"第七章 通用程序设计/50.尽量避免使用字符串.html":{"ref":"第七章 通用程序设计/50.尽量避免使用字符串.html","tf":0.08},"第七章 通用程序设计/56.遵守普遍接受的命名规则.html":{"ref":"第七章 通用程序设计/56.遵守普遍接受的命名规则.html","tf":0.02857142857142857},"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.064},"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":0.03333333333333333},"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901},"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.011904761904761904},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.01775147928994083}}}},"e":{"docs":{"第八章 异常/59.避免不必要的使用受检的异常.html":{"ref":"第八章 异常/59.避免不必要的使用受检的异常.html","tf":0.024390243902439025}}}},"r":{"docs":{},"t":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.006493506493506494},"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.007874015748031496},"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.011834319526627219}},"(":{"docs":{},")":{"docs":{"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.007874015748031496}},"{":{"docs":{"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.007874015748031496},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}}}},",":{"docs":{"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.015748031496062992}}}}}},";":{"docs":{"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.023622047244094488},"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.01775147928994083}}},".":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},")":{"docs":{},")":{"docs":{},"{":{"docs":{"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}}}}}}}}}}}}}}}},"c":{"docs":{},"k":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669}},"(":{"docs":{},")":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669}}}}}}},"r":{"docs":{"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.05405405405405406},"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.012987012987012988},"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.01834862385321101},"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713},"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.031007751937984496},"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082},"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888},"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.004968944099378882},"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.015151515151515152},"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.03225806451612903},"第十章 序列化/75.考虑使用自定义的序列化形式.html":{"ref":"第十章 序列化/75.考虑使用自定义的序列化形式.html","tf":0.07894736842105263},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}},"(":{"docs":{},"\"":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.006493506493506494}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}}}}}}},"、":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"、":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"，":{"docs":{},"都":{"docs":{},"可":{"docs":{},"以":{"docs":{},"把":{"docs":{},"它":{"docs":{},"们":{"docs":{},"的":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"方":{"docs":{},"法":{"docs":{},"返":{"docs":{},"回":{"docs":{},"确":{"docs":{},"切":{"docs":{},"值":{"docs":{},"规":{"docs":{},"定":{"docs":{},"为":{"docs":{},"该":{"docs":{},"实":{"docs":{},"例":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"一":{"docs":{},"般":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"这":{"docs":{},"并":{"docs":{},"不":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"好":{"docs":{},"主":{"docs":{},"意":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"这":{"docs":{},"样":{"docs":{},"做":{"docs":{},"严":{"docs":{},"格":{"docs":{},"地":{"docs":{},"限":{"docs":{},"制":{"docs":{},"了":{"docs":{},"在":{"docs":{},"将":{"docs":{},"来":{"docs":{},"的":{"docs":{},"版":{"docs":{},"本":{"docs":{},"中":{"docs":{},"改":{"docs":{},"进":{"docs":{},"散":{"docs":{},"列":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"能":{"docs":{},"力":{"docs":{},"。":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}}},"内":{"docs":{},"部":{"docs":{},"所":{"docs":{},"有":{"docs":{},"成":{"docs":{},"员":{"docs":{},"都":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{},"私":{"docs":{},"有":{"docs":{},"变":{"docs":{},"量":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}}}}}}}}}}}}}}}},"类":{"docs":{},"被":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"修":{"docs":{},"饰":{"docs":{},"，":{"docs":{},"不":{"docs":{},"可":{"docs":{},"继":{"docs":{},"承":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}}}}}}}}}}}}}}}},"[":{"docs":{},"]":{"docs":{"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.011904761904761904}},"{":{"docs":{},"\"":{"1":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"2":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"3":{"docs":{},"\"":{"docs":{},"}":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}}}},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.007751937984496124}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.031007751937984496}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.007751937984496124}},";":{"docs":{"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888}},"s":{"docs":{},";":{"docs":{"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888}}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888}}}}},"docs":{}}}}}}}},"docs":{}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.007751937984496124}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"m":{"docs":{},"p":{"docs":{"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.007751937984496124}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.007751937984496124}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082}}}}},"docs":{}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}},"e":{"docs":{},".":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.016}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.008}}}},";":{"docs":{"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.024}}}}}}}}}}}}}},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"第五章 枚举和注解/32.用EnumSet代替位域.html":{"ref":"第五章 枚举和注解/32.用EnumSet代替位域.html","tf":0.03125}}}}}}},"s":{"docs":{},")":{"docs":{},"{":{"docs":{"第五章 枚举和注解/32.用EnumSet代替位域.html":{"ref":"第五章 枚举和注解/32.用EnumSet代替位域.html","tf":0.03125}}}}},"{":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},",":{"docs":{},"i":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},",":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},",":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{},"}":{"docs":{"第五章 枚举和注解/32.用EnumSet代替位域.html":{"ref":"第五章 枚举和注解/32.用EnumSet代替位域.html","tf":0.03125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.015503875968992248},"第十章 序列化/75.考虑使用自定义的序列化形式.html":{"ref":"第十章 序列化/75.考虑使用自定义的序列化形式.html","tf":0.02631578947368421}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"”":{"docs":{},"是":{"docs":{},"不":{"docs":{},"够":{"docs":{},"的":{"docs":{},"。":{"docs":{},"为":{"docs":{},"了":{"docs":{},"维":{"docs":{},"护":{"docs":{},"并":{"docs":{},"保":{"docs":{},"证":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"，":{"docs":{},"必":{"docs":{},"须":{"docs":{},"声":{"docs":{},"名":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"都":{"docs":{},"是":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"，":{"docs":{},"并":{"docs":{},"提":{"docs":{},"供":{"docs":{},"一":{"docs":{},"个":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{},"否":{"docs":{},"则":{"docs":{},"的":{"docs":{},"话":{"docs":{},"每":{"docs":{},"次":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"都":{"docs":{},"会":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"时":{"docs":{},"候":{"docs":{},"要":{"docs":{},"加":{"docs":{},"入":{"docs":{},"以":{"docs":{},"下":{"docs":{},"代":{"docs":{},"码":{"docs":{},"：":{"docs":{"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"缺":{"docs":{},"点":{"docs":{"第十章 序列化/74.谨慎的实现Serializable接口.html":{"ref":"第十章 序列化/74.谨慎的实现Serializable接口.html","tf":0.058823529411764705}}}}},"{":{"docs":{"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.011834319526627219}}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"x":{"docs":{},"i":{"docs":{"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}},"y":{"docs":{},"(":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"d":{"docs":{"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.011834319526627219}}}}}}}}}}}}}}}},"t":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.007142857142857143},"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082},"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.021505376344086023}},"x":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html":{"ref":"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html","tf":0.013513513513513514}}}}}}}}},"y":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html":{"ref":"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html","tf":0.013513513513513514}}}}}}}}},"。":{"docs":{},"这":{"docs":{},"是":{"docs":{},"最":{"docs":{},"普":{"docs":{},"通":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"化":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"集":{"docs":{},"合":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"持":{"docs":{},"有":{"docs":{},"任":{"docs":{},"何":{"docs":{},"集":{"docs":{},"合":{"docs":{},"。":{"docs":{},"通":{"docs":{},"配":{"docs":{},"符":{"docs":{},"类":{"docs":{},"型":{"docs":{},"是":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"，":{"docs":{},"原":{"docs":{},"生":{"docs":{},"态":{"docs":{},"类":{"docs":{},"型":{"docs":{},"不":{"docs":{},"安":{"docs":{},"全":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"任":{"docs":{},"何":{"docs":{},"元":{"docs":{},"素":{"docs":{},"放":{"docs":{},"进":{"docs":{},"原":{"docs":{},"生":{"docs":{},"态":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"集":{"docs":{},"合":{"docs":{},"中":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"很":{"docs":{},"容":{"docs":{},"易":{"docs":{},"破":{"docs":{},"坏":{"docs":{},"改":{"docs":{},"集":{"docs":{},"合":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"约":{"docs":{},"束":{"docs":{},"条":{"docs":{},"件":{"docs":{},"。":{"docs":{"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"[":{"docs":{},"]":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"]":{"docs":{},";":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.010752688172043012}}}}}},"的":{"docs":{},"输":{"docs":{},"出":{"docs":{},"结":{"docs":{},"果":{"docs":{},"如":{"docs":{},"同":{"docs":{},"我":{"docs":{},"们":{"docs":{},"想":{"docs":{},"的":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"不":{"docs":{},"一":{"docs":{},"样":{"docs":{},"。":{"docs":{},"实":{"docs":{},"际":{"docs":{},"发":{"docs":{},"生":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"是":{"docs":{},"：":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},")":{"docs":{},"，":{"docs":{},"选":{"docs":{},"择":{"docs":{},"重":{"docs":{},"载":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"是":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"进":{"docs":{},"行":{"docs":{},"了":{"docs":{},"自":{"docs":{},"动":{"docs":{},"装":{"docs":{},"箱":{"docs":{},"，":{"docs":{},"把":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"装":{"docs":{},"箱":{"docs":{},"成":{"docs":{},"了":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"；":{"docs":{},"对":{"docs":{},"于":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"，":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"重":{"docs":{},"载":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"直":{"docs":{},"接":{"docs":{},"重":{"docs":{},"载":{"docs":{},"了":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},")":{"docs":{},"，":{"docs":{},"并":{"docs":{},"没":{"docs":{},"有":{"docs":{},"重":{"docs":{},"载":{"docs":{},"到":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},")":{"docs":{},"，":{"docs":{},"是":{"docs":{},"从":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"的":{"docs":{},"指":{"docs":{},"定":{"docs":{},"位":{"docs":{},"置":{"docs":{},"进":{"docs":{},"行":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"，":{"docs":{},"得":{"docs":{},"到":{"docs":{},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"第七章 通用程序设计/50.尽量避免使用字符串.html":{"ref":"第七章 通用程序设计/50.尽量避免使用字符串.html","tf":0.013333333333333334}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"第七章 通用程序设计/50.尽量避免使用字符串.html":{"ref":"第七章 通用程序设计/50.尽量避免使用字符串.html","tf":0.013333333333333334}}}}}}},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.016666666666666666}},"(":{"7":{"docs":{},")":{"docs":{},",":{"docs":{"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.016666666666666666}}}}},"docs":{}}}}}},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"5":{"docs":{},")":{"docs":{},",":{"docs":{"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.016666666666666666}}}}},"docs":{}},",":{"docs":{"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.016666666666666666}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.046511627906976744},"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.011904761904761904}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.023255813953488372}}},"{":{"docs":{"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.011627906976744186}},"}":{"docs":{},";":{"docs":{"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.011627906976744186}}}}}}},"{":{"docs":{"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.023255813953488372}}},"的":{"docs":{},"最":{"docs":{},"佳":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.011627906976744186}}}}}}}}}}}}}}},"z":{"docs":{},"e":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.019417475728155338}},")":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669}},"{":{"docs":{"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.016666666666666666}}}},"]":{"docs":{},";":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.019417475728155338}}}},"(":{"docs":{},")":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}},";":{"docs":{"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.016666666666666666}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html":{"ref":"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html","tf":0.03225806451612903}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"注":{"docs":{},"解":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"都":{"docs":{},"应":{"docs":{},"该":{"docs":{},"添":{"docs":{},"加":{"docs":{},"一":{"docs":{},"条":{"docs":{},"注":{"docs":{},"释":{"docs":{},"以":{"docs":{},"说":{"docs":{},"明":{"docs":{},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"这":{"docs":{},"么":{"docs":{},"做":{"docs":{},"是":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"可":{"docs":{},"以":{"docs":{},"帮":{"docs":{},"助":{"docs":{},"其":{"docs":{},"他":{"docs":{},"人":{"docs":{},"理":{"docs":{},"解":{"docs":{},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"更":{"docs":{},"重":{"docs":{},"要":{"docs":{},"的":{"docs":{},"是":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"尽":{"docs":{},"量":{"docs":{},"减":{"docs":{},"少":{"docs":{},"其":{"docs":{},"他":{"docs":{},"人":{"docs":{},"修":{"docs":{},"改":{"docs":{},"代":{"docs":{},"码":{"docs":{},"后":{"docs":{},"导":{"docs":{},"致":{"docs":{},"计":{"docs":{},"算":{"docs":{},"不":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"概":{"docs":{},"率":{"docs":{},"。":{"docs":{"第四章 泛型/24.消除非受检警告.html":{"ref":"第四章 泛型/24.消除非受检警告.html","tf":0.07142857142857142}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},",":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}}}}}},"s":{"docs":{},")":{"docs":{},";":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}},"c":{"docs":{},"a":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"第八章 异常/61.抛出与抽象相对应的异常.html":{"ref":"第八章 异常/61.抛出与抽象相对应的异常.html","tf":0.020833333333333332}}}}}}}}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.007142857142857143}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"c":{"docs":{},")":{"docs":{},";":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.007142857142857143}}}}}}}}}}}}}}}},"m":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.006493506493506494}}},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}}}}}}}}}}},":":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}},";":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}},";":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0037267080745341614}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669}}}}},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"》":{"docs":{},"中":{"docs":{},"。":{"docs":{},"不":{"docs":{},"严":{"docs":{},"格":{"docs":{},"的":{"docs":{},"讲":{"docs":{},"，":{"docs":{},"这":{"docs":{},"些":{"docs":{},"命":{"docs":{},"名":{"docs":{},"惯":{"docs":{},"例":{"docs":{},"分":{"docs":{},"为":{"docs":{},"两":{"docs":{},"大":{"docs":{},"类":{"docs":{},"：":{"docs":{},"字":{"docs":{},"面":{"docs":{},"的":{"docs":{},"和":{"docs":{},"语":{"docs":{},"法":{"docs":{},"的":{"docs":{},"。":{"docs":{},"具":{"docs":{},"体":{"docs":{},"的":{"docs":{},"，":{"docs":{},"在":{"docs":{},"实":{"docs":{},"际":{"docs":{},"开":{"docs":{},"发":{"docs":{},"中":{"docs":{},"应":{"docs":{},"该":{"docs":{},"遵":{"docs":{},"守":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"命":{"docs":{},"名":{"docs":{},"规":{"docs":{},"范":{"docs":{},"？":{"docs":{"第七章 通用程序设计/56.遵守普遍接受的命名规则.html":{"ref":"第七章 通用程序设计/56.遵守普遍接受的命名规则.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.02727272727272727},"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.023809523809523808}}}},"p":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":{"ref":"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html","tf":0.019230769230769232}}}}}}}}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.030120481927710843}},";":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}},"=":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"i":{"docs":{},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},";":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},";":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"n":{"docs":{},"(":{"docs":{},"y":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},")":{"docs":{},"。":{"docs":{},"这":{"docs":{},"也":{"docs":{},"暗":{"docs":{},"示":{"docs":{},"着":{"docs":{},"当":{"docs":{},"且":{"docs":{},"仅":{"docs":{},"当":{"docs":{},"y":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"异":{"docs":{},"常":{"docs":{},"时":{"docs":{},"，":{"docs":{},"x":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"y":{"docs":{},")":{"docs":{},"才":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"异":{"docs":{},"常":{"docs":{},"。":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"z":{"docs":{},")":{"docs":{},")":{"docs":{},"。":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},",":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"n":{"docs":{},"(":{"1":{"docs":{},".":{"0":{"docs":{"第七章 通用程序设计/48.需要精确答案，请避免使用float和double.html":{"ref":"第七章 通用程序设计/48.需要精确答案，请避免使用float和double.html","tf":0.07142857142857142}}},"docs":{}}},"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"s":{"docs":{},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}}}}}}}}}}}}}},"o":{"docs":{},"m":{"docs":{},"o":{"docs":{},"p":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"%":{"docs":{},"f":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}}}}}}}}}},"\"":{"docs":{},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}},"j":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":{"ref":"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html","tf":0.019230769230769232}}}}}}},"进":{"docs":{},"入":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"将":{"docs":{},"返":{"docs":{},"回":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"d":{"docs":{},"对":{"docs":{},"象":{"docs":{},"！":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"！":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"(":{"docs":{},"c":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.010752688172043012}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"f":{"docs":{},"a":{"docs":{},"v":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.011904761904761904}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},":":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{},")":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441}}},";":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.007453416149068323}}}}}}},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.016},"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886},"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":0.022222222222222223}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},")":{"docs":{"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},")":{"docs":{},"{":{"docs":{"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886}}}}}}}}}}}}}}}}}}}},")":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.007142857142857143},"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.010752688172043012},"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"c":{"docs":{},")":{"docs":{},";":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"o":{"docs":{},")":{"docs":{},";":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"c":{"docs":{},")":{"docs":{},";":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}}}}}}}}}}}}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"o":{"docs":{},")":{"docs":{},";":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"o":{"docs":{},")":{"docs":{},";":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"c":{"docs":{},")":{"docs":{},";":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"c":{"docs":{},")":{"docs":{},";":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}},"a":{"docs":{},")":{"docs":{},";":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.007142857142857143}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},")":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},")":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441}}}}}}}}}}}}},"^":{"2":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441}}},"docs":{}},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},")":{"docs":{},",":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}}}}}}}}}}},",":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}},":":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}},"n":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441}}}}},"i":{"docs":{},"s":{"docs":{},"f":{"docs":{},"i":{"docs":{"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901}}}}}}},"m":{"docs":{},"e":{"docs":{"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":{"ref":"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html","tf":0.019230769230769232}}}},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"）":{"docs":{},"（":{"docs":{},"详":{"docs":{},"见":{"7":{"0":{"docs":{},"条":{"docs":{},"）":{"docs":{"第六章 方法/44.API需要编写文档注释.html":{"ref":"第六章 方法/44.API需要编写文档注释.html","tf":0.03333333333333333}}}}},"docs":{}},"docs":{}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},",":{"docs":{"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.016666666666666666}}}}},"docs":{}},",":{"docs":{"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.016666666666666666}}}}}}},"t":{"1":{"docs":{},",":{"docs":{"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.007751937984496124}}}},"2":{"docs":{},")":{"docs":{},";":{"docs":{"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.007751937984496124}}}}},"docs":{"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.007751937984496124}},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.018018018018018018}}}}}}}},"g":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.018018018018018018}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}}}}}}}}},"p":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.018018018018018018}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}}}}}}},"a":{"docs":{},"y":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.018018018018018018}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}},"=":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},";":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}}}}}}}}}}},"i":{"docs":{"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html":{"ref":"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html","tf":0.02702702702702703}}},"x":{"docs":{"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html":{"ref":"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html","tf":0.02702702702702703}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}}}}}},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"u":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169},"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}},"s":{"docs":{},"=":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"u":{"docs":{},"s":{"docs":{},";":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}},"=":{"docs":{},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.015748031496062992},"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.011834319526627219}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"m":{"docs":{},"u":{"docs":{},"s":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.016666666666666666}}}}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.015748031496062992},"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.011834319526627219}},")":{"docs":{},";":{"docs":{"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.007874015748031496}}}}}}}},";":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.018018018018018018}}},"!":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.006493506493506494}}},")":{"docs":{},";":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"\"":{"docs":{},")":{"docs":{"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":{"ref":"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html","tf":0.019230769230769232}}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html":{"ref":"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html","tf":0.03225806451612903},"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669},"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888},"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441},"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547},"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.015748031496062992},"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012},"第八章 异常/61.抛出与抽象相对应的异常.html":{"ref":"第八章 异常/61.抛出与抽象相对应的异常.html","tf":0.041666666666666664},"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.016},"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.0297029702970297},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.01775147928994083}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}},"e":{"docs":{},"”":{"docs":{},"。":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"声":{"docs":{},"明":{"docs":{},"没":{"docs":{},"有":{"docs":{},"给":{"docs":{},"开":{"docs":{},"发":{"docs":{},"者":{"docs":{},"关":{"docs":{},"于":{"docs":{},"”":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"异":{"docs":{},"常":{"docs":{},"”":{"docs":{},"的":{"docs":{},"任":{"docs":{},"何":{"docs":{},"有":{"docs":{},"用":{"docs":{},"信":{"docs":{},"息":{"docs":{},"，":{"docs":{},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"掩":{"docs":{},"盖":{"docs":{},"了":{"docs":{},"该":{"docs":{},"方":{"docs":{},"法":{"docs":{},"在":{"docs":{},"同":{"docs":{},"样":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"环":{"docs":{},"境":{"docs":{},"下":{"docs":{},"可":{"docs":{},"能":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"的":{"docs":{},"任":{"docs":{},"何":{"docs":{},"其":{"docs":{},"他":{"docs":{},"异":{"docs":{},"常":{"docs":{},"，":{"docs":{"第八章 异常/62.每个方法抛出的异常都要有文档.html":{"ref":"第八章 异常/62.每个方法抛出的异常都要有文档.html","tf":0.1111111111111111}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.016}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"第七章 通用程序设计/50.尽量避免使用字符串.html":{"ref":"第七章 通用程序设计/50.尽量避免使用字符串.html","tf":0.02666666666666667}},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"第七章 通用程序设计/50.尽量避免使用字符串.html":{"ref":"第七章 通用程序设计/50.尽量避免使用字符串.html","tf":0.02666666666666667}}}}}}}}},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.016}}}}}},"s":{"docs":{},"a":{"docs":{},"f":{"docs":{},"e":{"docs":{},"）":{"docs":{},"：":{"docs":{},"某":{"docs":{},"些":{"docs":{},"方":{"docs":{},"法":{"docs":{},"需":{"docs":{},"要":{"docs":{},"为":{"docs":{},"了":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"需":{"docs":{},"要":{"docs":{},"在":{"docs":{},"外":{"docs":{},"部":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"进":{"docs":{},"行":{"docs":{},"同":{"docs":{},"步":{"docs":{},"。":{"docs":{},"如":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"返":{"docs":{},"回":{"docs":{},"的":{"docs":{},"集":{"docs":{},"合":{"docs":{},"，":{"docs":{},"对":{"docs":{},"它":{"docs":{},"们":{"docs":{},"进":{"docs":{},"行":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"时":{"docs":{},"就":{"docs":{},"需":{"docs":{},"要":{"docs":{},"外":{"docs":{},"部":{"docs":{},"同":{"docs":{},"步":{"docs":{},"。":{"docs":{},"如":{"docs":{},"下":{"docs":{},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"当":{"docs":{},"对":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"返":{"docs":{},"回":{"docs":{},"的":{"docs":{"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"该":{"docs":{},"类":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"是":{"docs":{},"可":{"docs":{},"变":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"这":{"docs":{},"个":{"docs":{},"类":{"docs":{},"有":{"docs":{},"足":{"docs":{},"够":{"docs":{},"的":{"docs":{},"的":{"docs":{},"内":{"docs":{},"部":{"docs":{},"同":{"docs":{},"步":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"，":{"docs":{},"它":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"并":{"docs":{},"发":{"docs":{},"使":{"docs":{},"用":{"docs":{},"，":{"docs":{},"无":{"docs":{},"需":{"docs":{},"任":{"docs":{},"何":{"docs":{},"外":{"docs":{},"部":{"docs":{},"同":{"docs":{},"步":{"docs":{},"，":{"docs":{},"如":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"和":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"。":{"docs":{"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"的":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"非":{"docs":{},"常":{"docs":{},"脆":{"docs":{},"弱":{"docs":{},"；":{"docs":{"第九章 并发/73.避免使用线程组.html":{"ref":"第九章 并发/73.避免使用线程组.html","tf":0.14285714285714285}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{},")":{"docs":{},",":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}}}}}}}}}}},",":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.011627906976744186},"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.011904761904761904}}}}},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.011627906976744186},"第六章 方法/44.API需要编写文档注释.html":{"ref":"第六章 方法/44.API需要编写文档注释.html","tf":0.03333333333333333},"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.011904761904761904}},";":{"docs":{"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.016}}}}},"i":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547},"第八章 异常/59.避免不必要的使用受检的异常.html":{"ref":"第八章 异常/59.避免不必要的使用受检的异常.html","tf":0.024390243902439025},"第八章 异常/65.不要忽略异常.html":{"ref":"第八章 异常/65.不要忽略异常.html","tf":0.0625}},"o":{"docs":{},"(":{"3":{"docs":{},")":{"docs":{},",":{"docs":{"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.016666666666666666}}}}},"docs":{}},",":{"docs":{"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.016666666666666666}}}},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"1":{"2":{"docs":{},")":{"docs":{},";":{"docs":{"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.016666666666666666}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}},"e":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.010752688172043012}}}}}}}}}},"y":{"docs":{},"{":{"docs":{"第八章 异常/57.只针对异常的情况才使用异常.html":{"ref":"第八章 异常/57.只针对异常的情况才使用异常.html","tf":0.043478260869565216},"第八章 异常/61.抛出与抽象相对应的异常.html":{"ref":"第八章 异常/61.抛出与抽象相对应的异常.html","tf":0.041666666666666664}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669},"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}},"s":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"*":{"docs":{},"\"":{"docs":{},")":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441}}}}}}},",":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}},":":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.016}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"方":{"docs":{},"法":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"不":{"docs":{},"会":{"docs":{},"像":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"对":{"docs":{},"类":{"docs":{},"造":{"docs":{},"成":{"docs":{},"那":{"docs":{},"么":{"docs":{},"大":{"docs":{},"的":{"docs":{},"影":{"docs":{},"响":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"好":{"docs":{},"的":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"类":{"docs":{},"用":{"docs":{},"起":{"docs":{},"来":{"docs":{},"更":{"docs":{},"加":{"docs":{},"的":{"docs":{},"舒":{"docs":{},"服":{"docs":{},"。":{"docs":{},"当":{"docs":{},"对":{"docs":{},"象":{"docs":{},"被":{"docs":{},"传":{"docs":{},"给":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"n":{"docs":{},"、":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"f":{"docs":{},"、":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"联":{"docs":{},"操":{"docs":{},"作":{"docs":{},"符":{"docs":{},"(":{"docs":{},"+":{"docs":{},")":{"docs":{},"以":{"docs":{},"及":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"或":{"docs":{},"者":{"docs":{},"被":{"docs":{},"调":{"docs":{},"试":{"docs":{},"器":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"来":{"docs":{},"时":{"docs":{},"，":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"方":{"docs":{},"法":{"docs":{},"会":{"docs":{},"被":{"docs":{},"自":{"docs":{},"动":{"docs":{},"调":{"docs":{},"用":{"docs":{},"。":{"docs":{},"这":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"重":{"docs":{},"要":{"docs":{},"的":{"docs":{},"调":{"docs":{},"用":{"docs":{},"手":{"docs":{},"段":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"重":{"docs":{},"写":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"提":{"docs":{},"供":{"docs":{},"更":{"docs":{},"明":{"docs":{},"确":{"docs":{},"的":{"docs":{},"信":{"docs":{},"息":{"docs":{},"，":{"docs":{},"这":{"docs":{},"将":{"docs":{},"很":{"docs":{},"难":{"docs":{},"让":{"docs":{},"人":{"docs":{},"理":{"docs":{},"解":{"docs":{},"。":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"的":{"docs":{},"输":{"docs":{},"出":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"方":{"docs":{},"便":{"docs":{},"我":{"docs":{},"们":{"docs":{},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{"第二章 对象通用的方法/10.覆盖toString.html":{"ref":"第二章 对象通用的方法/10.覆盖toString.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713},"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441},"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}},"{":{"docs":{"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}}}}}}},"o":{"docs":{},",":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012}}}}},"[":{"docs":{},"]":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.02158273381294964},"第八章 异常/59.避免不必要的使用受检的异常.html":{"ref":"第八章 异常/59.避免不必要的使用受检的异常.html","tf":0.024390243902439025}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.007142857142857143}},"(":{"1":{"6":{"docs":{},",":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}},"docs":{}},"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}},"注":{"docs":{},"解":{"docs":{},"对":{"docs":{},"标":{"docs":{},"注":{"docs":{},"的":{"docs":{},"注":{"docs":{},"解":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"语":{"docs":{},"义":{"docs":{},"没":{"docs":{},"有":{"docs":{},"直":{"docs":{},"接":{"docs":{},"影":{"docs":{},"响":{"docs":{},"。":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"声":{"docs":{},"明":{"docs":{},"本":{"docs":{},"身":{"docs":{},"使":{"docs":{},"用":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"和":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"注":{"docs":{},"解":{"docs":{},"进":{"docs":{},"行":{"docs":{},"标":{"docs":{},"记":{"docs":{},"。":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"t":{"docs":{"第五章 枚举和注解/32.用EnumSet代替位域.html":{"ref":"第五章 枚举和注解/32.用EnumSet代替位域.html","tf":0.03125}},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},",":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"第五章 枚举和注解/32.用EnumSet代替位域.html":{"ref":"第五章 枚举和注解/32.用EnumSet代替位域.html","tf":0.03125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"{":{"docs":{"第五章 枚举和注解/32.用EnumSet代替位域.html":{"ref":"第五章 枚举和注解/32.用EnumSet代替位域.html","tf":0.03125}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888},"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.030303030303030304}},")":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}}},".":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},",":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.015151515151515152}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"n":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},",":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.015151515151515152}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.015151515151515152}}}}}}}}}}}}},";":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.015151515151515152}}},"顺":{"docs":{},"序":{"docs":{},"进":{"docs":{},"行":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"在":{"docs":{},"构":{"docs":{},"建":{"docs":{},"的":{"docs":{},"g":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"数":{"docs":{},"组":{"docs":{},"是":{"docs":{},"与":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"序":{"docs":{},"数":{"docs":{},"强":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"的":{"docs":{},"，":{"docs":{},"加":{"docs":{},"入":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"中":{"docs":{},"的":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"元":{"docs":{},"素":{"docs":{},"一":{"docs":{},"不":{"docs":{},"小":{"docs":{},"心":{"docs":{},"调":{"docs":{},"换":{"docs":{},"了":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"，":{"docs":{},"而":{"docs":{},"g":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"并":{"docs":{},"没":{"docs":{},"有":{"docs":{},"改":{"docs":{},"变":{"docs":{},"，":{"docs":{},"再":{"docs":{},"按":{"docs":{},"照":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"元":{"docs":{},"素":{"docs":{},"在":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"类":{"docs":{},"中":{"docs":{},"的":{"docs":{},"序":{"docs":{},"数":{"docs":{},"从":{"docs":{},"g":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"获":{"docs":{},"取":{"docs":{},"数":{"docs":{},"据":{"docs":{},"自":{"docs":{},"然":{"docs":{},"而":{"docs":{},"然":{"docs":{},"会":{"docs":{},"出":{"docs":{},"错":{"docs":{},"。":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"用":{"docs":{},"于":{"docs":{},"描":{"docs":{},"述":{"docs":{},"类":{"docs":{},"、":{"docs":{},"接":{"docs":{},"口":{"docs":{},"(":{"docs":{},"包":{"docs":{},"括":{"docs":{},"注":{"docs":{},"解":{"docs":{},"类":{"docs":{},"型":{"docs":{},")":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}},"）":{"docs":{},"，":{"docs":{},"如":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"和":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"。":{"docs":{"第七章 通用程序设计/49.基本类型优先于装箱基本类型.html":{"ref":"第七章 通用程序设计/49.基本类型优先于装箱基本类型.html","tf":0.05555555555555555}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{},")":{"docs":{},",":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}}}}}}}}}}},",":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}},":":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},"{":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"o":{"docs":{},"]":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012}}}}},"表":{"docs":{},"示":{"docs":{},"任":{"docs":{},"意":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"，":{"docs":{},"e":{"docs":{},"表":{"docs":{},"示":{"docs":{},"集":{"docs":{},"合":{"docs":{},"元":{"docs":{},"素":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"k":{"docs":{},"和":{"docs":{},"v":{"docs":{},"表":{"docs":{},"示":{"docs":{},"映":{"docs":{},"射":{"docs":{},"的":{"docs":{},"键":{"docs":{},"和":{"docs":{},"值":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"x":{"docs":{},"表":{"docs":{},"示":{"docs":{},"异":{"docs":{},"常":{"docs":{},"。":{"docs":{},"任":{"docs":{},"何":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"可":{"docs":{},"以":{"docs":{},"是":{"docs":{},"t":{"docs":{},"、":{"docs":{},"u":{"docs":{},"、":{"docs":{},"v":{"docs":{},"或":{"docs":{},"者":{"docs":{},"t":{"1":{"docs":{},"、":{"docs":{},"t":{"2":{"docs":{},"、":{"docs":{},"t":{"3":{"docs":{},"；":{"docs":{"第七章 通用程序设计/56.遵守普遍接受的命名规则.html":{"ref":"第七章 通用程序设计/56.遵守普遍接受的命名规则.html","tf":0.02857142857142857}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.01834862385321101},"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713},"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.012048192771084338}},"e":{"docs":{},"r":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.036036036036036036}},"(":{"docs":{},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.009009009009009009}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.009009009009009009}}}}}}}}},".":{"docs":{},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"\"":{"docs":{},",":{"1":{"8":{"docs":{},")":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"\"":{"docs":{},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"\"":{"docs":{},")":{"docs":{},".":{"docs":{},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.009009009009009009}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},",":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.009009009009009009}}},";":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.02702702702702703}}}}}}}},"d":{"docs":{},".":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}}}}}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html":{"ref":"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html","tf":0.03225806451612903}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html":{"ref":"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html","tf":0.03225806451612903}},"(":{"docs":{},")":{"docs":{"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html":{"ref":"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html","tf":0.03225806451612903}}}}}}}}}}}},"s":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},"。":{"docs":{},"只":{"docs":{},"取":{"docs":{},"首":{"docs":{},"字":{"docs":{},"母":{"docs":{},"缩":{"docs":{},"写":{"docs":{},"形":{"docs":{},"似":{"docs":{},"也":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"接":{"docs":{},"受":{"docs":{},"的":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"a":{"docs":{},"w":{"docs":{},"t":{"docs":{},"。":{"docs":{"第七章 通用程序设计/56.遵守普遍接受的命名规则.html":{"ref":"第七章 通用程序设计/56.遵守普遍接受的命名规则.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.006493506493506494}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},",":{"docs":{"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"第八章 异常/59.避免不必要的使用受检的异常.html":{"ref":"第八章 异常/59.避免不必要的使用受检的异常.html","tf":0.024390243902439025}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"u":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441}}}}}}},"{":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.009009009009009009},"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.03488372093023256},"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html":{"ref":"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html","tf":0.06451612903225806},"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.03896103896103896},"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.04854368932038835},"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.01818181818181818},"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.031746031746031744},"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html":{"ref":"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html","tf":0.0945945945945946},"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.027522935779816515},"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.10357142857142858},"第三章 类和接口/19.接口只用于定义类型.html":{"ref":"第三章 类和接口/19.接口只用于定义类型.html","tf":0.02702702702702703},"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.060240963855421686},"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.08527131782945736},"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082},"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082},"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.07950310559006211},"第五章 枚举和注解/32.用EnumSet代替位域.html":{"ref":"第五章 枚举和注解/32.用EnumSet代替位域.html","tf":0.03125},"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.045454545454545456},"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.06474820143884892},"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.03937007874015748},"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.08602150537634409},"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012},"第七章 通用程序设计/46.for-each循环优于传统的for循环.html":{"ref":"第七章 通用程序设计/46.for-each循环优于传统的for循环.html","tf":0.05},"第七章 通用程序设计/50.尽量避免使用字符串.html":{"ref":"第七章 通用程序设计/50.尽量避免使用字符串.html","tf":0.05333333333333334},"第八章 异常/59.避免不必要的使用受检的异常.html":{"ref":"第八章 异常/59.避免不必要的使用受检的异常.html","tf":0.0975609756097561},"第八章 异常/61.抛出与抽象相对应的异常.html":{"ref":"第八章 异常/61.抛出与抽象相对应的异常.html","tf":0.041666666666666664},"第八章 异常/65.不要忽略异常.html":{"ref":"第八章 异常/65.不要忽略异常.html","tf":0.125},"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.088},"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886},"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":0.044444444444444446},"第十章 序列化/75.考虑使用自定义的序列化形式.html":{"ref":"第十章 序列化/75.考虑使用自定义的序列化形式.html","tf":0.02631578947368421},"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.0297029702970297},"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.07142857142857142},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609},"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.016666666666666666}},"}":{"docs":{"第三章 类和接口/19.接口只用于定义类型.html":{"ref":"第三章 类和接口/19.接口只用于定义类型.html","tf":0.02702702702702703},"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.007751937984496124},"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012},"第七章 通用程序设计/50.尽量避免使用字符串.html":{"ref":"第七章 通用程序设计/50.尽量避免使用字符串.html","tf":0.04}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.043010752688172046}}}}}},"}":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.06306306306306306},"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.08139534883720931},"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html":{"ref":"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html","tf":0.06451612903225806},"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.006493506493506494},"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.04854368932038835},"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.01818181818181818},"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.031746031746031744},"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html":{"ref":"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html","tf":0.0945945945945946},"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.027522935779816515},"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.10357142857142858},"第三章 类和接口/19.接口只用于定义类型.html":{"ref":"第三章 类和接口/19.接口只用于定义类型.html","tf":0.02702702702702703},"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.07228915662650602},"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.07751937984496124},"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.04918032786885246},"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.03278688524590164},"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.05217391304347826},"第五章 枚举和注解/32.用EnumSet代替位域.html":{"ref":"第五章 枚举和注解/32.用EnumSet代替位域.html","tf":0.0625},"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.045454545454545456},"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.06474820143884892},"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.07086614173228346},"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.053763440860215055},"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.03225806451612903},"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":{"ref":"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html","tf":0.057692307692307696},"第七章 通用程序设计/46.for-each循环优于传统的for循环.html":{"ref":"第七章 通用程序设计/46.for-each循环优于传统的for循环.html","tf":0.05},"第七章 通用程序设计/50.尽量避免使用字符串.html":{"ref":"第七章 通用程序设计/50.尽量避免使用字符串.html","tf":0.05333333333333334},"第八章 异常/57.只针对异常的情况才使用异常.html":{"ref":"第八章 异常/57.只针对异常的情况才使用异常.html","tf":0.13043478260869565},"第八章 异常/59.避免不必要的使用受检的异常.html":{"ref":"第八章 异常/59.避免不必要的使用受检的异常.html","tf":0.0975609756097561},"第八章 异常/61.抛出与抽象相对应的异常.html":{"ref":"第八章 异常/61.抛出与抽象相对应的异常.html","tf":0.08333333333333333},"第八章 异常/65.不要忽略异常.html":{"ref":"第八章 异常/65.不要忽略异常.html","tf":0.0625},"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.072},"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.05660377358490566},"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":0.08888888888888889},"第十章 序列化/75.考虑使用自定义的序列化形式.html":{"ref":"第十章 序列化/75.考虑使用自定义的序列化形式.html","tf":0.02631578947368421},"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.06930693069306931},"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.07142857142857142},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.05917159763313609},"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.08333333333333333}},";":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169},"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0037267080745341614},"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.015151515151515152},"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.010752688172043012},"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012},"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.011904761904761904}}},")":{"docs":{},";":{"docs":{"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.007751937984496124},"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.016}}}},",":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.011180124223602485}}},"}":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}}},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"第八章 异常/61.抛出与抽象相对应的异常.html":{"ref":"第八章 异常/61.抛出与抽象相对应的异常.html","tf":0.041666666666666664}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"第八章 异常/65.不要忽略异常.html":{"ref":"第八章 异常/65.不要忽略异常.html","tf":0.0625}}}}}}}},"在":{"1":{"6":{"docs":{},"条":{"docs":{},"中":{"docs":{},"阐":{"docs":{},"述":{"docs":{},"了":{"docs":{},"贸":{"docs":{},"然":{"docs":{},"的":{"docs":{},"将":{"docs":{},"不":{"docs":{},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"继":{"docs":{},"承":{"docs":{},"而":{"docs":{},"设":{"docs":{},"计":{"docs":{},"的":{"docs":{},"类":{"docs":{},"进":{"docs":{},"行":{"docs":{},"继":{"docs":{},"承":{"docs":{},"，":{"docs":{},"而":{"docs":{},"实":{"docs":{},"现":{"docs":{},"子":{"docs":{},"类":{"docs":{},"化":{"docs":{},"，":{"docs":{},"是":{"docs":{},"多":{"docs":{},"么":{"docs":{},"的":{"docs":{},"危":{"docs":{},"险":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"，":{"docs":{},"在":{"docs":{},"实":{"docs":{},"际":{"docs":{},"开":{"docs":{},"发":{"docs":{},"中":{"docs":{},"，":{"docs":{},"针":{"docs":{},"对":{"docs":{},"继":{"docs":{},"承":{"docs":{},"而":{"docs":{},"设":{"docs":{},"计":{"docs":{},"的":{"docs":{},"类":{"docs":{},"怎":{"docs":{},"样":{"docs":{},"的":{"docs":{},"处":{"docs":{},"理":{"docs":{},"才":{"docs":{},"算":{"docs":{},"是":{"docs":{},"安":{"docs":{},"全":{"docs":{},"可":{"docs":{},"靠":{"docs":{},"的":{"docs":{},"？":{"docs":{"第三章 类和接口/17.要么为继承而设计，并提供文档说明，要么就禁止继承.html":{"ref":"第三章 类和接口/17.要么为继承而设计，并提供文档说明，要么就禁止继承.html","tf":0.09090909090909091}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"3":{"1":{"docs":{},"条":{"docs":{},"说":{"docs":{},"过":{"docs":{},"在":{"docs":{},"使":{"docs":{},"用":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"时":{"docs":{},"最":{"docs":{},"好":{"docs":{},"不":{"docs":{},"要":{"docs":{},"企":{"docs":{},"图":{"docs":{},"通":{"docs":{},"过":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"以":{"docs":{},"获":{"docs":{},"取":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"元":{"docs":{},"素":{"docs":{},"在":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"类":{"docs":{},"中":{"docs":{},"的":{"docs":{},"索":{"docs":{},"引":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"在":{"docs":{},"其":{"docs":{},"他":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"这":{"docs":{},"种":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"是":{"docs":{},"不":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"。":{"docs":{},"比":{"docs":{},"如":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"索":{"docs":{},"引":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"于":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"的":{"docs":{},"序":{"docs":{},"数":{"docs":{},"：":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{},"所":{"docs":{},"构":{"docs":{},"建":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"中":{"docs":{},"，":{"docs":{},"有":{"docs":{},"多":{"docs":{},"个":{"docs":{},"可":{"docs":{},"选":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"可":{"docs":{},"采":{"docs":{},"用":{"docs":{},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"方":{"docs":{},"式":{"docs":{},"来":{"docs":{},"构":{"docs":{},"建":{"docs":{},"对":{"docs":{},"象":{"docs":{},"：":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.009009009009009009}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"，":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"等":{"docs":{},"“":{"docs":{},"数":{"docs":{},"据":{"docs":{},"容":{"docs":{},"器":{"docs":{},"”":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"时":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"时":{"docs":{},"刻":{"docs":{},"关":{"docs":{},"注":{"docs":{},"容":{"docs":{},"器":{"docs":{},"中":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"元":{"docs":{},"素":{"docs":{},"是":{"docs":{},"否":{"docs":{},"有":{"docs":{},"存":{"docs":{},"在":{"docs":{},"内":{"docs":{},"存":{"docs":{},"泄":{"docs":{},"漏":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"，":{"docs":{},"下":{"docs":{},"例":{"docs":{},"中":{"docs":{},"：":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"集":{"docs":{},"合":{"docs":{},"时":{"docs":{},"，":{"docs":{},"键":{"docs":{},"、":{"docs":{},"值":{"docs":{},"都":{"docs":{},"只":{"docs":{},"能":{"docs":{},"使":{"docs":{},"用":{"docs":{},"装":{"docs":{},"箱":{"docs":{},"类":{"docs":{},"型":{"docs":{},"；":{"docs":{"第七章 通用程序设计/49.基本类型优先于装箱基本类型.html":{"ref":"第七章 通用程序设计/49.基本类型优先于装箱基本类型.html","tf":0.05555555555555555}}}}}}}}}}}}}}}}}}},"反":{"docs":{},"射":{"docs":{},"机":{"docs":{},"制":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"需":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"如":{"docs":{},"下":{"docs":{},"几":{"docs":{},"点":{"docs":{},"：":{"docs":{"第七章 通用程序设计/53.慎用反射机制.html":{"ref":"第七章 通用程序设计/53.慎用反射机制.html","tf":0.1}}}}}}}}}}}}}}}}}},"异":{"docs":{},"常":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"坚":{"docs":{},"持":{"docs":{},"异":{"docs":{},"常":{"docs":{},"只":{"docs":{},"应":{"docs":{},"该":{"docs":{},"被":{"docs":{},"当":{"docs":{},"做":{"docs":{},"异":{"docs":{},"常":{"docs":{},"来":{"docs":{},"处":{"docs":{},"理":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"应":{"docs":{},"该":{"docs":{},"企":{"docs":{},"图":{"docs":{},"利":{"docs":{},"用":{"docs":{},"异":{"docs":{},"常":{"docs":{},"来":{"docs":{},"达":{"docs":{},"到":{"docs":{},"性":{"docs":{},"能":{"docs":{},"优":{"docs":{},"化":{"docs":{},"的":{"docs":{},"目":{"docs":{},"的":{"docs":{},"。":{"docs":{"第八章 异常/57.只针对异常的情况才使用异常.html":{"ref":"第八章 异常/57.只针对异常的情况才使用异常.html","tf":0.043478260869565216}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"覆":{"docs":{},"盖":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"方":{"docs":{},"法":{"docs":{},"时":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"遵":{"docs":{},"守":{"docs":{},"的":{"docs":{},"约":{"docs":{},"定":{"docs":{},"有":{"docs":{},"：":{"docs":{"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html":{"ref":"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"时":{"docs":{},"可":{"docs":{},"以":{"docs":{},"指":{"docs":{},"定":{"docs":{},"输":{"docs":{},"出":{"docs":{},"格":{"docs":{},"式":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"编":{"docs":{},"写":{"docs":{},"相":{"docs":{},"应":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"来":{"docs":{},"解":{"docs":{},"析":{"docs":{},"这":{"docs":{},"种":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"表":{"docs":{},"示":{"docs":{},"法":{"docs":{},"，":{"docs":{},"产":{"docs":{},"生":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"表":{"docs":{},"示":{"docs":{},"法":{"docs":{},"，":{"docs":{},"以":{"docs":{},"及":{"docs":{},"把":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"表":{"docs":{},"示":{"docs":{},"嵌":{"docs":{},"入":{"docs":{},"到":{"docs":{},"持":{"docs":{},"久":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"中":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"，":{"docs":{},"将":{"docs":{},"来":{"docs":{},"一":{"docs":{},"旦":{"docs":{},"输":{"docs":{},"出":{"docs":{},"格":{"docs":{},"式":{"docs":{},"变":{"docs":{},"化":{"docs":{},"了":{"docs":{},"，":{"docs":{},"会":{"docs":{},"造":{"docs":{},"成":{"docs":{},"更":{"docs":{},"大":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"是":{"docs":{},"否":{"docs":{},"指":{"docs":{},"定":{"docs":{},"输":{"docs":{},"出":{"docs":{},"格":{"docs":{},"式":{"docs":{},"应":{"docs":{},"该":{"docs":{},"权":{"docs":{},"衡":{"docs":{},"。":{"docs":{"第二章 对象通用的方法/10.覆盖toString.html":{"ref":"第二章 对象通用的方法/10.覆盖toString.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"面":{"docs":{},"对":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"方":{"docs":{},"法":{"docs":{},"时":{"docs":{},"，":{"docs":{},"会":{"docs":{},"有":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"疑":{"docs":{},"问":{"docs":{},"，":{"docs":{},"什":{"docs":{},"么":{"docs":{},"时":{"docs":{},"候":{"docs":{},"该":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"什":{"docs":{},"么":{"docs":{},"时":{"docs":{},"候":{"docs":{},"不":{"docs":{},"应":{"docs":{},"该":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"时":{"docs":{},"机":{"docs":{},"是":{"docs":{},"什":{"docs":{},"么":{"docs":{},"？":{"docs":{},"如":{"docs":{},"果":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"应":{"docs":{},"该":{"docs":{},"写":{"docs":{},"？":{"docs":{"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html":{"ref":"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"应":{"docs":{},"用":{"docs":{},"程":{"docs":{},"序":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"期":{"docs":{},"间":{"docs":{},"，":{"docs":{},"只":{"docs":{},"要":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"比":{"docs":{},"较":{"docs":{},"操":{"docs":{},"作":{"docs":{},"所":{"docs":{},"用":{"docs":{},"到":{"docs":{},"的":{"docs":{},"信":{"docs":{},"息":{"docs":{},"没":{"docs":{},"有":{"docs":{},"被":{"docs":{},"修":{"docs":{},"改":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"对":{"docs":{},"这":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"调":{"docs":{},"用":{"docs":{},"多":{"docs":{},"次":{"docs":{},"，":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"方":{"docs":{},"法":{"docs":{},"必":{"docs":{},"须":{"docs":{},"都":{"docs":{},"始":{"docs":{},"终":{"docs":{},"如":{"docs":{},"一":{"docs":{},"地":{"docs":{},"返":{"docs":{},"回":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"整":{"docs":{},"数":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"每":{"docs":{},"个":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"了":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"类":{"docs":{},"中":{"docs":{},"，":{"docs":{},"也":{"docs":{},"必":{"docs":{},"须":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"就":{"docs":{},"会":{"docs":{},"违":{"docs":{},"反":{"docs":{},"了":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"的":{"docs":{},"通":{"docs":{},"用":{"docs":{},"约":{"docs":{},"定":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"导":{"docs":{},"致":{"docs":{},"该":{"docs":{},"类":{"docs":{},"无":{"docs":{},"法":{"docs":{},"结":{"docs":{},"合":{"docs":{},"所":{"docs":{},"有":{"docs":{},"基":{"docs":{},"于":{"docs":{},"散":{"docs":{},"列":{"docs":{},"的":{"docs":{},"集":{"docs":{},"合":{"docs":{},"一":{"docs":{},"起":{"docs":{},"正":{"docs":{},"常":{"docs":{},"动":{"docs":{},"作":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"说":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"，":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"，":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"。":{"docs":{},"那":{"docs":{},"么":{"docs":{},"，":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"规":{"docs":{},"范":{"docs":{},"是":{"docs":{},"什":{"docs":{},"么":{"docs":{},"？":{"docs":{},"以":{"docs":{},"及":{"docs":{},"一":{"docs":{},"个":{"docs":{},"性":{"docs":{},"能":{"docs":{},"良":{"docs":{},"好":{"docs":{},"的":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"应":{"docs":{},"该":{"docs":{},"怎":{"docs":{},"样":{"docs":{},"写":{"docs":{},"？":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"、":{"docs":{},"接":{"docs":{},"口":{"docs":{},"、":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"、":{"docs":{},"方":{"docs":{},"法":{"docs":{},"和":{"docs":{},"域":{"docs":{},"生":{"docs":{},"命":{"docs":{},"处":{"docs":{},"都":{"docs":{},"应":{"docs":{},"该":{"docs":{},"有":{"docs":{},"详":{"docs":{},"细":{"docs":{},"的":{"docs":{},"文":{"docs":{},"档":{"docs":{},"注":{"docs":{},"释":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"好":{"docs":{},"的":{"docs":{},"文":{"docs":{},"档":{"docs":{},"注":{"docs":{},"释":{"docs":{},"有":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"元":{"docs":{},"素":{"docs":{},"？":{"docs":{"第六章 方法/44.API需要编写文档注释.html":{"ref":"第六章 方法/44.API需要编写文档注释.html","tf":0.03333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"实":{"docs":{},"际":{"docs":{},"应":{"docs":{},"用":{"docs":{},"中":{"docs":{},"，":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"方":{"docs":{},"法":{"docs":{},"应":{"docs":{},"该":{"docs":{},"返":{"docs":{},"回":{"docs":{},"对":{"docs":{},"象":{"docs":{},"中":{"docs":{},"包":{"docs":{},"含":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"值":{"docs":{},"得":{"docs":{},"关":{"docs":{},"注":{"docs":{},"的":{"docs":{},"信":{"docs":{},"息":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"对":{"docs":{},"象":{"docs":{},"太":{"docs":{},"大":{"docs":{},"或":{"docs":{},"者":{"docs":{},"对":{"docs":{},"象":{"docs":{},"中":{"docs":{},"包":{"docs":{},"含":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"信":{"docs":{},"息":{"docs":{},"难":{"docs":{},"以":{"docs":{},"用":{"docs":{},"字":{"docs":{},"符":{"docs":{},"来":{"docs":{},"表":{"docs":{},"达":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"做":{"docs":{},"就":{"docs":{},"有":{"docs":{},"点":{"docs":{},"不":{"docs":{},"切":{"docs":{},"实":{"docs":{},"际":{"docs":{},"了":{"docs":{},"，":{"docs":{},"在":{"docs":{},"这":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"方":{"docs":{},"法":{"docs":{},"应":{"docs":{},"该":{"docs":{},"返":{"docs":{},"回":{"docs":{},"类":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"域":{"docs":{},"信":{"docs":{},"息":{"docs":{},"；":{"docs":{"第二章 对象通用的方法/10.覆盖toString.html":{"ref":"第二章 对象通用的方法/10.覆盖toString.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"开":{"docs":{},"发":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"最":{"docs":{},"好":{"docs":{},"要":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"将":{"docs":{},"类":{"docs":{},"的":{"docs":{},"有":{"docs":{},"用":{"docs":{},"信":{"docs":{},"息":{"docs":{},"使":{"docs":{},"用":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"方":{"docs":{},"法":{"docs":{},"进":{"docs":{},"行":{"docs":{},"输":{"docs":{},"出":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"方":{"docs":{},"便":{"docs":{},"调":{"docs":{},"试":{"docs":{},"或":{"docs":{},"者":{"docs":{},"打":{"docs":{},"印":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"输":{"docs":{},"出":{"docs":{"第二章 对象通用的方法/10.覆盖toString.html":{"ref":"第二章 对象通用的方法/10.覆盖toString.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"，":{"docs":{},"有":{"docs":{},"些":{"docs":{},"公":{"docs":{},"共":{"docs":{},"功":{"docs":{},"能":{"docs":{},"已":{"docs":{},"有":{"docs":{},"成":{"docs":{},"熟":{"docs":{},"的":{"docs":{},"解":{"docs":{},"决":{"docs":{},"方":{"docs":{},"案":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"采":{"docs":{},"用":{"docs":{},"开":{"docs":{},"源":{"docs":{},"的":{"docs":{},"组":{"docs":{},"件":{"docs":{},"，":{"docs":{},"利":{"docs":{},"用":{"docs":{},"这":{"docs":{},"些":{"docs":{},"开":{"docs":{},"源":{"docs":{},"的":{"docs":{},"组":{"docs":{},"件":{"docs":{},"的":{"docs":{},"优":{"docs":{},"势":{"docs":{},"在":{"docs":{},"哪":{"docs":{},"里":{"docs":{},"？":{"docs":{"第七章 通用程序设计/47.多使用类库.html":{"ref":"第七章 通用程序设计/47.多使用类库.html","tf":0.1111111111111111}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"现":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"接":{"docs":{},"口":{"docs":{},"时":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"遵":{"docs":{},"守":{"docs":{},"这":{"docs":{},"些":{"docs":{},"规":{"docs":{},"范":{"docs":{},"，":{"docs":{},"特":{"docs":{},"别":{"docs":{},"是":{"docs":{},"在":{"docs":{},"做":{"docs":{},"等":{"docs":{},"同":{"docs":{},"性":{"docs":{},"测":{"docs":{},"试":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"要":{"docs":{},"和":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"等":{"docs":{},"同":{"docs":{},"性":{"docs":{},"测":{"docs":{},"试":{"docs":{},"结":{"docs":{},"果":{"docs":{},"保":{"docs":{},"持":{"docs":{},"一":{"docs":{},"致":{"docs":{},"。":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"任":{"docs":{},"何":{"docs":{},"地":{"docs":{},"方":{"docs":{},"均":{"docs":{},"可":{"docs":{},"访":{"docs":{},"问":{"docs":{},"到":{"docs":{},"；":{"docs":{"第三章 类和接口/13.使类和成员的可访问性最小化.html":{"ref":"第三章 类和接口/13.使类和成员的可访问性最小化.html","tf":0.0625}}}}}}}}}}}},"该":{"docs":{},"类":{"docs":{},"中":{"docs":{},"私":{"docs":{},"有":{"docs":{},"访":{"docs":{},"问":{"docs":{},"；":{"2":{"docs":{},".":{"docs":{"第三章 类和接口/13.使类和成员的可访问性最小化.html":{"ref":"第三章 类和接口/13.使类和成员的可访问性最小化.html","tf":0.0625}}}},"docs":{}}}}}}}}},"上":{"docs":{},"面":{"docs":{},"这":{"docs":{},"个":{"docs":{},"例":{"docs":{},"子":{"docs":{},"里":{"docs":{},"构":{"docs":{},"造":{"docs":{},"了":{"docs":{},"两":{"docs":{},"个":{"docs":{},"类":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"是":{"docs":{},"用":{"docs":{},"来":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"包":{"docs":{},"裹":{"docs":{},"类":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"是":{"docs":{},"用":{"docs":{},"来":{"docs":{},"与":{"docs":{},"现":{"docs":{},"有":{"docs":{},"类":{"docs":{},"进":{"docs":{},"行":{"docs":{},"交":{"docs":{},"互":{"docs":{},"的":{"docs":{},"转":{"docs":{},"发":{"docs":{},"类":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"到":{"docs":{},"，":{"docs":{},"在":{"docs":{},"现":{"docs":{},"在":{"docs":{},"这":{"docs":{},"个":{"docs":{},"实":{"docs":{},"现":{"docs":{},"中":{"docs":{},"包":{"docs":{},"裹":{"docs":{},"类":{"docs":{},"不":{"docs":{},"再":{"docs":{},"直":{"docs":{},"接":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"了":{"docs":{},"他":{"docs":{},"的":{"docs":{},"转":{"docs":{},"发":{"docs":{},"类":{"docs":{},"，":{"docs":{},"而":{"docs":{},"在":{"docs":{},"转":{"docs":{},"发":{"docs":{},"类":{"docs":{},"内":{"docs":{},"部":{"docs":{},"，":{"docs":{},"现":{"docs":{},"有":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"类":{"docs":{},"是":{"docs":{},"作":{"docs":{},"为":{"docs":{},"它":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"域":{"docs":{},"存":{"docs":{},"在":{"docs":{},"的":{"docs":{},"，":{"docs":{},"转":{"docs":{},"发":{"docs":{},"类":{"docs":{},"实":{"docs":{},"现":{"docs":{},"了":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"接":{"docs":{},"口":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"它":{"docs":{},"就":{"docs":{},"包":{"docs":{},"括":{"docs":{},"了":{"docs":{},"现":{"docs":{},"有":{"docs":{},"类":{"docs":{},"的":{"docs":{},"基":{"docs":{},"本":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{},"每":{"docs":{},"个":{"docs":{},"转":{"docs":{},"发":{"docs":{},"动":{"docs":{},"作":{"docs":{},"都":{"docs":{},"直":{"docs":{},"接":{"docs":{},"调":{"docs":{},"用":{"docs":{},"现":{"docs":{},"有":{"docs":{},"类":{"docs":{},"的":{"docs":{},"相":{"docs":{},"应":{"docs":{},"方":{"docs":{},"法":{"docs":{},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{},"相":{"docs":{},"应":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{},"这":{"docs":{},"样":{"docs":{},"就":{"docs":{},"将":{"docs":{},"信":{"docs":{},"赖":{"docs":{},"于":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"细":{"docs":{},"节":{"docs":{},"排":{"docs":{},"除":{"docs":{},"在":{"docs":{},"包":{"docs":{},"裹":{"docs":{},"类":{"docs":{},"之":{"docs":{},"外":{"docs":{},"。":{"docs":{},"有":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"复":{"docs":{},"合":{"docs":{},"和":{"docs":{},"转":{"docs":{},"发":{"docs":{},"的":{"docs":{},"结":{"docs":{},"合":{"docs":{},"被":{"docs":{},"错":{"docs":{},"误":{"docs":{},"的":{"docs":{},"称":{"docs":{},"为":{"docs":{},"\"":{"docs":{},"委":{"docs":{},"托":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},"\"":{"docs":{},"。":{"docs":{},"从":{"docs":{},"技":{"docs":{},"术":{"docs":{},"的":{"docs":{},"角":{"docs":{},"度":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"这":{"docs":{},"不":{"docs":{},"是":{"docs":{},"委":{"docs":{},"托":{"docs":{},"，":{"docs":{},"除":{"docs":{},"非":{"docs":{},"包":{"docs":{},"装":{"docs":{},"对":{"docs":{},"象":{"docs":{},"把":{"docs":{},"自":{"docs":{},"身":{"docs":{},"传":{"docs":{},"递":{"docs":{},"给":{"docs":{},"被":{"docs":{},"包":{"docs":{},"装":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"企":{"docs":{},"图":{"docs":{},"利":{"docs":{},"用":{"docs":{},"数":{"docs":{},"组":{"docs":{},"越":{"docs":{},"界":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{},"从":{"docs":{},"而":{"docs":{},"跳":{"docs":{},"出":{"docs":{},"死":{"docs":{},"循":{"docs":{},"环":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"针":{"docs":{},"对":{"docs":{},"的":{"docs":{},"是":{"docs":{},"数":{"docs":{},"组":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"场":{"docs":{},"景":{"docs":{},"，":{"docs":{},"这":{"docs":{},"么":{"docs":{},"做":{"docs":{},"的":{"docs":{},"目":{"docs":{},"的":{"docs":{},"是":{"docs":{},"企":{"docs":{},"图":{"docs":{},"利":{"docs":{},"用":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"异":{"docs":{},"常":{"docs":{},"机":{"docs":{},"制":{"docs":{},"，":{"docs":{},"来":{"docs":{},"跳":{"docs":{},"过":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"中":{"docs":{},"每":{"docs":{},"次":{"docs":{},"都":{"docs":{},"需":{"docs":{},"要":{"docs":{},"检":{"docs":{},"查":{"docs":{},"是":{"docs":{},"否":{"docs":{},"越":{"docs":{},"界":{"docs":{},"来":{"docs":{},"达":{"docs":{},"到":{"docs":{},"性":{"docs":{},"能":{"docs":{},"优":{"docs":{},"化":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"用":{"docs":{},"法":{"docs":{},"显":{"docs":{},"然":{"docs":{},"是":{"docs":{},"不":{"docs":{},"合":{"docs":{},"理":{"docs":{},"的":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"，":{"docs":{},"对":{"docs":{},"异":{"docs":{},"常":{"docs":{},"的":{"docs":{},"使":{"docs":{},"用":{"docs":{},"应":{"docs":{},"该":{"docs":{},"注":{"docs":{},"意":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"问":{"docs":{},"题":{"docs":{},"？":{"docs":{"第八章 异常/57.只针对异常的情况才使用异常.html":{"ref":"第八章 异常/57.只针对异常的情况才使用异常.html","tf":0.043478260869565216}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"1":{"docs":{},".":{"5":{"docs":{},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"对":{"docs":{},"集":{"docs":{},"合":{"docs":{},"的":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"习":{"docs":{},"惯":{"docs":{},"用":{"docs":{},"下":{"docs":{},"面":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"：":{"docs":{"第七章 通用程序设计/46.for-each循环优于传统的for循环.html":{"ref":"第七章 通用程序设计/46.for-each循环优于传统的for循环.html","tf":0.025}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{},"平":{"docs":{},"台":{"docs":{},"类":{"docs":{},"库":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"数":{"docs":{},"值":{"docs":{},"包":{"docs":{},"装":{"docs":{},"类":{"docs":{},"都":{"docs":{},"导":{"docs":{},"出":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"和":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"常":{"docs":{},"量":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"这":{"docs":{},"些":{"docs":{},"常":{"docs":{},"量":{"docs":{},"最":{"docs":{},"好":{"docs":{},"被":{"docs":{},"看":{"docs":{},"作":{"docs":{},"是":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"类":{"docs":{},"型":{"docs":{},"成":{"docs":{},"员":{"docs":{},"，":{"docs":{},"那":{"docs":{},"就":{"docs":{},"应":{"docs":{},"该":{"docs":{},"用":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"类":{"docs":{},"型":{"docs":{},"来":{"docs":{},"导":{"docs":{},"出":{"docs":{},"。":{"docs":{"第三章 类和接口/19.接口只用于定义类型.html":{"ref":"第三章 类和接口/19.接口只用于定义类型.html","tf":0.02702702702702703}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"里":{"docs":{},"，":{"docs":{},"指":{"docs":{},"向":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"当":{"docs":{},"作":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"向":{"docs":{},"该":{"docs":{},"对":{"docs":{},"象":{"docs":{},"内":{"docs":{},"部":{"docs":{},"比":{"docs":{},"较":{"docs":{},"器":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"的":{"docs":{},"“":{"docs":{},"函":{"docs":{},"数":{"docs":{},"指":{"docs":{},"针":{"docs":{},"”":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"任":{"docs":{},"意":{"docs":{},"一":{"docs":{},"对":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"上":{"docs":{},"被":{"docs":{},"调":{"docs":{},"用":{"docs":{},"，":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"实":{"docs":{},"例":{"docs":{},"是":{"docs":{},"用":{"docs":{},"于":{"docs":{},"比":{"docs":{},"较":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"比":{"docs":{},"较":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"具":{"docs":{},"体":{"docs":{},"策":{"docs":{},"略":{"docs":{},"。":{"docs":{},"对":{"docs":{},"于":{"docs":{},"这":{"docs":{},"种":{"docs":{},"具":{"docs":{},"体":{"docs":{},"策":{"docs":{},"略":{"docs":{},"类":{"docs":{},"，":{"docs":{},"它":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"实":{"docs":{},"例":{"docs":{},"在":{"docs":{},"功":{"docs":{},"能":{"docs":{},"上":{"docs":{},"是":{"docs":{},"相":{"docs":{},"互":{"docs":{},"等":{"docs":{},"价":{"docs":{},"的":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"根":{"docs":{},"据":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"原":{"docs":{},"则":{"docs":{},"，":{"docs":{},"将":{"docs":{},"它":{"docs":{},"作":{"docs":{},"成":{"docs":{},"是":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"是":{"docs":{},"非":{"docs":{},"常":{"docs":{},"合":{"docs":{},"适":{"docs":{},"的":{"docs":{},"：":{"docs":{"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"类":{"docs":{},"中":{"docs":{},"同":{"docs":{},"样":{"docs":{},"可":{"docs":{},"以":{"docs":{},"有":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"域":{"docs":{},"和":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"些":{"docs":{},"特":{"docs":{},"定":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"此":{"docs":{},"写":{"docs":{},"法":{"docs":{},"有":{"docs":{},"个":{"docs":{},"缺":{"docs":{},"点":{"docs":{},"，":{"docs":{},"即":{"docs":{},"如":{"docs":{},"果":{"docs":{},"每":{"docs":{},"个":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"常":{"docs":{},"量":{"docs":{},"都":{"docs":{},"有":{"docs":{},"公":{"docs":{},"共":{"docs":{},"的":{"docs":{},"部":{"docs":{},"分":{"docs":{},"处":{"docs":{},"理":{"docs":{},"该":{"docs":{},"怎":{"docs":{},"么":{"docs":{},"办":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"每":{"docs":{},"个":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"常":{"docs":{},"量":{"docs":{},"关":{"docs":{},"联":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"里":{"docs":{},"都":{"docs":{},"有":{"docs":{},"公":{"docs":{},"共":{"docs":{},"的":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"那":{"docs":{},"不":{"docs":{},"仅":{"docs":{},"不":{"docs":{},"美":{"docs":{},"观":{"docs":{},"，":{"docs":{},"还":{"docs":{},"违":{"docs":{},"反":{"docs":{},"了":{"docs":{},"d":{"docs":{},"r":{"docs":{},"y":{"docs":{},"原":{"docs":{},"则":{"docs":{},"。":{"docs":{},"这":{"docs":{},"就":{"docs":{},"是":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"策":{"docs":{},"略":{"docs":{},"模":{"docs":{},"式":{"docs":{},"。":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"枚":{"docs":{},"举":{"docs":{},"类":{"docs":{},"型":{"docs":{},"出":{"docs":{},"现":{"docs":{},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"一":{"docs":{},"般":{"docs":{},"都":{"docs":{},"常":{"docs":{},"常":{"docs":{},"使":{"docs":{},"用":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"常":{"docs":{},"量":{"docs":{},"或":{"docs":{},"者":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"常":{"docs":{},"量":{"docs":{},"表":{"docs":{},"示":{"docs":{},"列":{"docs":{},"举":{"docs":{},"相":{"docs":{},"关":{"docs":{},"事":{"docs":{},"物":{"docs":{},"。":{"docs":{},"如":{"docs":{},"：":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"型":{"docs":{},"安":{"docs":{},"全":{"docs":{},"方":{"docs":{},"面":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"你":{"docs":{},"想":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"是":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"传":{"docs":{},"递":{"docs":{},"是":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"f":{"docs":{},"u":{"docs":{},"j":{"docs":{},"i":{"docs":{},"，":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"并":{"docs":{},"不":{"docs":{},"能":{"docs":{},"检":{"docs":{},"测":{"docs":{},"出":{"docs":{},"错":{"docs":{},"误":{"docs":{},"；":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"调":{"docs":{},"用":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"使":{"docs":{},"用":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"可":{"docs":{},"以":{"docs":{},"直":{"docs":{},"接":{"docs":{},"指":{"docs":{},"定":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"编":{"docs":{},"译":{"docs":{},"不":{"docs":{},"通":{"docs":{},"过":{"docs":{},"；":{"docs":{},"并":{"docs":{},"且":{"docs":{},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"显":{"docs":{},"示":{"docs":{},"的":{"docs":{},"是":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"中":{"docs":{},"的":{"docs":{},"常":{"docs":{},"量":{"docs":{},"（":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"f":{"docs":{},"u":{"docs":{},"j":{"docs":{},"i":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"）":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"一":{"docs":{},"眼":{"docs":{},"看":{"docs":{},"出":{"docs":{},"是":{"docs":{},"否":{"docs":{},"用":{"docs":{},"错":{"docs":{},"；":{"docs":{},"最":{"docs":{},"后":{"docs":{},"由":{"docs":{},"于":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"导":{"docs":{},"出":{"docs":{},"的":{"docs":{},"常":{"docs":{},"量":{"docs":{},"域":{"docs":{},"（":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"f":{"docs":{},"u":{"docs":{},"j":{"docs":{},"i":{"docs":{},"等":{"docs":{},"）":{"docs":{},"与":{"docs":{},"客":{"docs":{},"户":{"docs":{},"端":{"docs":{},"之":{"docs":{},"间":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"来":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"，":{"docs":{},"再":{"docs":{},"增":{"docs":{},"加":{"docs":{},"或":{"docs":{},"者":{"docs":{},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"类":{"docs":{},"型":{"docs":{},"中":{"docs":{},"的":{"docs":{},"常":{"docs":{},"量":{"docs":{},"后":{"docs":{},"，":{"docs":{},"并":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"重":{"docs":{},"新":{"docs":{},"编":{"docs":{},"译":{"docs":{},"客":{"docs":{},"户":{"docs":{},"端":{"docs":{},"代":{"docs":{},"码":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"文":{"docs":{},"档":{"docs":{},"中":{"docs":{},"说":{"docs":{},"明":{"docs":{},"违":{"docs":{},"反":{"docs":{},"参":{"docs":{},"数":{"docs":{},"值":{"docs":{},"限":{"docs":{},"制":{"docs":{},"时":{"docs":{},"会":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{},"。":{"docs":{},"通":{"docs":{},"常":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{},"为":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"，":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"f":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"。":{"docs":{"第六章 方法/38.检查方法参数的有效性.html":{"ref":"第六章 方法/38.检查方法参数的有效性.html","tf":0.125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"描":{"docs":{},"述":{"docs":{},"有":{"docs":{},"条":{"docs":{},"件":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"类":{"docs":{},"要":{"docs":{},"特":{"docs":{},"别":{"docs":{},"小":{"docs":{},"心":{"docs":{},"，":{"docs":{},"必":{"docs":{},"须":{"docs":{},"指":{"docs":{},"明":{"docs":{},"哪":{"docs":{},"个":{"docs":{},"调":{"docs":{},"用":{"docs":{},"方":{"docs":{},"法":{"docs":{},"需":{"docs":{},"要":{"docs":{},"外":{"docs":{},"部":{"docs":{},"同":{"docs":{},"步":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"需":{"docs":{},"要":{"docs":{},"获":{"docs":{},"得":{"docs":{},"哪":{"docs":{},"一":{"docs":{},"把":{"docs":{},"锁":{"docs":{},"；":{"docs":{"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"设":{"docs":{},"计":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"时":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"遵":{"docs":{},"守":{"docs":{},"一":{"docs":{},"些":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"通":{"docs":{},"用":{"docs":{},"的":{"docs":{},"规":{"docs":{},"则":{"docs":{},"来":{"docs":{},"设":{"docs":{},"计":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"以":{"docs":{},"保":{"docs":{},"证":{"docs":{},"方":{"docs":{},"法":{"docs":{},"可":{"docs":{},"读":{"docs":{},"性":{"docs":{},"更":{"docs":{},"强":{"docs":{},"，":{"docs":{},"更":{"docs":{},"安":{"docs":{},"全":{"docs":{},"可":{"docs":{},"靠":{"docs":{},"？":{"docs":{"第六章 方法/40.谨慎的设计方法签名.html":{"ref":"第六章 方法/40.谨慎的设计方法签名.html","tf":0.125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"异":{"docs":{},"常":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"换":{"docs":{},"位":{"docs":{},"思":{"docs":{},"考":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"自":{"docs":{},"己":{"docs":{},"是":{"docs":{},"调":{"docs":{},"用":{"docs":{},"方":{"docs":{},"使":{"docs":{},"用":{"docs":{},"你":{"docs":{},"设":{"docs":{},"计":{"docs":{},"的":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"，":{"docs":{},"处":{"docs":{},"理":{"docs":{},"你":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{},"应":{"docs":{},"该":{"docs":{},"怎":{"docs":{},"样":{"docs":{},"处":{"docs":{},"理":{"docs":{},"？":{"docs":{},"如":{"docs":{},"果":{"docs":{},"有":{"docs":{},"明":{"docs":{},"确":{"docs":{},"的":{"docs":{},"思":{"docs":{},"路":{"docs":{},"，":{"docs":{},"就":{"docs":{},"说":{"docs":{},"明":{"docs":{},"这":{"docs":{},"个":{"docs":{},"异":{"docs":{},"常":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"来":{"docs":{},"是":{"docs":{},"合":{"docs":{},"适":{"docs":{},"的":{"docs":{},"。":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"，":{"docs":{},"异":{"docs":{},"常":{"docs":{},"是":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"中":{"docs":{},"不":{"docs":{},"可":{"docs":{},"避":{"docs":{},"免":{"docs":{},"的":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"一":{"docs":{},"旦":{"docs":{},"产":{"docs":{},"生":{"docs":{},"，":{"docs":{},"调":{"docs":{},"用":{"docs":{},"方":{"docs":{},"能":{"docs":{},"够":{"docs":{},"合":{"docs":{},"理":{"docs":{},"的":{"docs":{},"处":{"docs":{},"理":{"docs":{},"，":{"docs":{},"就":{"docs":{},"说":{"docs":{},"明":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"受":{"docs":{},"检":{"docs":{},"异":{"docs":{},"常":{"docs":{},"是":{"docs":{},"合":{"docs":{},"适":{"docs":{},"的":{"docs":{},"，":{"docs":{},"一":{"docs":{},"定":{"docs":{},"要":{"docs":{},"求":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"前":{"docs":{},"提":{"docs":{},"条":{"docs":{},"件":{"docs":{},"全":{"docs":{},"部":{"docs":{},"成":{"docs":{},"立":{"docs":{},"；":{"docs":{"第八章 异常/59.避免不必要的使用受检的异常.html":{"ref":"第八章 异常/59.避免不必要的使用受检的异常.html","tf":0.024390243902439025}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"时":{"docs":{},"，":{"docs":{},"异":{"docs":{},"常":{"docs":{},"是":{"docs":{},"应":{"docs":{},"该":{"docs":{},"着":{"docs":{},"重":{"docs":{},"关":{"docs":{},"注":{"docs":{},"的":{"docs":{},"，":{"docs":{},"同":{"docs":{},"样":{"docs":{},"地":{"docs":{},"，":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"文":{"docs":{},"档":{"docs":{},"注":{"docs":{},"释":{"docs":{},"上":{"docs":{},"异":{"docs":{},"常":{"docs":{},"条":{"docs":{},"件":{"docs":{},"也":{"docs":{},"需":{"docs":{},"要":{"docs":{},"显":{"docs":{},"式":{"docs":{},"的":{"docs":{},"说":{"docs":{},"明":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"在":{"docs":{},"针":{"docs":{},"对":{"docs":{},"异":{"docs":{},"常":{"docs":{},"编":{"docs":{},"写":{"docs":{},"文":{"docs":{},"档":{"docs":{},"时":{"docs":{},"，":{"docs":{},"有":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"需":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"的":{"docs":{},"地":{"docs":{},"方":{"docs":{},"？":{"docs":{"第八章 异常/62.每个方法抛出的异常都要有文档.html":{"ref":"第八章 异常/62.每个方法抛出的异常都要有文档.html","tf":0.1111111111111111}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"重":{"docs":{},"视":{"docs":{},"性":{"docs":{},"能":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"可":{"docs":{},"变":{"docs":{},"参":{"docs":{},"数":{"docs":{},"机":{"docs":{},"制":{"docs":{},"要":{"docs":{},"小":{"docs":{},"心":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"可":{"docs":{},"变":{"docs":{},"参":{"docs":{},"数":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"每":{"docs":{},"次":{"docs":{},"调":{"docs":{},"用":{"docs":{},"都":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"进":{"docs":{},"行":{"docs":{},"一":{"docs":{},"次":{"docs":{},"数":{"docs":{},"组":{"docs":{},"分":{"docs":{},"配":{"docs":{},"和":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"，":{"docs":{},"有":{"docs":{},"一":{"docs":{},"种":{"docs":{},"折":{"docs":{},"中":{"docs":{},"的":{"docs":{},"解":{"docs":{},"决":{"docs":{},"方":{"docs":{},"案":{"docs":{},"，":{"docs":{},"假":{"docs":{},"设":{"docs":{},"确":{"docs":{},"定":{"docs":{},"某":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"大":{"docs":{},"部":{"docs":{},"分":{"docs":{},"调":{"docs":{},"用":{"docs":{},"会":{"docs":{},"有":{"3":{"docs":{},"个":{"docs":{},"或":{"docs":{},"者":{"docs":{},"更":{"docs":{},"少":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"就":{"docs":{},"声":{"docs":{},"明":{"docs":{},"该":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"5":{"docs":{},"个":{"docs":{},"重":{"docs":{},"载":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"重":{"docs":{},"载":{"docs":{},"带":{"docs":{},"有":{"0":{"docs":{},"至":{"3":{"docs":{},"个":{"docs":{},"普":{"docs":{},"通":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"当":{"docs":{},"参":{"docs":{},"数":{"docs":{},"数":{"docs":{},"目":{"docs":{},"超":{"docs":{},"过":{"3":{"docs":{},"个":{"docs":{},"时":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"可":{"docs":{},"变":{"docs":{},"参":{"docs":{},"数":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"大":{"docs":{},"多":{"docs":{},"数":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"都":{"docs":{},"应":{"docs":{},"该":{"docs":{},"使":{"docs":{},"用":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"第七章 通用程序设计/46.for-each循环优于传统的for循环.html":{"ref":"第七章 通用程序设计/46.for-each循环优于传统的for循环.html","tf":0.025}}}}}}}}}},"，":{"docs":{},"不":{"docs":{},"成":{"docs":{},"熟":{"docs":{},"的":{"docs":{},"优":{"docs":{},"化":{"docs":{},"都":{"docs":{},"会":{"docs":{},"造":{"docs":{},"成":{"docs":{},"更":{"docs":{},"严":{"docs":{},"重":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"在":{"docs":{},"进":{"docs":{},"行":{"docs":{},"性":{"docs":{},"能":{"docs":{},"优":{"docs":{},"化":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"应":{"docs":{},"该":{"docs":{},"着":{"docs":{},"重":{"docs":{},"关":{"docs":{},"注":{"docs":{},"于":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"方":{"docs":{},"面":{"docs":{},"？":{"docs":{"第七章 通用程序设计/55.谨慎的进行优化.html":{"ref":"第七章 通用程序设计/55.谨慎的进行优化.html","tf":0.038461538461538464}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"集":{"docs":{},"合":{"docs":{},"和":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"时":{"docs":{},"，":{"docs":{},"优":{"docs":{},"先":{"docs":{},"采":{"docs":{},"用":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"第七章 通用程序设计/46.for-each循环优于传统的for循环.html":{"ref":"第七章 通用程序设计/46.for-each循环优于传统的for循环.html","tf":0.025}}}}}}}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"精":{"docs":{},"确":{"docs":{},"结":{"docs":{},"果":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"需":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{},"b":{"docs":{},"i":{"docs":{},"g":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"，":{"docs":{},"b":{"docs":{},"i":{"docs":{},"g":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"所":{"docs":{},"创":{"docs":{},"建":{"docs":{},"的":{"docs":{},"是":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"不":{"docs":{},"能":{"docs":{},"使":{"docs":{},"用":{"docs":{},"传":{"docs":{},"统":{"docs":{},"的":{"docs":{},"+":{"docs":{},"、":{"docs":{"第七章 通用程序设计/48.需要精确答案，请避免使用float和double.html":{"ref":"第七章 通用程序设计/48.需要精确答案，请避免使用float和double.html","tf":0.07142857142857142}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"优":{"docs":{},"化":{"docs":{},"方":{"docs":{},"面":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"应":{"docs":{},"该":{"docs":{},"遵":{"docs":{},"守":{"docs":{},"两":{"docs":{},"条":{"docs":{},"规":{"docs":{},"则":{"docs":{},"：":{"docs":{"第七章 通用程序设计/55.谨慎的进行优化.html":{"ref":"第七章 通用程序设计/55.谨慎的进行优化.html","tf":0.038461538461538464}}}}}}}}}}}}}}}}}},"涉":{"docs":{},"及":{"docs":{},"到":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"程":{"docs":{},"序":{"docs":{},"时":{"docs":{},"，":{"docs":{},"不":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"创":{"docs":{},"建":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"使":{"docs":{},"用":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"来":{"docs":{},"管":{"docs":{},"理":{"docs":{},"和":{"docs":{},"创":{"docs":{},"建":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"它":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"好":{"docs":{},"处":{"docs":{},"在":{"docs":{},"于":{"docs":{},"工":{"docs":{},"作":{"docs":{},"单":{"docs":{},"元":{"docs":{},"（":{"docs":{},"线":{"docs":{},"程":{"docs":{},"）":{"docs":{},"和":{"docs":{},"任":{"docs":{},"务":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"解":{"docs":{},"耦":{"docs":{},"。":{"docs":{"第九章 并发/68.executor和task优于创建线程.html":{"ref":"第九章 并发/68.executor和task优于创建线程.html","tf":0.125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"，":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"会":{"docs":{},"试":{"docs":{},"图":{"docs":{},"调":{"docs":{},"用":{"docs":{},"对":{"docs":{},"象":{"docs":{},"类":{"docs":{},"里":{"docs":{},"的":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"第十章 序列化/75.考虑使用自定义的序列化形式.html":{"ref":"第十章 序列化/75.考虑使用自定义的序列化形式.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"第":{"3":{"9":{"docs":{},"条":{"docs":{},"里":{"docs":{},"介":{"docs":{},"绍":{"docs":{},"到":{"docs":{},"了":{"docs":{},"为":{"docs":{},"了":{"docs":{},"让":{"docs":{},"程":{"docs":{},"序":{"docs":{},"更":{"docs":{},"加":{"docs":{},"安":{"docs":{},"全":{"docs":{},"可":{"docs":{},"靠":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"针":{"docs":{},"对":{"docs":{},"可":{"docs":{},"变":{"docs":{},"域":{"docs":{},"在":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"和":{"docs":{},"访":{"docs":{},"问":{"docs":{},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"进":{"docs":{},"行":{"docs":{},"保":{"docs":{},"护":{"docs":{},"性":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"：":{"docs":{"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"外":{"docs":{},"围":{"docs":{},"类":{"docs":{},"要":{"docs":{},"通":{"docs":{},"过":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"异":{"docs":{},"常":{"docs":{},"，":{"docs":{},"即":{"docs":{},"表":{"docs":{},"明":{"docs":{},"禁":{"docs":{},"止":{"docs":{},"调":{"docs":{},"用":{"docs":{},"者":{"docs":{},"调":{"docs":{},"用":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"，":{"docs":{},"杜":{"docs":{},"绝":{"docs":{},"攻":{"docs":{},"击":{"docs":{},"者":{"docs":{},"企":{"docs":{},"图":{"docs":{},"通":{"docs":{},"过":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"进":{"docs":{},"行":{"docs":{},"伪":{"docs":{},"字":{"docs":{},"节":{"docs":{},"流":{"docs":{},"攻":{"docs":{},"击":{"docs":{},"和":{"docs":{},"内":{"docs":{},"部":{"docs":{},"域":{"docs":{},"盗":{"docs":{},"用":{"docs":{},"攻":{"docs":{},"击":{"docs":{},"；":{"docs":{"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"类":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"或":{"docs":{},"者":{"docs":{},"静":{"docs":{},"态":{"docs":{},"工":{"docs":{},"厂":{"docs":{},"中":{"docs":{},"具":{"docs":{},"有":{"docs":{},"多":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"时":{"docs":{},"，":{"docs":{},"设":{"docs":{},"计":{"docs":{},"这":{"docs":{},"种":{"docs":{},"类":{"docs":{},"时":{"docs":{},"，":{"docs":{},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"模":{"docs":{},"式":{"docs":{},"就":{"docs":{},"是":{"docs":{},"种":{"docs":{},"不":{"docs":{},"错":{"docs":{},"的":{"docs":{},"选":{"docs":{},"择":{"docs":{},"，":{"docs":{},"特":{"docs":{},"别":{"docs":{},"是":{"docs":{},"当":{"docs":{},"大":{"docs":{},"多":{"docs":{},"数":{"docs":{},"参":{"docs":{},"数":{"docs":{},"都":{"docs":{},"是":{"docs":{},"可":{"docs":{},"选":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"与":{"docs":{},"使":{"docs":{},"用":{"docs":{},"传":{"docs":{},"统":{"docs":{},"的":{"docs":{},"重":{"docs":{},"叠":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"模":{"docs":{},"式":{"docs":{},"项":{"docs":{},"目":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"模":{"docs":{},"式":{"docs":{},"代":{"docs":{},"码":{"docs":{},"可":{"docs":{},"读":{"docs":{},"性":{"docs":{},"更":{"docs":{},"强":{"docs":{},"，":{"docs":{},"也":{"docs":{},"比":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"更":{"docs":{},"加":{"docs":{},"安":{"docs":{},"全":{"docs":{},"。":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.009009009009009009}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"据":{"docs":{},"域":{"docs":{},"可":{"docs":{},"在":{"docs":{},"它":{"docs":{},"所":{"docs":{},"在":{"docs":{},"的":{"docs":{},"包":{"docs":{},"外":{"docs":{},"部":{"docs":{},"进":{"docs":{},"行":{"docs":{},"访":{"docs":{},"问":{"docs":{},"，":{"docs":{},"就":{"docs":{},"提":{"docs":{},"供":{"docs":{},"访":{"docs":{},"问":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"可":{"docs":{},"以":{"docs":{},"保":{"docs":{},"留":{"docs":{},"该":{"docs":{},"类":{"docs":{},"内":{"docs":{},"部":{"docs":{},"表":{"docs":{},"示":{"docs":{},"的":{"docs":{},"灵":{"docs":{},"活":{"docs":{},"性":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"公":{"docs":{},"有":{"docs":{},"类":{"docs":{},"暴":{"docs":{},"露":{"docs":{},"了":{"docs":{},"它":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"域":{"docs":{},"，":{"docs":{},"要":{"docs":{},"想":{"docs":{},"将":{"docs":{},"来":{"docs":{},"想":{"docs":{},"改":{"docs":{},"变":{"docs":{},"公":{"docs":{},"有":{"docs":{},"类":{"docs":{},"的":{"docs":{},"内":{"docs":{},"部":{"docs":{},"数":{"docs":{},"据":{"docs":{},"接":{"docs":{},"口":{"docs":{},"，":{"docs":{},"那":{"docs":{},"是":{"docs":{},"不":{"docs":{},"太":{"docs":{},"可":{"docs":{},"能":{"docs":{},"的":{"docs":{},"事":{"docs":{},"情":{"docs":{},"了":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"使":{"docs":{},"用":{"docs":{},"公":{"docs":{},"有":{"docs":{},"类":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"域":{"docs":{},"已":{"docs":{},"经":{"docs":{},"遍":{"docs":{},"布":{"docs":{},"整":{"docs":{},"个":{"docs":{},"系":{"docs":{},"统":{"docs":{},"中":{"docs":{},"了":{"docs":{},"；":{"docs":{"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html":{"ref":"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html","tf":0.013513513513513514}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"了":{"docs":{},"父":{"docs":{},"类":{"docs":{},"中":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"子":{"docs":{},"类":{"docs":{},"中":{"docs":{},"的":{"docs":{},"访":{"docs":{},"问":{"docs":{},"级":{"docs":{},"别":{"docs":{},"不":{"docs":{},"得":{"docs":{},"低":{"docs":{},"于":{"docs":{},"父":{"docs":{},"类":{"docs":{},"中":{"docs":{},"的":{"docs":{},"访":{"docs":{},"问":{"docs":{},"级":{"docs":{},"别":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"保":{"docs":{},"证":{"docs":{},"在":{"docs":{},"任":{"docs":{},"何":{"docs":{},"使":{"docs":{},"用":{"docs":{},"到":{"docs":{},"父":{"docs":{},"类":{"docs":{},"实":{"docs":{},"例":{"docs":{},"的":{"docs":{},"地":{"docs":{},"方":{"docs":{},"可":{"docs":{},"以":{"docs":{},"继":{"docs":{},"续":{"docs":{},"使":{"docs":{},"用":{"docs":{},"子":{"docs":{},"类":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"实":{"docs":{},"现":{"docs":{},"了":{"docs":{},"某":{"docs":{},"接":{"docs":{},"口":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"在":{"docs":{},"类":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"接":{"docs":{},"口":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"都":{"docs":{},"必":{"docs":{},"须":{"docs":{},"是":{"docs":{},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"的":{"docs":{},"；":{"docs":{"第三章 类和接口/13.使类和成员的可访问性最小化.html":{"ref":"第三章 类和接口/13.使类和成员的可访问性最小化.html","tf":0.0625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"具":{"docs":{},"有":{"docs":{},"从":{"docs":{},"客":{"docs":{},"户":{"docs":{},"端":{"docs":{},"得":{"docs":{},"到":{"docs":{},"或":{"docs":{},"者":{"docs":{},"返":{"docs":{},"回":{"docs":{},"到":{"docs":{},"客":{"docs":{},"户":{"docs":{},"端":{"docs":{},"的":{"docs":{},"可":{"docs":{},"变":{"docs":{},"组":{"docs":{},"件":{"docs":{},"，":{"docs":{},"类":{"docs":{},"就":{"docs":{},"必":{"docs":{},"须":{"docs":{},"保":{"docs":{},"护":{"docs":{},"性":{"docs":{},"地":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"这":{"docs":{},"些":{"docs":{},"组":{"docs":{},"件":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"的":{"docs":{},"成":{"docs":{},"本":{"docs":{},"受":{"docs":{},"到":{"docs":{},"限":{"docs":{},"制":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"类":{"docs":{},"信":{"docs":{},"任":{"docs":{},"它":{"docs":{},"的":{"docs":{},"客":{"docs":{},"户":{"docs":{},"端":{"docs":{},"不":{"docs":{},"会":{"docs":{},"不":{"docs":{},"恰":{"docs":{},"当":{"docs":{},"地":{"docs":{},"修":{"docs":{},"改":{"docs":{},"这":{"docs":{},"些":{"docs":{},"组":{"docs":{},"件":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"文":{"docs":{},"档":{"docs":{},"中":{"docs":{},"进":{"docs":{},"行":{"docs":{},"说":{"docs":{},"明":{"docs":{},"。":{"docs":{"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"被":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"了":{"docs":{},"，":{"docs":{},"不":{"docs":{},"论":{"docs":{},"是":{"docs":{},"采":{"docs":{},"用":{"docs":{},"默":{"docs":{},"认":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"方":{"docs":{},"式":{"docs":{},"还":{"docs":{},"是":{"docs":{},"采":{"docs":{},"用":{"docs":{},"自":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"在":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"进":{"docs":{},"行":{"docs":{},"所":{"docs":{},"谓":{"docs":{},"的":{"docs":{},"处":{"docs":{},"理":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"类":{"docs":{},"都":{"docs":{},"将":{"docs":{},"不":{"docs":{},"会":{"docs":{},"是":{"docs":{},"单":{"docs":{},"例":{"docs":{},"的":{"docs":{},"了":{"docs":{},"。":{"docs":{},"那":{"docs":{},"么":{"docs":{},"针":{"docs":{},"对":{"docs":{},"这":{"docs":{},"种":{"docs":{},"要":{"docs":{},"满":{"docs":{},"足":{"docs":{},"可":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"的":{"docs":{},"单":{"docs":{},"例":{"docs":{},"应":{"docs":{},"该":{"docs":{},"怎":{"docs":{},"样":{"docs":{},"实":{"docs":{},"现":{"docs":{},"？":{"docs":{"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.011904761904761904}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"条":{"docs":{},"语":{"docs":{},"句":{"docs":{},"出":{"docs":{},"现":{"docs":{},"在":{"docs":{},"循":{"docs":{},"环":{"docs":{},"中":{"docs":{},"就":{"docs":{},"会":{"docs":{},"在":{"docs":{},"每":{"docs":{},"一":{"docs":{},"次":{"docs":{},"循":{"docs":{},"环":{"docs":{},"时":{"docs":{},"生":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"实":{"docs":{},"例":{"docs":{},"，":{"docs":{},"而":{"docs":{},"这":{"docs":{},"些":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"实":{"docs":{},"例":{"docs":{},"的":{"docs":{},"功":{"docs":{},"能":{"docs":{},"完":{"docs":{},"成":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"这":{"docs":{},"会":{"docs":{},"造":{"docs":{},"成":{"docs":{},"资":{"docs":{},"源":{"docs":{},"的":{"docs":{},"巨":{"docs":{},"大":{"docs":{},"浪":{"docs":{},"费":{"docs":{},"，":{"docs":{},"改":{"docs":{},"进":{"docs":{},"版":{"docs":{},"本":{"docs":{},"如":{"docs":{},"下":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.006493506493506494}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"些":{"docs":{},"常":{"docs":{},"量":{"docs":{},"与":{"docs":{},"某":{"docs":{},"些":{"docs":{},"现":{"docs":{},"有":{"docs":{},"的":{"docs":{},"类":{"docs":{},"或":{"docs":{},"者":{"docs":{},"接":{"docs":{},"口":{"docs":{},"紧":{"docs":{},"密":{"docs":{},"相":{"docs":{},"关":{"docs":{},"，":{"docs":{},"就":{"docs":{},"应":{"docs":{},"该":{"docs":{},"把":{"docs":{},"这":{"docs":{},"些":{"docs":{},"常":{"docs":{},"量":{"docs":{},"添":{"docs":{},"加":{"docs":{},"到":{"docs":{},"这":{"docs":{},"个":{"docs":{},"类":{"docs":{},"或":{"docs":{},"者":{"docs":{},"接":{"docs":{},"口":{"docs":{},"中":{"docs":{},"，":{"docs":{},"注":{"docs":{},"意":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"说":{"docs":{},"添":{"docs":{},"加":{"docs":{},"到":{"docs":{},"接":{"docs":{},"口":{"docs":{},"中":{"docs":{},"并":{"docs":{},"不":{"docs":{},"是":{"docs":{},"指":{"docs":{},"的":{"docs":{},"常":{"docs":{},"量":{"docs":{},"接":{"docs":{},"口":{"docs":{},"。":{"docs":{"第三章 类和接口/19.接口只用于定义类型.html":{"ref":"第三章 类和接口/19.接口只用于定义类型.html","tf":0.02702702702702703}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"先":{"docs":{},"增":{"docs":{},"后":{"docs":{},"减":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"会":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"并":{"docs":{},"不":{"docs":{},"会":{"docs":{},"被":{"docs":{},"当":{"docs":{},"成":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"，":{"docs":{},"原":{"docs":{},"因":{"docs":{},"在":{"docs":{},"于":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"内":{"docs":{},"部":{"docs":{},"维":{"docs":{},"持":{"docs":{},"着":{"docs":{},"对":{"docs":{},"这":{"docs":{},"些":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"过":{"docs":{},"期":{"docs":{},"引":{"docs":{},"用":{"docs":{},"（":{"docs":{},"在":{"docs":{},"这":{"docs":{},"里":{"docs":{},"是":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"原":{"docs":{},"因":{"docs":{},"）":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"就":{"docs":{},"造":{"docs":{},"成":{"docs":{},"了":{"docs":{},"内":{"docs":{},"存":{"docs":{},"泄":{"docs":{},"漏":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"在":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"数":{"docs":{},"据":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"时":{"docs":{},"，":{"docs":{},"最":{"docs":{},"好":{"docs":{},"是":{"docs":{},"释":{"docs":{},"放":{"docs":{},"元":{"docs":{},"素":{"docs":{},"引":{"docs":{},"用":{"docs":{},"，":{"docs":{},"如":{"docs":{},":":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"有":{"docs":{},"多":{"docs":{},"个":{"docs":{},"关":{"docs":{},"键":{"docs":{},"域":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"比":{"docs":{},"较":{"docs":{},"这":{"docs":{},"些":{"docs":{},"关":{"docs":{},"键":{"docs":{},"域":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"非":{"docs":{},"常":{"docs":{},"关":{"docs":{},"键":{"docs":{},"。":{"docs":{},"必":{"docs":{},"须":{"docs":{},"从":{"docs":{},"最":{"docs":{},"关":{"docs":{},"键":{"docs":{},"的":{"docs":{},"域":{"docs":{},"开":{"docs":{},"始":{"docs":{},",":{"docs":{},"逐":{"docs":{},"步":{"docs":{},"进":{"docs":{},"行":{"docs":{},"到":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"重":{"docs":{},"要":{"docs":{},"域":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"某":{"docs":{},"个":{"docs":{},"域":{"docs":{},"的":{"docs":{},"比":{"docs":{},"较":{"docs":{},"产":{"docs":{},"生":{"docs":{},"了":{"docs":{},"非":{"docs":{},"零":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"(":{"0":{"docs":{},"代":{"docs":{},"表":{"docs":{},"着":{"docs":{},"相":{"docs":{},"等":{"docs":{},")":{"docs":{},"，":{"docs":{},"则":{"docs":{},"整":{"docs":{},"个":{"docs":{},"比":{"docs":{},"较":{"docs":{},"操":{"docs":{},"作":{"docs":{},"结":{"docs":{},"束":{"docs":{},"，":{"docs":{},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{},"该":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"最":{"docs":{},"关":{"docs":{},"键":{"docs":{},"的":{"docs":{},"域":{"docs":{},"是":{"docs":{},"相":{"docs":{},"等":{"docs":{},"的":{"docs":{},"，":{"docs":{},"则":{"docs":{},"再":{"docs":{},"比":{"docs":{},"较":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"关":{"docs":{},"键":{"docs":{},"域":{"docs":{},"，":{"docs":{},"以":{"docs":{},"此":{"docs":{},"类":{"docs":{},"推":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"所":{"docs":{},"有":{"docs":{},"域":{"docs":{},"都":{"docs":{},"是":{"docs":{},"相":{"docs":{},"等":{"docs":{},"的":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"才":{"docs":{},"返":{"docs":{},"回":{"0":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"：":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"嵌":{"docs":{},"套":{"docs":{},"类":{"docs":{},"需":{"docs":{},"要":{"docs":{},"在":{"docs":{},"单":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"之":{"docs":{},"外":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"可":{"docs":{},"见":{"docs":{},"的":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"它":{"docs":{},"太":{"docs":{},"长":{"docs":{},"了":{"docs":{},"，":{"docs":{},"不":{"docs":{},"适":{"docs":{},"合":{"docs":{},"于":{"docs":{},"放":{"docs":{},"在":{"docs":{},"方":{"docs":{},"法":{"docs":{},"内":{"docs":{},"部":{"docs":{},"，":{"docs":{},"就":{"docs":{},"应":{"docs":{},"该":{"docs":{},"使":{"docs":{},"用":{"docs":{},"成":{"docs":{},"员":{"docs":{},"类":{"docs":{},"；":{"docs":{"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"定":{"docs":{},"要":{"docs":{},"重":{"docs":{},"载":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"对":{"docs":{},"于":{"docs":{},"一":{"docs":{},"对":{"docs":{},"重":{"docs":{},"载":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"至":{"docs":{},"少":{"docs":{},"要":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"在":{"docs":{},"两":{"docs":{},"个":{"docs":{},"重":{"docs":{},"载":{"docs":{},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"“":{"docs":{},"完":{"docs":{},"全":{"docs":{},"不":{"docs":{},"同":{"docs":{},"”":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"下":{"docs":{},"面":{"docs":{},"这":{"docs":{},"个":{"docs":{},"例":{"docs":{},"子":{"docs":{},"：":{"docs":{"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"存":{"docs":{},"在":{"docs":{},"过":{"docs":{},"期":{"docs":{},"引":{"docs":{},"用":{"docs":{},"，":{"docs":{},"很":{"docs":{},"容":{"docs":{},"易":{"docs":{},"造":{"docs":{},"成":{"docs":{},"内":{"docs":{},"存":{"docs":{},"泄":{"docs":{},"漏":{"docs":{},"，":{"docs":{},"甚":{"docs":{},"至":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"系":{"docs":{},"统":{"docs":{},"崩":{"docs":{},"溃":{"docs":{},"，":{"docs":{},"在":{"docs":{},"实":{"docs":{},"际":{"docs":{},"编":{"docs":{},"码":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"需":{"docs":{},"要":{"docs":{},"仔":{"docs":{},"细":{"docs":{},"检":{"docs":{},"查":{"docs":{},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"借":{"docs":{},"助":{"docs":{},"于":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"工":{"docs":{},"具":{"docs":{},"去":{"docs":{},"检":{"docs":{},"查":{"docs":{},"内":{"docs":{},"存":{"docs":{},"泄":{"docs":{},"漏":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"根":{"docs":{},"据":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"比":{"docs":{},"较":{"docs":{},"是":{"docs":{},"不":{"docs":{},"相":{"docs":{},"等":{"docs":{},"的":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"调":{"docs":{},"用":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"中":{"docs":{},"的":{"docs":{},"任":{"docs":{},"意":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"则":{"docs":{},"不":{"docs":{},"一":{"docs":{},"定":{"docs":{},"要":{"docs":{},"产":{"docs":{},"生":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"整":{"docs":{},"数":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"相":{"docs":{},"等":{"docs":{},"的":{"docs":{},"。":{"docs":{},"那":{"docs":{},"么":{"docs":{},"调":{"docs":{},"用":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"中":{"docs":{},"任":{"docs":{},"意":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"方":{"docs":{},"法":{"docs":{},"都":{"docs":{},"必":{"docs":{},"须":{"docs":{},"产":{"docs":{},"生":{"docs":{},"同":{"docs":{},"样":{"docs":{},"的":{"docs":{},"整":{"docs":{},"数":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"覆":{"docs":{},"盖":{"docs":{},"了":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"方":{"docs":{},"法":{"docs":{},"一":{"docs":{},"定":{"docs":{},"要":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"会":{"docs":{},"造":{"docs":{},"成":{"docs":{},"基":{"docs":{},"于":{"docs":{},"散":{"docs":{},"列":{"docs":{},"值":{"docs":{},"得":{"docs":{},"集":{"docs":{},"合":{"docs":{},"使":{"docs":{},"用":{"docs":{},"出":{"docs":{},"现":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"如":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"或":{"docs":{},"者":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"等":{"docs":{},"；":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"该":{"docs":{},"域":{"docs":{},"是":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"则":{"docs":{},"计":{"docs":{},"算":{"docs":{},"(":{"docs":{},"f":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909}}}}}}}}}}}}}}}},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"、":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"、":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"或":{"docs":{},"者":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"则":{"docs":{},"计":{"docs":{},"算":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},"f":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"则":{"docs":{},"计":{"docs":{},"算":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"f":{"docs":{},")":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"按":{"docs":{},"照":{"docs":{},"步":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"则":{"docs":{},"计":{"docs":{},"算":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{},".":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"f":{"docs":{},")":{"docs":{},"。":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"则":{"docs":{},"计":{"docs":{},"算":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},"(":{"docs":{},"f":{"docs":{},"^":{"docs":{},"(":{"docs":{},"f":{"docs":{},">":{"docs":{},">":{"docs":{},">":{"3":{"2":{"docs":{},")":{"docs":{},")":{"docs":{},"。":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"引":{"docs":{},"用":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"该":{"docs":{},"类":{"docs":{},"的":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"方":{"docs":{},"法":{"docs":{},"通":{"docs":{},"过":{"docs":{},"递":{"docs":{},"归":{"docs":{},"地":{"docs":{},"调":{"docs":{},"用":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"方":{"docs":{},"式":{"docs":{},"来":{"docs":{},"比":{"docs":{},"较":{"docs":{},"这":{"docs":{},"个":{"docs":{},"域":{"docs":{},"，":{"docs":{},"则":{"docs":{},"同":{"docs":{},"样":{"docs":{},"为":{"docs":{},"这":{"docs":{},"个":{"docs":{},"域":{"docs":{},"递":{"docs":{},"归":{"docs":{},"地":{"docs":{},"调":{"docs":{},"用":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"需":{"docs":{},"要":{"docs":{},"更":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"的":{"docs":{},"比":{"docs":{},"较":{"docs":{},"，":{"docs":{},"则":{"docs":{},"为":{"docs":{},"这":{"docs":{},"个":{"docs":{},"域":{"docs":{},"计":{"docs":{},"算":{"docs":{},"一":{"docs":{},"个":{"docs":{},"范":{"docs":{},"式":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"针":{"docs":{},"对":{"docs":{},"这":{"docs":{},"个":{"docs":{},"范":{"docs":{},"式":{"docs":{},"调":{"docs":{},"用":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"这":{"docs":{},"个":{"docs":{},"域":{"docs":{},"的":{"docs":{},"值":{"docs":{},"为":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"，":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"0":{"docs":{},"（":{"docs":{},"不":{"docs":{},"绝":{"docs":{},"对":{"docs":{},"，":{"docs":{},"但":{"docs":{},"通":{"docs":{},"常":{"docs":{},"是":{"0":{"docs":{},"）":{"docs":{},"。":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"则":{"docs":{},"要":{"docs":{},"把":{"docs":{},"每":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"当":{"docs":{},"做":{"docs":{},"单":{"docs":{},"独":{"docs":{},"的":{"docs":{},"域":{"docs":{},"来":{"docs":{},"处":{"docs":{},"理":{"docs":{},"。":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"，":{"docs":{},"递":{"docs":{},"归":{"docs":{},"地":{"docs":{},"应":{"docs":{},"用":{"docs":{},"上":{"docs":{},"面":{"docs":{},"的":{"docs":{},"规":{"docs":{},"则":{"docs":{},"，":{"docs":{},"对":{"docs":{},"每":{"docs":{},"个":{"docs":{},"重":{"docs":{},"要":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"计":{"docs":{},"算":{"docs":{},"一":{"docs":{},"个":{"docs":{},"散":{"docs":{},"列":{"docs":{},"码":{"docs":{},"。":{"docs":{},"然":{"docs":{},"后":{"docs":{},"再":{"docs":{},"用":{"2":{"docs":{},"中":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"组":{"docs":{},"合":{"docs":{},"起":{"docs":{},"来":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"都":{"docs":{},"很":{"docs":{},"重":{"docs":{},"要":{"docs":{},"，":{"docs":{},"则":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"具":{"docs":{},"体":{"docs":{},"的":{"docs":{},"类":{"docs":{},"没":{"docs":{},"有":{"docs":{},"实":{"docs":{},"现":{"docs":{},"标":{"docs":{},"准":{"docs":{},"的":{"docs":{},"接":{"docs":{},"口":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"禁":{"docs":{},"止":{"docs":{},"继":{"docs":{},"承":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"给":{"docs":{},"有":{"docs":{},"些":{"docs":{},"程":{"docs":{},"序":{"docs":{},"员":{"docs":{},"带":{"docs":{},"来":{"docs":{},"不":{"docs":{},"便":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"认":{"docs":{},"为":{"docs":{},"必":{"docs":{},"须":{"docs":{},"允":{"docs":{},"许":{"docs":{},"从":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"类":{"docs":{},"继":{"docs":{},"承":{"docs":{},"，":{"docs":{},"一":{"docs":{},"种":{"docs":{},"合":{"docs":{},"理":{"docs":{},"的":{"docs":{},"办":{"docs":{},"法":{"docs":{},"就":{"docs":{},"是":{"docs":{},"确":{"docs":{},"保":{"docs":{},"这":{"docs":{},"个":{"docs":{},"类":{"docs":{},"永":{"docs":{},"远":{"docs":{},"不":{"docs":{},"会":{"docs":{},"调":{"docs":{},"用":{"docs":{},"它":{"docs":{},"的":{"docs":{},"任":{"docs":{},"何":{"docs":{},"可":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"并":{"docs":{},"在":{"docs":{},"文":{"docs":{},"档":{"docs":{},"中":{"docs":{},"说":{"docs":{},"明":{"docs":{},"这":{"docs":{},"一":{"docs":{},"点":{"docs":{},"。":{"docs":{},"否":{"docs":{},"则":{"docs":{},"，":{"docs":{},"就":{"docs":{},"禁":{"docs":{},"止":{"docs":{},"被":{"docs":{},"子":{"docs":{},"类":{"docs":{},"化":{"docs":{},"。":{"docs":{"第三章 类和接口/17.要么为继承而设计，并提供文档说明，要么就禁止继承.html":{"ref":"第三章 类和接口/17.要么为继承而设计，并提供文档说明，要么就禁止继承.html","tf":0.09090909090909091}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"还":{"docs":{},"有":{"docs":{},"其":{"docs":{},"他":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"行":{"docs":{},"为":{"docs":{},"不":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"于":{"docs":{},"某":{"docs":{},"个":{"docs":{},"标":{"docs":{},"签":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"就":{"docs":{},"把":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"放":{"docs":{},"到":{"docs":{},"这":{"docs":{},"个":{"docs":{},"类":{"docs":{},"中":{"docs":{},"；":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"声":{"docs":{},"明":{"docs":{},"成":{"docs":{},"员":{"docs":{},"类":{"docs":{},"不":{"docs":{},"要":{"docs":{},"求":{"docs":{},"访":{"docs":{},"问":{"docs":{},"外":{"docs":{},"围":{"docs":{},"实":{"docs":{},"例":{"docs":{},"，":{"docs":{},"就":{"docs":{},"要":{"docs":{},"始":{"docs":{},"终":{"docs":{},"把":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"修":{"docs":{},"饰":{"docs":{},"符":{"docs":{},"放":{"docs":{},"在":{"docs":{},"它":{"docs":{},"的":{"docs":{},"生":{"docs":{},"命":{"docs":{},"中":{"docs":{},"，":{"docs":{},"使":{"docs":{},"它":{"docs":{},"成":{"docs":{},"为":{"docs":{},"静":{"docs":{},"态":{"docs":{},"成":{"docs":{},"员":{"docs":{},"类":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"非":{"docs":{},"静":{"docs":{},"态":{"docs":{},"成":{"docs":{},"员":{"docs":{},"类":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"省":{"docs":{},"略":{"docs":{},"了":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"修":{"docs":{},"饰":{"docs":{},"符":{"docs":{},"，":{"docs":{},"则":{"docs":{},"每":{"docs":{},"个":{"docs":{},"实":{"docs":{},"例":{"docs":{},"都":{"docs":{},"将":{"docs":{},"包":{"docs":{},"含":{"docs":{},"一":{"docs":{},"个":{"docs":{},"额":{"docs":{},"外":{"docs":{},"的":{"docs":{},"指":{"docs":{},"向":{"docs":{},"外":{"docs":{},"围":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"。":{"docs":{},"保":{"docs":{},"存":{"docs":{},"这":{"docs":{},"份":{"docs":{},"引":{"docs":{},"用":{"docs":{},"要":{"docs":{},"消":{"docs":{},"耗":{"docs":{},"时":{"docs":{},"间":{"docs":{},"和":{"docs":{},"空":{"docs":{},"间":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"外":{"docs":{},"围":{"docs":{},"实":{"docs":{},"例":{"docs":{},"在":{"docs":{},"符":{"docs":{},"合":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"时":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"得":{"docs":{},"以":{"docs":{},"保":{"docs":{},"留":{"docs":{},"，":{"docs":{},"造":{"docs":{},"成":{"docs":{},"内":{"docs":{},"存":{"docs":{},"泄":{"docs":{},"漏":{"docs":{},"；":{"docs":{"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"成":{"docs":{},"员":{"docs":{},"类":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"示":{"docs":{},"例":{"docs":{},"都":{"docs":{},"需":{"docs":{},"要":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"向":{"docs":{},"外":{"docs":{},"围":{"docs":{},"实":{"docs":{},"例":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"，":{"docs":{},"就":{"docs":{},"要":{"docs":{},"把":{"docs":{},"成":{"docs":{},"员":{"docs":{},"类":{"docs":{},"做":{"docs":{},"成":{"docs":{},"非":{"docs":{},"静":{"docs":{},"态":{"docs":{},"的":{"docs":{},"；":{"docs":{},"否":{"docs":{},"则":{"docs":{},"，":{"docs":{},"就":{"docs":{},"做":{"docs":{},"成":{"docs":{},"静":{"docs":{},"态":{"docs":{},"的":{"docs":{},"；":{"docs":{"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"没":{"docs":{},"有":{"docs":{},"外":{"docs":{},"围":{"docs":{},"实":{"docs":{},"例":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"也":{"docs":{},"需":{"docs":{},"要":{"docs":{},"分":{"docs":{},"配":{"docs":{},"内":{"docs":{},"部":{"docs":{},"类":{"docs":{},"实":{"docs":{},"例":{"docs":{},"，":{"docs":{},"就":{"docs":{},"不":{"docs":{},"能":{"docs":{},"使":{"docs":{},"用":{"docs":{},"非":{"docs":{},"静":{"docs":{},"态":{"docs":{},"成":{"docs":{},"员":{"docs":{},"类":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"非":{"docs":{},"静":{"docs":{},"态":{"docs":{},"成":{"docs":{},"员":{"docs":{},"类":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"必":{"docs":{},"须":{"docs":{},"要":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"外":{"docs":{},"围":{"docs":{},"实":{"docs":{},"例":{"docs":{},"。":{"docs":{"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"合":{"docs":{},"适":{"docs":{},"的":{"docs":{},"接":{"docs":{},"口":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"类":{"docs":{},"来":{"docs":{},"引":{"docs":{},"用":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"值":{"docs":{},"类":{"docs":{},"（":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"、":{"docs":{},"b":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"）":{"docs":{},"很":{"docs":{},"少":{"docs":{},"用":{"docs":{},"多":{"docs":{},"个":{"docs":{},"实":{"docs":{},"现":{"docs":{},"编":{"docs":{},"写":{"docs":{},"，":{"docs":{},"他":{"docs":{},"们":{"docs":{},"通":{"docs":{},"常":{"docs":{},"是":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"的":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"很":{"docs":{},"少":{"docs":{},"有":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"接":{"docs":{},"口":{"docs":{},"。":{"docs":{},"使":{"docs":{},"用":{"docs":{},"这":{"docs":{},"种":{"docs":{},"值":{"docs":{},"类":{"docs":{},"作":{"docs":{},"为":{"docs":{},"参":{"docs":{},"数":{"docs":{},"、":{"docs":{},"变":{"docs":{},"量":{"docs":{},"、":{"docs":{},"域":{"docs":{},"或":{"docs":{},"者":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"类":{"docs":{},"型":{"docs":{},"就":{"docs":{},"比":{"docs":{},"较":{"docs":{},"合":{"docs":{},"适":{"docs":{},"；":{"docs":{"第七章 通用程序设计/52.通过接口引用对象.html":{"ref":"第七章 通用程序设计/52.通过接口引用对象.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"发":{"docs":{},"现":{"docs":{},"要":{"docs":{},"在":{"docs":{},"长":{"docs":{},"度":{"docs":{},"不":{"docs":{},"止":{"docs":{},"一":{"docs":{},"行":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"或":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"中":{"docs":{},"使":{"docs":{},"用":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"注":{"docs":{},"解":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"它":{"docs":{},"移":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"局":{"docs":{},"部":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"声":{"docs":{},"名":{"docs":{},"中":{"docs":{},"。":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"注":{"docs":{},"解":{"docs":{},"方":{"docs":{},"在":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"第四章 泛型/24.消除非受检警告.html":{"ref":"第四章 泛型/24.消除非受检警告.html","tf":0.07142857142857142}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"无":{"docs":{},"法":{"docs":{},"消":{"docs":{},"除":{"docs":{},"警":{"docs":{},"告":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"又":{"docs":{},"可":{"docs":{},"以":{"docs":{},"证":{"docs":{},"明":{"docs":{},"引":{"docs":{},"起":{"docs":{},"警":{"docs":{},"告":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"是":{"docs":{},"类":{"docs":{},"型":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"@":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"\"":{"docs":{},")":{"docs":{},"注":{"docs":{},"解":{"docs":{},"来":{"docs":{},"禁":{"docs":{},"止":{"docs":{},"这":{"docs":{},"条":{"docs":{},"警":{"docs":{},"告":{"docs":{},"。":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"注":{"docs":{},"解":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"任":{"docs":{},"何":{"docs":{},"粒":{"docs":{},"度":{"docs":{},"的":{"docs":{},"级":{"docs":{},"别":{"docs":{},"中":{"docs":{},"，":{"docs":{},"从":{"docs":{},"单":{"docs":{},"独":{"docs":{},"的":{"docs":{},"局":{"docs":{},"部":{"docs":{},"变":{"docs":{},"量":{"docs":{},"声":{"docs":{},"明":{"docs":{},"到":{"docs":{},"整":{"docs":{},"个":{"docs":{},"类":{"docs":{},"都":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"的":{"docs":{},"。":{"docs":{},"应":{"docs":{},"该":{"docs":{},"始":{"docs":{},"终":{"docs":{},"在":{"docs":{},"尽":{"docs":{},"可":{"docs":{},"能":{"docs":{},"小":{"docs":{},"的":{"docs":{},"范":{"docs":{},"围":{"docs":{},"内":{"docs":{},"使":{"docs":{},"用":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"注":{"docs":{},"解":{"docs":{},"，":{"docs":{},"永":{"docs":{},"远":{"docs":{},"不":{"docs":{},"要":{"docs":{},"在":{"docs":{},"整":{"docs":{},"个":{"docs":{},"类":{"docs":{},"上":{"docs":{},"使":{"docs":{},"用":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"注":{"docs":{},"解":{"docs":{},"，":{"docs":{},"这":{"docs":{},"么":{"docs":{},"做":{"docs":{},"很":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"掩":{"docs":{},"盖":{"docs":{},"了":{"docs":{},"重":{"docs":{},"要":{"docs":{},"的":{"docs":{},"警":{"docs":{},"告":{"docs":{},"，":{"docs":{},"以":{"docs":{},"更":{"docs":{},"小":{"docs":{},"粒":{"docs":{},"度":{"docs":{},"的":{"docs":{},"使":{"docs":{},"用":{"docs":{},"该":{"docs":{},"注":{"docs":{},"解":{"docs":{},"；":{"docs":{"第四章 泛型/24.消除非受检警告.html":{"ref":"第四章 泛型/24.消除非受检警告.html","tf":0.07142857142857142}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"避":{"docs":{},"免":{"docs":{},"低":{"docs":{},"层":{"docs":{},"异":{"docs":{},"常":{"docs":{},"，":{"docs":{},"次":{"docs":{},"选":{"docs":{},"方":{"docs":{},"案":{"docs":{},"是":{"docs":{},"，":{"docs":{},"让":{"docs":{},"高":{"docs":{},"层":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"中":{"docs":{},"通":{"docs":{},"过":{"docs":{},"判":{"docs":{},"断":{"docs":{},"绕":{"docs":{},"开":{"docs":{},"这":{"docs":{},"些":{"docs":{},"异":{"docs":{},"常":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"将":{"docs":{},"高":{"docs":{},"层":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"调":{"docs":{},"用":{"docs":{},"者":{"docs":{},"与":{"docs":{},"低":{"docs":{},"层":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"隔":{"docs":{},"离":{"docs":{},"开":{"docs":{},"来":{"docs":{},"。":{"docs":{},"在":{"docs":{},"这":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"日":{"docs":{},"志":{"docs":{},"工":{"docs":{},"具":{"docs":{},"进":{"docs":{},"行":{"docs":{},"记":{"docs":{},"录":{"docs":{},"。":{"docs":{"第八章 异常/61.抛出与抽象相对应的异常.html":{"ref":"第八章 异常/61.抛出与抽象相对应的异常.html","tf":0.020833333333333332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"你":{"docs":{},"想":{"docs":{},"使":{"docs":{},"用":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"常":{"docs":{},"量":{"docs":{},"，":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"可":{"docs":{},"以":{"docs":{},"打":{"docs":{},"印":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"比":{"docs":{},"较":{"docs":{},"是":{"docs":{},"对":{"docs":{},"性":{"docs":{},"能":{"docs":{},"有":{"docs":{},"较":{"docs":{},"大":{"docs":{},"的":{"docs":{},"影":{"docs":{},"响":{"docs":{},"的":{"docs":{},"。":{"docs":{},"另":{"docs":{},"外":{"docs":{},"，":{"docs":{},"容":{"docs":{},"易":{"docs":{},"将":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"硬":{"docs":{},"编":{"docs":{},"码":{"docs":{},"到":{"docs":{},"代":{"docs":{},"码":{"docs":{},"之":{"docs":{},"中":{"docs":{},"；":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"程":{"docs":{},"序":{"docs":{},"员":{"docs":{},"错":{"docs":{},"拼":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"或":{"docs":{},"将":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"注":{"docs":{},"解":{"docs":{},"应":{"docs":{},"用":{"docs":{},"于":{"docs":{},"程":{"docs":{},"序":{"docs":{},"元":{"docs":{},"素":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"方":{"docs":{},"法":{"docs":{},"声":{"docs":{},"明":{"docs":{},"，":{"docs":{},"则":{"docs":{},"该":{"docs":{},"程":{"docs":{},"序":{"docs":{},"将":{"docs":{},"无":{"docs":{},"法":{"docs":{},"编":{"docs":{},"译":{"docs":{},"。":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"上":{"docs":{},"例":{"docs":{},"中":{"docs":{},"的":{"docs":{},"成":{"docs":{},"员":{"docs":{},"域":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"访":{"docs":{},"问":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"，":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"d":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"是":{"docs":{},"不":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"进":{"docs":{},"行":{"docs":{},"保":{"docs":{},"护":{"docs":{},"性":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"数":{"docs":{},"据":{"docs":{},"就":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"在":{"docs":{},"类":{"docs":{},"的":{"docs":{},"外":{"docs":{},"部":{"docs":{},"被":{"docs":{},"改":{"docs":{},"变":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"影":{"docs":{},"响":{"docs":{},"类":{"docs":{},"内":{"docs":{},"部":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"污":{"docs":{},"染":{"docs":{},"到":{"docs":{},"类":{"docs":{},"。":{"docs":{},"针":{"docs":{},"对":{"docs":{},"成":{"docs":{},"员":{"docs":{},"域":{"docs":{},"的":{"docs":{},"访":{"docs":{},"问":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"可":{"docs":{},"做":{"docs":{},"如":{"docs":{},"下":{"docs":{},"的":{"docs":{},"保":{"docs":{},"护":{"docs":{},"性":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"：":{"docs":{"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"要":{"docs":{},"想":{"docs":{},"使":{"docs":{},"一":{"docs":{},"个":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"真":{"docs":{},"正":{"docs":{},"可":{"docs":{},"用":{"docs":{},"，":{"docs":{},"就":{"docs":{},"必":{"docs":{},"须":{"docs":{},"为":{"docs":{},"其":{"docs":{},"编":{"docs":{},"写":{"docs":{},"文":{"docs":{},"档":{"docs":{},"。":{"docs":{},"传":{"docs":{},"统":{"docs":{},"意":{"docs":{},"义":{"docs":{},"上":{"docs":{},"的":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"文":{"docs":{},"档":{"docs":{},"是":{"docs":{},"手":{"docs":{},"动":{"docs":{},"生":{"docs":{},"成":{"docs":{},"的":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"保":{"docs":{},"持":{"docs":{},"文":{"docs":{},"档":{"docs":{},"与":{"docs":{},"代":{"docs":{},"码":{"docs":{},"同":{"docs":{},"步":{"docs":{},"是":{"docs":{},"一":{"docs":{},"件":{"docs":{},"很":{"docs":{},"繁":{"docs":{},"琐":{"docs":{},"的":{"docs":{},"事":{"docs":{},"情":{"docs":{},"。":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"环":{"docs":{},"境":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"一":{"docs":{},"种":{"docs":{},"被":{"docs":{},"称":{"docs":{},"为":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"的":{"docs":{},"实":{"docs":{},"用":{"docs":{},"工":{"docs":{},"具":{"docs":{},"来":{"docs":{},"完":{"docs":{},"成":{"docs":{},"文":{"docs":{},"档":{"docs":{},"注":{"docs":{},"释":{"docs":{},"的":{"docs":{},"编":{"docs":{},"写":{"docs":{},"；":{"docs":{"第六章 方法/44.API需要编写文档注释.html":{"ref":"第六章 方法/44.API需要编写文档注释.html","tf":0.03333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"值":{"docs":{},"范":{"docs":{},"围":{"docs":{},"没":{"docs":{},"有":{"docs":{},"超":{"docs":{},"过":{"9":{"docs":{},"为":{"docs":{},"十":{"docs":{},"进":{"docs":{},"制":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"超":{"docs":{},"过":{"9":{"docs":{},"位":{"docs":{},"但":{"docs":{},"不":{"docs":{},"超":{"docs":{},"过":{"1":{"8":{"docs":{},"位":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"超":{"docs":{},"过":{"1":{"8":{"docs":{},"位":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"就":{"docs":{},"必":{"docs":{},"须":{"docs":{},"使":{"docs":{},"用":{"docs":{},"b":{"docs":{},"i":{"docs":{},"g":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"。":{"docs":{"第七章 通用程序设计/48.需要精确答案，请避免使用float和double.html":{"ref":"第七章 通用程序设计/48.需要精确答案，请避免使用float和double.html","tf":0.07142857142857142}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}},"有":{"docs":{},"合":{"docs":{},"适":{"docs":{},"的":{"docs":{},"接":{"docs":{},"口":{"docs":{},"类":{"docs":{},"型":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"对":{"docs":{},"于":{"docs":{},"参":{"docs":{},"数":{"docs":{},"、":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"、":{"docs":{},"变":{"docs":{},"量":{"docs":{},"和":{"docs":{},"域":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"都":{"docs":{},"应":{"docs":{},"该":{"docs":{},"使":{"docs":{},"用":{"docs":{},"接":{"docs":{},"口":{"docs":{},"类":{"docs":{},"型":{"docs":{},"进":{"docs":{},"行":{"docs":{},"声":{"docs":{},"明":{"docs":{},"。":{"docs":{},"这":{"docs":{},"样":{"docs":{},"做":{"docs":{},"可":{"docs":{},"以":{"docs":{},"让":{"docs":{},"程":{"docs":{},"序":{"docs":{},"变":{"docs":{},"得":{"docs":{},"更":{"docs":{},"加":{"docs":{},"灵":{"docs":{},"活":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"改":{"docs":{},"变":{"docs":{},"接":{"docs":{},"口":{"docs":{},"的":{"docs":{},"具":{"docs":{},"体":{"docs":{},"实":{"docs":{},"现":{"docs":{},"类":{"docs":{},"，":{"docs":{},"其":{"docs":{},"他":{"docs":{},"代":{"docs":{},"码":{"docs":{},"都":{"docs":{},"可":{"docs":{},"以":{"docs":{},"继":{"docs":{},"续":{"docs":{},"工":{"docs":{},"作":{"docs":{},"。":{"docs":{"第七章 通用程序设计/52.通过接口引用对象.html":{"ref":"第七章 通用程序设计/52.通过接口引用对象.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"期":{"docs":{},"望":{"docs":{},"调":{"docs":{},"用":{"docs":{},"者":{"docs":{},"能":{"docs":{},"够":{"docs":{},"在":{"docs":{},"适":{"docs":{},"当":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"进":{"docs":{},"行":{"docs":{},"恢":{"docs":{},"复":{"docs":{},"，":{"docs":{},"则":{"docs":{},"使":{"docs":{},"用":{"docs":{},"可":{"docs":{},"受":{"docs":{},"检":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{},"，":{"docs":{},"让":{"docs":{},"调":{"docs":{},"用":{"docs":{},"者":{"docs":{},"在":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"中":{"docs":{},"进":{"docs":{},"行":{"docs":{},"捕":{"docs":{},"获":{"docs":{},"或":{"docs":{},"者":{"docs":{},"继":{"docs":{},"续":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},"出":{"docs":{},"去":{"docs":{},"。":{"docs":{},"常":{"docs":{},"见":{"docs":{},"的":{"docs":{},"受":{"docs":{},"检":{"docs":{},"异":{"docs":{},"常":{"docs":{},"有":{"docs":{"第八章 异常/58.选择合适的异常.html":{"ref":"第八章 异常/58.选择合适的异常.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"能":{"docs":{},"阻":{"docs":{},"止":{"docs":{},"或":{"docs":{},"者":{"docs":{},"处":{"docs":{},"理":{"docs":{},"来":{"docs":{},"自":{"docs":{},"更":{"docs":{},"低":{"docs":{},"层":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{},"，":{"docs":{},"一":{"docs":{},"般":{"docs":{},"的":{"docs":{},"做":{"docs":{},"法":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{},"异":{"docs":{},"常":{"docs":{},"转":{"docs":{},"译":{"docs":{},"，":{"docs":{},"除":{"docs":{},"非":{"docs":{},"低":{"docs":{},"层":{"docs":{},"方":{"docs":{},"法":{"docs":{},"碰":{"docs":{},"巧":{"docs":{},"可":{"docs":{},"以":{"docs":{},"保":{"docs":{},"证":{"docs":{},"它":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"异":{"docs":{},"常":{"docs":{},"对":{"docs":{},"髙":{"docs":{},"层":{"docs":{},"也":{"docs":{},"合":{"docs":{},"适":{"docs":{},"才":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"异":{"docs":{},"常":{"docs":{},"从":{"docs":{},"低":{"docs":{},"层":{"docs":{},"传":{"docs":{},"播":{"docs":{},"到":{"docs":{},"高":{"docs":{},"居":{"docs":{},"。":{"docs":{},"异":{"docs":{},"常":{"docs":{},"链":{"docs":{},"对":{"docs":{},"髙":{"docs":{},"层":{"docs":{},"和":{"docs":{},"低":{"docs":{},"层":{"docs":{},"异":{"docs":{},"常":{"docs":{},"都":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"最":{"docs":{},"佳":{"docs":{},"的":{"docs":{},"功":{"docs":{},"能":{"docs":{},"：":{"docs":{},"它":{"docs":{},"允":{"docs":{},"许":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"适":{"docs":{},"当":{"docs":{},"的":{"docs":{},"髙":{"docs":{},"层":{"docs":{},"异":{"docs":{},"常":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"又":{"docs":{},"能":{"docs":{},"捕":{"docs":{},"获":{"docs":{},"底":{"docs":{},"层":{"docs":{},"的":{"docs":{},"原":{"docs":{},"因":{"docs":{},"进":{"docs":{},"行":{"docs":{},"失":{"docs":{},"败":{"docs":{},"分":{"docs":{},"析":{"docs":{},"。":{"docs":{"第八章 异常/61.抛出与抽象相对应的异常.html":{"ref":"第八章 异常/61.抛出与抽象相对应的异常.html","tf":0.020833333333333332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{},"与":{"docs":{},"它":{"docs":{},"所":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"没":{"docs":{},"有":{"docs":{},"明":{"docs":{},"显":{"docs":{},"的":{"docs":{},"联":{"docs":{},"系":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"情":{"docs":{},"形":{"docs":{},"物":{"docs":{},"会":{"docs":{},"使":{"docs":{},"人":{"docs":{},"不":{"docs":{},"知":{"docs":{},"所":{"docs":{},"措":{"docs":{},"。":{"docs":{},"当":{"docs":{},"方":{"docs":{},"法":{"docs":{},"将":{"docs":{},"低":{"docs":{},"层":{"docs":{},"异":{"docs":{},"常":{"docs":{},"在":{"docs":{},"高":{"docs":{},"层":{"docs":{},"继":{"docs":{},"续":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"往":{"docs":{},"往":{"docs":{},"会":{"docs":{},"发":{"docs":{},"生":{"docs":{},"这":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"。":{"docs":{},"除":{"docs":{},"了":{"docs":{},"使":{"docs":{},"人":{"docs":{},"感":{"docs":{},"到":{"docs":{},"困":{"docs":{},"惑":{"docs":{},"之":{"docs":{},"外":{"docs":{},"，":{"docs":{},"这":{"docs":{},"也":{"docs":{},"让":{"docs":{},"实":{"docs":{},"现":{"docs":{},"细":{"docs":{},"节":{"docs":{},"污":{"docs":{},"染":{"docs":{},"了":{"docs":{},"更":{"docs":{},"高":{"docs":{},"层":{"docs":{},"的":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"高":{"docs":{},"层":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"在":{"docs":{},"后":{"docs":{},"续":{"docs":{},"的":{"docs":{},"发":{"docs":{},"行":{"docs":{},"版":{"docs":{},"本":{"docs":{},"中":{"docs":{},"发":{"docs":{},"生":{"docs":{},"了":{"docs":{},"变":{"docs":{},"化":{"docs":{},"，":{"docs":{},"它":{"docs":{},"所":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{},"也":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"跟":{"docs":{},"着":{"docs":{},"发":{"docs":{},"生":{"docs":{},"变":{"docs":{},"化":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"潜":{"docs":{},"在":{"docs":{},"地":{"docs":{},"破":{"docs":{},"坏":{"docs":{},"现":{"docs":{},"有":{"docs":{},"的":{"docs":{},"客":{"docs":{},"户":{"docs":{},"端":{"docs":{},"程":{"docs":{},"序":{"docs":{},"。":{"docs":{},"那":{"docs":{},"么":{"docs":{},"，":{"docs":{},"在":{"docs":{},"高":{"docs":{},"低":{"docs":{},"层":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"处":{"docs":{},"理":{"docs":{},"异":{"docs":{},"常":{"docs":{},"时":{"docs":{},"应":{"docs":{},"该":{"docs":{},"怎":{"docs":{},"么":{"docs":{},"做":{"docs":{},"呢":{"docs":{},"？":{"docs":{"第八章 异常/61.抛出与抽象相对应的异常.html":{"ref":"第八章 异常/61.抛出与抽象相对应的异常.html","tf":0.020833333333333332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"类":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"是":{"docs":{},"“":{"docs":{},"一":{"docs":{},"个":{"docs":{},"可":{"docs":{},"公":{"docs":{},"有":{"docs":{},"访":{"docs":{},"问":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"对":{"docs":{},"象":{"docs":{},"”":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"很":{"docs":{},"可":{"docs":{},"能":{"docs":{},"被":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"超":{"docs":{},"时":{"docs":{},"地":{"docs":{},"保":{"docs":{},"持":{"docs":{},"公":{"docs":{},"有":{"docs":{},"可":{"docs":{},"访":{"docs":{},"问":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"而":{"docs":{},"造":{"docs":{},"成":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"一":{"docs":{},"直":{"docs":{},"无":{"docs":{},"法":{"docs":{},"获":{"docs":{},"得":{"docs":{},"锁":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"行":{"docs":{},"为":{"docs":{},"被":{"docs":{},"称":{"docs":{},"为":{"docs":{},"“":{"docs":{},"拒":{"docs":{},"绝":{"docs":{},"服":{"docs":{},"务":{"docs":{},"攻":{"docs":{},"击":{"docs":{},"”":{"docs":{},"，":{"docs":{},"为":{"docs":{},"了":{"docs":{},"避":{"docs":{},"免":{"docs":{},"这":{"docs":{},"种":{"docs":{},"攻":{"docs":{},"击":{"docs":{},"可":{"docs":{},"以":{"docs":{},"采":{"docs":{},"用":{"docs":{"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"被":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"的":{"docs":{},"类":{"docs":{},"没":{"docs":{},"有":{"docs":{},"显":{"docs":{},"示":{"docs":{},"的":{"docs":{},"指":{"docs":{},"定":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{},"标":{"docs":{},"识":{"docs":{},"（":{"docs":{},"序":{"docs":{},"列":{"docs":{},"版":{"docs":{},"本":{"docs":{},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{},"）":{"docs":{},"，":{"docs":{},"系":{"docs":{},"统":{"docs":{},"会":{"docs":{},"自":{"docs":{},"动":{"docs":{},"根":{"docs":{},"据":{"docs":{},"这":{"docs":{},"个":{"docs":{},"类":{"docs":{},"来":{"docs":{},"调":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"的":{"docs":{},"运":{"docs":{},"算":{"docs":{},"过":{"docs":{},"程":{"docs":{},"生":{"docs":{},"成":{"docs":{},"该":{"docs":{},"标":{"docs":{},"识":{"docs":{},"。":{"docs":{},"此":{"docs":{},"标":{"docs":{},"识":{"docs":{},"是":{"docs":{},"根":{"docs":{},"据":{"docs":{},"类":{"docs":{},"名":{"docs":{},"称":{"docs":{},"、":{"docs":{},"接":{"docs":{},"口":{"docs":{},"名":{"docs":{},"称":{"docs":{},"、":{"docs":{},"所":{"docs":{},"有":{"docs":{},"公":{"docs":{},"有":{"docs":{},"和":{"docs":{},"受":{"docs":{},"保":{"docs":{},"护":{"docs":{},"的":{"docs":{},"成":{"docs":{},"员":{"docs":{},"名":{"docs":{},"称":{"docs":{},"生":{"docs":{},"成":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"标":{"docs":{},"志":{"docs":{},"号":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"改":{"docs":{},"变":{"docs":{},"了":{"docs":{},"类":{"docs":{},"的":{"docs":{},"内":{"docs":{},"部":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"如":{"docs":{},"添":{"docs":{},"加":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"自":{"docs":{},"动":{"docs":{},"产":{"docs":{},"生":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"版":{"docs":{},"本":{"docs":{},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{},"也":{"docs":{},"会":{"docs":{},"发":{"docs":{},"生":{"docs":{},"变":{"docs":{},"化":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"没":{"docs":{},"有":{"docs":{},"显":{"docs":{},"式":{"docs":{},"的":{"docs":{},"声":{"docs":{},"明":{"docs":{},"一":{"docs":{},"个":{"docs":{},"版":{"docs":{},"本":{"docs":{},"号":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"兼":{"docs":{},"容":{"docs":{},"性":{"docs":{},"就":{"docs":{},"会":{"docs":{},"遭":{"docs":{},"到":{"docs":{},"破":{"docs":{},"坏":{"docs":{},"，":{"docs":{},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"导":{"docs":{},"致":{"docs":{},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"。":{"docs":{"第十章 序列化/74.谨慎的实现Serializable接口.html":{"ref":"第十章 序列化/74.谨慎的实现Serializable接口.html","tf":0.058823529411764705}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"整":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"图":{"docs":{},"在":{"docs":{},"被":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"之":{"docs":{},"后":{"docs":{},"必":{"docs":{},"须":{"docs":{},"进":{"docs":{},"行":{"docs":{},"验":{"docs":{},"证":{"docs":{},"，":{"docs":{},"就":{"docs":{},"应":{"docs":{},"该":{"docs":{},"使":{"docs":{},"用":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"接":{"docs":{},"口":{"docs":{},"；":{"docs":{"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"攻":{"docs":{},"击":{"docs":{},"者":{"docs":{},"伪":{"docs":{},"造":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"节":{"docs":{},"码":{"docs":{},"文":{"docs":{},"件":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"来":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"也":{"docs":{},"无":{"docs":{},"法":{"docs":{},"成":{"docs":{},"功":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"外":{"docs":{},"围":{"docs":{},"类":{"docs":{},"的":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"方":{"docs":{},"法":{"docs":{},"直":{"docs":{},"接":{"docs":{},"抛":{"docs":{},"异":{"docs":{},"常":{"docs":{},"！":{"docs":{"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"者":{"docs":{},"忘":{"docs":{},"记":{"docs":{},"显":{"docs":{},"示":{"docs":{},"关":{"docs":{},"闭":{"docs":{},"对":{"docs":{},"象":{"docs":{},"（":{"docs":{},"如":{"docs":{},"文":{"docs":{},"件":{"docs":{},"流":{"docs":{},"，":{"docs":{},"数":{"docs":{},"据":{"docs":{},"库":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"等":{"docs":{},"）":{"docs":{},"，":{"docs":{},"可":{"docs":{},"使":{"docs":{},"用":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"作":{"docs":{},"为":{"docs":{},"最":{"docs":{},"后":{"docs":{},"的":{"docs":{},"兜":{"docs":{},"底":{"docs":{},"，":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"这":{"docs":{},"样":{"docs":{},"做":{"docs":{},"并":{"docs":{},"不":{"docs":{},"能":{"docs":{},"保":{"docs":{},"证":{"docs":{},"终":{"docs":{},"结":{"docs":{},"方":{"docs":{},"法":{"docs":{},"能":{"docs":{},"被":{"docs":{},"及":{"docs":{},"时":{"docs":{},"的":{"docs":{},"调":{"docs":{},"用":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"在":{"docs":{},"客":{"docs":{},"户":{"docs":{},"端":{"docs":{},"无":{"docs":{},"法":{"docs":{},"通":{"docs":{},"过":{"docs":{},"调":{"docs":{},"用":{"docs":{},"显":{"docs":{},"式":{"docs":{},"的":{"docs":{},"终":{"docs":{},"结":{"docs":{},"方":{"docs":{},"法":{"docs":{},"来":{"docs":{},"正":{"docs":{},"常":{"docs":{},"结":{"docs":{},"束":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"晚":{"docs":{},"一":{"docs":{},"点":{"docs":{},"释":{"docs":{},"放":{"docs":{},"总":{"docs":{},"比":{"docs":{},"不":{"docs":{},"释":{"docs":{},"放":{"docs":{},"的":{"docs":{},"好":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"如":{"docs":{},"果":{"docs":{},"终":{"docs":{},"结":{"docs":{},"方":{"docs":{},"法":{"docs":{},"发":{"docs":{},"现":{"docs":{},"资":{"docs":{},"源":{"docs":{},"还":{"docs":{},"未":{"docs":{},"被":{"docs":{},"终":{"docs":{},"止":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"在":{"docs":{},"日":{"docs":{},"志":{"docs":{},"中":{"docs":{},"记":{"docs":{},"录":{"docs":{},"一":{"docs":{},"条":{"docs":{},"日":{"docs":{},"志":{"docs":{},"信":{"docs":{},"息":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"这":{"docs":{},"表":{"docs":{},"明":{"docs":{},"客":{"docs":{},"户":{"docs":{},"端":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"得":{"docs":{},"到":{"docs":{},"修":{"docs":{},"复":{"docs":{},"；":{"docs":{"第一章 创建和销毁对象/7.避免使用finalize方法.html":{"ref":"第一章 创建和销毁对象/7.避免使用finalize方法.html","tf":0.06666666666666667}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"上":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"类":{"docs":{},"绝":{"docs":{},"不":{"docs":{},"应":{"docs":{},"该":{"docs":{},"声":{"docs":{},"名":{"docs":{},"为":{"docs":{},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"一":{"docs":{},"旦":{"docs":{},"声":{"docs":{},"名":{"docs":{},"为":{"docs":{},"了":{"docs":{},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"，":{"docs":{},"该":{"docs":{},"类":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"就":{"docs":{},"全":{"docs":{},"部":{"docs":{},"暴":{"docs":{},"露":{"docs":{},"出":{"docs":{},"来":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"无":{"docs":{},"法":{"docs":{},"改":{"docs":{},"变":{"docs":{},"它":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"表":{"docs":{},"示":{"docs":{},"法":{"docs":{},"，":{"docs":{},"也":{"docs":{},"无":{"docs":{},"法":{"docs":{},"强":{"docs":{},"加":{"docs":{},"任":{"docs":{},"何":{"docs":{},"约":{"docs":{},"束":{"docs":{},"条":{"docs":{},"件":{"docs":{},"，":{"docs":{},"当":{"docs":{},"被":{"docs":{},"访":{"docs":{},"问":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"无":{"docs":{},"法":{"docs":{},"采":{"docs":{},"取":{"docs":{},"任":{"docs":{},"何":{"docs":{},"辅":{"docs":{},"助":{"docs":{},"措":{"docs":{},"施":{"docs":{},"，":{"docs":{},"这":{"docs":{},"么":{"docs":{},"多":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"归":{"docs":{},"结":{"docs":{},"原":{"docs":{},"因":{"docs":{},"就":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"如":{"docs":{},"果":{"docs":{},"类":{"docs":{},"声":{"docs":{},"明":{"docs":{},"不":{"docs":{},"当":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"将":{"docs":{},"整":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"域":{"docs":{},"全":{"docs":{},"部":{"docs":{},"暴":{"docs":{},"露":{"docs":{},"给":{"docs":{},"客":{"docs":{},"户":{"docs":{},"端":{"docs":{},"。":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"可":{"docs":{},"变":{"docs":{},"类":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"用":{"docs":{},"包":{"docs":{},"含":{"docs":{},"私":{"docs":{},"有":{"docs":{},"域":{"docs":{},"和":{"docs":{},"仅":{"docs":{},"有":{"docs":{},"设":{"docs":{},"置":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"类":{"docs":{},"代":{"docs":{},"替":{"docs":{},"：":{"docs":{"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html":{"ref":"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html","tf":0.013513513513513514}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"代":{"docs":{},"码":{"docs":{},"所":{"docs":{},"示":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"观":{"docs":{},"察":{"docs":{},"到":{"docs":{},"以":{"docs":{},"下":{"docs":{},"设":{"docs":{},"计":{"docs":{},"细":{"docs":{},"节":{"docs":{},":":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}}}}}}}}}}}}}}}}}}},"例":{"docs":{},"就":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"典":{"docs":{},"型":{"docs":{},"的":{"docs":{},"标":{"docs":{},"签":{"docs":{},"类":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"通":{"docs":{},"过":{"docs":{},"标":{"docs":{},"签":{"docs":{},"域":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"了":{"docs":{},"圆":{"docs":{},"形":{"docs":{},"和":{"docs":{},"矩":{"docs":{},"形":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"不":{"docs":{},"同":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"。":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"我":{"docs":{},"们":{"docs":{},"在":{"docs":{},"声":{"docs":{},"明":{"docs":{},"泛":{"docs":{},"型":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{},"原":{"docs":{},"生":{"docs":{},"态":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"泛":{"docs":{},"型":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"在":{"docs":{},"添":{"docs":{},"加":{"docs":{},"数":{"docs":{},"据":{"docs":{},"元":{"docs":{},"素":{"docs":{},"一":{"docs":{},"次":{"docs":{},"添":{"docs":{},"加":{"docs":{},"了":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"，":{"docs":{},"一":{"docs":{},"次":{"docs":{},"添":{"docs":{},"加":{"docs":{},"了":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"，":{"docs":{},"编":{"docs":{},"译":{"docs":{},"却":{"docs":{},"能":{"docs":{},"通":{"docs":{},"过":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"很":{"docs":{},"显":{"docs":{},"然":{"docs":{},"会":{"docs":{},"出":{"docs":{},"现":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"异":{"docs":{},"常":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"使":{"docs":{},"用":{"docs":{},"原":{"docs":{},"生":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"就":{"docs":{},"失":{"docs":{},"掉":{"docs":{},"了":{"docs":{},"泛":{"docs":{},"型":{"docs":{},"在":{"docs":{},"安":{"docs":{},"全":{"docs":{},"性":{"docs":{},"和":{"docs":{},"表":{"docs":{},"述":{"docs":{},"性":{"docs":{},"方":{"docs":{},"面":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"优":{"docs":{},"势":{"docs":{},"。":{"docs":{"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"以":{"docs":{},"太":{"docs":{},"阳":{"docs":{},"系":{"docs":{},"为":{"docs":{},"例":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"行":{"docs":{},"星":{"docs":{},"都":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"质":{"docs":{},"量":{"docs":{},"和":{"docs":{},"半":{"docs":{},"径":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"依":{"docs":{},"据":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"属":{"docs":{},"性":{"docs":{},"计":{"docs":{},"算":{"docs":{},"行":{"docs":{},"星":{"docs":{},"表":{"docs":{},"面":{"docs":{},"物":{"docs":{},"体":{"docs":{},"的":{"docs":{},"重":{"docs":{},"量":{"docs":{},"。":{"docs":{},"代":{"docs":{},"码":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"何":{"docs":{},"定":{"docs":{},"义":{"docs":{},"注":{"docs":{},"解":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}},"提":{"docs":{},"供":{"docs":{},"一":{"docs":{},"个":{"docs":{},"只":{"docs":{},"有":{"docs":{},"必":{"docs":{},"要":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"，":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"可":{"docs":{},"选":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"第":{"docs":{},"三":{"docs":{},"个":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"可":{"docs":{},"选":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"依":{"docs":{},"次":{"docs":{},"类":{"docs":{},"推":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"包":{"docs":{},"含":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"可":{"docs":{},"选":{"docs":{},"参":{"docs":{},"数":{"docs":{},"。":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.009009009009009009}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"答":{"docs":{},"案":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.009009009009009009},"第七章 通用程序设计/54.慎用本地方法.html":{"ref":"第七章 通用程序设计/54.慎用本地方法.html","tf":0.1},"第七章 通用程序设计/55.谨慎的进行优化.html":{"ref":"第七章 通用程序设计/55.谨慎的进行优化.html","tf":0.038461538461538464},"第七章 通用程序设计/56.遵守普遍接受的命名规则.html":{"ref":"第七章 通用程序设计/56.遵守普遍接受的命名规则.html","tf":0.02857142857142857},"第八章 异常/57.只针对异常的情况才使用异常.html":{"ref":"第八章 异常/57.只针对异常的情况才使用异常.html","tf":0.043478260869565216},"第八章 异常/58.选择合适的异常.html":{"ref":"第八章 异常/58.选择合适的异常.html","tf":0.030303030303030304},"第八章 异常/61.抛出与抽象相对应的异常.html":{"ref":"第八章 异常/61.抛出与抽象相对应的异常.html","tf":0.020833333333333332},"第八章 异常/62.每个方法抛出的异常都要有文档.html":{"ref":"第八章 异常/62.每个方法抛出的异常都要有文档.html","tf":0.1111111111111111},"第八章 异常/63.编写合适的异常信息.html":{"ref":"第八章 异常/63.编写合适的异常信息.html","tf":0.1},"第八章 异常/65.不要忽略异常.html":{"ref":"第八章 异常/65.不要忽略异常.html","tf":0.0625},"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.008},"第九章 并发/68.executor和task优于创建线程.html":{"ref":"第九章 并发/68.executor和task优于创建线程.html","tf":0.125},"第九章 并发/69.优先使用提供的并发工具.html":{"ref":"第九章 并发/69.优先使用提供的并发工具.html","tf":0.1},"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886},"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":0.011111111111111112},"第九章 并发/72.不要依赖于线程调度器.html":{"ref":"第九章 并发/72.不要依赖于线程调度器.html","tf":0.125},"第九章 并发/73.避免使用线程组.html":{"ref":"第九章 并发/73.避免使用线程组.html","tf":0.14285714285714285},"第十章 序列化/74.谨慎的实现Serializable接口.html":{"ref":"第十章 序列化/74.谨慎的实现Serializable接口.html","tf":0.058823529411764705},"第十章 序列化/75.考虑使用自定义的序列化形式.html":{"ref":"第十章 序列化/75.考虑使用自定义的序列化形式.html","tf":0.02631578947368421},"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901},"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.011904761904761904},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}}},"结":{"docs":{},"论":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.009009009009009009},"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.011627906976744186},"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html":{"ref":"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html","tf":0.03225806451612903},"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.006493506493506494},"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669},"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html":{"ref":"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html","tf":0.03571428571428571},"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909},"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936},"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html":{"ref":"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html","tf":0.013513513513513514},"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505},"第三章 类和接口/17.要么为继承而设计，并提供文档说明，要么就禁止继承.html":{"ref":"第三章 类和接口/17.要么为继承而设计，并提供文档说明，要么就禁止继承.html","tf":0.09090909090909091},"第三章 类和接口/19.接口只用于定义类型.html":{"ref":"第三章 类和接口/19.接口只用于定义类型.html","tf":0.02702702702702703},"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169},"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.007751937984496124},"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082},"第四章 泛型/24.消除非受检警告.html":{"ref":"第四章 泛型/24.消除非受检警告.html","tf":0.07142857142857142},"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888},"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205},"第五章 枚举和注解/32.用EnumSet代替位域.html":{"ref":"第五章 枚举和注解/32.用EnumSet代替位域.html","tf":0.03125},"第六章 方法/38.检查方法参数的有效性.html":{"ref":"第六章 方法/38.检查方法参数的有效性.html","tf":0.125},"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.007874015748031496},"第六章 方法/40.谨慎的设计方法签名.html":{"ref":"第六章 方法/40.谨慎的设计方法签名.html","tf":0.125},"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.010752688172043012},"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012},"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":{"ref":"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html","tf":0.019230769230769232},"第六章 方法/44.API需要编写文档注释.html":{"ref":"第六章 方法/44.API需要编写文档注释.html","tf":0.03333333333333333},"第七章 通用程序设计/45.将局部变量的作用域最小化.html":{"ref":"第七章 通用程序设计/45.将局部变量的作用域最小化.html","tf":0.125},"第七章 通用程序设计/46.for-each循环优于传统的for循环.html":{"ref":"第七章 通用程序设计/46.for-each循环优于传统的for循环.html","tf":0.025},"第七章 通用程序设计/47.多使用类库.html":{"ref":"第七章 通用程序设计/47.多使用类库.html","tf":0.1111111111111111},"第七章 通用程序设计/48.需要精确答案，请避免使用float和double.html":{"ref":"第七章 通用程序设计/48.需要精确答案，请避免使用float和double.html","tf":0.07142857142857142},"第七章 通用程序设计/49.基本类型优先于装箱基本类型.html":{"ref":"第七章 通用程序设计/49.基本类型优先于装箱基本类型.html","tf":0.05555555555555555},"第七章 通用程序设计/50.尽量避免使用字符串.html":{"ref":"第七章 通用程序设计/50.尽量避免使用字符串.html","tf":0.013333333333333334},"第七章 通用程序设计/51.谨慎使用字符串连接符.html":{"ref":"第七章 通用程序设计/51.谨慎使用字符串连接符.html","tf":0.16666666666666666},"第七章 通用程序设计/52.通过接口引用对象.html":{"ref":"第七章 通用程序设计/52.通过接口引用对象.html","tf":0.047619047619047616},"第七章 通用程序设计/53.慎用反射机制.html":{"ref":"第七章 通用程序设计/53.慎用反射机制.html","tf":0.1},"第七章 通用程序设计/54.慎用本地方法.html":{"ref":"第七章 通用程序设计/54.慎用本地方法.html","tf":0.1},"第七章 通用程序设计/55.谨慎的进行优化.html":{"ref":"第七章 通用程序设计/55.谨慎的进行优化.html","tf":0.038461538461538464},"第七章 通用程序设计/56.遵守普遍接受的命名规则.html":{"ref":"第七章 通用程序设计/56.遵守普遍接受的命名规则.html","tf":0.02857142857142857},"第八章 异常/57.只针对异常的情况才使用异常.html":{"ref":"第八章 异常/57.只针对异常的情况才使用异常.html","tf":0.043478260869565216},"第八章 异常/58.选择合适的异常.html":{"ref":"第八章 异常/58.选择合适的异常.html","tf":0.030303030303030304},"第八章 异常/59.避免不必要的使用受检的异常.html":{"ref":"第八章 异常/59.避免不必要的使用受检的异常.html","tf":0.024390243902439025},"第八章 异常/61.抛出与抽象相对应的异常.html":{"ref":"第八章 异常/61.抛出与抽象相对应的异常.html","tf":0.020833333333333332},"第八章 异常/62.每个方法抛出的异常都要有文档.html":{"ref":"第八章 异常/62.每个方法抛出的异常都要有文档.html","tf":0.1111111111111111},"第八章 异常/63.编写合适的异常信息.html":{"ref":"第八章 异常/63.编写合适的异常信息.html","tf":0.1},"第八章 异常/65.不要忽略异常.html":{"ref":"第八章 异常/65.不要忽略异常.html","tf":0.0625},"第九章 并发/68.executor和task优于创建线程.html":{"ref":"第九章 并发/68.executor和task优于创建线程.html","tf":0.125},"第九章 并发/69.优先使用提供的并发工具.html":{"ref":"第九章 并发/69.优先使用提供的并发工具.html","tf":0.1},"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":0.011111111111111112},"第九章 并发/72.不要依赖于线程调度器.html":{"ref":"第九章 并发/72.不要依赖于线程调度器.html","tf":0.125},"第九章 并发/73.避免使用线程组.html":{"ref":"第九章 并发/73.避免使用线程组.html","tf":0.14285714285714285},"第十章 序列化/74.谨慎的实现Serializable接口.html":{"ref":"第十章 序列化/74.谨慎的实现Serializable接口.html","tf":0.058823529411764705},"第十章 序列化/75.考虑使用自定义的序列化形式.html":{"ref":"第十章 序列化/75.考虑使用自定义的序列化形式.html","tf":0.02631578947368421},"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901},"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.011904761904761904},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609},"第一章 创建和销毁对象/7.避免使用finalize方法.html":{"ref":"第一章 创建和销毁对象/7.避免使用finalize方法.html","tf":0.06666666666666667},"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.016666666666666666}}},"束":{"docs":{},"时":{"docs":{},"间":{"docs":{},"：":{"docs":{},"\"":{"docs":{"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}}}}}}},"缺":{"docs":{},"点":{"docs":{},"：":{"docs":{},"构":{"docs":{},"造":{"docs":{},"过":{"docs":{},"程":{"docs":{},"被":{"docs":{},"分":{"docs":{},"到":{"docs":{},"了":{"docs":{},"几":{"docs":{},"个":{"docs":{},"调":{"docs":{},"用":{"docs":{},"之":{"docs":{},"中":{"docs":{},"，":{"docs":{},"在":{"docs":{},"构":{"docs":{},"造":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"无":{"docs":{},"法":{"docs":{},"保":{"docs":{},"证":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"的":{"docs":{},"一":{"docs":{},"致":{"docs":{},"性":{"docs":{},"，":{"docs":{},"容":{"docs":{},"易":{"docs":{},"出":{"docs":{},"现":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.009009009009009009}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"重":{"docs":{},"叠":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"模":{"docs":{},"式":{"docs":{},"在":{"docs":{},"有":{"docs":{},"许":{"docs":{},"多":{"docs":{},"可":{"docs":{},"选":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"代":{"docs":{},"码":{"docs":{},"可":{"docs":{},"读":{"docs":{},"性":{"docs":{},"很":{"docs":{},"差":{"docs":{},"，":{"docs":{},"而":{"docs":{},"且":{"docs":{},"调":{"docs":{},"用":{"docs":{},"者":{"docs":{},"想":{"docs":{},"知":{"docs":{},"道":{"docs":{},"每":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"意":{"docs":{},"思":{"docs":{},"，":{"docs":{},"甚":{"docs":{},"至":{"docs":{},"需":{"docs":{},"要":{"docs":{},"深":{"docs":{},"入":{"docs":{},"到":{"docs":{},"源":{"docs":{},"码":{"docs":{},"中":{"docs":{},"去":{"docs":{},"看":{"docs":{},"每":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"意":{"docs":{},"义":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"多":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"调":{"docs":{},"用":{"docs":{},"者":{"docs":{},"颠":{"docs":{},"倒":{"docs":{},"了":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"编":{"docs":{},"译":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"也":{"docs":{},"不":{"docs":{},"会":{"docs":{},"报":{"docs":{},"错":{"docs":{},"，":{"docs":{},"就":{"docs":{},"会":{"docs":{},"产":{"docs":{},"生":{"docs":{},"一":{"docs":{},"些":{"docs":{},"微":{"docs":{},"妙":{"docs":{},"的":{"docs":{},"错":{"docs":{},"误":{"docs":{},"。":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.009009009009009009}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"反":{"docs":{},"射":{"docs":{},"改":{"docs":{},"变":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"的":{"docs":{},"私":{"docs":{},"有":{"docs":{},"属":{"docs":{},"性":{"docs":{},"，":{"docs":{},"创":{"docs":{},"建":{"docs":{},"多":{"docs":{},"个":{"docs":{},"实":{"docs":{},"例":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"需":{"docs":{},"要":{"docs":{},"在":{"docs":{},"构":{"docs":{},"造":{"docs":{},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"加":{"docs":{},"入":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"判":{"docs":{},"断":{"docs":{},"不":{"docs":{},"允":{"docs":{},"许":{"docs":{},"创":{"docs":{},"建":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"实":{"docs":{},"例":{"docs":{},"。":{"docs":{"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{},"一":{"docs":{},"个":{"docs":{},"无":{"docs":{},"参":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"创":{"docs":{},"建":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"调":{"docs":{},"用":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"方":{"docs":{},"法":{"docs":{},"来":{"docs":{},"设":{"docs":{},"置":{"docs":{},"每":{"docs":{},"个":{"docs":{},"必":{"docs":{},"要":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"。":{"docs":{},"这":{"docs":{},"样":{"docs":{},"创":{"docs":{},"建":{"docs":{},"实":{"docs":{},"例":{"docs":{},"很":{"docs":{},"容":{"docs":{},"易":{"docs":{},"，":{"docs":{},"产":{"docs":{},"生":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"读":{"docs":{},"起":{"docs":{},"来":{"docs":{},"也":{"docs":{},"比":{"docs":{},"较":{"docs":{},"容":{"docs":{},"易":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"通":{"docs":{},"过":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"名":{"docs":{},"能":{"docs":{},"知":{"docs":{},"道":{"docs":{},"设":{"docs":{},"置":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"是":{"docs":{},"哪":{"docs":{},"一":{"docs":{},"个":{"docs":{},"。":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.009009009009009009}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"查":{"docs":{},"看":{"docs":{},"文":{"docs":{},"档":{"docs":{},"是":{"docs":{},"否":{"docs":{},"出":{"docs":{},"现":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"修":{"docs":{},"饰":{"docs":{},"符":{"docs":{},"，":{"docs":{},"来":{"docs":{},"判":{"docs":{},"断":{"docs":{},"当":{"docs":{},"前":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"否":{"docs":{},"是":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"。":{"docs":{},"这":{"docs":{},"种":{"docs":{},"说":{"docs":{},"话":{"docs":{},"的":{"docs":{},"错":{"docs":{},"误":{"docs":{},"在":{"docs":{},"于":{"docs":{},"，":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"并":{"docs":{},"不":{"docs":{},"会":{"docs":{},"通":{"docs":{},"过":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"输":{"docs":{},"出":{"docs":{},"，":{"docs":{},"成":{"docs":{},"为":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"文":{"docs":{},"档":{"docs":{},"的":{"docs":{},"一":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"是":{"docs":{},"方":{"docs":{},"法":{"docs":{},"具":{"docs":{},"体":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"细":{"docs":{},"节":{"docs":{},"，":{"docs":{},"并":{"docs":{},"不":{"docs":{},"属":{"docs":{},"于":{"docs":{},"导":{"docs":{},"出":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"和":{"docs":{},"外":{"docs":{},"界":{"docs":{},"模":{"docs":{},"块":{"docs":{},"通":{"docs":{},"信":{"docs":{},"的":{"docs":{},"一":{"docs":{},"部":{"docs":{},"分":{"docs":{},"；":{"docs":{"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"那":{"docs":{},"么":{"docs":{},"，":{"docs":{},"当":{"docs":{},"构":{"docs":{},"建":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"有":{"docs":{},"多":{"docs":{},"个":{"docs":{},"可":{"docs":{},"选":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"如":{"docs":{},"何":{"docs":{},"处":{"docs":{},"理":{"docs":{},"？":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.009009009009009009}}}}}}}}}}}}}}}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"精":{"docs":{},"确":{"docs":{},"结":{"docs":{},"果":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"怎":{"docs":{},"样":{"docs":{},"处":{"docs":{},"理":{"docs":{},"？":{"docs":{"第七章 通用程序设计/48.需要精确答案，请避免使用float和double.html":{"ref":"第七章 通用程序设计/48.需要精确答案，请避免使用float和double.html","tf":0.07142857142857142}}}}}}}}}}}}}}}}}}}},"构":{"docs":{},"建":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"最":{"docs":{},"简":{"docs":{},"单":{"docs":{},"安":{"docs":{},"全":{"docs":{},"可":{"docs":{},"靠":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"是":{"docs":{},"什":{"docs":{},"么":{"docs":{},"？":{"docs":{"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"使":{"docs":{},"用":{"docs":{},"对":{"docs":{},"象":{"docs":{},"避":{"docs":{},"免":{"docs":{},"反":{"docs":{},"复":{"docs":{},"创":{"docs":{},"建":{"docs":{},"对":{"docs":{},"象":{"docs":{},"有":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"原":{"docs":{},"则":{"docs":{},"？":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.006493506493506494}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"类":{"docs":{},"中":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"域":{"docs":{},"的":{"docs":{},"访":{"docs":{},"问":{"docs":{},"级":{"docs":{},"别":{"docs":{},"应":{"docs":{},"该":{"docs":{},"如":{"docs":{},"何":{"docs":{},"设":{"docs":{},"计":{"docs":{},"？":{"docs":{"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html":{"ref":"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html","tf":0.013513513513513514}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"否":{"docs":{},"应":{"docs":{},"该":{"docs":{},"使":{"docs":{},"用":{"docs":{},"原":{"docs":{},"生":{"docs":{},"态":{"docs":{},"类":{"docs":{},"型":{"docs":{},"？":{"docs":{"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082}}}}}}}}}}}}}},"针":{"docs":{},"对":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"应":{"docs":{},"该":{"docs":{},"怎":{"docs":{},"样":{"docs":{},"解":{"docs":{},"决":{"docs":{},"？":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}}}}}}}},"如":{"docs":{},"何":{"docs":{},"使":{"docs":{},"用":{"docs":{},"泛":{"docs":{},"型":{"docs":{},"以":{"docs":{},"插":{"docs":{},"入":{"docs":{},"任":{"docs":{},"意":{"docs":{},"对":{"docs":{},"象":{"docs":{},"？":{"docs":{"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082}}}}}}}}}}}}}},"解":{"docs":{},"决":{"docs":{},"？":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}}}}}}}},"既":{"docs":{},"然":{"docs":{},"不":{"docs":{},"适":{"docs":{},"合":{"docs":{},"存":{"docs":{},"在":{"docs":{},"全":{"docs":{},"部":{"docs":{},"都":{"docs":{},"是":{"docs":{},"导":{"docs":{},"出":{"docs":{},"常":{"docs":{},"量":{"docs":{},"的":{"docs":{},"常":{"docs":{},"量":{"docs":{},"接":{"docs":{},"口":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"如":{"docs":{},"果":{"docs":{},"需":{"docs":{},"要":{"docs":{},"导":{"docs":{},"出":{"docs":{},"常":{"docs":{},"量":{"docs":{},"，":{"docs":{},"它":{"docs":{},"们":{"docs":{},"应":{"docs":{},"该":{"docs":{},"放":{"docs":{},"在":{"docs":{},"哪":{"docs":{},"里":{"docs":{},"呢":{"docs":{},"？":{"docs":{"第三章 类和接口/19.接口只用于定义类型.html":{"ref":"第三章 类和接口/19.接口只用于定义类型.html","tf":0.02702702702702703}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"重":{"docs":{},"叠":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.009009009009009009}}}}}},"构":{"docs":{},"为":{"docs":{},"：":{"docs":{"第八章 异常/59.避免不必要的使用受检的异常.html":{"ref":"第八章 异常/59.避免不必要的使用受检的异常.html","tf":0.024390243902439025}}}}}},"问":{"docs":{},"题":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.009009009009009009},"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.011627906976744186},"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html":{"ref":"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html","tf":0.03225806451612903},"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.006493506493506494},"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669},"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html":{"ref":"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html","tf":0.03571428571428571},"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909},"第二章 对象通用的方法/10.覆盖toString.html":{"ref":"第二章 对象通用的方法/10.覆盖toString.html","tf":0.1},"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936},"第三章 类和接口/13.使类和成员的可访问性最小化.html":{"ref":"第三章 类和接口/13.使类和成员的可访问性最小化.html","tf":0.0625},"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html":{"ref":"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html","tf":0.013513513513513514},"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505},"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713},"第三章 类和接口/17.要么为继承而设计，并提供文档说明，要么就禁止继承.html":{"ref":"第三章 类和接口/17.要么为继承而设计，并提供文档说明，要么就禁止继承.html","tf":0.09090909090909091},"第三章 类和接口/19.接口只用于定义类型.html":{"ref":"第三章 类和接口/19.接口只用于定义类型.html","tf":0.02702702702702703},"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169},"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.007751937984496124},"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082},"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082},"第四章 泛型/24.消除非受检警告.html":{"ref":"第四章 泛型/24.消除非受检警告.html","tf":0.07142857142857142},"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888},"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205},"第五章 枚举和注解/32.用EnumSet代替位域.html":{"ref":"第五章 枚举和注解/32.用EnumSet代替位域.html","tf":0.03125},"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576},"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547},"第六章 方法/38.检查方法参数的有效性.html":{"ref":"第六章 方法/38.检查方法参数的有效性.html","tf":0.125},"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.007874015748031496},"第六章 方法/40.谨慎的设计方法签名.html":{"ref":"第六章 方法/40.谨慎的设计方法签名.html","tf":0.125},"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.010752688172043012},"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012},"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":{"ref":"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html","tf":0.019230769230769232},"第六章 方法/44.API需要编写文档注释.html":{"ref":"第六章 方法/44.API需要编写文档注释.html","tf":0.03333333333333333},"第七章 通用程序设计/45.将局部变量的作用域最小化.html":{"ref":"第七章 通用程序设计/45.将局部变量的作用域最小化.html","tf":0.125},"第七章 通用程序设计/46.for-each循环优于传统的for循环.html":{"ref":"第七章 通用程序设计/46.for-each循环优于传统的for循环.html","tf":0.025},"第七章 通用程序设计/47.多使用类库.html":{"ref":"第七章 通用程序设计/47.多使用类库.html","tf":0.1111111111111111},"第七章 通用程序设计/48.需要精确答案，请避免使用float和double.html":{"ref":"第七章 通用程序设计/48.需要精确答案，请避免使用float和double.html","tf":0.07142857142857142},"第七章 通用程序设计/49.基本类型优先于装箱基本类型.html":{"ref":"第七章 通用程序设计/49.基本类型优先于装箱基本类型.html","tf":0.05555555555555555},"第七章 通用程序设计/50.尽量避免使用字符串.html":{"ref":"第七章 通用程序设计/50.尽量避免使用字符串.html","tf":0.013333333333333334},"第七章 通用程序设计/51.谨慎使用字符串连接符.html":{"ref":"第七章 通用程序设计/51.谨慎使用字符串连接符.html","tf":0.16666666666666666},"第七章 通用程序设计/52.通过接口引用对象.html":{"ref":"第七章 通用程序设计/52.通过接口引用对象.html","tf":0.047619047619047616},"第七章 通用程序设计/53.慎用反射机制.html":{"ref":"第七章 通用程序设计/53.慎用反射机制.html","tf":0.1},"第七章 通用程序设计/54.慎用本地方法.html":{"ref":"第七章 通用程序设计/54.慎用本地方法.html","tf":0.1},"第七章 通用程序设计/55.谨慎的进行优化.html":{"ref":"第七章 通用程序设计/55.谨慎的进行优化.html","tf":0.038461538461538464},"第七章 通用程序设计/56.遵守普遍接受的命名规则.html":{"ref":"第七章 通用程序设计/56.遵守普遍接受的命名规则.html","tf":0.02857142857142857},"第八章 异常/57.只针对异常的情况才使用异常.html":{"ref":"第八章 异常/57.只针对异常的情况才使用异常.html","tf":0.043478260869565216},"第八章 异常/58.选择合适的异常.html":{"ref":"第八章 异常/58.选择合适的异常.html","tf":0.030303030303030304},"第八章 异常/59.避免不必要的使用受检的异常.html":{"ref":"第八章 异常/59.避免不必要的使用受检的异常.html","tf":0.04878048780487805},"第八章 异常/61.抛出与抽象相对应的异常.html":{"ref":"第八章 异常/61.抛出与抽象相对应的异常.html","tf":0.020833333333333332},"第八章 异常/62.每个方法抛出的异常都要有文档.html":{"ref":"第八章 异常/62.每个方法抛出的异常都要有文档.html","tf":0.1111111111111111},"第八章 异常/63.编写合适的异常信息.html":{"ref":"第八章 异常/63.编写合适的异常信息.html","tf":0.1},"第八章 异常/65.不要忽略异常.html":{"ref":"第八章 异常/65.不要忽略异常.html","tf":0.0625},"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.008},"第九章 并发/68.executor和task优于创建线程.html":{"ref":"第九章 并发/68.executor和task优于创建线程.html","tf":0.125},"第九章 并发/69.优先使用提供的并发工具.html":{"ref":"第九章 并发/69.优先使用提供的并发工具.html","tf":0.1},"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886},"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":0.011111111111111112},"第九章 并发/72.不要依赖于线程调度器.html":{"ref":"第九章 并发/72.不要依赖于线程调度器.html","tf":0.125},"第九章 并发/73.避免使用线程组.html":{"ref":"第九章 并发/73.避免使用线程组.html","tf":0.14285714285714285},"第十章 序列化/74.谨慎的实现Serializable接口.html":{"ref":"第十章 序列化/74.谨慎的实现Serializable接口.html","tf":0.058823529411764705},"第十章 序列化/75.考虑使用自定义的序列化形式.html":{"ref":"第十章 序列化/75.考虑使用自定义的序列化形式.html","tf":0.02631578947368421},"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901},"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.011904761904761904},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609},"第一章 创建和销毁对象/7.避免使用finalize方法.html":{"ref":"第一章 创建和销毁对象/7.避免使用finalize方法.html","tf":0.06666666666666667},"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.016666666666666666}},"在":{"docs":{},"于":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"被":{"docs":{},"声":{"docs":{},"名":{"docs":{},"成":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"，":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"是":{"docs":{},"装":{"docs":{},"箱":{"docs":{},"基":{"docs":{},"本":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"而":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"是":{"docs":{},"基":{"docs":{},"本":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"就":{"docs":{},"在":{"docs":{},"无":{"docs":{},"意":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"了":{"docs":{},"增":{"docs":{},"加":{"docs":{},"了":{"docs":{},"拆":{"docs":{},"装":{"docs":{},"箱":{"docs":{},"的":{"docs":{},"开":{"docs":{},"销":{"docs":{},"，":{"docs":{},"结":{"docs":{},"论":{"docs":{},"是":{"docs":{},"：":{"docs":{},"要":{"docs":{},"优":{"docs":{},"先":{"docs":{},"使":{"docs":{},"用":{"docs":{},"基":{"docs":{},"本":{"docs":{},"类":{"docs":{},"型":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"装":{"docs":{},"箱":{"docs":{},"基":{"docs":{},"本":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"要":{"docs":{},"当":{"docs":{},"心":{"docs":{},"无":{"docs":{},"意":{"docs":{},"识":{"docs":{},"的":{"docs":{},"自":{"docs":{},"动":{"docs":{},"装":{"docs":{},"箱":{"docs":{},"。":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.006493506493506494}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"静":{"docs":{},"态":{"docs":{},"工":{"docs":{},"厂":{"docs":{},"和":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"有":{"docs":{},"个":{"docs":{},"共":{"docs":{},"同":{"docs":{},"特":{"docs":{},"征":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"无":{"docs":{},"法":{"docs":{},"支":{"docs":{},"持":{"docs":{},"多":{"docs":{},"个":{"docs":{},"可":{"docs":{},"选":{"docs":{},"参":{"docs":{},"数":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"构":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"多":{"docs":{},"个":{"docs":{},"可":{"docs":{},"选":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"常":{"docs":{},"用":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"有":{"docs":{},"重":{"docs":{},"叠":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"和":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"：":{"docs":{"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"ref":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","tf":0.009009009009009009}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"常":{"docs":{},"用":{"docs":{},"名":{"docs":{},"称":{"docs":{},"为":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"、":{"docs":{},"o":{"docs":{},"f":{"docs":{},"、":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"、":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"、":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"和":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"第七章 通用程序设计/56.遵守普遍接受的命名规则.html":{"ref":"第七章 通用程序设计/56.遵守普遍接受的命名规则.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"成":{"docs":{},"员":{"docs":{},"类":{"docs":{"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.03278688524590164}},"是":{"docs":{},"最":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"一":{"docs":{},"种":{"docs":{},"嵌":{"docs":{},"套":{"docs":{},"类":{"docs":{},"。":{"docs":{},"最":{"docs":{},"好":{"docs":{},"把":{"docs":{},"它":{"docs":{},"看":{"docs":{},"作":{"docs":{},"是":{"docs":{},"普":{"docs":{},"通":{"docs":{},"的":{"docs":{},"类":{"docs":{},"，":{"docs":{},"只":{"docs":{},"是":{"docs":{},"碰":{"docs":{},"巧":{"docs":{},"被":{"docs":{},"声":{"docs":{},"明":{"docs":{},"在":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"的":{"docs":{},"内":{"docs":{},"部":{"docs":{},"而":{"docs":{},"已":{"docs":{},"，":{"docs":{},"它":{"docs":{},"可":{"docs":{},"以":{"docs":{},"访":{"docs":{},"问":{"docs":{},"外":{"docs":{},"围":{"docs":{},"类":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"成":{"docs":{},"员":{"docs":{},"，":{"docs":{},"包":{"docs":{},"括":{"docs":{},"那":{"docs":{},"些":{"docs":{},"声":{"docs":{},"明":{"docs":{},"为":{"docs":{},"私":{"docs":{},"有":{"docs":{},"的":{"docs":{},"成":{"docs":{},"员":{"docs":{},"。":{"docs":{},"静":{"docs":{},"态":{"docs":{},"成":{"docs":{},"员":{"docs":{},"类":{"docs":{},"是":{"docs":{},"外":{"docs":{},"围":{"docs":{},"类":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"静":{"docs":{},"态":{"docs":{},"成":{"docs":{},"员":{"docs":{},"，":{"docs":{},"与":{"docs":{},"其":{"docs":{},"他":{"docs":{},"的":{"docs":{},"静":{"docs":{},"态":{"docs":{},"成":{"docs":{},"员":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"也":{"docs":{},"遵":{"docs":{},"守":{"docs":{},"同":{"docs":{},"样":{"docs":{},"的":{"docs":{},"可":{"docs":{},"访":{"docs":{},"问":{"docs":{},"性":{"docs":{},"规":{"docs":{},"则":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"它":{"docs":{},"被":{"docs":{},"声":{"docs":{},"明":{"docs":{},"为":{"docs":{},"私":{"docs":{},"有":{"docs":{},"的":{"docs":{},"，":{"docs":{},"它":{"docs":{},"就":{"docs":{},"只":{"docs":{},"能":{"docs":{},"在":{"docs":{},"外":{"docs":{},"围":{"docs":{},"类":{"docs":{},"的":{"docs":{},"内":{"docs":{},"部":{"docs":{},"才":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"访":{"docs":{},"问":{"docs":{},"。":{"docs":{"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"一":{"docs":{},"种":{"docs":{},"常":{"docs":{},"见":{"docs":{},"的":{"docs":{},"用":{"docs":{},"法":{"docs":{},"就":{"docs":{},"是":{"docs":{},"作":{"docs":{},"为":{"docs":{},"公":{"docs":{},"有":{"docs":{},"的":{"docs":{},"辅":{"docs":{},"助":{"docs":{},"类":{"docs":{},"，":{"docs":{},"仅":{"docs":{},"当":{"docs":{},"它":{"docs":{},"的":{"docs":{},"外":{"docs":{},"部":{"docs":{},"类":{"docs":{},"一":{"docs":{},"起":{"docs":{},"使":{"docs":{},"用":{"docs":{},"时":{"docs":{},"才":{"docs":{},"有":{"docs":{},"意":{"docs":{},"义":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"描":{"docs":{},"述":{"docs":{},"了":{"docs":{},"计":{"docs":{},"算":{"docs":{},"器":{"docs":{},"支":{"docs":{},"持":{"docs":{},"的":{"docs":{},"各":{"docs":{},"种":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"。":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"应":{"docs":{},"该":{"docs":{},"是":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"类":{"docs":{},"的":{"docs":{},"公":{"docs":{},"有":{"docs":{},"静":{"docs":{},"态":{"docs":{},"成":{"docs":{},"员":{"docs":{},"类":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"使":{"docs":{},"用":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"类":{"docs":{},"的":{"docs":{},"客":{"docs":{},"户":{"docs":{},"端":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"诸":{"docs":{},"如":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"p":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"名":{"docs":{},"称":{"docs":{},"来":{"docs":{},"引":{"docs":{},"用":{"docs":{},"这":{"docs":{},"些":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"内":{"docs":{},"部":{"docs":{},"类":{"docs":{},"：":{"docs":{},"为":{"docs":{},"了":{"docs":{},"减":{"docs":{},"小":{"docs":{},"上":{"docs":{},"面":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"的":{"docs":{},"同":{"docs":{},"步":{"docs":{},"访":{"docs":{},"问":{"docs":{},"成":{"docs":{},"本":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"采":{"docs":{},"用":{"docs":{},"静":{"docs":{},"态":{"docs":{},"内":{"docs":{},"部":{"docs":{},"类":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"被":{"docs":{},"称":{"docs":{},"之":{"docs":{},"为":{"docs":{},"l":{"docs":{},"a":{"docs":{},"z":{"docs":{},"i":{"docs":{"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},".":{"docs":{},".":{"docs":{"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.011627906976744186},"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.01834862385321101},"第八章 异常/61.抛出与抽象相对应的异常.html":{"ref":"第八章 异常/61.抛出与抽象相对应的异常.html","tf":0.020833333333333332},"第八章 异常/65.不要忽略异常.html":{"ref":"第八章 异常/65.不要忽略异常.html","tf":0.0625},"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886},"第十章 序列化/75.考虑使用自定义的序列化形式.html":{"ref":"第十章 序列化/75.考虑使用自定义的序列化形式.html","tf":0.05263157894736842},"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.023809523809523808}},".":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505},"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.021505376344086023}},".":{"docs":{},".":{"docs":{"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.011627906976744186},"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.007751937984496124}}}}},";":{"docs":{"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":{"ref":"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html","tf":0.019230769230769232}}}}}},"e":{"docs":{"第七章 通用程序设计/46.for-each循环优于传统的for循环.html":{"ref":"第七章 通用程序设计/46.for-each循环优于传统的for循环.html","tf":0.025}},"l":{"docs":{},"v":{"docs":{},"i":{"docs":{"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.03488372093023256},"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.05952380952380952}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.011904761904761904}},";":{"docs":{"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.011904761904761904}}}}}}}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.019417475728155338}},",":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669}}},"s":{"docs":{},";":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669}}},"[":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.019417475728155338}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"+":{"docs":{},"+":{"docs":{},"]":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669}}}}},"]":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669}}}}}}}},")":{"docs":{"第七章 通用程序设计/46.for-each循环优于传统的for循环.html":{"ref":"第七章 通用程序设计/46.for-each循环优于传统的for循环.html","tf":0.025}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.011627906976744186},"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169},"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.013664596273291925},"第五章 枚举和注解/32.用EnumSet代替位域.html":{"ref":"第五章 枚举和注解/32.用EnumSet代替位域.html","tf":0.03125},"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576},"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.023809523809523808},"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.03333333333333333}},"使":{"docs":{},"用":{"docs":{},"方":{"docs":{},"法":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}},"枚":{"docs":{},"举":{"docs":{},"常":{"docs":{},"量":{"docs":{},"来":{"docs":{},"分":{"docs":{},"发":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}}},"数":{"docs":{},"据":{"docs":{},"域":{"docs":{},"和":{"docs":{},"方":{"docs":{},"法":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}},"默":{"docs":{},"认":{"docs":{},"构":{"docs":{},"建":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}},".":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},">":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"允":{"docs":{},"许":{"docs":{},"使":{"docs":{},"用":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"作":{"docs":{},"为":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"值":{"docs":{},"，":{"docs":{},"但":{"docs":{},"允":{"docs":{},"许":{"docs":{},"使":{"docs":{},"用":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"作":{"docs":{},"为":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"试":{"docs":{},"图":{"docs":{},"使":{"docs":{},"用":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"作":{"docs":{},"为":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"将":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"异":{"docs":{},"常":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"仅":{"docs":{},"仅":{"docs":{},"只":{"docs":{},"是":{"docs":{},"查":{"docs":{},"询":{"docs":{},"是":{"docs":{},"否":{"docs":{},"包":{"docs":{},"含":{"docs":{},"值":{"docs":{},"为":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"的":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"、":{"docs":{},"或":{"docs":{},"者":{"docs":{},"仅":{"docs":{},"仅":{"docs":{},"只":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{},"删":{"docs":{},"除":{"docs":{},"值":{"docs":{},"为":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"的":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"，":{"docs":{},"都":{"docs":{},"不":{"docs":{},"会":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"异":{"docs":{},"常":{"docs":{},"。":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"内":{"docs":{},"部":{"docs":{},"以":{"docs":{},"数":{"docs":{},"组":{"docs":{},"形":{"docs":{},"式":{"docs":{},"保":{"docs":{},"存":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"这":{"docs":{},"种":{"docs":{},"实":{"docs":{},"现":{"docs":{},"形":{"docs":{},"式":{"docs":{},"非":{"docs":{},"常":{"docs":{},"紧":{"docs":{},"凑":{"docs":{},"、":{"docs":{},"高":{"docs":{},"效":{"docs":{},"。":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"与":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"类":{"docs":{},"一":{"docs":{},"起":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"都":{"docs":{},"必":{"docs":{},"须":{"docs":{},"是":{"docs":{},"单":{"docs":{},"个":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"类":{"docs":{},"的":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"值":{"docs":{},"。":{"docs":{},"创":{"docs":{},"建":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"时":{"docs":{},"必":{"docs":{},"须":{"docs":{},"显":{"docs":{},"式":{"docs":{},"或":{"docs":{},"隐":{"docs":{},"式":{"docs":{},"指":{"docs":{},"定":{"docs":{},"它":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"类":{"docs":{},"。":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"根":{"docs":{},"据":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"的":{"docs":{},"自":{"docs":{},"然":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"（":{"docs":{},"即":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"值":{"docs":{},"在":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"类":{"docs":{},"中":{"docs":{},"的":{"docs":{},"定":{"docs":{},"义":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"）":{"docs":{},"来":{"docs":{},"维":{"docs":{},"护":{"docs":{},"来":{"docs":{},"维":{"docs":{},"护":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"介":{"docs":{},"绍":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}}}}}}}},"规":{"docs":{},"范":{"docs":{},"中":{"docs":{},"谈":{"docs":{},"到":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"时":{"docs":{},"这":{"docs":{},"么":{"docs":{},"写":{"docs":{},"到":{"docs":{},"：":{"docs":{},"“":{"docs":{},"大":{"docs":{},"多":{"docs":{},"数":{"docs":{},"的":{"docs":{},"程":{"docs":{},"序":{"docs":{},"员":{"docs":{},"都":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{},"它":{"docs":{},"是":{"docs":{},"设":{"docs":{},"计":{"docs":{},"成":{"docs":{},"用":{"docs":{},"于":{"docs":{},"像":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"和":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"这":{"docs":{},"种":{"docs":{},"基":{"docs":{},"于":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"的":{"docs":{},"通":{"docs":{},"用":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"的":{"docs":{},"。":{"docs":{},"”":{"docs":{},"除":{"docs":{},"非":{"docs":{},"你":{"docs":{},"在":{"docs":{},"编":{"docs":{},"写":{"docs":{},"的":{"docs":{},"是":{"docs":{},"这":{"docs":{},"种":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"最":{"docs":{},"好":{"docs":{},"完":{"docs":{},"全":{"docs":{},"避":{"docs":{},"免":{"docs":{},"使":{"docs":{},"用":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.016666666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.006493506493506494},"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.007874015748031496},"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}},"(":{"docs":{},")":{"docs":{"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.007874015748031496}},"{":{"docs":{"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.007874015748031496},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}}}},")":{"docs":{"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.015748031496062992},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}},";":{"docs":{"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.015748031496062992},"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901}}},"{":{"docs":{"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901}}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"(":{"7":{"8":{"docs":{},")":{"docs":{},";":{"docs":{"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.007874015748031496}}}}},"docs":{}},"docs":{}}}}}}}}}},";":{"docs":{"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.023622047244094488},"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.023668639053254437}}}},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669}},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669}},";":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"l":{"docs":{"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.016666666666666666}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.016666666666666666}}}}}},"{":{"docs":{"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.016666666666666666}}}}}}}}}},"x":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.006493506493506494}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.007142857142857143},"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.012048192771084338},"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082},"第八章 异常/61.抛出与抽象相对应的异常.html":{"ref":"第八章 异常/61.抛出与抽象相对应的异常.html","tf":0.020833333333333332}}}}}},"c":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}},")":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}},";":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547},"第八章 异常/59.避免不必要的使用受检的异常.html":{"ref":"第八章 异常/59.避免不必要的使用受检的异常.html","tf":0.0975609756097561},"第八章 异常/61.抛出与抽象相对应的异常.html":{"ref":"第八章 异常/61.抛出与抽象相对应的异常.html","tf":0.020833333333333332}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"）":{"docs":{},"和":{"docs":{},"错":{"docs":{},"误":{"docs":{},"（":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"）":{"docs":{},"。":{"docs":{},"那":{"docs":{},"么":{"docs":{},"，":{"docs":{},"这":{"docs":{},"三":{"docs":{},"种":{"docs":{},"异":{"docs":{},"常":{"docs":{},"结":{"docs":{},"构":{"docs":{},"的":{"docs":{},"使":{"docs":{},"用":{"docs":{},"场":{"docs":{},"景":{"docs":{},"是":{"docs":{},"什":{"docs":{},"么":{"docs":{},"？":{"docs":{"第八章 异常/58.选择合适的异常.html":{"ref":"第八章 异常/58.选择合适的异常.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669},"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.010714285714285714},"第八章 异常/59.避免不必要的使用受检的异常.html":{"ref":"第八章 异常/59.避免不必要的使用受检的异常.html","tf":0.024390243902439025}},"{":{"docs":{"第八章 异常/61.抛出与抽象相对应的异常.html":{"ref":"第八章 异常/61.抛出与抽象相对应的异常.html","tf":0.020833333333333332}}}},";":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669}},"循":{"docs":{},"环":{"docs":{},"不":{"docs":{},"仅":{"docs":{},"可":{"docs":{},"以":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"集":{"docs":{},"合":{"docs":{},"和":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"还":{"docs":{},"可":{"docs":{},"以":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"任":{"docs":{},"何":{"docs":{},"实":{"docs":{},"现":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"接":{"docs":{},"口":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{},"同":{"docs":{},"时":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"第七章 通用程序设计/46.for-each循环优于传统的for循环.html":{"ref":"第七章 通用程序设计/46.for-each循环优于传统的for循环.html","tf":0.025}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"也":{"docs":{},"有":{"docs":{},"以":{"docs":{},"下":{"docs":{},"局":{"docs":{},"限":{"docs":{},"性":{"docs":{},"：":{"docs":{"第七章 通用程序设计/46.for-each循环优于传统的for循环.html":{"ref":"第七章 通用程序设计/46.for-each循环优于传统的for循环.html","tf":0.025}}}}}}}}}},"优":{"docs":{},"于":{"docs":{},"传":{"docs":{},"统":{"docs":{},"的":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"循":{"docs":{},"环":{"docs":{"第七章 通用程序设计/46.for-each循环优于传统的for循环.html":{"ref":"第七章 通用程序设计/46.for-each循环优于传统的for循环.html","tf":5}}}}}}}}}}}},"的":{"docs":{},"性":{"docs":{},"能":{"docs":{},"要":{"docs":{},"优":{"docs":{},"于":{"docs":{},"传":{"docs":{},"统":{"docs":{},"的":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"循":{"docs":{},"环":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"能":{"docs":{},"够":{"docs":{},"减":{"docs":{},"少":{"docs":{},"异":{"docs":{},"常":{"docs":{},"的":{"docs":{},"发":{"docs":{},"生":{"docs":{},"，":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"第七章 通用程序设计/46.for-each循环优于传统的for循环.html":{"ref":"第七章 通用程序设计/46.for-each循环优于传统的for循环.html","tf":0.025}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"方":{"docs":{},"式":{"docs":{},"去":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"集":{"docs":{},"合":{"docs":{},"和":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"只":{"docs":{},"有":{"docs":{},"在":{"docs":{},"过":{"docs":{},"滤":{"docs":{},"、":{"docs":{},"转":{"docs":{},"换":{"docs":{},"、":{"docs":{},"平":{"docs":{},"行":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"才":{"docs":{},"需":{"docs":{},"要":{"docs":{},"采":{"docs":{},"用":{"docs":{},"传":{"docs":{},"统":{"docs":{},"的":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"和":{"docs":{},"索":{"docs":{},"引":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"进":{"docs":{},"行":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"。":{"docs":{"第七章 通用程序设计/46.for-each循环优于传统的for循环.html":{"ref":"第七章 通用程序设计/46.for-each循环优于传统的for循环.html","tf":0.025}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"下":{"docs":{},"面":{"docs":{},"这":{"docs":{},"种":{"docs":{},"示":{"docs":{},"例":{"docs":{},"代":{"docs":{},"码":{"docs":{},"：":{"docs":{"第七章 通用程序设计/46.for-each循环优于传统的for循环.html":{"ref":"第七章 通用程序设计/46.for-each循环优于传统的for循环.html","tf":0.025}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441}},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{},"”":{"docs":{},"的":{"docs":{},"测":{"docs":{},"试":{"docs":{},"功":{"docs":{},"能":{"docs":{},"。":{"docs":{},"如":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},".":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"了":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"，":{"docs":{},"以":{"docs":{},"检":{"docs":{},"查":{"docs":{},"两":{"docs":{},"个":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"实":{"docs":{},"例":{"docs":{},"是":{"docs":{},"否":{"docs":{},"产":{"docs":{},"生":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"随":{"docs":{},"机":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"调":{"docs":{},"用":{"docs":{},"者":{"docs":{},"并":{"docs":{},"不":{"docs":{},"期":{"docs":{},"望":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"功":{"docs":{},"能":{"docs":{},"。":{"docs":{},"在":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"从":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"继":{"docs":{},"承":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"实":{"docs":{},"现":{"docs":{},"已":{"docs":{},"经":{"docs":{},"足":{"docs":{},"够":{"docs":{},"了":{"docs":{},"；":{"docs":{"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html":{"ref":"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}}}}}}}}}},"[":{"docs":{},"]":{"docs":{},"都":{"docs":{},"是":{"docs":{},"非":{"docs":{},"法":{"docs":{},"的":{"docs":{},"。":{"docs":{},"这":{"docs":{},"些":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"会":{"docs":{},"产":{"docs":{},"生":{"docs":{},"一":{"docs":{},"个":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"）":{"docs":{"第六章 方法/44.API需要编写文档注释.html":{"ref":"第六章 方法/44.API需要编写文档注释.html","tf":0.03333333333333333}}}}}}}},".":{"docs":{},"k":{"docs":{},"n":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"[":{"docs":{},"k":{"docs":{},"n":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"7":{"4":{"docs":{},"]":{"docs":{"第七章 通用程序设计/55.谨慎的进行优化.html":{"ref":"第七章 通用程序设计/55.谨慎的进行优化.html","tf":0.038461538461538464}}}},"docs":{}},"docs":{}}}}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"错":{"docs":{},"误":{"docs":{},")":{"docs":{},"表":{"docs":{},"示":{"docs":{},"系":{"docs":{},"统":{"docs":{},"级":{"docs":{},"的":{"docs":{},"错":{"docs":{},"误":{"docs":{},"和":{"docs":{},"程":{"docs":{},"序":{"docs":{},"不":{"docs":{},"必":{"docs":{},"处":{"docs":{},"理":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{},"，":{"docs":{},"是":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"运":{"docs":{},"行":{"docs":{},"环":{"docs":{},"境":{"docs":{},"中":{"docs":{},"的":{"docs":{},"内":{"docs":{},"部":{"docs":{},"错":{"docs":{},"误":{"docs":{},"或":{"docs":{},"者":{"docs":{},"硬":{"docs":{},"件":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"，":{"docs":{},"内":{"docs":{},"存":{"docs":{},"资":{"docs":{},"源":{"docs":{},"不":{"docs":{},"足":{"docs":{},"、":{"docs":{},"操":{"docs":{},"作":{"docs":{},"系":{"docs":{},"统":{"docs":{},"出":{"docs":{},"错":{"docs":{},"。":{"docs":{},"在":{"docs":{},"大":{"docs":{},"多":{"docs":{},"数":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"当":{"docs":{},"遇":{"docs":{},"到":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"错":{"docs":{},"误":{"docs":{},"时":{"docs":{},"，":{"docs":{},"建":{"docs":{},"议":{"docs":{},"让":{"docs":{},"该":{"docs":{},"程":{"docs":{},"序":{"docs":{},"中":{"docs":{},"断":{"docs":{},"。":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{},"超":{"docs":{},"出":{"docs":{},"了":{"docs":{},"程":{"docs":{},"序":{"docs":{},"可":{"docs":{},"控":{"docs":{},"制":{"docs":{},"的":{"docs":{},"范":{"docs":{},"围":{"docs":{},"。":{"docs":{"第八章 异常/58.选择合适的异常.html":{"ref":"第八章 异常/58.选择合适的异常.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"）":{"docs":{"第八章 异常/65.不要忽略异常.html":{"ref":"第八章 异常/65.不要忽略异常.html","tf":0.0625}}}},"f":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.023255813953488372},"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.025974025974025976},"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669},"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.03636363636363636},"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.031746031746031744},"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.03669724770642202},"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713},"第三章 类和接口/19.接口只用于定义类型.html":{"ref":"第三章 类和接口/19.接口只用于定义类型.html","tf":0.05405405405405406},"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.024096385542168676},"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.015503875968992248},"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.016149068322981366},"第五章 枚举和注解/32.用EnumSet代替位域.html":{"ref":"第五章 枚举和注解/32.用EnumSet代替位域.html","tf":0.03125},"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.022727272727272728},"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.023622047244094488},"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":{"ref":"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html","tf":0.019230769230769232},"第七章 通用程序设计/56.遵守普遍接受的命名规则.html":{"ref":"第七章 通用程序设计/56.遵守普遍接受的命名规则.html","tf":0.02857142857142857},"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886},"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":0.022222222222222223},"第十章 序列化/75.考虑使用自定义的序列化形式.html":{"ref":"第十章 序列化/75.考虑使用自定义的序列化形式.html","tf":0.07894736842105263},"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.0297029702970297},"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.011904761904761904},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.03550295857988166},"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.016666666666666666}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"缺":{"docs":{},"点":{"docs":{},"在":{"docs":{},"于":{"docs":{},"不":{"docs":{},"能":{"docs":{},"保":{"docs":{},"证":{"docs":{},"会":{"docs":{},"及":{"docs":{},"时":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{},"从":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"变":{"docs":{},"成":{"docs":{},"不":{"docs":{},"可":{"docs":{},"达":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"到":{"docs":{},"它":{"docs":{},"的":{"docs":{},"终":{"docs":{},"结":{"docs":{},"方":{"docs":{},"法":{"docs":{},"被":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"所":{"docs":{},"花":{"docs":{},"费":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"是":{"docs":{},"任":{"docs":{},"意":{"docs":{},"长":{"docs":{},"的":{"docs":{},"。":{"docs":{},"这":{"docs":{},"意":{"docs":{},"味":{"docs":{},"着":{"docs":{},"，":{"docs":{},"注":{"docs":{},"重":{"docs":{},"时":{"docs":{},"间":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"不":{"docs":{},"应":{"docs":{},"该":{"docs":{},"由":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"来":{"docs":{},"完":{"docs":{},"成":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"来":{"docs":{},"关":{"docs":{},"闭":{"docs":{},"已":{"docs":{},"经":{"docs":{},"打":{"docs":{},"开":{"docs":{},"的":{"docs":{},"文":{"docs":{},"件":{"docs":{},"，":{"docs":{},"这":{"docs":{},"就":{"docs":{},"是":{"docs":{},"十":{"docs":{},"分":{"docs":{},"严":{"docs":{},"重":{"docs":{},"的":{"docs":{},"错":{"docs":{},"误":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"不":{"docs":{},"应":{"docs":{},"该":{"docs":{},"以":{"docs":{},"来":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"来":{"docs":{},"更":{"docs":{},"新":{"docs":{},"重":{"docs":{},"要":{"docs":{},"的":{"docs":{},"持":{"docs":{},"久":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{},"还":{"docs":{},"有":{"docs":{},"一":{"docs":{},"点":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"有":{"docs":{},"非":{"docs":{},"常":{"docs":{},"严":{"docs":{},"重":{"docs":{},"的":{"docs":{},"性":{"docs":{},"能":{"docs":{},"损":{"docs":{},"失":{"docs":{},"；":{"docs":{"第一章 创建和销毁对象/7.避免使用finalize方法.html":{"ref":"第一章 创建和销毁对象/7.避免使用finalize方法.html","tf":0.06666666666666667}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{"第一章 创建和销毁对象/7.避免使用finalize方法.html":{"ref":"第一章 创建和销毁对象/7.避免使用finalize方法.html","tf":0.06666666666666667}}}}}}}},"通":{"docs":{},"常":{"docs":{},"是":{"docs":{},"不":{"docs":{},"可":{"docs":{},"预":{"docs":{},"测":{"docs":{},"的":{"docs":{},"，":{"docs":{},"也":{"docs":{},"是":{"docs":{},"很":{"docs":{},"危":{"docs":{},"险":{"docs":{},"的":{"docs":{},"，":{"docs":{},"一":{"docs":{},"般":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"也":{"docs":{},"是":{"docs":{},"不":{"docs":{},"必":{"docs":{},"要":{"docs":{},"的":{"docs":{},"。":{"docs":{},"使":{"docs":{},"用":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"行":{"docs":{},"为":{"docs":{},"不":{"docs":{},"稳":{"docs":{},"定":{"docs":{},"、":{"docs":{},"降":{"docs":{},"低":{"docs":{},"性":{"docs":{},"能":{"docs":{},"，":{"docs":{},"以":{"docs":{},"及":{"docs":{},"可":{"docs":{},"移":{"docs":{},"植":{"docs":{},"性":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"终":{"docs":{},"结":{"docs":{},"方":{"docs":{},"法":{"docs":{},"也":{"docs":{},"有":{"docs":{},"可":{"docs":{},"用":{"docs":{},"之":{"docs":{},"处":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"还":{"docs":{},"是":{"docs":{},"应":{"docs":{},"该":{"docs":{},"避":{"docs":{},"免":{"docs":{},"使":{"docs":{},"用":{"docs":{},"它":{"docs":{},"，":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"缺":{"docs":{},"点":{"docs":{},"和":{"docs":{},"用":{"docs":{},"途":{"docs":{},"有":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"？":{"docs":{"第一章 创建和销毁对象/7.避免使用finalize方法.html":{"ref":"第一章 创建和销毁对象/7.避免使用finalize方法.html","tf":0.06666666666666667}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"有":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"用":{"docs":{},"途":{"docs":{},"：":{"docs":{"第一章 创建和销毁对象/7.避免使用finalize方法.html":{"ref":"第一章 创建和销毁对象/7.避免使用finalize方法.html","tf":0.06666666666666667}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.018072289156626505},"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":0.03333333333333333}},"s":{"docs":{},",":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.012987012987012988}}}},":":{"docs":{},"用":{"docs":{},"于":{"docs":{},"描":{"docs":{},"述":{"docs":{},"域":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}},";":{"docs":{"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":0.05555555555555555}}},"=":{"docs":{"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":0.011111111111111112}}},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"{":{"docs":{"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":0.011111111111111112}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":0.07777777777777778}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},";":{"docs":{"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":0.011111111111111112}}}}}}}}}}}}}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},";":{"docs":{"第十章 序列化/75.考虑使用自定义的序列化形式.html":{"ref":"第十章 序列化/75.考虑使用自定义的序列化形式.html","tf":0.02631578947368421}}}}}}}}}},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.03614457831325301}},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}}}}}}},"t":{"docs":{"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.027777777777777776}}},"l":{"docs":{},"d":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":0.011111111111111112}}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}},"和":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"类":{"docs":{},"型":{"docs":{},"主":{"docs":{},"要":{"docs":{},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"科":{"docs":{},"学":{"docs":{},"计":{"docs":{},"算":{"docs":{},"与":{"docs":{},"工":{"docs":{},"程":{"docs":{},"计":{"docs":{},"算":{"docs":{},"而":{"docs":{},"设":{"docs":{},"计":{"docs":{},"的":{"docs":{},"，":{"docs":{},"它":{"docs":{},"们":{"docs":{},"并":{"docs":{},"没":{"docs":{},"有":{"docs":{},"提":{"docs":{},"供":{"docs":{},"完":{"docs":{},"全":{"docs":{},"精":{"docs":{},"确":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"不":{"docs":{},"应":{"docs":{},"该":{"docs":{},"被":{"docs":{},"用":{"docs":{},"于":{"docs":{},"需":{"docs":{},"要":{"docs":{},"精":{"docs":{},"确":{"docs":{},"结":{"docs":{},"果":{"docs":{},"的":{"docs":{},"场":{"docs":{},"合":{"docs":{},"。":{"docs":{},"比":{"docs":{},"如":{"docs":{},"：":{"docs":{"第七章 通用程序设计/48.需要精确答案，请避免使用float和double.html":{"ref":"第七章 通用程序设计/48.需要精确答案，请避免使用float和double.html","tf":0.07142857142857142}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.007142857142857143}},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}}}}}}}}}}}},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.015151515151515152}},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}}}}}}},"o":{"docs":{},"(":{"docs":{},")":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.053763440860215055}},"{":{"docs":{"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886}}}},"i":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{},")":{"docs":{},",":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}}}}}}}}}}},",":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},":":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.014388489208633094}}}}}}},"v":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.011904761904761904}}}}}}}}}}}}},"e":{"docs":{},"w":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012}}}}},"g":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441}},"a":{"docs":{},"r":{"docs":{},"b":{"docs":{},"a":{"docs":{},"g":{"docs":{"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.011627906976744186},"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.011904761904761904}}}}},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.015151515151515152}}}}}}},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"{":{"docs":{"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.011627906976744186}}}}}}}}}}}}},"x":{"docs":{},"(":{"docs":{},")":{"docs":{"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html":{"ref":"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html","tf":0.013513513513513514}}}}},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html":{"ref":"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html","tf":0.013513513513513514}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}}}},"h":{"docs":{},"e":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"{":{"docs":{"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":{"ref":"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html","tf":0.019230769230769232}}}}}}}}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"{":{"docs":{"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":{"ref":"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html","tf":0.019230769230769232}}}}}}}}}}}},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"第七章 通用程序设计/50.尽量避免使用字符串.html":{"ref":"第七章 通用程序设计/50.尽量避免使用字符串.html","tf":0.013333333333333334}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"第七章 通用程序设计/50.尽量避免使用字符串.html":{"ref":"第七章 通用程序设计/50.尽量避免使用字符串.html","tf":0.013333333333333334}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"第七章 通用程序设计/50.尽量避免使用字符串.html":{"ref":"第七章 通用程序设计/50.尽量避免使用字符串.html","tf":0.013333333333333334}}}}}}},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"i":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"第七章 通用程序设计/56.遵守普遍接受的命名规则.html":{"ref":"第七章 通用程序设计/56.遵守普遍接受的命名规则.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":0.011111111111111112}},"{":{"docs":{"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":0.022222222222222223}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"第七章 通用程序设计/46.for-each循环优于传统的for循环.html":{"ref":"第七章 通用程序设计/46.for-each循环优于传统的for循环.html","tf":0.025}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"t":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.012987012987012988}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.025974025974025976}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"1":{"9":{"4":{"6":{"docs":{},",":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.012987012987012988}}}},"docs":{}},"6":{"5":{"docs":{},",":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.012987012987012988}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},".":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669}}}}},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"t":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}},"o":{"docs":{},"o":{"docs":{},"d":{"docs":{},",":{"docs":{},"j":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":{"ref":"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html","tf":0.019230769230769232}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.011627906976744186},"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.011904761904761904}}}}}}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}}}}},"t":{"docs":{},"h":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}},"*":{"docs":{},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}}}},",":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}},";":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.018072289156626505}}}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082},"第八章 异常/61.抛出与抽象相对应的异常.html":{"ref":"第八章 异常/61.抛出与抽象相对应的异常.html","tf":0.041666666666666664}}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.006493506493506494},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.011834319526627219}},"[":{"1":{"docs":{},"]":{"docs":{},";":{"docs":{"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888}}}}},"docs":{}}}},"a":{"docs":{},"d":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}},";":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},":":{"docs":{},"用":{"docs":{},"于":{"docs":{},"描":{"docs":{},"述":{"docs":{},"局":{"docs":{},"部":{"docs":{},"变":{"docs":{},"量":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886}}}},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{"第八章 异常/61.抛出与抽象相对应的异常.html":{"ref":"第八章 异常/61.抛出与抽象相对应的异常.html","tf":0.041666666666666664}}}}}},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}},"e":{"docs":{},"r":{"docs":{},";":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.01818181818181818},"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.015873015873015872}}},")":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.03278688524590164},"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.027777777777777776},"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.021505376344086023},"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012},"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":{"ref":"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html","tf":0.057692307692307696},"第七章 通用程序设计/52.通过接口引用对象.html":{"ref":"第七章 通用程序设计/52.通过接口引用对象.html","tf":0.047619047619047616}},",":{"docs":{"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"o":{"docs":{},")":{"docs":{},";":{"docs":{"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082}}}}}}}}}},"[":{"1":{"docs":{},"]":{"docs":{},";":{"docs":{"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888}}}}},"docs":{},"]":{"docs":{"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888}},"、":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888}}}}}},"和":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888}}}}}}}},"是":{"docs":{},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"的":{"docs":{},"，":{"docs":{},"编":{"docs":{},"译":{"docs":{},"无":{"docs":{},"法":{"docs":{},"通":{"docs":{},"过":{"docs":{"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888}}}}}}}}}}}}}},"=":{"docs":{"第七章 通用程序设计/52.通过接口引用对象.html":{"ref":"第七章 通用程序设计/52.通过接口引用对象.html","tf":0.09523809523809523}}}}}},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.010752688172043012}}}}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"第七章 通用程序设计/56.遵守普遍接受的命名规则.html":{"ref":"第七章 通用程序设计/56.遵守普遍接受的命名规则.html","tf":0.02857142857142857}}}}}}},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},";":{"docs":{"第十章 序列化/75.考虑使用自定义的序列化形式.html":{"ref":"第十章 序列化/75.考虑使用自定义的序列化形式.html","tf":0.02631578947368421}}}}}}}}}}},"m":{"1":{"docs":{},"(":{"docs":{},")":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}},"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205},"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.011627906976744186},"第八章 异常/59.避免不必要的使用受检的异常.html":{"ref":"第八章 异常/59.避免不必要的使用受检的异常.html","tf":0.024390243902439025}},"s":{"docs":{},",":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.012987012987012988}}}},":":{"docs":{},"用":{"docs":{},"于":{"docs":{},"描":{"docs":{},"述":{"docs":{},"方":{"docs":{},"法":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.03278688524590164}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},")":{"docs":{},"来":{"docs":{},"手":{"docs":{},"工":{"docs":{},"建":{"docs":{},"立":{"docs":{},"这":{"docs":{},"种":{"docs":{},"关":{"docs":{},"系":{"docs":{},"也":{"docs":{},"是":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"很":{"docs":{},"少":{"docs":{},"使":{"docs":{},"用":{"docs":{},"。":{"docs":{"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}},"y":{"docs":{},"(":{"3":{"docs":{},".":{"3":{"0":{"2":{"docs":{},"e":{"docs":{},"+":{"2":{"3":{"docs":{},",":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}},"docs":{}},"docs":{}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}}}}}},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"）":{"docs":{},"。":{"docs":{},"程":{"docs":{},"序":{"docs":{},"员":{"docs":{},"会":{"docs":{},"根":{"docs":{},"据":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"来":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{},"信":{"docs":{},"息":{"docs":{},"进":{"docs":{},"行":{"docs":{},"排":{"docs":{},"错":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"异":{"docs":{},"常":{"docs":{},"信":{"docs":{},"息":{"docs":{},"不":{"docs":{},"够":{"docs":{},"充":{"docs":{},"足":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"会":{"docs":{},"减":{"docs":{},"缓":{"docs":{},"排":{"docs":{},"错":{"docs":{},"的":{"docs":{},"速":{"docs":{},"度":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"如":{"docs":{},"何":{"docs":{},"编":{"docs":{},"写":{"docs":{},"合":{"docs":{},"适":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{},"信":{"docs":{},"息":{"docs":{},"？":{"docs":{"第八章 异常/63.编写合适的异常信息.html":{"ref":"第八章 异常/63.编写合适的异常信息.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"[":{"docs":{},"]":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.006493506493506494},"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713},"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082},"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441},"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547},"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.021505376344086023},"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.016}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}},"*":{"docs":{},"(":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"u":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}}}}}}}}},"p":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}}}}}}}},">":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}}}},"r":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441}}},"s":{"docs":{},"s":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0037267080745341614}},"(":{"docs":{},")":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}},")":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}},",":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}},";":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0037267080745341614}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669}}}},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}},",":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}},"y":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{},")":{"docs":{},",":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082}}}}}},"^":{"3":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}},"docs":{}},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}},"s":{"docs":{},"(":{"docs":{},"\"":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441}}}},",":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}},":":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441}}}}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012}},".":{"docs":{},".":{"docs":{},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},")":{"docs":{},"{":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012}}}}}}}}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},";":{"docs":{"第十章 序列化/75.考虑使用自定义的序列化形式.html":{"ref":"第十章 序列化/75.考虑使用自定义的序列化形式.html","tf":0.02631578947368421}}}}}}}}}}}},")":{"docs":{},";":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.011627906976744186},"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.006493506493506494},"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.019417475728155338},"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082},"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888},"第七章 通用程序设计/50.尽量避免使用字符串.html":{"ref":"第七章 通用程序设计/50.尽量避免使用字符串.html","tf":0.05333333333333334},"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886},"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.011904761904761904},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.011834319526627219}},"[":{"docs":{},"]":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669},"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713},"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.027777777777777776}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"]":{"docs":{},";":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"规":{"docs":{},"范":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909}}}}}}}}}}}}},"中":{"docs":{},"默":{"docs":{},"认":{"docs":{},"的":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"它":{"docs":{},"返":{"docs":{},"回":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"只":{"docs":{},"类":{"docs":{},"类":{"docs":{},"名":{"docs":{},"加":{"docs":{},"上":{"docs":{},"一":{"docs":{},"个":{"docs":{},"“":{"docs":{},"＠":{"docs":{},"符":{"docs":{},"号":{"docs":{},"”":{"docs":{},"，":{"docs":{},"后":{"docs":{},"面":{"docs":{},"是":{"docs":{},"十":{"docs":{},"六":{"docs":{},"进":{"docs":{},"制":{"docs":{},"形":{"docs":{},"式":{"docs":{},"的":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"，":{"docs":{},"这":{"docs":{},"些":{"docs":{},"信":{"docs":{},"息":{"docs":{},"对":{"docs":{},"我":{"docs":{},"们":{"docs":{},"来":{"docs":{},"说":{"docs":{},"用":{"docs":{},"处":{"docs":{},"不":{"docs":{},"大":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"为":{"docs":{},"了":{"docs":{},"提":{"docs":{},"供":{"docs":{},"更":{"docs":{},"好":{"docs":{},"的":{"docs":{},"关":{"docs":{},"于":{"docs":{},"类":{"docs":{},"和":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"说":{"docs":{},"明":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"应":{"docs":{},"该":{"docs":{},"总":{"docs":{},"是":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"来":{"docs":{},"提":{"docs":{},"供":{"docs":{},"更":{"docs":{},"加":{"docs":{},"清":{"docs":{},"晰":{"docs":{},"的":{"docs":{},"说":{"docs":{},"明":{"docs":{},"，":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"好":{"docs":{},"处":{"docs":{},"以":{"docs":{},"及":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"的":{"docs":{},"注":{"docs":{},"意":{"docs":{},"事":{"docs":{},"项":{"docs":{},"？":{"docs":{"第二章 对象通用的方法/10.覆盖toString.html":{"ref":"第二章 对象通用的方法/10.覆盖toString.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888}},"[":{"0":{"docs":{},"]":{"docs":{"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888}}}},"docs":{}}}}}}},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888}}}},"docs":{}}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886}}}}}}}},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"第八章 异常/59.避免不必要的使用受检的异常.html":{"ref":"第八章 异常/59.避免不必要的使用受检的异常.html","tf":0.024390243902439025}},".":{"docs":{"第八章 异常/59.避免不必要的使用受检的异常.html":{"ref":"第八章 异常/59.避免不必要的使用受检的异常.html","tf":0.024390243902439025}}}}}}}}}}}}}}}}}}},"n":{"docs":{"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.011627906976744186},"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669},"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.011904761904761904}}},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.012987012987012988}}}}},"i":{"docs":{},"t":{"docs":{"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.007874015748031496}}}}},"f":{"docs":{},"f":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}},";":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}}}}}}}},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}}}},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.016666666666666666}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}},"e":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"d":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}},";":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}},",":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}},"e":{"docs":{},",":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}}}}}},")":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.010714285714285714}},"{":{"docs":{"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082}}}},"l":{"docs":{"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"i":{"docs":{"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888}}}}}}}}}},"p":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441}},")":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}},";":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441}}}},",":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"y":{"docs":{},"(":{"docs":{},"x":{"docs":{},",":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}},":":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441}}},"e":{"docs":{},"r":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.006211180124223602}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441}}}}}},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},";":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"s":{"docs":{},";":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}},"p":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},";":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},";":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}},"s":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0037267080745341614}},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0037267080745341614}},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}},";":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}}}},"i":{"docs":{"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}},"s":{"docs":{},")":{"docs":{"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}}}},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"8":{"docs":{},")":{"docs":{},",":{"docs":{"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.016666666666666666}}}}},"docs":{}}}}}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.011627906976744186},"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.006493506493506494},"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.019417475728155338},"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html":{"ref":"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html","tf":0.02702702702702703},"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.007142857142857143},"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.03278688524590164},"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441},"第五章 枚举和注解/32.用EnumSet代替位域.html":{"ref":"第五章 枚举和注解/32.用EnumSet代替位域.html","tf":0.03125},"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.014388489208633094},"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.021505376344086023},"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.053763440860215055},"第七章 通用程序设计/50.尽量避免使用字符串.html":{"ref":"第七章 通用程序设计/50.尽量避免使用字符串.html","tf":0.02666666666666667},"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.04},"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886},"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901},"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.023809523809523808},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.016},"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":0.011111111111111112}}}}}}}},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{},";":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.01834862385321101}}}}}}}}}}},"[":{"docs":{},"]":{"docs":{},")":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}}},";":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}}}}},"对":{"docs":{},"的":{"docs":{},"次":{"docs":{},"序":{"docs":{},"。":{"docs":{},"当":{"docs":{},"程":{"docs":{},"序":{"docs":{},"通":{"docs":{},"过":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"、":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"、":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"等":{"docs":{},"方":{"docs":{},"法":{"docs":{},"来":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"时":{"docs":{},"即":{"docs":{},"可":{"docs":{},"看":{"docs":{},"到":{"docs":{},"这":{"docs":{},"种":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"。":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{},";":{"docs":{"第七章 通用程序设计/50.尽量避免使用字符串.html":{"ref":"第七章 通用程序设计/50.尽量避免使用字符串.html","tf":0.02666666666666667}}}}}}}},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"）":{"docs":{},"，":{"docs":{},"这":{"docs":{},"些":{"docs":{},"集":{"docs":{},"合":{"docs":{},"视":{"docs":{},"图":{"docs":{},"是":{"docs":{},"由":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"的":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"、":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"和":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"方":{"docs":{},"法":{"docs":{},"返":{"docs":{},"回":{"docs":{},"的":{"docs":{},"。":{"docs":{},"同":{"docs":{},"样":{"docs":{},"地":{"docs":{},"，":{"docs":{},"诸":{"docs":{},"如":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"和":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"这":{"docs":{},"种":{"docs":{},"集":{"docs":{},"合":{"docs":{},"接":{"docs":{},"口":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"往":{"docs":{},"往":{"docs":{},"也":{"docs":{},"是":{"docs":{},"用":{"docs":{},"非":{"docs":{},"静":{"docs":{},"态":{"docs":{},"成":{"docs":{},"员":{"docs":{},"类":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"他":{"docs":{},"们":{"docs":{},"的":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"（":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"）":{"docs":{},"：":{"docs":{"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082}}},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441}}}},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"第七章 通用程序设计/52.通过接口引用对象.html":{"ref":"第七章 通用程序设计/52.通过接口引用对象.html","tf":0.047619047619047616}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第七章 通用程序设计/52.通过接口引用对象.html":{"ref":"第七章 通用程序设计/52.通过接口引用对象.html","tf":0.047619047619047616}}}}}}}}}}},"但":{"docs":{},"是":{"docs":{},"还":{"docs":{},"是":{"docs":{},"存":{"docs":{},"在":{"docs":{},"第":{"1":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"里":{"docs":{},"的":{"docs":{},"反":{"docs":{},"射":{"docs":{},"机":{"docs":{},"制":{"docs":{},"进":{"docs":{},"行":{"docs":{},"攻":{"docs":{},"击":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"以":{"docs":{},"上":{"docs":{},"两":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"还":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"在":{"docs":{},"实":{"docs":{},"现":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"类":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"仅":{"docs":{},"仅":{"docs":{},"在":{"docs":{},"声":{"docs":{},"名":{"docs":{},"中":{"docs":{},"加":{"docs":{},"上":{"docs":{},"“":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}},"，":{"docs":{},"用":{"docs":{},"这":{"docs":{},"述":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"有":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"规":{"docs":{},"定":{"docs":{},"了":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"就":{"docs":{},"无":{"docs":{},"法":{"docs":{},"传":{"docs":{},"递":{"docs":{},"任":{"docs":{},"何":{"docs":{},"其":{"docs":{},"他":{"docs":{},"的":{"docs":{},"比":{"docs":{},"较":{"docs":{},"策":{"docs":{},"略":{"docs":{},"。":{"docs":{},"相":{"docs":{},"反":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"这":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"个":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"接":{"docs":{},"口":{"docs":{},"，":{"docs":{},"并":{"docs":{},"修":{"docs":{},"改":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"这":{"docs":{},"个":{"docs":{},"接":{"docs":{},"口":{"docs":{},"。":{"docs":{},"换":{"docs":{},"句":{"docs":{},"话":{"docs":{},"说":{"docs":{},"，":{"docs":{},"在":{"docs":{},"设":{"docs":{},"计":{"docs":{},"具":{"docs":{},"体":{"docs":{},"的":{"docs":{},"策":{"docs":{},"略":{"docs":{},"类":{"docs":{},"时":{"docs":{},"，":{"docs":{},"还":{"docs":{},"需":{"docs":{},"要":{"docs":{},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"个":{"docs":{},"策":{"docs":{},"略":{"docs":{},"接":{"docs":{},"口":{"docs":{},"：":{"docs":{"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"到":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"并":{"docs":{},"不":{"docs":{},"能":{"docs":{},"保":{"docs":{},"证":{"docs":{},"原":{"docs":{},"子":{"docs":{},"性":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"：":{"docs":{"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"将":{"docs":{},"这":{"docs":{},"个":{"docs":{},"类":{"docs":{},"进":{"docs":{},"行":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"能":{"docs":{},"这":{"docs":{},"个":{"docs":{},"类":{"docs":{},"会":{"docs":{},"出":{"docs":{},"现":{"docs":{},"不":{"docs":{},"满":{"docs":{},"足":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"和":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"的":{"docs":{},"约":{"docs":{},"束":{"docs":{},"关":{"docs":{},"系":{"docs":{},"了":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"怎":{"docs":{},"样":{"docs":{},"保":{"docs":{},"证":{"docs":{},"在":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"也":{"docs":{},"能":{"docs":{},"保":{"docs":{},"障":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"约":{"docs":{},"束":{"docs":{},"关":{"docs":{},"系":{"docs":{},"？":{"docs":{"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"创":{"docs":{},"建":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"时":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"实":{"docs":{},"现":{"docs":{},"方":{"docs":{},"式":{"docs":{},"既":{"docs":{},"简":{"docs":{},"洁":{"docs":{},"又":{"docs":{},"能":{"docs":{},"保":{"docs":{},"证":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"安":{"docs":{},"全":{"docs":{},"和":{"docs":{},"反":{"docs":{},"射":{"docs":{},"安":{"docs":{},"全":{"docs":{},"。":{"docs":{"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"实":{"docs":{},"现":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"最":{"docs":{},"安":{"docs":{},"全":{"docs":{},"可":{"docs":{},"靠":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"编":{"docs":{},"写":{"docs":{},"包":{"docs":{},"含":{"docs":{},"单":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"元":{"docs":{},"素":{"docs":{},"：":{"docs":{"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"最":{"docs":{},"简":{"docs":{},"单":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"是":{"docs":{},"采":{"docs":{},"用":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"的":{"docs":{},"形":{"docs":{},"式":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"尽":{"docs":{},"可":{"docs":{},"能":{"docs":{},"采":{"docs":{},"用":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"采":{"docs":{},"用":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"呀":{"docs":{},"确":{"docs":{},"保":{"docs":{},"该":{"docs":{},"类":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"实":{"docs":{},"例":{"docs":{},"域":{"docs":{},"都":{"docs":{},"为":{"docs":{},"基":{"docs":{},"本":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"是":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"的":{"docs":{},"。":{"docs":{"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.011904761904761904}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"例":{"docs":{},"域":{"docs":{},"决":{"docs":{},"不":{"docs":{},"能":{"docs":{},"是":{"docs":{},"公":{"docs":{},"有":{"docs":{},"的":{"docs":{},"，":{"docs":{},"如":{"docs":{},"何":{"docs":{},"非":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"实":{"docs":{},"例":{"docs":{},"域":{"docs":{},"指":{"docs":{},"向":{"docs":{},"了":{"docs":{},"可":{"docs":{},"变":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"该":{"docs":{},"实":{"docs":{},"例":{"docs":{},"域":{"docs":{},"为":{"docs":{},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"包":{"docs":{},"含":{"docs":{},"该":{"docs":{},"实":{"docs":{},"例":{"docs":{},"域":{"docs":{},"的":{"docs":{},"类":{"docs":{},"就":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"不":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"；":{"docs":{"第三章 类和接口/13.使类和成员的可访问性最小化.html":{"ref":"第三章 类和接口/13.使类和成员的可访问性最小化.html","tf":0.0625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"际":{"docs":{},"上":{"docs":{},"，":{"docs":{},"上":{"docs":{},"例":{"docs":{},"是":{"docs":{},"想":{"docs":{},"通":{"docs":{},"过":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"值":{"docs":{},"作":{"docs":{},"为":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"索":{"docs":{},"引":{"docs":{},"，":{"docs":{},"是":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"到":{"docs":{},"数":{"docs":{},"组":{"docs":{},"值":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"映":{"docs":{},"射":{"docs":{},"关":{"docs":{},"系":{"docs":{},"，":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"充":{"docs":{},"当":{"docs":{},"着":{"docs":{},"“":{"docs":{},"索":{"docs":{},"引":{"docs":{},"键":{"docs":{},"”":{"docs":{},"的":{"docs":{},"关":{"docs":{},"系":{"docs":{},"，":{"docs":{},"在":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"使":{"docs":{},"用":{"docs":{},"场":{"docs":{},"景":{"docs":{},"下":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"采":{"docs":{},"用":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"，":{"docs":{},"该":{"docs":{},"类":{"docs":{},"专":{"docs":{},"门":{"docs":{},"用":{"docs":{},"于":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"键":{"docs":{},"，":{"docs":{},"更":{"docs":{},"加":{"docs":{},"安":{"docs":{},"全":{"docs":{},"可":{"docs":{},"靠":{"docs":{},"。":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"常":{"docs":{},"用":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"有":{"docs":{},"两":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"都":{"docs":{},"是":{"docs":{},"将":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"私":{"docs":{},"有":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"通":{"docs":{},"过":{"docs":{},"导":{"docs":{},"出":{"docs":{},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"的":{"docs":{},"静":{"docs":{},"态":{"docs":{},"域":{"docs":{},"。":{"docs":{},"一":{"docs":{},"种":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"的":{"docs":{},"静":{"docs":{},"态":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"成":{"docs":{},"员":{"docs":{},"变":{"docs":{},"量":{"docs":{},"实":{"docs":{},"现":{"docs":{},"：":{"docs":{"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"量":{"docs":{},"接":{"docs":{},"口":{"docs":{},"是":{"docs":{},"对":{"docs":{},"接":{"docs":{},"口":{"docs":{},"的":{"docs":{},"一":{"docs":{},"种":{"docs":{},"不":{"docs":{},"良":{"docs":{},"使":{"docs":{},"用":{"docs":{},"，":{"docs":{},"主":{"docs":{},"要":{"docs":{},"有":{"docs":{},"这":{"docs":{},"样":{"docs":{},"两":{"docs":{},"个":{"docs":{},"原":{"docs":{},"因":{"docs":{},"：":{"docs":{"第三章 类和接口/19.接口只用于定义类型.html":{"ref":"第三章 类和接口/19.接口只用于定义类型.html","tf":0.02702702702702703}}}}}}}}}}}}}}}}}}}}}}}}}},"域":{"docs":{},"：":{"docs":{},"包":{"docs":{},"括":{"docs":{},"一":{"docs":{},"个":{"docs":{},"或":{"docs":{},"多":{"docs":{},"个":{"docs":{},"大":{"docs":{},"写":{"docs":{},"的":{"docs":{},"单":{"docs":{},"词":{"docs":{},"，":{"docs":{},"中":{"docs":{},"间":{"docs":{},"用":{"docs":{},"下":{"docs":{},"划":{"docs":{},"线":{"docs":{},"隔":{"docs":{},"开":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{"第七章 通用程序设计/56.遵守普遍接受的命名规则.html":{"ref":"第七章 通用程序设计/56.遵守普遍接受的命名规则.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"解":{"docs":{},"决":{"docs":{"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.011627906976744186},"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html":{"ref":"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html","tf":0.03225806451612903},"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.006493506493506494},"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669},"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html":{"ref":"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html","tf":0.03571428571428571},"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909},"第二章 对象通用的方法/10.覆盖toString.html":{"ref":"第二章 对象通用的方法/10.覆盖toString.html","tf":0.1},"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936},"第三章 类和接口/13.使类和成员的可访问性最小化.html":{"ref":"第三章 类和接口/13.使类和成员的可访问性最小化.html","tf":0.0625},"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html":{"ref":"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html","tf":0.013513513513513514},"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505},"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713},"第三章 类和接口/17.要么为继承而设计，并提供文档说明，要么就禁止继承.html":{"ref":"第三章 类和接口/17.要么为继承而设计，并提供文档说明，要么就禁止继承.html","tf":0.09090909090909091},"第三章 类和接口/19.接口只用于定义类型.html":{"ref":"第三章 类和接口/19.接口只用于定义类型.html","tf":0.02702702702702703},"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169},"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205},"第五章 枚举和注解/32.用EnumSet代替位域.html":{"ref":"第五章 枚举和注解/32.用EnumSet代替位域.html","tf":0.03125},"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576},"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547},"第六章 方法/38.检查方法参数的有效性.html":{"ref":"第六章 方法/38.检查方法参数的有效性.html","tf":0.125},"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.007874015748031496},"第六章 方法/40.谨慎的设计方法签名.html":{"ref":"第六章 方法/40.谨慎的设计方法签名.html","tf":0.125},"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.010752688172043012},"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012},"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":{"ref":"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html","tf":0.019230769230769232},"第六章 方法/44.API需要编写文档注释.html":{"ref":"第六章 方法/44.API需要编写文档注释.html","tf":0.03333333333333333},"第七章 通用程序设计/45.将局部变量的作用域最小化.html":{"ref":"第七章 通用程序设计/45.将局部变量的作用域最小化.html","tf":0.125},"第七章 通用程序设计/46.for-each循环优于传统的for循环.html":{"ref":"第七章 通用程序设计/46.for-each循环优于传统的for循环.html","tf":0.025},"第七章 通用程序设计/47.多使用类库.html":{"ref":"第七章 通用程序设计/47.多使用类库.html","tf":0.1111111111111111},"第七章 通用程序设计/48.需要精确答案，请避免使用float和double.html":{"ref":"第七章 通用程序设计/48.需要精确答案，请避免使用float和double.html","tf":0.07142857142857142},"第七章 通用程序设计/49.基本类型优先于装箱基本类型.html":{"ref":"第七章 通用程序设计/49.基本类型优先于装箱基本类型.html","tf":0.05555555555555555},"第七章 通用程序设计/50.尽量避免使用字符串.html":{"ref":"第七章 通用程序设计/50.尽量避免使用字符串.html","tf":0.013333333333333334},"第七章 通用程序设计/51.谨慎使用字符串连接符.html":{"ref":"第七章 通用程序设计/51.谨慎使用字符串连接符.html","tf":0.16666666666666666},"第七章 通用程序设计/52.通过接口引用对象.html":{"ref":"第七章 通用程序设计/52.通过接口引用对象.html","tf":0.047619047619047616},"第七章 通用程序设计/53.慎用反射机制.html":{"ref":"第七章 通用程序设计/53.慎用反射机制.html","tf":0.1},"第一章 创建和销毁对象/7.避免使用finalize方法.html":{"ref":"第一章 创建和销毁对象/7.避免使用finalize方法.html","tf":0.06666666666666667}},"方":{"docs":{},"案":{"docs":{"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.007751937984496124},"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082},"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082},"第四章 泛型/24.消除非受检警告.html":{"ref":"第四章 泛型/24.消除非受检警告.html","tf":0.07142857142857142}}}},"这":{"docs":{},"一":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"最":{"docs":{},"好":{"docs":{},"办":{"docs":{},"法":{"docs":{},"其":{"docs":{},"实":{"docs":{},"是":{"docs":{},"尽":{"docs":{},"量":{"docs":{},"避":{"docs":{},"免":{"docs":{},"在":{"docs":{},"线":{"docs":{},"程":{"docs":{},"间":{"docs":{},"共":{"docs":{},"享":{"docs":{},"可":{"docs":{},"变":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"将":{"docs":{},"可":{"docs":{},"变":{"docs":{},"数":{"docs":{},"据":{"docs":{},"限":{"docs":{},"制":{"docs":{},"在":{"docs":{},"单":{"docs":{},"线":{"docs":{},"程":{"docs":{},"中":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"想":{"docs":{},"要":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"共":{"docs":{},"享":{"docs":{},"可":{"docs":{},"变":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"读":{"docs":{},"写":{"docs":{},"都":{"docs":{},"需":{"docs":{},"要":{"docs":{},"进":{"docs":{},"行":{"docs":{},"同":{"docs":{},"步":{"docs":{},"。":{"docs":{"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"还":{"docs":{},"有":{"docs":{},"一":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"导":{"docs":{},"出":{"docs":{},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"的":{"docs":{},"静":{"docs":{},"态":{"docs":{},"方":{"docs":{},"法":{"docs":{},"：":{"docs":{"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"ref":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}}}},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"，":{"docs":{},"因":{"docs":{},"继":{"docs":{},"承":{"docs":{},"而":{"docs":{},"需":{"docs":{},"要":{"docs":{},"的":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"文":{"docs":{},"档":{"docs":{},"会":{"docs":{},"打":{"docs":{},"乱":{"docs":{},"正":{"docs":{},"常":{"docs":{},"的":{"docs":{},"文":{"docs":{},"档":{"docs":{},"信":{"docs":{},"息":{"docs":{},"，":{"docs":{},"普":{"docs":{},"通":{"docs":{},"的":{"docs":{},"文":{"docs":{},"档":{"docs":{},"被":{"docs":{},"设":{"docs":{},"计":{"docs":{},"用":{"docs":{},"来":{"docs":{},"让":{"docs":{},"程":{"docs":{},"序":{"docs":{},"员":{"docs":{},"可":{"docs":{},"以":{"docs":{},"创":{"docs":{},"建":{"docs":{},"该":{"docs":{},"类":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"，":{"docs":{},"并":{"docs":{},"调":{"docs":{},"用":{"docs":{},"类":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{},"而":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"文":{"docs":{},"档":{"docs":{},"看":{"docs":{},"起":{"docs":{},"来":{"docs":{},"混":{"docs":{},"用":{"docs":{},"了":{"docs":{},"很":{"docs":{},"多":{"docs":{},"内":{"docs":{},"容":{"docs":{},"。":{"docs":{},"为":{"docs":{},"了":{"docs":{},"允":{"docs":{},"许":{"docs":{},"继":{"docs":{},"承":{"docs":{},"，":{"docs":{},"类":{"docs":{},"还":{"docs":{},"必":{"docs":{},"须":{"docs":{},"遵":{"docs":{},"守":{"docs":{},"其":{"docs":{},"他":{"docs":{},"的":{"docs":{},"一":{"docs":{},"些":{"docs":{},"约":{"docs":{},"束":{"docs":{},"。":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"决":{"docs":{},"不":{"docs":{},"能":{"docs":{},"调":{"docs":{},"用":{"docs":{},"可":{"docs":{},"被":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"无":{"docs":{},"论":{"docs":{},"是":{"docs":{},"直":{"docs":{},"接":{"docs":{},"调":{"docs":{},"用":{"docs":{},"还":{"docs":{},"是":{"docs":{},"间":{"docs":{},"接":{"docs":{},"调":{"docs":{},"用":{"docs":{},"。":{"docs":{},"这":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"超":{"docs":{},"类":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"在":{"docs":{},"子":{"docs":{},"类":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"之":{"docs":{},"前":{"docs":{},"运":{"docs":{},"行":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"，":{"docs":{},"子":{"docs":{},"类":{"docs":{},"中":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"版":{"docs":{},"本":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"将":{"docs":{},"会":{"docs":{},"在":{"docs":{},"子":{"docs":{},"类":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"运":{"docs":{},"行":{"docs":{},"之":{"docs":{},"前":{"docs":{},"就":{"docs":{},"先":{"docs":{},"被":{"docs":{},"调":{"docs":{},"用":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"该":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"版":{"docs":{},"本":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"信":{"docs":{},"赖":{"docs":{},"于":{"docs":{},"子":{"docs":{},"类":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"所":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"任":{"docs":{},"何":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"该":{"docs":{"第三章 类和接口/17.要么为继承而设计，并提供文档说明，要么就禁止继承.html":{"ref":"第三章 类和接口/17.要么为继承而设计，并提供文档说明，要么就禁止继承.html","tf":0.09090909090909091}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html":{"ref":"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html","tf":0.03225806451612903},"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669}}}}}}}}}}}}}}}},":":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},",":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901}}}}}},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"1":{"0":{"docs":{},")":{"docs":{},",":{"docs":{"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.016666666666666666}}}}},"docs":{}},"docs":{}},";":{"docs":{"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.016666666666666666}}}}}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.05844155844155844},"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.06299212598425197},"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.04950495049504951},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.04142011834319527}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.015748031496062992}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.015748031496062992},"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.0297029702970297},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}},")":{"docs":{},";":{"docs":{"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.015748031496062992},"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.0297029702970297},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}},",":{"docs":{"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.006493506493506494},"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.027777777777777776}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669},"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html":{"ref":"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html","tf":0.0945945945945946},"第三章 类和接口/19.接口只用于定义类型.html":{"ref":"第三章 类和接口/19.接口只用于定义类型.html","tf":0.05405405405405406},"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.06626506024096386},"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.07204968944099378}},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441}}}}}},"1":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"8":{"docs":{},")":{"docs":{},",":{"docs":{"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.016666666666666666}}}}},"docs":{}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"第七章 通用程序设计/46.for-each循环优于传统的for循环.html":{"ref":"第七章 通用程序设计/46.for-each循环优于传统的for循环.html","tf":0.025}}}}}}}}}}},"e":{"docs":{},")":{"docs":{},";":{"docs":{"第七章 通用程序设计/46.for-each循环优于传统的for循环.html":{"ref":"第七章 通用程序设计/46.for-each循环优于传统的for循环.html","tf":0.025}}}}}}}}}}}}}}},"g":{"docs":{},"\"":{"docs":{},",":{"docs":{"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.011904761904761904}}}}}},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}},"e":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"/":{"docs":{},"\"":{"docs":{},")":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441}}}}}}},":":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441}}},";":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012}}}}}},"u":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"2":{"docs":{},")":{"docs":{},",":{"docs":{"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.016666666666666666}}}}},"docs":{}},",":{"docs":{"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.016666666666666666}}}}}}},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"将":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"方":{"docs":{},"法":{"docs":{},"访":{"docs":{},"问":{"docs":{},"标":{"docs":{},"识":{"docs":{},"符":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"，":{"docs":{},"将":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"方":{"docs":{},"法":{"docs":{},"私":{"docs":{},"有":{"docs":{},"化":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"将":{"docs":{},"对":{"docs":{},"象":{"docs":{},"强":{"docs":{},"化":{"docs":{},"为":{"docs":{},"不":{"docs":{},"可":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"。":{"docs":{},"比":{"docs":{},"如":{"docs":{},"在":{"docs":{},"只":{"docs":{},"包":{"docs":{},"含":{"docs":{},"静":{"docs":{},"态":{"docs":{},"域":{"docs":{},"和":{"docs":{},"静":{"docs":{},"态":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"工":{"docs":{},"具":{"docs":{},"类":{"docs":{},"，":{"docs":{},"就":{"docs":{},"有":{"docs":{},"必":{"docs":{},"要":{"docs":{},"通":{"docs":{},"过":{"docs":{},"私":{"docs":{},"有":{"docs":{},"化":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"让":{"docs":{},"工":{"docs":{},"具":{"docs":{},"类":{"docs":{},"不":{"docs":{},"可":{"docs":{},"被":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"。":{"docs":{"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html":{"ref":"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html","tf":0.03225806451612903}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"调":{"docs":{},"用":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},"来":{"docs":{},"获":{"docs":{},"取":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"常":{"docs":{},"量":{"docs":{},"。":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"改":{"docs":{},"进":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}}}}}}},"看":{"docs":{},"出":{"docs":{},"由":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"改":{"docs":{},"造":{"docs":{},"后":{"docs":{},"，":{"docs":{},"程":{"docs":{},"序":{"docs":{},"更":{"docs":{},"加":{"docs":{},"简":{"docs":{},"洁":{"docs":{},"，":{"docs":{},"也":{"docs":{},"更":{"docs":{},"加":{"docs":{},"安":{"docs":{},"全":{"docs":{},"。":{"docs":{},"总":{"docs":{},"之":{"docs":{},"，":{"docs":{},"试":{"docs":{},"图":{"docs":{},"通":{"docs":{},"过":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"利":{"docs":{},"用":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"元":{"docs":{},"素":{"docs":{},"在":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"中":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"做":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"处":{"docs":{},"理":{"docs":{},"的":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"代":{"docs":{},"码":{"docs":{},"一":{"docs":{},"般":{"docs":{},"都":{"docs":{},"是":{"docs":{},"不":{"docs":{},"可":{"docs":{},"取":{"docs":{},"和":{"docs":{},"不":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"。":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"利":{"docs":{},"用":{"docs":{},"别":{"docs":{},"人":{"docs":{},"的":{"docs":{},"使":{"docs":{},"用":{"docs":{},"经":{"docs":{},"验":{"docs":{},"，":{"docs":{},"和":{"docs":{},"利":{"docs":{},"用":{"docs":{},"社":{"docs":{},"区":{"docs":{},"的":{"docs":{},"智":{"docs":{},"慧":{"docs":{},"；":{"docs":{"第七章 通用程序设计/47.多使用类库.html":{"ref":"第七章 通用程序设计/47.多使用类库.html","tf":0.1111111111111111}}}}}}}}}}}}}}}}}}}}}},"变":{"docs":{},"参":{"docs":{},"数":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"用":{"docs":{},"来":{"docs":{},"接":{"docs":{},"受":{"0":{"docs":{},"个":{"docs":{},"或":{"docs":{},"者":{"docs":{},"多":{"docs":{},"个":{"docs":{},"指":{"docs":{},"定":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"。":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}},"数":{"docs":{},"据":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"状":{"docs":{},"态":{"docs":{},"变":{"docs":{},"量":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"，":{"docs":{},"被":{"docs":{},"同":{"docs":{},"步":{"docs":{},"方":{"docs":{},"法":{"docs":{},"修":{"docs":{},"改":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"保":{"docs":{},"证":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"被":{"docs":{},"修":{"docs":{},"改":{"docs":{},"后":{"docs":{},"，":{"docs":{},"能":{"docs":{},"够":{"docs":{},"被":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"立":{"docs":{},"即":{"docs":{},"可":{"docs":{},"见":{"docs":{},"。":{"docs":{"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"当":{"docs":{},"诸":{"docs":{},"如":{"docs":{},"工":{"docs":{},"具":{"docs":{},"类":{"docs":{},"这":{"docs":{},"种":{"docs":{},"类":{"docs":{},"，":{"docs":{},"被":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"是":{"docs":{},"没":{"docs":{},"有":{"docs":{},"多":{"docs":{},"大":{"docs":{},"意":{"docs":{},"义":{"docs":{},"的":{"docs":{},"，":{"docs":{},"*":{"docs":{},"*":{"docs":{},"应":{"docs":{},"该":{"docs":{},"强":{"docs":{},"制":{"docs":{},"将":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"私":{"docs":{},"有":{"docs":{},"化":{"docs":{},"，":{"docs":{},"以":{"docs":{},"强":{"docs":{},"化":{"docs":{},"类":{"docs":{},"的":{"docs":{},"不":{"docs":{},"可":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"属":{"docs":{},"性":{"docs":{},"。":{"docs":{"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html":{"ref":"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html","tf":0.03225806451612903}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"编":{"docs":{},"写":{"docs":{},"完":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"方":{"docs":{},"法":{"docs":{},"时":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"问":{"docs":{},"自":{"docs":{},"己":{"docs":{},"三":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"：":{"docs":{},"它":{"docs":{},"是":{"docs":{},"否":{"docs":{},"满":{"docs":{},"足":{"docs":{},"对":{"docs":{},"称":{"docs":{},"性":{"docs":{},"、":{"docs":{},"传":{"docs":{},"递":{"docs":{},"性":{"docs":{},"、":{"docs":{},"以":{"docs":{},"及":{"docs":{},"一":{"docs":{},"致":{"docs":{},"性":{"docs":{},"；":{"docs":{"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html":{"ref":"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"面":{"docs":{},"对":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"方":{"docs":{},"法":{"docs":{},"时":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"根":{"docs":{},"据":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"时":{"docs":{},"机":{"docs":{},"去":{"docs":{},"判":{"docs":{},"断":{"docs":{},"是":{"docs":{},"否":{"docs":{},"需":{"docs":{},"要":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"需":{"docs":{},"要":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"方":{"docs":{},"法":{"docs":{},"时":{"docs":{},"，":{"docs":{},"要":{"docs":{},"严":{"docs":{},"格":{"docs":{},"遵":{"docs":{},"守":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"规":{"docs":{},"范":{"docs":{},"。":{"docs":{"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html":{"ref":"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"传":{"docs":{},"入":{"docs":{},"可":{"docs":{},"变":{"docs":{},"数":{"docs":{},"组":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"[":{"docs":{},"]":{"docs":{},"时":{"docs":{},"，":{"docs":{},"进":{"docs":{},"行":{"docs":{},"深":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"直":{"docs":{},"接":{"docs":{},"将":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"[":{"docs":{},"]":{"docs":{},"复":{"docs":{},"制":{"docs":{},"给":{"docs":{},"内":{"docs":{},"部":{"docs":{},"变":{"docs":{},"量":{"docs":{},".":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{},"子":{"docs":{},"类":{"docs":{},"继":{"docs":{},"承":{"docs":{},"父":{"docs":{},"类":{"docs":{},"并":{"docs":{},"不":{"docs":{},"是":{"docs":{},"代":{"docs":{},"码":{"docs":{},"重":{"docs":{},"用":{"docs":{},"的":{"docs":{},"最":{"docs":{},"好":{"docs":{},"手":{"docs":{},"段":{"docs":{},"，":{"docs":{},"有":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"缺":{"docs":{},"点":{"docs":{},"：":{"1":{"docs":{},".":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"实":{"docs":{},"现":{"docs":{},"接":{"docs":{},"口":{"docs":{},"时":{"docs":{},"，":{"docs":{},"接":{"docs":{},"口":{"docs":{},"就":{"docs":{},"充":{"docs":{},"当":{"docs":{},"可":{"docs":{},"以":{"docs":{},"引":{"docs":{},"用":{"docs":{},"这":{"docs":{},"个":{"docs":{},"类":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"类":{"docs":{},"型":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"类":{"docs":{},"实":{"docs":{},"现":{"docs":{},"了":{"docs":{},"接":{"docs":{},"口":{"docs":{},"，":{"docs":{},"就":{"docs":{},"表":{"docs":{},"明":{"docs":{},"客":{"docs":{},"户":{"docs":{},"端":{"docs":{},"对":{"docs":{},"这":{"docs":{},"个":{"docs":{},"类":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"可":{"docs":{},"以":{"docs":{},"实":{"docs":{},"施":{"docs":{},"某":{"docs":{},"些":{"docs":{},"动":{"docs":{},"作":{"docs":{},"。":{"docs":{},"为":{"docs":{},"了":{"docs":{},"任":{"docs":{},"何":{"docs":{},"其":{"docs":{},"他":{"docs":{},"目":{"docs":{},"的":{"docs":{},"而":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"接":{"docs":{},"口":{"docs":{},"是":{"docs":{},"不":{"docs":{},"恰":{"docs":{},"当":{"docs":{},"的":{"docs":{},"。":{"docs":{},"那":{"docs":{},"么":{"docs":{},"，":{"docs":{},"在":{"docs":{},"实":{"docs":{},"际":{"docs":{},"开":{"docs":{},"发":{"docs":{},"中":{"docs":{},"存":{"docs":{},"在":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"定":{"docs":{},"义":{"docs":{},"接":{"docs":{},"口":{"docs":{},"不":{"docs":{},"恰":{"docs":{},"当":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"？":{"docs":{"第三章 类和接口/19.接口只用于定义类型.html":{"ref":"第三章 类和接口/19.接口只用于定义类型.html","tf":0.02702702702702703}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"具":{"docs":{},"体":{"docs":{},"策":{"docs":{},"略":{"docs":{},"只":{"docs":{},"被":{"docs":{},"使":{"docs":{},"用":{"docs":{},"一":{"docs":{},"次":{"docs":{},"时":{"docs":{},"，":{"docs":{},"通":{"docs":{},"常":{"docs":{},"使":{"docs":{},"用":{"docs":{},"匿":{"docs":{},"名":{"docs":{},"类":{"docs":{},"来":{"docs":{},"声":{"docs":{},"名":{"docs":{},"和":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"这":{"docs":{},"个":{"docs":{},"具":{"docs":{},"体":{"docs":{},"策":{"docs":{},"略":{"docs":{},"；":{"docs":{"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"设":{"docs":{},"计":{"docs":{},"用":{"docs":{},"来":{"docs":{},"重":{"docs":{},"复":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"它":{"docs":{},"的":{"docs":{},"类":{"docs":{},"通":{"docs":{},"常":{"docs":{},"就":{"docs":{},"要":{"docs":{},"被":{"docs":{},"实":{"docs":{},"现":{"docs":{},"为":{"docs":{},"私":{"docs":{},"有":{"docs":{},"的":{"docs":{},"静":{"docs":{},"态":{"docs":{},"成":{"docs":{},"员":{"docs":{},"类":{"docs":{},"，":{"docs":{},"并":{"docs":{},"通":{"docs":{},"过":{"docs":{},"公":{"docs":{},"有":{"docs":{},"的":{"docs":{},"静":{"docs":{},"态":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"域":{"docs":{},"或":{"docs":{},"静":{"docs":{},"态":{"docs":{},"工":{"docs":{},"厂":{"docs":{},"方":{"docs":{},"法":{"docs":{},"导":{"docs":{},"出":{"docs":{},"，":{"docs":{},"其":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"策":{"docs":{},"略":{"docs":{},"接":{"docs":{},"口":{"docs":{},"。":{"docs":{"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"或":{"docs":{},"者":{"docs":{},"静":{"docs":{},"态":{"docs":{},"方":{"docs":{},"法":{"docs":{},"被":{"docs":{},"并":{"docs":{},"发":{"docs":{},"使":{"docs":{},"用":{"docs":{},"时":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"类":{"docs":{},"行":{"docs":{},"为":{"docs":{},"的":{"docs":{},"并":{"docs":{},"发":{"docs":{},"情":{"docs":{},"况":{"docs":{},"。":{"docs":{"第六章 方法/44.API需要编写文档注释.html":{"ref":"第六章 方法/44.API需要编写文档注释.html","tf":0.03333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"象":{"docs":{},"被":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"修":{"docs":{},"改":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"阻":{"docs":{},"止":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"观":{"docs":{},"察":{"docs":{},"到":{"docs":{},"对":{"docs":{},"象":{"docs":{},"内":{"docs":{},"部":{"docs":{},"不":{"docs":{},"一":{"docs":{},"致":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"；":{"docs":{"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"非":{"docs":{},"静":{"docs":{},"态":{"docs":{},"成":{"docs":{},"员":{"docs":{},"类":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"被":{"docs":{},"创":{"docs":{},"建":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"它":{"docs":{},"和":{"docs":{},"外":{"docs":{},"围":{"docs":{},"实":{"docs":{},"例":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"关":{"docs":{},"联":{"docs":{},"关":{"docs":{},"系":{"docs":{},"也":{"docs":{},"随":{"docs":{},"之":{"docs":{},"建":{"docs":{},"立":{"docs":{},"起":{"docs":{},"来":{"docs":{},"；":{"docs":{},"而":{"docs":{},"且":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"关":{"docs":{},"联":{"docs":{},"关":{"docs":{},"系":{"docs":{},"以":{"docs":{},"后":{"docs":{},"也":{"docs":{},"不":{"docs":{},"能":{"docs":{},"被":{"docs":{},"修":{"docs":{},"改":{"docs":{},"。":{"docs":{},"通":{"docs":{},"常":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"当":{"docs":{},"在":{"docs":{},"外":{"docs":{},"围":{"docs":{},"类":{"docs":{},"的":{"docs":{},"某":{"docs":{},"个":{"docs":{},"实":{"docs":{},"例":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"内":{"docs":{},"部":{"docs":{},"调":{"docs":{},"用":{"docs":{},"了":{"docs":{},"非":{"docs":{},"静":{"docs":{},"态":{"docs":{},"成":{"docs":{},"员":{"docs":{},"类":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"时":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"管":{"docs":{},"理":{"docs":{},"就":{"docs":{},"自":{"docs":{},"动":{"docs":{},"建":{"docs":{},"立":{"docs":{},"起":{"docs":{},"来":{"docs":{},"。":{"docs":{},"使":{"docs":{},"用":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"实":{"docs":{},"例":{"docs":{},"对":{"docs":{},"象":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"集":{"docs":{},"合":{"docs":{},"中":{"docs":{},"时":{"docs":{},"会":{"docs":{},"进":{"docs":{},"行":{"docs":{},"类":{"docs":{},"型":{"docs":{},"判":{"docs":{},"断":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"类":{"docs":{},"型":{"docs":{},"不":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"问":{"docs":{},"题":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"期":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"知":{"docs":{},"道":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"至":{"docs":{},"于":{"docs":{},"等":{"docs":{},"到":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"出":{"docs":{},"现":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"；":{"2":{"docs":{},".":{"docs":{"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"将":{"docs":{},"多":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"（":{"docs":{},"或":{"docs":{},"变":{"docs":{},"量":{"docs":{},"）":{"docs":{},"进":{"docs":{},"行":{"docs":{},"组":{"docs":{},"合":{"docs":{},"时":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"来":{"docs":{},"代":{"docs":{},"替":{"docs":{},"使":{"docs":{},"用":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"进":{"docs":{},"行":{"docs":{},"位":{"docs":{},"域":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"。":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"类":{"docs":{},"集":{"docs":{},"位":{"docs":{},"域":{"docs":{},"的":{"docs":{},"简":{"docs":{},"洁":{"docs":{},"和":{"docs":{},"性":{"docs":{},"能":{"docs":{},"的":{"docs":{},"优":{"docs":{},"势":{"docs":{},"，":{"docs":{},"以":{"docs":{},"及":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"优":{"docs":{},"点":{"docs":{},"与":{"docs":{},"一":{"docs":{},"身":{"docs":{},"。":{"docs":{},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"也":{"docs":{},"有":{"docs":{},"个":{"docs":{},"缺":{"docs":{},"点":{"docs":{},",":{"docs":{},"即":{"docs":{},"它":{"docs":{},"无":{"docs":{},"法":{"docs":{},"创":{"docs":{},"建":{"docs":{},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"的":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"1":{"docs":{},".":{"6":{"docs":{},"为":{"docs":{},"止":{"docs":{},"没":{"docs":{},"有":{"docs":{},"解":{"docs":{},"决":{"docs":{},")":{"docs":{},"。":{"docs":{},"同":{"docs":{},"时":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"将":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"封":{"docs":{},"装":{"docs":{},"起":{"docs":{},"来":{"docs":{},",":{"docs":{},"但":{"docs":{},"是":{"docs":{},"间":{"docs":{},"接":{"docs":{},"性":{"docs":{},"和":{"docs":{},"性":{"docs":{},"能":{"docs":{},"会":{"docs":{},"受":{"docs":{},"到":{"docs":{},"影":{"docs":{},"响":{"docs":{},"。":{"docs":{"第五章 枚举和注解/32.用EnumSet代替位域.html":{"ref":"第五章 枚举和注解/32.用EnumSet代替位域.html","tf":0.03125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"注":{"docs":{},"解":{"docs":{},"代":{"docs":{},"替":{"docs":{},"时":{"docs":{},"，":{"docs":{},"没":{"docs":{},"有":{"docs":{},"理":{"docs":{},"由":{"docs":{},"使":{"docs":{},"用":{"docs":{},"命":{"docs":{},"名":{"docs":{},"模":{"docs":{},"式":{"docs":{},"。":{"docs":{},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"已":{"docs":{},"经":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"很":{"docs":{},"多":{"docs":{},"预":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"注":{"docs":{},"解":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"在":{"docs":{},"实":{"docs":{},"际":{"docs":{},"项":{"docs":{},"目":{"docs":{},"中":{"docs":{},"应":{"docs":{},"该":{"docs":{},"尽":{"docs":{},"可":{"docs":{},"能":{"docs":{},"多":{"docs":{},"使":{"docs":{},"用":{"docs":{},"注":{"docs":{},"解":{"docs":{},"。":{"docs":{},"另":{"docs":{},"外":{"docs":{},"，":{"docs":{},"请":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"使":{"docs":{},"用":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"或":{"docs":{},"静":{"docs":{},"态":{"docs":{},"分":{"docs":{},"析":{"docs":{},"工":{"docs":{},"具":{"docs":{},"提":{"docs":{},"供":{"docs":{},"的":{"docs":{},"注":{"docs":{},"解":{"docs":{},"。":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"选":{"docs":{},"择":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"基":{"docs":{},"本":{"docs":{},"类":{"docs":{},"型":{"docs":{},"要":{"docs":{},"优":{"docs":{},"先":{"docs":{},"于":{"docs":{},"装":{"docs":{},"箱":{"docs":{},"类":{"docs":{},"型":{"docs":{},"。":{"docs":{},"基":{"docs":{},"本":{"docs":{},"类":{"docs":{},"型":{"docs":{},"更":{"docs":{},"加":{"docs":{},"方":{"docs":{},"便":{"docs":{},"简":{"docs":{},"单":{"docs":{},"，":{"docs":{},"性":{"docs":{},"能":{"docs":{},"更":{"docs":{},"好":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"没":{"docs":{},"办":{"docs":{},"法":{"docs":{},"避":{"docs":{},"免":{"docs":{},"使":{"docs":{},"用":{"docs":{},"装":{"docs":{},"箱":{"docs":{},"类":{"docs":{},"型":{"docs":{},"时":{"docs":{},"，":{"docs":{},"注":{"docs":{},"意":{"docs":{},"类":{"docs":{},"型":{"docs":{},"间":{"docs":{},"同":{"docs":{},"一":{"docs":{},"性":{"docs":{},"的":{"docs":{},"比":{"docs":{},"较":{"docs":{},"，":{"docs":{},"以":{"docs":{},"及":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"。":{"docs":{"第七章 通用程序设计/49.基本类型优先于装箱基本类型.html":{"ref":"第七章 通用程序设计/49.基本类型优先于装箱基本类型.html","tf":0.05555555555555555}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"确":{"docs":{},"定":{"docs":{},"参":{"docs":{},"数":{"docs":{},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"可":{"docs":{},"以":{"docs":{},"采":{"docs":{},"用":{"docs":{},"可":{"docs":{},"变":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"，":{"docs":{},"在":{"docs":{},"使":{"docs":{},"用":{"docs":{},"可":{"docs":{},"变":{"docs":{},"参":{"docs":{},"数":{"docs":{},"时":{"docs":{},"有":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"需":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"的":{"docs":{},"？":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"元":{"docs":{},"素":{"docs":{},"为":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"基":{"docs":{},"本":{"docs":{},"类":{"docs":{},"型":{"docs":{},"数":{"docs":{},"据":{"docs":{},"时":{"docs":{},"，":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"方":{"docs":{},"法":{"docs":{},"将":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"集":{"docs":{},"中":{"docs":{},"到":{"docs":{},"单":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},",":{"docs":{},"并":{"docs":{},"封":{"docs":{},"装":{"docs":{},"成":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"。":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"异":{"docs":{},"常":{"docs":{},"被":{"docs":{},"捕":{"docs":{},"获":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"有":{"docs":{},"关":{"docs":{},"键":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{},"信":{"docs":{},"息":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"很":{"docs":{},"方":{"docs":{},"便":{"docs":{},"的":{"docs":{},"进":{"docs":{},"行":{"docs":{},"排":{"docs":{},"错":{"docs":{},"，":{"docs":{},"添":{"docs":{},"加":{"docs":{},"关":{"docs":{},"键":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{},"信":{"docs":{},"息":{"docs":{},"是":{"docs":{},"很":{"docs":{},"有":{"docs":{},"必":{"docs":{},"要":{"docs":{},"的":{"docs":{},"。":{"docs":{"第八章 异常/63.编写合适的异常信息.html":{"ref":"第八章 异常/63.编写合适的异常信息.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"程":{"docs":{},"序":{"docs":{},"由":{"docs":{},"于":{"docs":{},"未":{"docs":{},"被":{"docs":{},"捕":{"docs":{},"获":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{},"而":{"docs":{},"失":{"docs":{},"败":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"系":{"docs":{},"统":{"docs":{},"会":{"docs":{},"自":{"docs":{},"动":{"docs":{},"地":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"该":{"docs":{},"异":{"docs":{},"常":{"docs":{},"的":{"docs":{},"堆":{"docs":{},"栈":{"docs":{},"轨":{"docs":{},"迹":{"docs":{},"。":{"docs":{},"在":{"docs":{},"堆":{"docs":{},"栈":{"docs":{},"轨":{"docs":{},"迹":{"docs":{},"中":{"docs":{},"包":{"docs":{},"含":{"docs":{},"该":{"docs":{},"异":{"docs":{},"常":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"表":{"docs":{},"示":{"docs":{},"法":{"docs":{},"（":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"第八章 异常/63.编写合适的异常信息.html":{"ref":"第八章 异常/63.编写合适的异常信息.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"正":{"docs":{},"确":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"线":{"docs":{},"程":{"docs":{},"无":{"docs":{},"法":{"docs":{},"获":{"docs":{},"得":{"docs":{},"足":{"docs":{},"够":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"片":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"不":{"docs":{},"要":{"docs":{},"企":{"docs":{},"图":{"docs":{},"使":{"docs":{},"用":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"y":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"让":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"让":{"docs":{},"出":{"docs":{},"时":{"docs":{},"间":{"docs":{},"片":{"docs":{},"，":{"docs":{},"来":{"docs":{},"满":{"docs":{},"足":{"docs":{},"自":{"docs":{},"身":{"docs":{},"的":{"docs":{},"需":{"docs":{},"求":{"docs":{},"。":{"docs":{},"这":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"，":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{},"上":{"docs":{},"对":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"y":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"语":{"docs":{},"义":{"docs":{},"的":{"docs":{},"是":{"docs":{},"不":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"就":{"docs":{},"失":{"docs":{},"去":{"docs":{},"了":{"docs":{},"可":{"docs":{},"移":{"docs":{},"值":{"docs":{},"性":{"docs":{},"。":{"docs":{},"另":{"docs":{},"外":{"docs":{},"，":{"docs":{},"在":{"docs":{},"测":{"docs":{},"试":{"docs":{},"期":{"docs":{},"间":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"y":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"人":{"docs":{},"为":{"docs":{},"地":{"docs":{},"来":{"docs":{},"增":{"docs":{},"加":{"docs":{},"线":{"docs":{},"程":{"docs":{},"并":{"docs":{},"发":{"docs":{},"性":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"由":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"s":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"来":{"docs":{},"代":{"docs":{},"替":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"y":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"；":{"docs":{"第九章 并发/72.不要依赖于线程调度器.html":{"ref":"第九章 并发/72.不要依赖于线程调度器.html","tf":0.125}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"，":{"docs":{},"由":{"docs":{},"线":{"docs":{},"程":{"docs":{},"调":{"docs":{},"度":{"docs":{},"器":{"docs":{},"决":{"docs":{},"定":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"线":{"docs":{},"程":{"docs":{},"将":{"docs":{},"会":{"docs":{},"运":{"docs":{},"行":{"docs":{},"，":{"docs":{},"分":{"docs":{},"配":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"时":{"docs":{},"间":{"docs":{},"片":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"，":{"docs":{},"在":{"docs":{},"大":{"docs":{},"多":{"docs":{},"数":{"docs":{},"系":{"docs":{},"统":{"docs":{},"采":{"docs":{},"用":{"docs":{},"的":{"docs":{},"调":{"docs":{},"度":{"docs":{},"策":{"docs":{},"略":{"docs":{},"都":{"docs":{},"是":{"docs":{},"不":{"docs":{},"太":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"任":{"docs":{},"何":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"于":{"docs":{},"线":{"docs":{},"程":{"docs":{},"调":{"docs":{},"度":{"docs":{},"器":{"docs":{},"来":{"docs":{},"达":{"docs":{},"到":{"docs":{},"程":{"docs":{},"序":{"docs":{},"性":{"docs":{},"能":{"docs":{},"和":{"docs":{},"正":{"docs":{},"确":{"docs":{},"性":{"docs":{},"的":{"docs":{},"并":{"docs":{},"发":{"docs":{},"程":{"docs":{},"序":{"docs":{},"都":{"docs":{},"是":{"docs":{},"不":{"docs":{},"安":{"docs":{},"全":{"docs":{},"和":{"docs":{},"不":{"docs":{},"可":{"docs":{},"移":{"docs":{},"植":{"docs":{},"的":{"docs":{},"。":{"docs":{},"那":{"docs":{},"么":{"docs":{},"，":{"docs":{},"在":{"docs":{},"编":{"docs":{},"写":{"docs":{},"可":{"docs":{},"移":{"docs":{},"植":{"docs":{},"的":{"docs":{},"，":{"docs":{},"健":{"docs":{},"壮":{"docs":{},"性":{"docs":{},"强":{"docs":{},"的":{"docs":{},"并":{"docs":{},"发":{"docs":{},"程":{"docs":{},"序":{"docs":{},"有":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"好":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"？":{"docs":{"第九章 并发/72.不要依赖于线程调度器.html":{"ref":"第九章 并发/72.不要依赖于线程调度器.html","tf":0.125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"你":{"docs":{},"决":{"docs":{},"定":{"docs":{},"将":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"设":{"docs":{},"计":{"docs":{},"成":{"docs":{},"可":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"就":{"docs":{},"应":{"docs":{},"该":{"docs":{},"详":{"docs":{},"细":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"应":{"docs":{},"该":{"docs":{},"采":{"docs":{},"用":{"docs":{},"什":{"docs":{},"么":{"docs":{},"样":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"形":{"docs":{},"式":{"docs":{},"。":{"docs":{},"只":{"docs":{},"有":{"docs":{},"当":{"docs":{},"默":{"docs":{},"认":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"形":{"docs":{},"式":{"docs":{},"能":{"docs":{},"够":{"docs":{},"合":{"docs":{},"理":{"docs":{},"的":{"docs":{},"描":{"docs":{},"述":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"状":{"docs":{},"态":{"docs":{},"时":{"docs":{},"，":{"docs":{},"才":{"docs":{},"能":{"docs":{},"使":{"docs":{},"用":{"docs":{},"默":{"docs":{},"认":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"形":{"docs":{},"式":{"docs":{},"。":{"docs":{},"否":{"docs":{},"则":{"docs":{},"就":{"docs":{},"要":{"docs":{},"设":{"docs":{},"计":{"docs":{},"一":{"docs":{},"个":{"docs":{},"自":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"形":{"docs":{},"式":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"它":{"docs":{},"合":{"docs":{},"理":{"docs":{},"的":{"docs":{},"描":{"docs":{},"述":{"docs":{},"出":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{"第十章 序列化/75.考虑使用自定义的序列化形式.html":{"ref":"第十章 序列化/75.考虑使用自定义的序列化形式.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"通":{"docs":{},"常":{"docs":{},"将":{"docs":{},"包":{"docs":{},"含":{"docs":{},"静":{"docs":{},"态":{"docs":{},"方":{"docs":{},"法":{"docs":{},"和":{"docs":{},"静":{"docs":{},"态":{"docs":{},"域":{"docs":{},"的":{"docs":{},"类":{"docs":{},"作":{"docs":{},"为":{"docs":{},"工":{"docs":{},"具":{"docs":{},"类":{"docs":{},"。":{"docs":{},"比":{"docs":{},"如":{"docs":{},"说":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"这":{"docs":{},"种":{"docs":{},"类":{"docs":{},"来":{"docs":{},"组":{"docs":{},"织":{"docs":{},"某":{"docs":{},"种":{"docs":{},"基":{"docs":{},"本":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"相":{"docs":{},"关":{"docs":{},"方":{"docs":{},"法":{"docs":{},"（":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"）":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},".":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"方":{"docs":{},"式":{"docs":{},"把":{"docs":{},"实":{"docs":{},"现":{"docs":{},"特":{"docs":{},"定":{"docs":{},"接":{"docs":{},"口":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"上":{"docs":{},"的":{"docs":{},"静":{"docs":{},"态":{"docs":{},"方":{"docs":{},"法":{"docs":{},"组":{"docs":{},"织":{"docs":{},"起":{"docs":{},"来":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"还":{"docs":{},"能":{"docs":{},"利":{"docs":{},"用":{"docs":{},"这":{"docs":{},"种":{"docs":{},"类":{"docs":{},"把":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"类":{"docs":{},"上":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"组":{"docs":{},"织":{"docs":{},"起":{"docs":{},"来":{"docs":{},"，":{"docs":{},"以":{"docs":{},"取":{"docs":{},"代":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"该":{"docs":{},"类":{"docs":{},"的":{"docs":{},"做":{"docs":{},"法":{"docs":{},"。":{"docs":{"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html":{"ref":"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html","tf":0.03225806451612903}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"希":{"docs":{},"望":{"docs":{},"打":{"docs":{},"出":{"docs":{},"的":{"docs":{},"是":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"，":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"，":{"docs":{},"u":{"docs":{},"n":{"docs":{},"k":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}}}}}}},"避":{"docs":{},"免":{"docs":{},"被":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"最":{"docs":{},"简":{"docs":{},"单":{"docs":{},"而":{"docs":{},"且":{"docs":{},"可":{"docs":{},"靠":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"显":{"docs":{},"示":{"docs":{},"的":{"docs":{},"提":{"docs":{},"供":{"docs":{},"一":{"docs":{},"个":{"docs":{},"私":{"docs":{},"有":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"来":{"docs":{},"阻":{"docs":{},"止":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"。":{"docs":{},"比":{"docs":{},"如":{"docs":{},"：":{"docs":{"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html":{"ref":"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html","tf":0.03225806451612903}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"位":{"docs":{},"域":{"docs":{},"组":{"docs":{},"合":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"的":{"docs":{},"弊":{"docs":{},"端":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"采":{"docs":{},"用":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"类":{"docs":{},"型":{"docs":{},"数":{"docs":{},"据":{"docs":{},"。":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"支":{"docs":{},"持":{"docs":{},"从":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"类":{"docs":{},"型":{"docs":{},"中":{"docs":{},"提":{"docs":{},"取":{"docs":{},"多":{"docs":{},"个":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"常":{"docs":{},"量":{"docs":{},"进":{"docs":{},"行":{"docs":{},"组":{"docs":{},"合":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"这":{"docs":{},"个":{"docs":{},"类":{"docs":{},"实":{"docs":{},"现":{"docs":{},"了":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"接":{"docs":{},"口":{"docs":{},"，":{"docs":{},"也":{"docs":{},"具":{"docs":{},"有":{"docs":{},"类":{"docs":{},"型":{"docs":{},"安":{"docs":{},"全":{"docs":{},"性":{"docs":{},"。":{"docs":{},"使":{"docs":{},"用":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"将":{"docs":{},"上":{"docs":{},"面":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"重":{"docs":{},"写":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"第五章 枚举和注解/32.用EnumSet代替位域.html":{"ref":"第五章 枚举和注解/32.用EnumSet代替位域.html","tf":0.03125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"过":{"docs":{},"长":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"列":{"docs":{},"表":{"docs":{},"：":{"docs":{},"方":{"docs":{},"法":{"docs":{},"参":{"docs":{},"数":{"docs":{},"个":{"docs":{},"数":{"docs":{},"不":{"docs":{},"能":{"docs":{},"超":{"docs":{},"过":{"docs":{},"四":{"docs":{},"个":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"让":{"docs":{},"人":{"docs":{},"难":{"docs":{},"以":{"docs":{},"理":{"docs":{},"解":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"意":{"docs":{},"义":{"docs":{},"。":{"docs":{},"减":{"docs":{},"小":{"docs":{},"参":{"docs":{},"数":{"docs":{},"个":{"docs":{},"数":{"docs":{},"有":{"docs":{},"三":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"：":{"1":{"docs":{},".":{"docs":{},"拆":{"docs":{},"分":{"docs":{},"出":{"docs":{},"子":{"docs":{},"方":{"docs":{},"法":{"docs":{},"；":{"2":{"docs":{},".":{"docs":{},"将":{"docs":{},"多":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"实":{"docs":{},"体":{"docs":{},"类":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"入":{"docs":{},"参":{"docs":{},"就":{"docs":{},"仅":{"docs":{},"仅":{"docs":{},"只":{"docs":{},"是":{"docs":{},"这":{"docs":{},"一":{"docs":{},"个":{"docs":{},"实":{"docs":{},"体":{"docs":{},"类":{"docs":{},"；":{"3":{"docs":{},".":{"docs":{},"使":{"docs":{},"用":{"docs":{},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"模":{"docs":{},"式":{"docs":{"第六章 方法/40.谨慎的设计方法签名.html":{"ref":"第六章 方法/40.谨慎的设计方法签名.html","tf":0.125}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"\"":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441},"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.02158273381294964},"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.031496062992125984},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"\"":{"docs":{},";":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.006493506493506494}}}}}}},"o":{"docs":{},"o":{"docs":{},"\"":{"docs":{},",":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012}}}}}},"w":{"docs":{},"o":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012}}}}}}}},"i":{"docs":{"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888}}},")":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"\"":{"docs":{},";":{"docs":{"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.010752688172043012}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"\"":{"docs":{},";":{"docs":{"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.010752688172043012}}}}}}},"u":{"docs":{},"n":{"docs":{},"k":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.010752688172043012}}}}}}}}},"#":{"docs":{},"\"":{"docs":{"第七章 通用程序设计/50.尽量避免使用字符串.html":{"ref":"第七章 通用程序设计/50.尽量避免使用字符串.html","tf":0.013333333333333334}}}},"+":{"docs":{"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901}}},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"\"":{"docs":{"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.011904761904761904}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.011904761904761904}}}}}}},"起":{"docs":{},"始":{"docs":{},"时":{"docs":{},"间":{"docs":{},"：":{"docs":{},"\"":{"docs":{"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}}}}}}}},"&":{"docs":{},"&":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.012987012987012988},"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936},"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":{"ref":"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html","tf":0.019230769230769232}}}},"(":{"0":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}}},"4":{"docs":{},".":{"8":{"6":{"9":{"docs":{},"e":{"docs":{},"+":{"2":{"4":{"docs":{},",":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}},"docs":{}},"docs":{}}}},"docs":{}},"docs":{}},"docs":{}}},"5":{"docs":{},".":{"6":{"8":{"5":{"docs":{},"e":{"docs":{},"+":{"2":{"6":{"docs":{},",":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}},"docs":{}},"docs":{}}}},"docs":{}},"docs":{}},"9":{"7":{"5":{"docs":{},"e":{"docs":{},"+":{"2":{"4":{"docs":{},",":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}},"docs":{}},"docs":{}}}},"docs":{}},"docs":{}},"docs":{}}},"6":{"docs":{},".":{"4":{"1":{"9":{"docs":{},"e":{"docs":{},"+":{"2":{"3":{"docs":{},",":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}},"docs":{}},"docs":{}}}},"docs":{}},"docs":{}},"docs":{}}},"8":{"docs":{},".":{"6":{"8":{"3":{"docs":{},"e":{"docs":{},"+":{"2":{"5":{"docs":{},",":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}},"docs":{}},"docs":{}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.006493506493506494}}}}},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"第七章 通用程序设计/46.for-each循环优于传统的for循环.html":{"ref":"第七章 通用程序设计/46.for-each循环优于传统的for循环.html","tf":0.025}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669}}}}}}}}}}}}}}}},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669}}}}},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},")":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.023809523809523808}}}}}},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},")":{"docs":{},"{":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}}},"e":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{},")":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},")":{"docs":{"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"f":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},"{":{"docs":{"第八章 异常/57.只针对异常的情况才使用异常.html":{"ref":"第八章 异常/57.只针对异常的情况才使用异常.html","tf":0.043478260869565216}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}}}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}},"x":{"docs":{},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"y":{"docs":{},")":{"docs":{},")":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"这":{"docs":{},"个":{"docs":{},"并":{"docs":{},"非":{"docs":{},"绝":{"docs":{},"对":{"docs":{},"必":{"docs":{},"要":{"docs":{},"。":{"docs":{},"一":{"docs":{},"般":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"任":{"docs":{},"何":{"docs":{},"实":{"docs":{},"现":{"docs":{},"了":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"接":{"docs":{},"口":{"docs":{},"的":{"docs":{},"类":{"docs":{},"，":{"docs":{},"若":{"docs":{},"违":{"docs":{},"反":{"docs":{},"了":{"docs":{},"这":{"docs":{},"个":{"docs":{},"条":{"docs":{},"件":{"docs":{},"，":{"docs":{},"都":{"docs":{},"应":{"docs":{},"该":{"docs":{},"明":{"docs":{},"确":{"docs":{},"予":{"docs":{},"以":{"docs":{},"说":{"docs":{},"明":{"docs":{},"。":{"docs":{},"推":{"docs":{},"荐":{"docs":{},"使":{"docs":{},"用":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"说":{"docs":{},"法":{"docs":{},"：":{"docs":{},"“":{"docs":{},"注":{"docs":{},"意":{"docs":{},"，":{"docs":{},"该":{"docs":{},"类":{"docs":{},"具":{"docs":{},"有":{"docs":{},"内":{"docs":{},"在":{"docs":{},"的":{"docs":{},"排":{"docs":{},"序":{"docs":{},"功":{"docs":{},"能":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"与":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"不":{"docs":{},"一":{"docs":{},"致":{"docs":{},"”":{"docs":{},"。":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"u":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169},"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":0.022222222222222223}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441}}}}},"b":{"docs":{},"j":{"docs":{},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},")":{"docs":{},")":{"docs":{"第八章 异常/59.避免不必要的使用受检的异常.html":{"ref":"第八章 异常/59.避免不必要的使用受检的异常.html","tf":0.024390243902439025}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.010752688172043012},"第七章 通用程序设计/46.for-each循环优于传统的for循环.html":{"ref":"第七章 通用程序设计/46.for-each循环优于传统的for循环.html","tf":0.025}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"第七章 通用程序设计/55.谨慎的进行优化.html":{"ref":"第七章 通用程序设计/55.谨慎的进行优化.html","tf":0.038461538461538464}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"第七章 通用程序设计/46.for-each循环优于传统的for循环.html":{"ref":"第七章 通用程序设计/46.for-each循环优于传统的for循环.html","tf":0.025}}}}},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886}}}}}}}}}}}}}},"m":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},")":{"docs":{},")":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.010752688172043012}}}}}}}},"h":{"docs":{},"e":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"s":{"docs":{"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":{"ref":"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html","tf":0.019230769230769232}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{"第七章 通用程序设计/46.for-each循环优于传统的for循环.html":{"ref":"第七章 通用程序设计/46.for-each循环优于传统的for循环.html","tf":0.025}}}},"!":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.008}}}}},")":{"docs":{"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.008}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},")":{"docs":{"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":0.011111111111111112}}}}}}}},"*":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.006493506493506494},"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.02912621359223301},"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.03636363636363636},"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.024096385542168676},"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.013664596273291925},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.03550295857988166}},"/":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.006493506493506494},"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669},"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.03669724770642202},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.01775147928994083}}}},"一":{"docs":{},"般":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"最":{"docs":{},"好":{"docs":{},"能":{"docs":{},"重":{"docs":{},"用":{"docs":{},"对":{"docs":{},"象":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"在":{"docs":{},"每":{"docs":{},"次":{"docs":{},"需":{"docs":{},"要":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"就":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"相":{"docs":{},"同":{"docs":{},"功":{"docs":{},"能":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"对":{"docs":{},"象":{"docs":{},"是":{"docs":{},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"的":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"它":{"docs":{},"就":{"docs":{},"始":{"docs":{},"终":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"重":{"docs":{},"用":{"docs":{},"。":{"docs":{},"作":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"反":{"docs":{},"例":{"docs":{},"，":{"docs":{},"代":{"docs":{},"码":{"docs":{},"如":{"docs":{},"下":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.006493506493506494}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"中":{"docs":{},"重":{"docs":{},"写":{"docs":{},"了":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"方":{"docs":{},"法":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"中":{"docs":{},"自":{"docs":{},"生":{"docs":{},"成":{"docs":{},"的":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"不":{"docs":{},"能":{"docs":{},"根":{"docs":{},"据":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"常":{"docs":{},"量":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"生":{"docs":{},"成":{"docs":{},")":{"docs":{},"来":{"docs":{},"获":{"docs":{},"取":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"常":{"docs":{},"量":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"通":{"docs":{},"常":{"docs":{},"需":{"docs":{},"要":{"docs":{},"在":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"中":{"docs":{},"新":{"docs":{},"增":{"docs":{},"个":{"docs":{},"静":{"docs":{},"态":{"docs":{},"常":{"docs":{},"量":{"docs":{},"来":{"docs":{},"获":{"docs":{},"取":{"docs":{},"。":{"docs":{},"如":{"docs":{},"：":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"致":{"docs":{},"性":{"docs":{},"：":{"docs":{},"对":{"docs":{},"于":{"docs":{},"任":{"docs":{},"何":{"docs":{},"非":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"得":{"docs":{},"引":{"docs":{},"用":{"docs":{},"值":{"docs":{},"x":{"docs":{},"和":{"docs":{},"y":{"docs":{},"，":{"docs":{},"只":{"docs":{},"要":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"的":{"docs":{},"比":{"docs":{},"较":{"docs":{},"操":{"docs":{},"作":{"docs":{},"在":{"docs":{},"对":{"docs":{},"象":{"docs":{},"中":{"docs":{},"所":{"docs":{},"用":{"docs":{},"的":{"docs":{},"信":{"docs":{},"息":{"docs":{},"没":{"docs":{},"有":{"docs":{},"被":{"docs":{},"修":{"docs":{},"改":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"多":{"docs":{},"次":{"docs":{},"调":{"docs":{},"用":{"docs":{},"x":{"docs":{},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"y":{"docs":{},")":{"docs":{},"就":{"docs":{},"会":{"docs":{},"一":{"docs":{},"致":{"docs":{},"的":{"docs":{},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"一":{"docs":{},"致":{"docs":{},"的":{"docs":{},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"；":{"docs":{"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html":{"ref":"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"个":{"docs":{},"好":{"docs":{},"的":{"docs":{},"散":{"docs":{},"列":{"docs":{},"函":{"docs":{},"数":{"docs":{},"通":{"docs":{},"常":{"docs":{},"倾":{"docs":{},"向":{"docs":{},"于":{"docs":{},"“":{"docs":{},"为":{"docs":{},"不":{"docs":{},"相":{"docs":{},"等":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"产":{"docs":{},"生":{"docs":{},"不":{"docs":{},"相":{"docs":{},"等":{"docs":{},"的":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"”":{"docs":{},"，":{"docs":{},"编":{"docs":{},"写":{"docs":{},"好":{"docs":{},"的":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"也":{"docs":{},"如":{"docs":{},"下":{"docs":{},"这":{"docs":{},"种":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"：":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"种":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{},"转":{"docs":{},"译":{"docs":{},"形":{"docs":{},"式":{"docs":{},"称":{"docs":{},"为":{"docs":{},"异":{"docs":{},"常":{"docs":{},"链":{"docs":{},"（":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"低":{"docs":{},"层":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{},"对":{"docs":{},"于":{"docs":{},"调":{"docs":{},"试":{"docs":{},"导":{"docs":{},"致":{"docs":{},"髙":{"docs":{},"层":{"docs":{},"异":{"docs":{},"常":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"非":{"docs":{},"常":{"docs":{},"有":{"docs":{},"帮":{"docs":{},"助":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"异":{"docs":{},"常":{"docs":{},"链":{"docs":{},"就":{"docs":{},"很":{"docs":{},"合":{"docs":{},"适":{"docs":{},"。":{"docs":{},"低":{"docs":{},"层":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{},"（":{"docs":{},"原":{"docs":{},"因":{"docs":{},"）":{"docs":{},"被":{"docs":{},"传":{"docs":{},"到":{"docs":{},"髙":{"docs":{},"层":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{},"，":{"docs":{},"髙":{"docs":{},"层":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{},"提":{"docs":{},"供":{"docs":{},"访":{"docs":{},"问":{"docs":{},"方":{"docs":{},"法":{"docs":{},"（":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},"w":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"a":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},")":{"docs":{},"来":{"docs":{},"获":{"docs":{},"得":{"docs":{},"低":{"docs":{},"层":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"：":{"docs":{"第八章 异常/61.抛出与抽象相对应的异常.html":{"ref":"第八章 异常/61.抛出与抽象相对应的异常.html","tf":0.020833333333333332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"为":{"docs":{},"了":{"docs":{},"避":{"docs":{},"免":{"docs":{},"创":{"docs":{},"建":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"而":{"docs":{},"重":{"docs":{},"用":{"docs":{},"对":{"docs":{},"象":{"docs":{},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"提":{"docs":{},"升":{"docs":{},"性":{"docs":{},"能":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"，":{"docs":{},"这":{"docs":{},"也":{"docs":{},"应":{"docs":{},"该":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"”":{"docs":{},"度":{"docs":{},"“":{"docs":{},"。":{"docs":{},"比":{"docs":{},"如":{"docs":{},"小":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"只":{"docs":{},"做":{"docs":{},"很":{"docs":{},"少":{"docs":{},"量":{"docs":{},"的":{"docs":{},"工":{"docs":{},"作":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"，":{"docs":{},"小":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"创":{"docs":{},"建":{"docs":{},"和":{"docs":{},"回":{"docs":{},"收":{"docs":{},"是":{"docs":{},"非":{"docs":{},"常":{"docs":{},"廉":{"docs":{},"价":{"docs":{},"的":{"docs":{},"，":{"docs":{},"特":{"docs":{},"别":{"docs":{},"是":{"docs":{},"在":{"docs":{},"现":{"docs":{},"在":{"docs":{},"的":{"docs":{},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{},"上":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"，":{"docs":{},"就":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"刻":{"docs":{},"意":{"docs":{},"的":{"docs":{},"为":{"docs":{},"了":{"docs":{},"重":{"docs":{},"用":{"docs":{},"对":{"docs":{},"象":{"docs":{},"而":{"docs":{},"让":{"docs":{},"代":{"docs":{},"码":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"更":{"docs":{},"加":{"docs":{},"混":{"docs":{},"乱":{"docs":{},"。":{"docs":{},"反":{"docs":{},"之":{"docs":{},"，":{"docs":{},"维":{"docs":{},"护":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"池":{"docs":{},"来":{"docs":{},"避":{"docs":{},"免":{"docs":{},"创":{"docs":{},"建":{"docs":{},"对":{"docs":{},"象":{"docs":{},"并":{"docs":{},"不":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"好":{"docs":{},"的":{"docs":{},"做":{"docs":{},"法":{"docs":{},"，":{"docs":{},"除":{"docs":{},"非":{"docs":{},"池":{"docs":{},"中":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"是":{"docs":{},"非":{"docs":{},"常":{"docs":{},"重":{"docs":{},"量":{"docs":{},"级":{"docs":{},"的":{"docs":{},"。":{"docs":{},"比":{"docs":{},"如":{"docs":{},"说":{"docs":{},"数":{"docs":{},"据":{"docs":{},"库":{"docs":{},"连":{"docs":{},"接":{"docs":{},"池":{"docs":{},"，":{"docs":{},"建":{"docs":{},"立":{"docs":{},"数":{"docs":{},"据":{"docs":{},"库":{"docs":{},"连":{"docs":{},"接":{"docs":{},"的":{"docs":{},"代":{"docs":{},"价":{"docs":{},"非":{"docs":{},"常":{"docs":{},"昂":{"docs":{},"贵":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"重":{"docs":{},"用":{"docs":{},"这":{"docs":{},"些":{"docs":{},"对":{"docs":{},"象":{"docs":{},"很":{"docs":{},"有":{"docs":{},"意":{"docs":{},"义":{"docs":{},"。":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.006493506493506494}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"重":{"docs":{},"复":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"在":{"docs":{},"实":{"docs":{},"际":{"docs":{},"编":{"docs":{},"码":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"可":{"docs":{},"以":{"docs":{},"从":{"docs":{},"这":{"docs":{},"几":{"docs":{},"个":{"docs":{},"方":{"docs":{},"面":{"docs":{},"来":{"docs":{},"思":{"docs":{},"考":{"docs":{},"：":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.006493506493506494}}}}}}}}}}}}}}}}}}}}}}}}}}},"由":{"docs":{},"于":{"docs":{},"方":{"docs":{},"法":{"docs":{},"入":{"docs":{},"参":{"docs":{},"不":{"docs":{},"符":{"docs":{},"合":{"docs":{},"规":{"docs":{},"范":{"docs":{},"，":{"docs":{},"将":{"docs":{},"异":{"docs":{},"常":{"docs":{},"扩":{"docs":{},"散":{"docs":{},"到":{"docs":{},"方":{"docs":{},"法":{"docs":{},"执":{"docs":{},"行":{"docs":{},"过":{"docs":{},"程":{"docs":{},"之":{"docs":{},"中":{"docs":{},"，":{"docs":{},"在":{"docs":{},"设":{"docs":{},"计":{"docs":{},"方":{"docs":{},"法":{"docs":{},"或":{"docs":{},"者":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"时":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"入":{"docs":{},"参":{"docs":{},"有":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"限":{"docs":{},"制":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"在":{"docs":{},"方":{"docs":{},"法":{"docs":{},"开":{"docs":{},"头":{"docs":{},"显":{"docs":{},"式":{"docs":{},"的":{"docs":{},"进":{"docs":{},"行":{"docs":{},"参":{"docs":{},"数":{"docs":{},"有":{"docs":{},"效":{"docs":{},"性":{"docs":{},"判":{"docs":{},"断":{"docs":{},"，":{"docs":{},"也":{"docs":{},"应":{"docs":{},"该":{"docs":{},"将":{"docs":{},"这":{"docs":{},"些":{"docs":{},"参":{"docs":{},"数":{"docs":{},"有":{"docs":{},"效":{"docs":{},"性":{"docs":{},"写":{"docs":{},"入":{"docs":{},"在":{"docs":{},"文":{"docs":{},"档":{"docs":{},"中":{"docs":{},"；":{"docs":{"第六章 方法/38.检查方法参数的有效性.html":{"ref":"第六章 方法/38.检查方法参数的有效性.html","tf":0.125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"局":{"docs":{},"部":{"docs":{},"变":{"docs":{},"量":{"docs":{},"扩":{"docs":{},"大":{"docs":{},"作":{"docs":{},"用":{"docs":{},"域":{"docs":{},"，":{"docs":{},"污":{"docs":{},"染":{"docs":{},"到":{"docs":{},"其":{"docs":{},"他":{"docs":{},"作":{"docs":{},"用":{"docs":{},"域":{"docs":{},"。":{"docs":{},"局":{"docs":{},"部":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"作":{"docs":{},"用":{"docs":{},"域":{"docs":{},"应":{"docs":{},"该":{"docs":{},"最":{"docs":{},"小":{"docs":{},"化":{"docs":{},"，":{"docs":{},"即":{"docs":{},"在":{"docs":{},"第":{"docs":{},"一":{"docs":{},"次":{"docs":{},"使":{"docs":{},"用":{"docs":{},"它":{"docs":{},"的":{"docs":{},"地":{"docs":{},"方":{"docs":{},"进":{"docs":{},"行":{"docs":{},"声":{"docs":{},"明":{"docs":{},"，":{"docs":{},"尽":{"docs":{},"可":{"docs":{},"能":{"docs":{},"在":{"docs":{},"声":{"docs":{},"明":{"docs":{},"处":{"docs":{},"进":{"docs":{},"行":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"。":{"docs":{},"典":{"docs":{},"型":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"是":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"循":{"docs":{},"环":{"docs":{},"，":{"docs":{},"变":{"docs":{},"量":{"docs":{},"作":{"docs":{},"用":{"docs":{},"域":{"docs":{},"在":{"docs":{},"循":{"docs":{},"环":{"docs":{},"内":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"会":{"docs":{},"扩":{"docs":{},"散":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"循":{"docs":{},"环":{"docs":{},"终":{"docs":{},"止":{"docs":{},"之":{"docs":{},"后":{"docs":{},"不":{"docs":{},"再":{"docs":{},"需":{"docs":{},"要":{"docs":{},"循":{"docs":{},"环":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"内":{"docs":{},"容":{"docs":{},"，":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"循":{"docs":{},"环":{"docs":{},"就":{"docs":{},"优":{"docs":{},"于":{"docs":{},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"循":{"docs":{},"环":{"docs":{},"；":{"docs":{"第七章 通用程序设计/45.将局部变量的作用域最小化.html":{"ref":"第七章 通用程序设计/45.将局部变量的作用域最小化.html","tf":0.125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"将":{"docs":{},"标":{"docs":{},"签":{"docs":{},"类":{"docs":{},"转":{"docs":{},"化":{"docs":{},"成":{"docs":{},"类":{"docs":{},"层":{"docs":{},"次":{"docs":{},"，":{"docs":{},"有":{"docs":{},"这":{"docs":{},"样":{"docs":{},"一":{"docs":{},"些":{"docs":{},"步":{"docs":{},"骤":{"docs":{},"：":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}},"正":{"docs":{},"确":{"docs":{},"地":{"docs":{},"编":{"docs":{},"写":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"文":{"docs":{},"档":{"docs":{},"，":{"docs":{},"必":{"docs":{},"须":{"docs":{},"在":{"docs":{},"每":{"docs":{},"个":{"docs":{},"被":{"docs":{},"导":{"docs":{},"出":{"docs":{},"的":{"docs":{},"类":{"docs":{},"、":{"docs":{},"接":{"docs":{},"口":{"docs":{},"、":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"、":{"docs":{},"方":{"docs":{},"法":{"docs":{},"和":{"docs":{},"域":{"docs":{},"声":{"docs":{},"明":{"docs":{},"之":{"docs":{},"前":{"docs":{},"增":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{},"文":{"docs":{},"档":{"docs":{},"注":{"docs":{},"释":{"docs":{},"；":{"docs":{"第六章 方法/44.API需要编写文档注释.html":{"ref":"第六章 方法/44.API需要编写文档注释.html","tf":0.03333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"局":{"docs":{},"部":{"docs":{},"变":{"docs":{},"量":{"docs":{},"域":{"docs":{},"污":{"docs":{},"染":{"docs":{},"到":{"docs":{},"其":{"docs":{},"他":{"docs":{},"的":{"docs":{},"作":{"docs":{},"用":{"docs":{},"域":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"将":{"docs":{},"局":{"docs":{},"部":{"docs":{},"变":{"docs":{},"量":{"docs":{},"域":{"docs":{},"尽":{"docs":{},"可":{"docs":{},"能":{"docs":{},"缩":{"docs":{},"小":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"能":{"docs":{},"够":{"docs":{},"增":{"docs":{},"强":{"docs":{},"代":{"docs":{},"码":{"docs":{},"的":{"docs":{},"可":{"docs":{},"读":{"docs":{},"性":{"docs":{},"和":{"docs":{},"可":{"docs":{},"维":{"docs":{},"护":{"docs":{},"性":{"docs":{},"。":{"docs":{"第七章 通用程序设计/45.将局部变量的作用域最小化.html":{"ref":"第七章 通用程序设计/45.将局部变量的作用域最小化.html","tf":0.125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"继":{"docs":{},"承":{"docs":{},"而":{"docs":{},"设":{"docs":{},"计":{"docs":{},"的":{"docs":{},"类":{"docs":{},"应":{"docs":{},"该":{"docs":{},"尽":{"docs":{},"可":{"docs":{},"能":{"docs":{},"少":{"docs":{},"地":{"docs":{},"去":{"docs":{},"实":{"docs":{},"现":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"接":{"docs":{},"口":{"docs":{},"，":{"docs":{},"用":{"docs":{},"户":{"docs":{},"接":{"docs":{},"口":{"docs":{},"也":{"docs":{},"应":{"docs":{},"该":{"docs":{},"尽":{"docs":{},"可":{"docs":{},"能":{"docs":{},"不":{"docs":{},"继":{"docs":{},"承":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"接":{"docs":{},"口":{"docs":{},"，":{"docs":{},"原":{"docs":{},"因":{"docs":{},"是":{"docs":{},"子":{"docs":{},"类":{"docs":{},"或":{"docs":{},"实":{"docs":{},"现":{"docs":{},"类":{"docs":{},"也":{"docs":{},"要":{"docs":{},"承":{"docs":{},"担":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"的":{"docs":{},"风":{"docs":{},"险":{"docs":{},"。":{"docs":{},"大":{"docs":{},"多":{"docs":{},"数":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"需":{"docs":{},"要":{"docs":{},"遵":{"docs":{},"守":{"docs":{},"这":{"docs":{},"条":{"docs":{},"原":{"docs":{},"则":{"docs":{},"，":{"docs":{},"极":{"docs":{},"为":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"可":{"docs":{},"以":{"docs":{},"打":{"docs":{},"破":{"docs":{},"这":{"docs":{},"项":{"docs":{},"原":{"docs":{},"则":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"实":{"docs":{},"现":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"接":{"docs":{},"口":{"docs":{},"的":{"docs":{},"的":{"docs":{},"类":{"docs":{},"有":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"类":{"docs":{},"(":{"docs":{},"异":{"docs":{},"常":{"docs":{},"可":{"docs":{},"以":{"docs":{},"从":{"docs":{},"服":{"docs":{},"务":{"docs":{},"器":{"docs":{},"端":{"docs":{},"传":{"docs":{},"到":{"docs":{},"客":{"docs":{},"户":{"docs":{},"端":{"docs":{},")":{"docs":{},"、":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"类":{"docs":{},"(":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"发":{"docs":{},"送":{"docs":{},"、":{"docs":{},"保":{"docs":{},"存":{"docs":{},"和":{"docs":{},"恢":{"docs":{},"复":{"docs":{},")":{"docs":{},"、":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{},"(":{"docs":{},"会":{"docs":{},"话":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"缓":{"docs":{},"存":{"docs":{},")":{"docs":{},"；":{"docs":{"第十章 序列化/74.谨慎的实现Serializable接口.html":{"ref":"第十章 序列化/74.谨慎的实现Serializable接口.html","tf":0.058823529411764705}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"该":{"docs":{},"域":{"docs":{},"计":{"docs":{},"算":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"散":{"docs":{},"列":{"docs":{},"码":{"docs":{},"c":{"docs":{},":":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}},"类":{"docs":{},"提":{"docs":{},"供":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"随":{"docs":{},"意":{"docs":{},"地":{"docs":{},"延":{"docs":{},"迟":{"docs":{},"其":{"docs":{},"实":{"docs":{},"例":{"docs":{},"的":{"docs":{},"回":{"docs":{},"收":{"docs":{},"过":{"docs":{},"程":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"对":{"docs":{},"象":{"docs":{},"进":{"docs":{},"入":{"docs":{},"f":{"docs":{"第一章 创建和销毁对象/7.避免使用finalize方法.html":{"ref":"第一章 创建和销毁对象/7.避免使用finalize方法.html","tf":0.06666666666666667}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"于":{"docs":{},"同":{"docs":{},"时":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"静":{"docs":{},"态":{"docs":{},"工":{"docs":{},"厂":{"docs":{},"方":{"docs":{},"法":{"docs":{},"和":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"的":{"docs":{},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"类":{"docs":{},"，":{"docs":{},"通":{"docs":{},"常":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"静":{"docs":{},"态":{"docs":{},"工":{"docs":{},"厂":{"docs":{},"方":{"docs":{},"法":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"，":{"docs":{},"原":{"docs":{},"因":{"docs":{},"在":{"docs":{},"于":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"在":{"docs":{},"每":{"docs":{},"次":{"docs":{},"被":{"docs":{},"调":{"docs":{},"用":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"都":{"docs":{},"会":{"docs":{},"创":{"docs":{},"造":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"而":{"docs":{},"静":{"docs":{},"态":{"docs":{},"工":{"docs":{},"厂":{"docs":{},"方":{"docs":{},"法":{"docs":{},"则":{"docs":{},"不":{"docs":{},"要":{"docs":{},"求":{"docs":{},"这":{"docs":{},"样":{"docs":{},"做":{"docs":{},"，":{"docs":{},"完":{"docs":{},"成":{"docs":{},"可":{"docs":{},"以":{"docs":{},"返":{"docs":{},"回":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"静":{"docs":{},"态":{"docs":{},"工":{"docs":{},"厂":{"docs":{},"方":{"docs":{},"法":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{},"总":{"docs":{},"是":{"docs":{},"优":{"docs":{},"先":{"docs":{},"于":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{},"；":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.006493506493506494}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"该":{"docs":{},"类":{"docs":{},"中":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"“":{"docs":{},"关":{"docs":{},"键":{"docs":{},"”":{"docs":{},"域":{"docs":{},"，":{"docs":{},"检":{"docs":{},"查":{"docs":{},"参":{"docs":{},"数":{"docs":{},"中":{"docs":{},"的":{"docs":{},"域":{"docs":{},"是":{"docs":{},"否":{"docs":{},"与":{"docs":{},"该":{"docs":{},"对":{"docs":{},"象":{"docs":{},"中":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"域":{"docs":{},"相":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"。":{"docs":{},"对":{"docs":{},"于":{"docs":{},"不":{"docs":{},"是":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"和":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{},"的":{"docs":{},"基":{"docs":{},"本":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"=":{"docs":{},"=":{"docs":{},"进":{"docs":{},"行":{"docs":{},"比":{"docs":{},"较":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"递":{"docs":{},"归":{"docs":{},"调":{"docs":{},"用":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{},"域":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"域":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"方":{"docs":{},"法":{"docs":{},"；":{"docs":{"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html":{"ref":"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"象":{"docs":{},"中":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"关":{"docs":{},"键":{"docs":{},"域":{"docs":{},"f":{"docs":{},"(":{"docs":{},"指":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"涉":{"docs":{},"及":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"域":{"docs":{},")":{"docs":{},"，":{"docs":{},"完":{"docs":{},"成":{"docs":{},"以":{"docs":{},"下":{"docs":{},"步":{"docs":{},"骤":{"docs":{},"：":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"引":{"docs":{},"用":{"docs":{},"域":{"docs":{},"必":{"docs":{},"须":{"docs":{},"保":{"docs":{},"持":{"docs":{},"为":{"docs":{},"私":{"docs":{},"有":{"docs":{},"的":{"docs":{},"，":{"docs":{},"要":{"docs":{},"保":{"docs":{},"护":{"docs":{},"性":{"docs":{},"地":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"这":{"docs":{},"些":{"docs":{},"域":{"docs":{},"中":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"类":{"docs":{},"的":{"docs":{},"可":{"docs":{},"变":{"docs":{},"组":{"docs":{},"件":{"docs":{},"就":{"docs":{},"属":{"docs":{},"于":{"docs":{},"这":{"docs":{},"一":{"docs":{},"类":{"docs":{},"别":{"docs":{},"；":{"docs":{"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"公":{"docs":{},"有":{"docs":{},"类":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"约":{"docs":{},"定":{"docs":{},"，":{"docs":{},"公":{"docs":{},"有":{"docs":{},"类":{"docs":{},"永":{"docs":{},"远":{"docs":{},"都":{"docs":{},"不":{"docs":{},"应":{"docs":{},"该":{"docs":{},"暴":{"docs":{},"露":{"docs":{},"可":{"docs":{},"变":{"docs":{},"的":{"docs":{},"域":{"docs":{},"。":{"docs":{"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html":{"ref":"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html","tf":0.013513513513513514}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"要":{"docs":{},"用":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"的":{"docs":{},"@":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},"标":{"docs":{},"签":{"docs":{"第六章 方法/38.检查方法参数的有效性.html":{"ref":"第六章 方法/38.检查方法参数的有效性.html","tf":0.125}}}}}}}}}}}}}}}}}}}}}}}}}}},"专":{"docs":{},"门":{"docs":{},"为":{"docs":{},"了":{"docs":{},"继":{"docs":{},"承":{"docs":{},"而":{"docs":{},"设":{"docs":{},"计":{"docs":{},"并":{"docs":{},"且":{"docs":{},"具":{"docs":{},"有":{"docs":{},"良":{"docs":{},"好":{"docs":{},"文":{"docs":{},"档":{"docs":{},"说":{"docs":{},"明":{"docs":{},"的":{"docs":{},"类":{"docs":{},"而":{"docs":{},"言":{"docs":{},"，":{"docs":{},"该":{"docs":{},"类":{"docs":{},"的":{"docs":{},"文":{"docs":{},"档":{"docs":{},"必":{"docs":{},"须":{"docs":{},"精":{"docs":{},"确":{"docs":{},"地":{"docs":{},"描":{"docs":{},"述":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"每":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"所":{"docs":{},"带":{"docs":{},"来":{"docs":{},"的":{"docs":{},"影":{"docs":{},"响":{"docs":{},"。":{"docs":{},"该":{"docs":{},"类":{"docs":{},"必":{"docs":{},"须":{"docs":{},"有":{"docs":{},"文":{"docs":{},"档":{"docs":{},"说":{"docs":{},"明":{"docs":{},"它":{"docs":{},"可":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"自":{"docs":{},"用":{"docs":{},"性":{"docs":{},"。":{"docs":{},"对":{"docs":{},"于":{"docs":{},"每":{"docs":{},"个":{"docs":{},"公":{"docs":{},"有":{"docs":{},"的":{"docs":{},"或":{"docs":{},"受":{"docs":{},"保":{"docs":{},"护":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"或":{"docs":{},"者":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"，":{"docs":{},"它":{"docs":{},"的":{"docs":{},"文":{"docs":{},"档":{"docs":{},"必":{"docs":{},"须":{"docs":{},"指":{"docs":{},"明":{"docs":{},"该":{"docs":{},"方":{"docs":{},"法":{"docs":{},"或":{"docs":{},"者":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"调":{"docs":{},"用":{"docs":{},"了":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"可":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"是":{"docs":{},"以":{"docs":{},"什":{"docs":{},"么":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"调":{"docs":{},"用":{"docs":{},"的":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"调":{"docs":{},"用":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"又":{"docs":{},"是":{"docs":{},"如":{"docs":{},"何":{"docs":{},"影":{"docs":{},"响":{"docs":{},"后":{"docs":{},"续":{"docs":{},"的":{"docs":{},"处":{"docs":{},"理":{"docs":{},"过":{"docs":{},"程":{"docs":{},"的":{"docs":{},"。":{"docs":{},"更":{"docs":{},"一":{"docs":{},"般":{"docs":{},"的":{"docs":{},"，":{"docs":{},"类":{"docs":{},"必":{"docs":{},"须":{"docs":{},"在":{"docs":{},"文":{"docs":{},"档":{"docs":{},"中":{"docs":{},"说":{"docs":{},"明":{"docs":{},"，":{"docs":{},"在":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"它":{"docs":{},"会":{"docs":{},"调":{"docs":{},"用":{"docs":{},"可":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"第三章 类和接口/17.要么为继承而设计，并提供文档说明，要么就禁止继承.html":{"ref":"第三章 类和接口/17.要么为继承而设计，并提供文档说明，要么就禁止继承.html","tf":0.09090909090909091}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"那":{"docs":{},"些":{"docs":{},"并":{"docs":{},"非":{"docs":{},"为":{"docs":{},"了":{"docs":{},"安":{"docs":{},"全":{"docs":{},"地":{"docs":{},"进":{"docs":{},"行":{"docs":{},"子":{"docs":{},"类":{"docs":{},"化":{"docs":{},"而":{"docs":{},"设":{"docs":{},"计":{"docs":{},"和":{"docs":{},"编":{"docs":{},"写":{"docs":{},"文":{"docs":{},"档":{"docs":{},"的":{"docs":{},"类":{"docs":{},"，":{"docs":{},"要":{"docs":{},"禁":{"docs":{},"止":{"docs":{},"子":{"docs":{},"类":{"docs":{},"化":{"docs":{},"。":{"docs":{},"有":{"docs":{},"两":{"docs":{},"种":{"docs":{},"办":{"docs":{},"法":{"docs":{},"可":{"docs":{},"以":{"docs":{},"禁":{"docs":{},"止":{"docs":{},"子":{"docs":{},"类":{"docs":{},"化":{"docs":{},"：":{"docs":{},"第":{"docs":{},"一":{"docs":{},"，":{"docs":{},"把":{"docs":{},"这":{"docs":{},"个":{"docs":{},"类":{"docs":{},"声":{"docs":{},"名":{"docs":{},"为":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"。":{"docs":{},"第":{"docs":{},"二":{"docs":{},"、":{"docs":{},"把":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"都":{"docs":{},"声":{"docs":{},"名":{"docs":{},"为":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"包":{"docs":{},"级":{"docs":{},"私":{"docs":{},"有":{"docs":{},"并":{"docs":{},"增":{"docs":{},"加":{"docs":{},"一":{"docs":{},"些":{"docs":{},"静":{"docs":{},"态":{"docs":{},"工":{"docs":{},"厂":{"docs":{},"来":{"docs":{},"替":{"docs":{},"代":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"。":{"docs":{"第三章 类和接口/17.要么为继承而设计，并提供文档说明，要么就禁止继承.html":{"ref":"第三章 类和接口/17.要么为继承而设计，并提供文档说明，要么就禁止继承.html","tf":0.09090909090909091}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"顶":{"docs":{},"层":{"docs":{},"类":{"docs":{},"中":{"docs":{},"声":{"docs":{},"名":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"都":{"docs":{},"确":{"docs":{},"保":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{},"这":{"docs":{},"样":{"docs":{},"就":{"docs":{},"杜":{"docs":{},"绝":{"docs":{},"了":{"docs":{},"因":{"docs":{},"为":{"docs":{},"遗":{"docs":{},"漏":{"docs":{},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"如":{"docs":{},"果":{"docs":{},"返":{"docs":{},"回":{"docs":{},"为":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"，":{"docs":{},"则":{"docs":{},"调":{"docs":{},"用":{"docs":{},"方":{"docs":{},"每":{"docs":{},"一":{"docs":{},"次":{"docs":{},"都":{"docs":{},"要":{"docs":{},"去":{"docs":{},"判":{"docs":{},"断":{"docs":{},"是":{"docs":{},"否":{"docs":{},"为":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"解":{"docs":{},"决":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"方":{"docs":{},"法":{"docs":{},"返":{"docs":{},"回":{"docs":{},"类":{"docs":{},"型":{"docs":{},"是":{"docs":{},"数":{"docs":{},"组":{"docs":{},"或":{"docs":{},"者":{"docs":{},"集":{"docs":{},"合":{"docs":{},"时":{"docs":{},"，":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"情":{"docs":{},"况":{"docs":{},"不":{"docs":{},"应":{"docs":{},"该":{"docs":{},"返":{"docs":{},"回":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"应":{"docs":{},"该":{"docs":{},"返":{"docs":{},"回":{"docs":{},"一":{"docs":{},"个":{"docs":{},"空":{"docs":{},"的":{"docs":{},"集":{"docs":{},"合":{"docs":{},"或":{"docs":{},"者":{"docs":{},"数":{"docs":{},"组":{"docs":{},"。":{"docs":{"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":{"ref":"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html","tf":0.019230769230769232}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"连":{"docs":{},"接":{"docs":{},"操":{"docs":{},"作":{"docs":{},"符":{"docs":{},"（":{"docs":{},"+":{"docs":{},"）":{"docs":{},"将":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"进":{"docs":{},"行":{"docs":{},"拼":{"docs":{},"接":{"docs":{},"，":{"docs":{},"在":{"docs":{},"产":{"docs":{},"生":{"docs":{},"一":{"docs":{},"行":{"docs":{},"输":{"docs":{},"出":{"docs":{},"是":{"docs":{},"合":{"docs":{},"适":{"docs":{},"的":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"在":{"docs":{},"循":{"docs":{},"环":{"docs":{},"中":{"docs":{},"或":{"docs":{},"者":{"docs":{},"大":{"docs":{},"量":{"docs":{},"使":{"docs":{},"用":{"docs":{},"拼":{"docs":{},"接":{"docs":{},"符":{"docs":{},"这":{"docs":{},"是":{"docs":{},"十":{"docs":{},"分":{"docs":{},"不":{"docs":{},"合":{"docs":{},"适":{"docs":{},"的":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"拼":{"docs":{},"接":{"docs":{},"都":{"docs":{},"需":{"docs":{},"要":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"，":{"docs":{},"性":{"docs":{},"能":{"docs":{},"极":{"docs":{},"差":{"docs":{},"。":{"docs":{},"那":{"docs":{},"么":{"docs":{},"，":{"docs":{},"在":{"docs":{},"频":{"docs":{},"繁":{"docs":{},"的":{"docs":{},"拼":{"docs":{},"接":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"时":{"docs":{},"应":{"docs":{},"该":{"docs":{},"怎":{"docs":{},"么":{"docs":{},"解":{"docs":{},"决":{"docs":{},"？":{"docs":{"第七章 通用程序设计/51.谨慎使用字符串连接符.html":{"ref":"第七章 通用程序设计/51.谨慎使用字符串连接符.html","tf":0.16666666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"返":{"docs":{},"回":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"值":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"其":{"docs":{},"名":{"docs":{},"词":{"docs":{},"往":{"docs":{},"往":{"docs":{},"以":{"docs":{},"单":{"docs":{},"词":{"docs":{},"“":{"docs":{},"i":{"docs":{},"s":{"docs":{},"”":{"docs":{},"开":{"docs":{},"头":{"docs":{},"，":{"docs":{},"后":{"docs":{},"面":{"docs":{},"跟":{"docs":{},"名":{"docs":{},"词":{"docs":{},"或":{"docs":{},"者":{"docs":{},"名":{"docs":{},"词":{"docs":{},"短":{"docs":{},"语":{"docs":{},"或":{"docs":{},"者":{"docs":{},"具":{"docs":{},"有":{"docs":{},"形":{"docs":{},"容":{"docs":{},"词":{"docs":{},"功":{"docs":{},"能":{"docs":{},"的":{"docs":{},"单":{"docs":{},"词":{"docs":{},"和":{"docs":{},"短":{"docs":{},"语":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"i":{"docs":{},"s":{"docs":{},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"、":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"、":{"docs":{"第七章 通用程序设计/56.遵守普遍接受的命名规则.html":{"ref":"第七章 通用程序设计/56.遵守普遍接受的命名规则.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"任":{"docs":{},"何":{"docs":{},"约":{"docs":{},"束":{"docs":{},"条":{"docs":{},"件":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"检":{"docs":{},"查":{"docs":{},"失":{"docs":{},"败":{"docs":{},"，":{"docs":{},"则":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"一":{"docs":{},"个":{"docs":{},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"异":{"docs":{},"常":{"docs":{},"。":{"docs":{},"这":{"docs":{},"些":{"docs":{},"检":{"docs":{},"查":{"docs":{},"动":{"docs":{},"作":{"docs":{},"应":{"docs":{},"该":{"docs":{},"跟":{"docs":{},"在":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"保":{"docs":{},"护":{"docs":{},"性":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"之":{"docs":{},"后":{"docs":{},"；":{"docs":{"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"称":{"docs":{},"性":{"docs":{},"：":{"docs":{},"对":{"docs":{},"于":{"docs":{},"任":{"docs":{},"何":{"docs":{},"非":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"值":{"docs":{},"x":{"docs":{},"，":{"docs":{},"y":{"docs":{},"，":{"docs":{},"当":{"docs":{},"且":{"docs":{},"仅":{"docs":{},"当":{"docs":{},"y":{"docs":{},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"时":{"docs":{},"，":{"docs":{},"x":{"docs":{},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"y":{"docs":{},")":{"docs":{},"也":{"docs":{},"应":{"docs":{},"该":{"docs":{},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"；":{"docs":{"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html":{"ref":"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"成":{"docs":{},"员":{"docs":{},"域":{"docs":{},"进":{"docs":{},"行":{"docs":{},"保":{"docs":{},"护":{"docs":{},"性":{"docs":{},"拷":{"docs":{},"贝":{"docs":{"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.007874015748031496}}}}}}}}}}}},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"进":{"docs":{},"行":{"docs":{},"保":{"docs":{},"护":{"docs":{},"性":{"docs":{},"拷":{"docs":{},"贝":{"docs":{"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.007874015748031496}}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"习":{"docs":{},"惯":{"docs":{},"采":{"docs":{},"用":{"docs":{},"下":{"docs":{},"面":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"：":{"docs":{"第七章 通用程序设计/46.for-each循环优于传统的for循环.html":{"ref":"第七章 通用程序设计/46.for-each循环优于传统的for循环.html","tf":0.025}}}}}}}}}}}}}}}}}}}},"警":{"docs":{},"惕":{"docs":{},"自":{"docs":{},"动":{"docs":{},"装":{"docs":{},"箱":{"docs":{},"和":{"docs":{},"拆":{"docs":{},"箱":{"docs":{},"。":{"docs":{},"在":{"docs":{},"自":{"docs":{},"动":{"docs":{},"装":{"docs":{},"箱":{"docs":{},"(":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{},"的":{"docs":{},"机":{"docs":{},"制":{"docs":{},"下":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"基":{"docs":{},"本":{"docs":{},"类":{"docs":{},"型":{"docs":{},"和":{"docs":{},"装":{"docs":{},"箱":{"docs":{},"基":{"docs":{},"本":{"docs":{},"类":{"docs":{},"型":{"docs":{},"混":{"docs":{},"用":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"这":{"docs":{},"两":{"docs":{},"种":{"docs":{},"类":{"docs":{},"型":{"docs":{},"在":{"docs":{},"性":{"docs":{},"能":{"docs":{},"上":{"docs":{},"有":{"docs":{},"着":{"docs":{},"比":{"docs":{},"较":{"docs":{},"明":{"docs":{},"显":{"docs":{},"的":{"docs":{},"差":{"docs":{},"别":{"docs":{},"，":{"docs":{},"如":{"docs":{},"反":{"docs":{},"例":{"docs":{},":":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.006493506493506494}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"除":{"docs":{},"了":{"docs":{},"重":{"docs":{},"用":{"docs":{},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"之":{"docs":{},"外":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"重":{"docs":{},"用":{"docs":{},"那":{"docs":{},"些":{"docs":{},"已":{"docs":{},"知":{"docs":{},"不":{"docs":{},"会":{"docs":{},"被":{"docs":{},"修":{"docs":{},"改":{"docs":{},"的":{"docs":{},"可":{"docs":{},"变":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"：":{"docs":{"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"ref":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","tf":0.006493506493506494}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"安":{"docs":{},"全":{"docs":{},"性":{"docs":{},"没":{"docs":{},"有":{"docs":{},"达":{"docs":{},"到":{"docs":{},"预":{"docs":{},"期":{"docs":{},"外":{"docs":{},"，":{"docs":{},"可":{"docs":{},"用":{"docs":{},"的":{"docs":{},"基":{"docs":{},"本":{"docs":{},"功":{"docs":{},"能":{"docs":{},"很":{"docs":{},"少":{"docs":{},"；":{"docs":{"第九章 并发/73.避免使用线程组.html":{"ref":"第九章 并发/73.避免使用线程组.html","tf":0.14285714285714285}}}}}}}}}}}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"、":{"docs":{},"锁":{"docs":{},"和":{"docs":{},"监":{"docs":{},"视":{"docs":{},"器":{"docs":{},"外":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"系":{"docs":{},"统":{"docs":{},"还":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"另":{"docs":{},"外":{"docs":{},"一":{"docs":{},"个":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"单":{"docs":{},"元":{"docs":{},"：":{"docs":{},"线":{"docs":{},"程":{"docs":{},"组":{"docs":{},"。":{"docs":{},"线":{"docs":{},"程":{"docs":{},"组":{"docs":{},"的":{"docs":{},"设":{"docs":{},"计":{"docs":{},"初":{"docs":{},"衷":{"docs":{},"是":{"docs":{},"作":{"docs":{},"为":{"docs":{},"隔":{"docs":{},"离":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"的":{"docs":{},"机":{"docs":{},"制":{"docs":{},"，":{"docs":{},"达":{"docs":{},"到":{"docs":{},"安":{"docs":{},"全":{"docs":{},"性":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"，":{"docs":{},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"并":{"docs":{},"未":{"docs":{},"达":{"docs":{},"到":{"docs":{},"所":{"docs":{},"期":{"docs":{},"待":{"docs":{},"的":{"docs":{},"安":{"docs":{},"全":{"docs":{},"性":{"docs":{},"，":{"docs":{},"甚":{"docs":{},"至":{"docs":{},"都":{"docs":{},"差":{"docs":{},"到":{"docs":{},"在":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"安":{"docs":{},"全":{"docs":{},"模":{"docs":{},"型":{"docs":{},"上":{"docs":{},"都":{"docs":{},"未":{"docs":{},"提":{"docs":{},"及":{"docs":{},"。":{"docs":{},"除":{"docs":{},"了":{"docs":{},"安":{"docs":{},"全":{"docs":{},"性":{"docs":{},"的":{"docs":{},"糟":{"docs":{},"点":{"docs":{},"外":{"docs":{},"，":{"docs":{},"还":{"docs":{},"有":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"缺":{"docs":{},"陷":{"docs":{},"？":{"docs":{"第九章 并发/73.避免使用线程组.html":{"ref":"第九章 并发/73.避免使用线程组.html","tf":0.14285714285714285}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"构":{"docs":{},"造":{"docs":{},"对":{"docs":{},"象":{"docs":{},"外":{"docs":{},"，":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"也":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"构":{"docs":{},"造":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"也":{"docs":{},"需":{"docs":{},"要":{"docs":{},"在":{"docs":{},"构":{"docs":{},"造":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"进":{"docs":{},"行":{"docs":{},"参":{"docs":{},"数":{"docs":{},"有":{"docs":{},"效":{"docs":{},"性":{"docs":{},"检":{"docs":{},"查":{"docs":{},"以":{"docs":{},"及":{"docs":{},"保":{"docs":{},"护":{"docs":{},"性":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"在":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"方":{"docs":{},"法":{"docs":{},"也":{"docs":{},"需":{"docs":{},"要":{"docs":{},"确":{"docs":{},"保":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"d":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"约":{"docs":{},"束":{"docs":{},"不":{"docs":{},"变":{"docs":{},"以":{"docs":{},"及":{"docs":{},"保":{"docs":{},"持":{"docs":{},"它":{"docs":{},"的":{"docs":{},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"性":{"docs":{},"：":{"docs":{"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"非":{"docs":{},"使":{"docs":{},"用":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"来":{"docs":{},"作":{"docs":{},"为":{"docs":{},"回":{"docs":{},"收":{"docs":{},"对":{"docs":{},"象":{"docs":{},"最":{"docs":{},"后":{"docs":{},"的":{"docs":{},"兜":{"docs":{},"底":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"就":{"docs":{},"不":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"就":{"docs":{},"要":{"docs":{},"调":{"docs":{},"用":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"要":{"docs":{},"在":{"docs":{},"日":{"docs":{},"志":{"docs":{},"上":{"docs":{},"记":{"docs":{},"录":{"docs":{},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"的":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"当":{"docs":{},"做":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{},"去":{"docs":{},"修":{"docs":{},"复":{"docs":{},"。":{"docs":{"第一章 创建和销毁对象/7.避免使用finalize方法.html":{"ref":"第一章 创建和销毁对象/7.避免使用finalize方法.html","tf":0.06666666666666667}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"+":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669},"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.03636363636363636},"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.008695652173913044},"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.02158273381294964},"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.031496062992125984},"第七章 通用程序设计/50.尽量避免使用字符串.html":{"ref":"第七章 通用程序设计/50.尽量避免使用字符串.html","tf":0.02666666666666667},"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.01775147928994083},"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.016666666666666666}},"=":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.007142857142857143}}},"\"":{"docs":{"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901}}}}}}}},"内":{"docs":{},"存":{"docs":{},"泄":{"docs":{},"漏":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"常":{"docs":{},"见":{"docs":{},"来":{"docs":{},"源":{"docs":{},"是":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"：":{"docs":{},"一":{"docs":{},"旦":{"docs":{},"把":{"docs":{},"对":{"docs":{},"象":{"docs":{},"引":{"docs":{},"用":{"docs":{},"放":{"docs":{},"到":{"docs":{},"了":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"，":{"docs":{},"当":{"docs":{},"很":{"docs":{},"长":{"docs":{},"一":{"docs":{},"段":{"docs":{},"时":{"docs":{},"间":{"docs":{},"没":{"docs":{},"有":{"docs":{},"使":{"docs":{},"用":{"docs":{},"之":{"docs":{},"后":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"存":{"docs":{},"在":{"docs":{},"于":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"之":{"docs":{},"中":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"在":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"之":{"docs":{},"外":{"docs":{},"存":{"docs":{},"在":{"docs":{},"对":{"docs":{},"某":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"项":{"docs":{},"的":{"docs":{},"键":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"该":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"项":{"docs":{},"才":{"docs":{},"有":{"docs":{},"意":{"docs":{},"义":{"docs":{},"。":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"场":{"docs":{},"景":{"docs":{},"是":{"docs":{},"适":{"docs":{},"合":{"docs":{},"用":{"docs":{},"w":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"。":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"第":{"docs":{},"三":{"docs":{},"个":{"docs":{},"常":{"docs":{},"见":{"docs":{},"来":{"docs":{},"源":{"docs":{},"是":{"docs":{},"监":{"docs":{},"听":{"docs":{},"器":{"docs":{},"和":{"docs":{},"回":{"docs":{},"调":{"docs":{},"：":{"docs":{},"如":{"docs":{},"果":{"docs":{},"注":{"docs":{},"册":{"docs":{},"了":{"docs":{},"回":{"docs":{},"调":{"docs":{},"，":{"docs":{},"并":{"docs":{},"没":{"docs":{},"有":{"docs":{},"显":{"docs":{},"式":{"docs":{},"的":{"docs":{},"进":{"docs":{},"行":{"docs":{},"注":{"docs":{},"销":{"docs":{},"，":{"docs":{},"也":{"docs":{},"会":{"docs":{},"造":{"docs":{},"成":{"docs":{},"内":{"docs":{},"存":{"docs":{},"泄":{"docs":{},"漏":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"确":{"docs":{},"保":{"docs":{},"回":{"docs":{},"调":{"docs":{},"会":{"docs":{},"被":{"docs":{},"正":{"docs":{},"常":{"docs":{},"的":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"，":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"保":{"docs":{},"存":{"docs":{},"他":{"docs":{},"们":{"docs":{},"的":{"docs":{},"弱":{"docs":{},"引":{"docs":{},"用":{"docs":{},"即":{"docs":{},"可":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"只":{"docs":{},"将":{"docs":{},"它":{"docs":{},"们":{"docs":{},"保":{"docs":{},"存":{"docs":{},"为":{"docs":{},"w":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"中":{"docs":{},"的":{"docs":{},"键":{"docs":{},"。":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"部":{"docs":{},"类":{"docs":{},"不":{"docs":{},"应":{"docs":{},"该":{"docs":{},"实":{"docs":{},"现":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"，":{"docs":{},"内":{"docs":{},"部":{"docs":{},"类":{"docs":{},"需":{"docs":{},"要":{"docs":{},"保":{"docs":{},"存":{"docs":{},"指":{"docs":{},"向":{"docs":{},"外":{"docs":{},"部":{"docs":{},"类":{"docs":{},"实":{"docs":{},"例":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"及":{"docs":{},"保":{"docs":{},"存":{"docs":{},"来":{"docs":{},"自":{"docs":{},"外":{"docs":{},"部":{"docs":{},"作":{"docs":{},"用":{"docs":{},"域":{"docs":{},"的":{"docs":{},"局":{"docs":{},"部":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"值":{"docs":{},"。":{"docs":{},"这":{"docs":{},"些":{"docs":{},"域":{"docs":{},"如":{"docs":{},"何":{"docs":{},"对":{"docs":{},"应":{"docs":{},"到":{"docs":{},"类":{"docs":{},"定":{"docs":{},"义":{"docs":{},"中":{"docs":{},"不":{"docs":{},"确":{"docs":{},"定":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"内":{"docs":{},"部":{"docs":{},"类":{"docs":{},"的":{"docs":{},"默":{"docs":{},"认":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"形":{"docs":{},"式":{"docs":{},"定":{"docs":{},"义":{"docs":{},"不":{"docs":{},"清":{"docs":{},"楚":{"docs":{},"。":{"docs":{"第十章 序列化/74.谨慎的实现Serializable接口.html":{"ref":"第十章 序列化/74.谨慎的实现Serializable接口.html","tf":0.058823529411764705}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"的":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"利":{"docs":{},"用":{"docs":{},"类":{"docs":{},"本":{"docs":{},"身":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"和":{"docs":{},"静":{"docs":{},"态":{"docs":{},"工":{"docs":{},"厂":{"docs":{},"去":{"docs":{},"创":{"docs":{},"建":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"就":{"docs":{},"避":{"docs":{},"免":{"docs":{},"了":{"docs":{},"为":{"docs":{},"了":{"docs":{},"安":{"docs":{},"全":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"而":{"docs":{},"遵":{"docs":{},"守":{"docs":{},"类":{"docs":{},"的":{"docs":{},"约":{"docs":{},"束":{"docs":{},"条":{"docs":{},"件":{"docs":{},"而":{"docs":{},"产":{"docs":{},"生":{"docs":{},"的":{"docs":{},"大":{"docs":{},"量":{"docs":{},"代":{"docs":{},"码":{"docs":{},"。":{"docs":{"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"过":{"docs":{},"期":{"docs":{},"引":{"docs":{},"用":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"ref":"第一章 创建和销毁对象/6.消除过期的对象引用.html","tf":0.009708737864077669}}}}}}}}}}}}},"滤":{"docs":{},"：":{"docs":{},"如":{"docs":{},"果":{"docs":{},"需":{"docs":{},"要":{"docs":{},"在":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"删":{"docs":{},"除":{"docs":{},"特":{"docs":{},"定":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"就":{"docs":{},"需":{"docs":{},"要":{"docs":{},"用":{"docs":{},"显":{"docs":{},"式":{"docs":{},"的":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"，":{"docs":{},"调":{"docs":{},"用":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"方":{"docs":{},"法":{"docs":{},"进":{"docs":{},"行":{"docs":{},"删":{"docs":{},"除":{"docs":{},"；":{"docs":{"第七章 通用程序设计/46.for-each循环优于传统的for循环.html":{"ref":"第七章 通用程序设计/46.for-each循环优于传统的for循环.html","tf":0.025}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"关":{"docs":{},"心":{"docs":{},"类":{"docs":{},"是":{"docs":{},"否":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"“":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"相":{"docs":{},"等":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"c":{"docs":{"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html":{"ref":"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}}}}}},"要":{"docs":{},"将":{"docs":{},"所":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"的":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"的":{"docs":{},"入":{"docs":{},"参":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"对":{"docs":{},"象":{"docs":{},"替":{"docs":{},"换":{"docs":{},"成":{"docs":{},"其":{"docs":{},"他":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"使":{"docs":{},"用":{"docs":{},"@":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"。":{"docs":{"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html":{"ref":"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"试":{"docs":{},"图":{"docs":{},"从":{"docs":{},"散":{"docs":{},"列":{"docs":{},"码":{"docs":{},"计":{"docs":{},"算":{"docs":{},"中":{"docs":{},"排":{"docs":{},"除":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"部":{"docs":{},"分":{"docs":{},"来":{"docs":{},"提":{"docs":{},"高":{"docs":{},"性":{"docs":{},"能":{"docs":{},"。":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"这":{"docs":{},"样":{"docs":{},"可":{"docs":{},"能":{"docs":{},"使":{"docs":{},"计":{"docs":{},"算":{"docs":{},"的":{"docs":{},"速":{"docs":{},"度":{"docs":{},"得":{"docs":{},"到":{"docs":{},"提":{"docs":{},"升":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"效":{"docs":{},"果":{"docs":{},"并":{"docs":{},"不":{"docs":{},"见":{"docs":{},"得":{"docs":{},"会":{"docs":{},"好":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"散":{"docs":{},"列":{"docs":{},"表":{"docs":{},"慢":{"docs":{},"到":{"docs":{},"根":{"docs":{},"本":{"docs":{},"无":{"docs":{},"法":{"docs":{},"使":{"docs":{},"用":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"因":{"docs":{},"此":{"docs":{},"大":{"docs":{},"量":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"映":{"docs":{},"射":{"docs":{},"到":{"docs":{},"极":{"docs":{},"少":{"docs":{},"的":{"docs":{},"散":{"docs":{},"列":{"docs":{},"码":{"docs":{},"上":{"docs":{},"，":{"docs":{},"那":{"docs":{},"基":{"docs":{},"于":{"docs":{},"散":{"docs":{},"列":{"docs":{},"的":{"docs":{},"集":{"docs":{},"合":{"docs":{},"将":{"docs":{},"会":{"docs":{},"显":{"docs":{},"示":{"docs":{},"出":{"docs":{},"平":{"docs":{},"方":{"docs":{},"级":{"docs":{},"的":{"docs":{},"性":{"docs":{},"能":{"docs":{},"。":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"平":{"docs":{},"台":{"docs":{},"类":{"docs":{},"库":{"docs":{},"中":{"docs":{},"的":{"docs":{},"许":{"docs":{},"多":{"docs":{},"类":{"docs":{},"如":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"提":{"docs":{},"供":{"docs":{},"任":{"docs":{},"何":{"docs":{},"修":{"docs":{},"改":{"docs":{},"实":{"docs":{},"例":{"docs":{},"数":{"docs":{},"据":{"docs":{},"域":{"docs":{},"的":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"方":{"docs":{},"法":{"docs":{},"；":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}}}}}}}}}}}}}}}}}}}}}}},"过":{"docs":{},"于":{"docs":{},"追":{"docs":{},"求":{"docs":{},"提":{"docs":{},"供":{"docs":{},"便":{"docs":{},"利":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"：":{"docs":{},"每":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"不":{"docs":{},"要":{"docs":{},"做":{"docs":{},"太":{"docs":{},"多":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"，":{"docs":{},"导":{"docs":{},"致":{"docs":{},"方":{"docs":{},"法":{"docs":{},"体":{"docs":{},"过":{"docs":{},"长":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"尽":{"docs":{},"力":{"docs":{},"去":{"docs":{},"拆":{"docs":{},"分":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"都":{"docs":{},"应":{"docs":{},"有":{"docs":{},"尽":{"docs":{},"其":{"docs":{},"所":{"docs":{},"能":{"docs":{},"即":{"docs":{},"可":{"docs":{},"；":{"docs":{"第六章 方法/40.谨慎的设计方法签名.html":{"ref":"第六章 方法/40.谨慎的设计方法签名.html","tf":0.125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"连":{"docs":{},"接":{"docs":{},"操":{"docs":{},"作":{"docs":{},"符":{"docs":{},"来":{"docs":{},"合":{"docs":{},"并":{"docs":{},"多":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"除":{"docs":{},"非":{"docs":{},"性":{"docs":{},"能":{"docs":{},"无":{"docs":{},"关":{"docs":{},"紧":{"docs":{},"要":{"docs":{},"。":{"docs":{},"相":{"docs":{},"反":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"使":{"docs":{},"用":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"的":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"第七章 通用程序设计/51.谨慎使用字符串连接符.html":{"ref":"第七章 通用程序设计/51.谨慎使用字符串连接符.html","tf":0.16666666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"去":{"docs":{},"计":{"docs":{},"校":{"docs":{},"效":{"docs":{},"率":{"docs":{},"上":{"docs":{},"的":{"docs":{},"一":{"docs":{},"些":{"docs":{},"小":{"docs":{},"小":{"docs":{},"的":{"docs":{},"得":{"docs":{},"失":{"docs":{},"，":{"docs":{},"在":{"9":{"7":{"docs":{},"％":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"。":{"docs":{},"不":{"docs":{},"成":{"docs":{},"熟":{"docs":{},"的":{"docs":{},"优":{"docs":{},"化":{"docs":{},"才":{"docs":{},"是":{"docs":{},"一":{"docs":{},"切":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"根":{"docs":{},"源":{"docs":{},"。":{"docs":{"第七章 通用程序设计/55.谨慎的进行优化.html":{"ref":"第七章 通用程序设计/55.谨慎的进行优化.html","tf":0.038461538461538464}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}},"因":{"docs":{},"为":{"docs":{},"性":{"docs":{},"能":{"docs":{},"而":{"docs":{},"牺":{"docs":{},"牲":{"docs":{},"合":{"docs":{},"理":{"docs":{},"的":{"docs":{},"结":{"docs":{},"构":{"docs":{},"。":{"docs":{},"要":{"docs":{},"努":{"docs":{},"力":{"docs":{},"编":{"docs":{},"写":{"docs":{},"好":{"docs":{},"的":{"docs":{},"程":{"docs":{},"序":{"docs":{},"而":{"docs":{},"不":{"docs":{},"足":{"docs":{},"快":{"docs":{},"的":{"docs":{},"栏":{"docs":{},"序":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"好":{"docs":{},"的":{"docs":{},"程":{"docs":{},"序":{"docs":{},"不":{"docs":{},"够":{"docs":{},"快":{"docs":{},"，":{"docs":{},"它":{"docs":{},"的":{"docs":{},"结":{"docs":{},"构":{"docs":{},"将":{"docs":{},"使":{"docs":{},"它":{"docs":{},"可":{"docs":{},"以":{"docs":{},"得":{"docs":{},"到":{"docs":{},"优":{"docs":{},"化":{"docs":{},"。":{"docs":{},"好":{"docs":{},"的":{"docs":{},"程":{"docs":{},"序":{"docs":{},"体":{"docs":{},"现":{"docs":{},"了":{"docs":{},"信":{"docs":{},"息":{"docs":{},"隐":{"docs":{},"藏":{"docs":{"第七章 通用程序设计/55.谨慎的进行优化.html":{"ref":"第七章 通用程序设计/55.谨慎的进行优化.html","tf":0.038461538461538464}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"变":{"docs":{},"类":{"docs":{},"是":{"docs":{},"其":{"docs":{},"实":{"docs":{},"例":{"docs":{},"不":{"docs":{},"能":{"docs":{},"被":{"docs":{},"修":{"docs":{},"改":{"docs":{},"的":{"docs":{},"类":{"docs":{},"，":{"docs":{},"没":{"docs":{},"有":{"docs":{},"实":{"docs":{},"例":{"docs":{},"中":{"docs":{},"所":{"docs":{},"包":{"docs":{},"含":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"域":{"docs":{},"，":{"docs":{},"在":{"docs":{},"实":{"docs":{},"例":{"docs":{},"被":{"docs":{},"创":{"docs":{},"建":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"被":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"，":{"docs":{},"且":{"docs":{},"在":{"docs":{},"实":{"docs":{},"例":{"docs":{},"的":{"docs":{},"生":{"docs":{},"命":{"docs":{},"周":{"docs":{},"期":{"docs":{},"中":{"docs":{},"不":{"docs":{},"能":{"docs":{},"被":{"docs":{},"修":{"docs":{},"改":{"docs":{},"。":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"中":{"docs":{},"有":{"docs":{},"许":{"docs":{},"多":{"docs":{},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"类":{"docs":{},"，":{"docs":{},"如":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"，":{"docs":{},"值":{"docs":{},"的":{"docs":{},"基":{"docs":{},"本":{"docs":{},"包":{"docs":{},"装":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"b":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"和":{"docs":{},"b":{"docs":{},"i":{"docs":{},"g":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"等":{"docs":{},"，":{"docs":{},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"类":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"。":{"docs":{},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"有":{"docs":{},"很":{"docs":{},"多":{"docs":{},"优":{"docs":{},"点":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"设":{"docs":{},"计":{"docs":{},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"类":{"docs":{},"的":{"docs":{},"原":{"docs":{},"则":{"docs":{},"有":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"？":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"很":{"docs":{},"多":{"docs":{},"好":{"docs":{},"处":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"合":{"docs":{},"适":{"docs":{},"的":{"docs":{},"适":{"docs":{},"用":{"docs":{},"场":{"docs":{},"景":{"docs":{},"下":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"将":{"docs":{},"类":{"docs":{},"设":{"docs":{},"计":{"docs":{},"生":{"docs":{},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"类":{"docs":{},"，":{"docs":{},"并":{"docs":{},"遵":{"docs":{},"守":{"docs":{},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"类":{"docs":{},"的":{"docs":{},"设":{"docs":{},"计":{"docs":{},"原":{"docs":{},"则":{"docs":{},"。":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"(":{"docs":{},"i":{"docs":{},"m":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},"：":{"docs":{},"类":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"（":{"docs":{},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"类":{"docs":{},"）":{"docs":{},"，":{"docs":{},"一":{"docs":{},"定":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"，":{"docs":{},"如":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"、":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"、":{"docs":{},"b":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"等":{"docs":{},"。":{"docs":{"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"存":{"docs":{},"在":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"的":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}}}}}}}}}}}}}},"严":{"docs":{},"格":{"docs":{},"的":{"docs":{},"说":{"docs":{},"，":{"docs":{},"前":{"docs":{},"者":{"docs":{},"逃":{"docs":{},"避":{"docs":{},"了":{"docs":{},"泛":{"docs":{},"型":{"docs":{},"的":{"docs":{},"检":{"docs":{},"查":{"docs":{},"，":{"docs":{},"后":{"docs":{},"者":{"docs":{},"明":{"docs":{},"确":{"docs":{},"告":{"docs":{},"诉":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"，":{"docs":{},"它":{"docs":{},"能":{"docs":{},"够":{"docs":{},"持":{"docs":{},"有":{"docs":{},"任":{"docs":{},"意":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"你":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"传":{"docs":{},"递":{"docs":{},"给":{"docs":{},"类":{"docs":{},"型":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"不":{"docs":{},"能":{"docs":{},"将":{"docs":{},"它":{"docs":{},"传":{"docs":{},"给":{"docs":{},"类":{"docs":{},"型":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"。":{"docs":{},"这":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"泛":{"docs":{},"型":{"docs":{},"有":{"docs":{},"子":{"docs":{},"类":{"docs":{},"型":{"docs":{},"化":{"docs":{},"规":{"docs":{},"则":{"docs":{},"，":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"必":{"docs":{},"纠":{"docs":{},"结":{"docs":{},"于":{"docs":{},"已":{"docs":{},"有":{"docs":{},"解":{"docs":{},"决":{"docs":{},"方":{"docs":{},"案":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"而":{"docs":{},"专":{"docs":{},"注":{"docs":{},"于":{"docs":{},"自":{"docs":{},"身":{"docs":{},"的":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"；":{"docs":{"第七章 通用程序设计/47.多使用类库.html":{"ref":"第七章 通用程序设计/47.多使用类库.html","tf":0.1111111111111111}}}}}}}}}}}}}}}}}}}}}}}}}}},"传":{"docs":{},"递":{"docs":{},"性":{"docs":{},"：":{"docs":{},"对":{"docs":{},"于":{"docs":{},"任":{"docs":{},"何":{"docs":{},"非":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"得":{"docs":{},"引":{"docs":{},"用":{"docs":{},"值":{"docs":{},"x":{"docs":{},"、":{"docs":{},"y":{"docs":{},"和":{"docs":{},"z":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"x":{"docs":{},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"y":{"docs":{},")":{"docs":{},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"时":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"y":{"docs":{},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"z":{"docs":{},")":{"docs":{},"也":{"docs":{},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"x":{"docs":{},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"z":{"docs":{},")":{"docs":{},"也":{"docs":{},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html":{"ref":"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{"第八章 异常/58.选择合适的异常.html":{"ref":"第八章 异常/58.选择合适的异常.html","tf":0.030303030303030304}},"=":{"docs":{},"=":{"docs":{},"操":{"docs":{},"作":{"docs":{},"符":{"docs":{},"检":{"docs":{},"查":{"docs":{},"“":{"docs":{},"参":{"docs":{},"数":{"docs":{},"是":{"docs":{},"否":{"docs":{},"为":{"docs":{},"这":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"”":{"docs":{},"；":{"docs":{"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html":{"ref":"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"操":{"docs":{},"作":{"docs":{},"符":{"docs":{},"检":{"docs":{},"查":{"docs":{},"“":{"docs":{},"参":{"docs":{},"数":{"docs":{},"是":{"docs":{},"否":{"docs":{},"为":{"docs":{},"正":{"docs":{},"确":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"”":{"docs":{},"；":{"docs":{"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html":{"ref":"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"方":{"docs":{},"法":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"重":{"docs":{},"要":{"docs":{},"的":{"docs":{},"约":{"docs":{},"定":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"通":{"docs":{},"常":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"方":{"docs":{},"法":{"docs":{},"施":{"docs":{},"加":{"docs":{},"的":{"docs":{},"等":{"docs":{},"同":{"docs":{},"性":{"docs":{},"测":{"docs":{},"试":{"docs":{},"和":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"方":{"docs":{},"法":{"docs":{},"一":{"docs":{},"致":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"一":{"docs":{},"致":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"集":{"docs":{},"合":{"docs":{},"接":{"docs":{},"口":{"docs":{},"一":{"docs":{},"般":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"方":{"docs":{},"法":{"docs":{},"来":{"docs":{},"进":{"docs":{},"行":{"docs":{},"等":{"docs":{},"同":{"docs":{},"性":{"docs":{},"测":{"docs":{},"试":{"docs":{},"，":{"docs":{},"而":{"docs":{},"有":{"docs":{},"序":{"docs":{},"集":{"docs":{},"合":{"docs":{},"是":{"docs":{},"采":{"docs":{},"用":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"方":{"docs":{},"法":{"docs":{},"进":{"docs":{},"行":{"docs":{},"等":{"docs":{},"同":{"docs":{},"性":{"docs":{},"测":{"docs":{},"试":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"两":{"docs":{},"者":{"docs":{},"不":{"docs":{},"一":{"docs":{},"致":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"容":{"docs":{},"易":{"docs":{},"造":{"docs":{},"成":{"docs":{},"灾":{"docs":{},"难":{"docs":{},"性":{"docs":{},"的":{"docs":{},"后":{"docs":{},"果":{"docs":{},"；":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"需":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"，":{"docs":{},"有":{"docs":{},"符":{"docs":{},"号":{"docs":{},"的":{"3":{"2":{"docs":{},"位":{"docs":{},"整":{"docs":{},"数":{"docs":{},"还":{"docs":{},"不":{"docs":{},"足":{"docs":{},"以":{"docs":{},"大":{"docs":{},"到":{"docs":{},"能":{"docs":{},"够":{"docs":{},"表":{"docs":{},"达":{"docs":{},"任":{"docs":{},"意":{"docs":{},"两":{"docs":{},"个":{"3":{"2":{"docs":{},"位":{"docs":{},"整":{"docs":{},"数":{"docs":{},"的":{"docs":{},"差":{"docs":{},"值":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"i":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"很":{"docs":{},"大":{"docs":{},"的":{"docs":{},"正":{"docs":{},"整":{"docs":{},"数":{"docs":{},"，":{"docs":{},"j":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"很":{"docs":{},"小":{"docs":{},"的":{"docs":{},"负":{"docs":{},"整":{"docs":{},"数":{"docs":{},"，":{"docs":{},"i":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}},"不":{"docs":{},"可":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"的":{"docs":{},"工":{"docs":{},"具":{"docs":{},"类":{"docs":{},"来":{"docs":{},"导":{"docs":{},"出":{"docs":{},"这":{"docs":{},"些":{"docs":{},"常":{"docs":{},"量":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"：":{"docs":{"第三章 类和接口/19.接口只用于定义类型.html":{"ref":"第三章 类和接口/19.接口只用于定义类型.html","tf":0.02702702702702703}}}}}}}}}}}}}}}}}}}}}},"接":{"docs":{},"口":{"docs":{},"一":{"docs":{},"种":{"docs":{},"典":{"docs":{},"型":{"docs":{},"的":{"docs":{},"错":{"docs":{},"误":{"docs":{},"方":{"docs":{},"式":{"docs":{},"就":{"docs":{},"是":{"docs":{},"：":{"docs":{},"常":{"docs":{},"量":{"docs":{},"接":{"docs":{},"口":{"docs":{},"。":{"docs":{},"常":{"docs":{},"量":{"docs":{},"接":{"docs":{},"口":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"第三章 类和接口/19.接口只用于定义类型.html":{"ref":"第三章 类和接口/19.接口只用于定义类型.html","tf":0.02702702702702703}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"原":{"docs":{},"生":{"docs":{},"态":{"docs":{},"类":{"docs":{},"型":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"也":{"docs":{},"是":{"docs":{},"合":{"docs":{},"法":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"不":{"docs":{},"应":{"docs":{},"该":{"docs":{},"这":{"docs":{},"样":{"docs":{},"做":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"这":{"docs":{},"会":{"docs":{},"失":{"docs":{},"去":{"docs":{},"泛":{"docs":{},"型":{"docs":{},"在":{"docs":{},"安":{"docs":{},"全":{"docs":{},"性":{"docs":{},"和":{"docs":{},"表":{"docs":{},"述":{"docs":{},"性":{"docs":{},"方":{"docs":{},"面":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"优":{"docs":{},"势":{"docs":{},"。":{"docs":{},"原":{"docs":{},"生":{"docs":{},"态":{"docs":{},"类":{"docs":{},"型":{"docs":{},"存":{"docs":{},"在":{"docs":{},"的":{"docs":{},"理":{"docs":{},"由":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"老":{"docs":{},"代":{"docs":{},"码":{"docs":{},"的":{"docs":{},"移":{"docs":{},"植":{"docs":{},"兼":{"docs":{},"容":{"docs":{},"性":{"docs":{},"。":{"docs":{"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"注":{"docs":{},"解":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}},"重":{"docs":{},"载":{"docs":{},"，":{"docs":{},"安":{"docs":{},"全":{"docs":{},"而":{"docs":{},"保":{"docs":{},"守":{"docs":{},"的":{"docs":{},"策":{"docs":{},"略":{"docs":{},"是":{"docs":{},"：":{"docs":{},"永":{"docs":{},"远":{"docs":{},"不":{"docs":{},"要":{"docs":{},"写":{"docs":{},"两":{"docs":{},"个":{"docs":{},"具":{"docs":{},"有":{"docs":{},"相":{"docs":{},"同":{"docs":{},"参":{"docs":{},"数":{"docs":{},"数":{"docs":{},"目":{"docs":{},"的":{"docs":{},"重":{"docs":{},"载":{"docs":{},"方":{"docs":{},"法":{"docs":{},"；":{"docs":{"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"变":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"场":{"docs":{},"景":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012}}}},"规":{"docs":{},"律":{"docs":{},"为":{"docs":{},"：":{"docs":{},"方":{"docs":{},"法":{"docs":{},"强":{"docs":{},"制":{"docs":{},"要":{"docs":{},"求":{"docs":{},"的":{"docs":{},"默":{"docs":{},"认":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"在":{"docs":{},"方":{"docs":{},"法":{"docs":{},"入":{"docs":{},"参":{"docs":{},"明":{"docs":{},"确":{"docs":{},"给":{"docs":{},"出":{"docs":{},"，":{"docs":{},"可":{"docs":{},"变":{"docs":{},"参":{"docs":{},"数":{"docs":{},"用":{"docs":{},"于":{"docs":{},"进":{"docs":{},"行":{"docs":{},"兜":{"docs":{},"底":{"docs":{},"不":{"docs":{},"确":{"docs":{},"定":{"docs":{},"参":{"docs":{},"数":{"docs":{},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"。":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"参":{"docs":{},"数":{"docs":{},"化":{"docs":{},"类":{"docs":{},"型":{"docs":{},"时":{"docs":{},"，":{"docs":{},"如":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"类":{"docs":{},"时":{"docs":{},"，":{"docs":{},"只":{"docs":{},"能":{"docs":{},"使":{"docs":{},"用":{"docs":{},"装":{"docs":{},"箱":{"docs":{},"类":{"docs":{},"型":{"docs":{"第七章 通用程序设计/49.基本类型优先于装箱基本类型.html":{"ref":"第七章 通用程序设计/49.基本类型优先于装箱基本类型.html","tf":0.05555555555555555}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"连":{"docs":{},"接":{"docs":{},"符":{"docs":{},"（":{"docs":{},"+":{"docs":{},"）":{"docs":{},"将":{"docs":{},"多":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"拼":{"docs":{},"接":{"docs":{},"起":{"docs":{},"来":{"docs":{},"，":{"docs":{},"是":{"docs":{},"很":{"docs":{},"不":{"docs":{},"合":{"docs":{},"适":{"docs":{},"的":{"docs":{},"。":{"docs":{},"因":{"docs":{},"为":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"是":{"docs":{},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"的":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"拼":{"docs":{},"接":{"docs":{},"都":{"docs":{},"需":{"docs":{},"要":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"因":{"docs":{},"此":{"docs":{},"非":{"docs":{},"常":{"docs":{},"影":{"docs":{},"响":{"docs":{},"性":{"docs":{},"能":{"docs":{},"。":{"docs":{},"涉":{"docs":{},"及":{"docs":{},"到":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"拼":{"docs":{},"接":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"使":{"docs":{},"用":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"。":{"docs":{"第七章 通用程序设计/51.谨慎使用字符串连接符.html":{"ref":"第七章 通用程序设计/51.谨慎使用字符串连接符.html","tf":0.16666666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"本":{"docs":{},"地":{"docs":{},"方":{"docs":{},"法":{"docs":{},"来":{"docs":{},"提":{"docs":{},"供":{"docs":{},"性":{"docs":{},"能":{"docs":{},"的":{"docs":{},"做":{"docs":{},"法":{"docs":{},"是":{"docs":{},"不":{"docs":{},"值":{"docs":{},"得":{"docs":{},"提":{"docs":{},"倡":{"docs":{},"的":{"docs":{},"，":{"docs":{},"在":{"docs":{},"早":{"docs":{},"期":{"docs":{},"的":{"docs":{},"发":{"docs":{},"型":{"docs":{},"版":{"docs":{},"本":{"docs":{},"中":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"做":{"docs":{},"法":{"docs":{},"往":{"docs":{},"往":{"docs":{},"是":{"docs":{},"很":{"docs":{},"有":{"docs":{},"必":{"docs":{},"要":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{},"实":{"docs":{},"现":{"docs":{},"变":{"docs":{},"得":{"docs":{},"越":{"docs":{},"来":{"docs":{},"越":{"docs":{},"快":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"大":{"docs":{},"多":{"docs":{},"数":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"现":{"docs":{},"在":{"docs":{},"即":{"docs":{},"使":{"docs":{},"是":{"docs":{},"不":{"docs":{},"使":{"docs":{},"用":{"docs":{},"本":{"docs":{},"地":{"docs":{},"方":{"docs":{},"法":{"docs":{},"也":{"docs":{},"能":{"docs":{},"获":{"docs":{},"得":{"docs":{},"很":{"docs":{},"好":{"docs":{},"的":{"docs":{},"性":{"docs":{},"能":{"docs":{},"；":{"docs":{"第七章 通用程序设计/54.慎用本地方法.html":{"ref":"第七章 通用程序设计/54.慎用本地方法.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{"第八章 异常/58.选择合适的异常.html":{"ref":"第八章 异常/58.选择合适的异常.html","tf":0.030303030303030304}}}}},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"c":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"的":{"docs":{},"@":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},"标":{"docs":{},"签":{"docs":{},"可":{"docs":{},"以":{"docs":{},"显":{"docs":{},"示":{"docs":{},"方":{"docs":{},"法":{"docs":{},"可":{"docs":{},"能":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"的":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"异":{"docs":{},"常":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"不":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"将":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"异":{"docs":{},"常":{"docs":{},"包":{"docs":{},"含":{"docs":{},"在":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"声":{"docs":{},"明":{"docs":{},"中":{"docs":{},"。":{"docs":{},"使":{"docs":{},"用":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"的":{"docs":{},"程":{"docs":{},"序":{"docs":{},"员":{"docs":{},"必":{"docs":{},"须":{"docs":{},"知":{"docs":{},"道":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"异":{"docs":{},"常":{"docs":{},"是":{"docs":{},"需":{"docs":{},"要":{"docs":{},"受":{"docs":{},"检":{"docs":{},"的":{"docs":{},",":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"是":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"受":{"docs":{},"检":{"docs":{},"的":{"docs":{},"。":{"docs":{"第八章 异常/62.每个方法抛出的异常都要有文档.html":{"ref":"第八章 异常/62.每个方法抛出的异常都要有文档.html","tf":0.1111111111111111}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"默":{"docs":{},"认":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"形":{"docs":{},"式":{"docs":{},"，":{"docs":{},"当":{"docs":{},"一":{"docs":{},"个":{"docs":{},"或":{"docs":{},"多":{"docs":{},"个":{"docs":{},"域":{"docs":{},"字":{"docs":{},"段":{"docs":{},"被":{"docs":{},"标":{"docs":{},"记":{"docs":{},"为":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"第十章 序列化/75.考虑使用自定义的序列化形式.html":{"ref":"第十章 序列化/75.考虑使用自定义的序列化形式.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"小":{"docs":{},"而":{"docs":{},"集":{"docs":{},"中":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"把":{"docs":{},"两":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"合":{"docs":{},"并":{"docs":{},"到":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"，":{"docs":{},"与":{"docs":{},"其":{"docs":{},"中":{"docs":{},"一":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"局":{"docs":{},"部":{"docs":{},"变":{"docs":{},"量":{"docs":{},"就":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"出":{"docs":{},"现":{"docs":{},"在":{"docs":{},"执":{"docs":{},"行":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"范":{"docs":{},"围":{"docs":{},"之":{"docs":{},"内":{"docs":{},"。":{"docs":{},"为":{"docs":{},"了":{"docs":{},"防":{"docs":{},"止":{"docs":{},"这":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"发":{"docs":{},"生":{"docs":{},"，":{"docs":{},"只":{"docs":{},"要":{"docs":{},"把":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"分":{"docs":{},"成":{"docs":{},"两":{"docs":{},"个":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"各":{"docs":{},"自":{"docs":{},"执":{"docs":{},"行":{"docs":{},"一":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"；":{"docs":{"第七章 通用程序设计/45.将局部变量的作用域最小化.html":{"ref":"第七章 通用程序设计/45.将局部变量的作用域最小化.html","tf":0.125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"判":{"docs":{},"断":{"docs":{},"各":{"docs":{},"个":{"docs":{},"域":{"docs":{},"值":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"等":{"docs":{},"的":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"不":{"docs":{},"要":{"docs":{},"过":{"docs":{},"于":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"；":{"docs":{"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html":{"ref":"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"是":{"docs":{},"私":{"docs":{},"有":{"docs":{},"的":{"docs":{},"或":{"docs":{},"是":{"docs":{},"包":{"docs":{},"级":{"docs":{},"私":{"docs":{},"有":{"docs":{},"的":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"确":{"docs":{},"定":{"docs":{},"它":{"docs":{},"的":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"方":{"docs":{},"法":{"docs":{},"永":{"docs":{},"远":{"docs":{},"不":{"docs":{},"会":{"docs":{},"被":{"docs":{},"调":{"docs":{},"用":{"docs":{},"。":{"docs":{"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html":{"ref":"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"实":{"docs":{},"例":{"docs":{},"本":{"docs":{},"质":{"docs":{},"上":{"docs":{},"都":{"docs":{},"是":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"的":{"docs":{},"。":{"docs":{},"对":{"docs":{},"于":{"docs":{},"代":{"docs":{},"表":{"docs":{},"活":{"docs":{},"动":{"docs":{},"实":{"docs":{},"体":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"值":{"docs":{},"（":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"）":{"docs":{},"的":{"docs":{},"类":{"docs":{},"来":{"docs":{},"说":{"docs":{},"确":{"docs":{},"实":{"docs":{},"如":{"docs":{},"此":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"。":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"提":{"docs":{},"供":{"docs":{},"的":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"实":{"docs":{},"现":{"docs":{},"对":{"docs":{},"于":{"docs":{},"这":{"docs":{},"些":{"docs":{},"类":{"docs":{},"来":{"docs":{},"说":{"docs":{},"是":{"docs":{},"正":{"docs":{},"确":{"docs":{},"的":{"docs":{},"行":{"docs":{},"为":{"docs":{},"；":{"docs":{"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html":{"ref":"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"内":{"docs":{},"部":{"docs":{},"成":{"docs":{},"员":{"docs":{},"域":{"docs":{},"为":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"而":{"docs":{},"非":{"docs":{},"是":{"docs":{},"基":{"docs":{},"本":{"docs":{},"类":{"docs":{},"型":{"docs":{},"数":{"docs":{},"据":{"docs":{},"时":{"docs":{},"，":{"docs":{},"就":{"docs":{},"要":{"docs":{},"在":{"docs":{},"类":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"和":{"docs":{},"成":{"docs":{},"员":{"docs":{},"域":{"docs":{},"的":{"docs":{},"访":{"docs":{},"问":{"docs":{},"方":{"docs":{},"法":{"docs":{},"上":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"对":{"docs":{},"这":{"docs":{},"些":{"docs":{},"内":{"docs":{},"部":{"docs":{},"成":{"docs":{},"员":{"docs":{},"域":{"docs":{},"进":{"docs":{},"行":{"docs":{},"保":{"docs":{},"护":{"docs":{},"，":{"docs":{},"以":{"docs":{},"防":{"docs":{},"止":{"docs":{},"外":{"docs":{},"界":{"docs":{},"条":{"docs":{},"件":{"docs":{},"破":{"docs":{},"坏":{"docs":{},"了":{"docs":{},"这":{"docs":{},"种":{"docs":{},"约":{"docs":{},"束":{"docs":{},"，":{"docs":{},"对":{"docs":{},"实":{"docs":{},"例":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"发":{"docs":{},"生":{"docs":{},"改":{"docs":{},"变":{"docs":{},"。":{"docs":{},"那":{"docs":{},"么":{"docs":{},"，":{"docs":{},"对":{"docs":{},"类":{"docs":{},"的":{"docs":{},"成":{"docs":{},"员":{"docs":{},"域":{"docs":{},"为":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"数":{"docs":{},"据":{"docs":{},"时":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"怎":{"docs":{},"样":{"docs":{},"处":{"docs":{},"理":{"docs":{},"？":{"docs":{"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"内":{"docs":{},"部":{"docs":{},"使":{"docs":{},"用":{"docs":{},"某":{"docs":{},"些":{"docs":{},"常":{"docs":{},"量":{"docs":{},"，":{"docs":{},"纯":{"docs":{},"粹":{"docs":{},"是":{"docs":{},"实":{"docs":{},"现":{"docs":{},"细":{"docs":{},"节":{"docs":{},"，":{"docs":{},"实":{"docs":{},"现":{"docs":{},"常":{"docs":{},"量":{"docs":{},"接":{"docs":{},"口":{"docs":{},"，":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"把":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"细":{"docs":{},"节":{"docs":{},"泄":{"docs":{},"露":{"docs":{},"到":{"docs":{},"该":{"docs":{},"类":{"docs":{},"的":{"docs":{},"导":{"docs":{},"出":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"中":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"接":{"docs":{},"口":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"域":{"docs":{},"都":{"docs":{},"是":{"docs":{},"及":{"docs":{},"方":{"docs":{},"法":{"docs":{},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"的":{"docs":{},"。":{"docs":{"第三章 类和接口/19.接口只用于定义类型.html":{"ref":"第三章 类和接口/19.接口只用于定义类型.html","tf":0.02702702702702703}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"实":{"docs":{},"现":{"docs":{},"常":{"docs":{},"量":{"docs":{},"接":{"docs":{},"口":{"docs":{},"，":{"docs":{},"这":{"docs":{},"对":{"docs":{},"于":{"docs":{},"这":{"docs":{},"个":{"docs":{},"类":{"docs":{},"的":{"docs":{},"用":{"docs":{},"户":{"docs":{},"来":{"docs":{},"讲":{"docs":{},"并":{"docs":{},"没":{"docs":{},"有":{"docs":{},"实":{"docs":{},"际":{"docs":{},"的":{"docs":{},"价":{"docs":{},"值":{"docs":{},"。":{"docs":{},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"做":{"docs":{},"返":{"docs":{},"回":{"docs":{},"会":{"docs":{},"让":{"docs":{},"他":{"docs":{},"们":{"docs":{},"感":{"docs":{},"到":{"docs":{},"更":{"docs":{},"糊":{"docs":{},"涂":{"docs":{},"，":{"docs":{},"这":{"docs":{},"还":{"docs":{},"代":{"docs":{},"表":{"docs":{},"了":{"docs":{},"一":{"docs":{},"种":{"docs":{},"承":{"docs":{},"诺":{"docs":{},"：":{"docs":{},"如":{"docs":{},"果":{"docs":{},"在":{"docs":{},"将":{"docs":{},"来":{"docs":{},"的":{"docs":{},"发":{"docs":{},"行":{"docs":{},"版":{"docs":{},"本":{"docs":{},"中":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"类":{"docs":{},"被":{"docs":{},"修":{"docs":{},"改":{"docs":{},"了":{"docs":{},"，":{"docs":{},"它":{"docs":{},"不":{"docs":{},"再":{"docs":{},"需":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{},"这":{"docs":{},"些":{"docs":{},"常":{"docs":{},"量":{"docs":{},"了":{"docs":{},"，":{"docs":{},"依":{"docs":{},"然":{"docs":{},"必":{"docs":{},"须":{"docs":{},"实":{"docs":{},"现":{"docs":{},"这":{"docs":{},"个":{"docs":{},"接":{"docs":{},"口":{"docs":{},"，":{"docs":{},"以":{"docs":{},"确":{"docs":{},"保":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"兼":{"docs":{},"容":{"docs":{},"性":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"非":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"类":{"docs":{},"实":{"docs":{},"现":{"docs":{},"了":{"docs":{},"常":{"docs":{},"量":{"docs":{},"接":{"docs":{},"口":{"docs":{},"，":{"docs":{},"它":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"子":{"docs":{},"类":{"docs":{},"的":{"docs":{},"命":{"docs":{},"名":{"docs":{},"空":{"docs":{},"间":{"docs":{},"都":{"docs":{},"受":{"docs":{},"到":{"docs":{},"了":{"docs":{},"污":{"docs":{},"染":{"docs":{},"。":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"平":{"docs":{},"台":{"docs":{},"类":{"docs":{},"库":{"docs":{},"中":{"docs":{},"存":{"docs":{},"在":{"docs":{},"几":{"docs":{},"个":{"docs":{},"常":{"docs":{},"量":{"docs":{},"å":{"docs":{},"接":{"docs":{},"口":{"docs":{},"，":{"docs":{},"如":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},".":{"docs":{},"i":{"docs":{},"o":{"docs":{},".":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"，":{"docs":{},"这":{"docs":{},"些":{"docs":{},"接":{"docs":{},"口":{"docs":{},"都":{"docs":{},"是":{"docs":{},"反":{"docs":{},"面":{"docs":{},"典":{"docs":{},"型":{"docs":{},"，":{"docs":{},"不":{"docs":{},"值":{"docs":{},"得":{"docs":{},"效":{"docs":{},"仿":{"docs":{},"。":{"docs":{"第三章 类和接口/19.接口只用于定义类型.html":{"ref":"第三章 类和接口/19.接口只用于定义类型.html","tf":0.02702702702702703}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"层":{"docs":{},"次":{"docs":{},"的":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"好":{"docs":{},"处":{"docs":{},"在":{"docs":{},"于":{"docs":{},"，":{"docs":{},"它":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"来":{"docs":{},"反":{"docs":{},"映":{"docs":{},"类":{"docs":{},"型":{"docs":{},"之":{"docs":{},"间":{"docs":{},"本":{"docs":{},"质":{"docs":{},"上":{"docs":{},"的":{"docs":{},"层":{"docs":{},"次":{"docs":{},"关":{"docs":{},"系":{"docs":{},"。":{"docs":{},"有":{"docs":{},"助":{"docs":{},"于":{"docs":{},"增":{"docs":{},"强":{"docs":{},"灵":{"docs":{},"活":{"docs":{},"性":{"docs":{},"，":{"docs":{},"并":{"docs":{},"进":{"docs":{},"行":{"docs":{},"更":{"docs":{},"好":{"docs":{},"的":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"类":{"docs":{},"型":{"docs":{},"检":{"docs":{},"查":{"docs":{},"。":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"或":{"docs":{},"者":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"性":{"docs":{},"（":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"第六章 方法/44.API需要编写文档注释.html":{"ref":"第六章 方法/44.API需要编写文档注释.html","tf":0.03333333333333333}}}}}}}}}}}}}}}}}}},"和":{"docs":{},"接":{"docs":{},"口":{"docs":{},"的":{"docs":{},"命":{"docs":{},"名":{"docs":{},"，":{"docs":{},"包":{"docs":{},"括":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"和":{"docs":{},"注":{"docs":{},"解":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"名":{"docs":{},"称":{"docs":{},"，":{"docs":{},"都":{"docs":{},"应":{"docs":{},"该":{"docs":{},"包":{"docs":{},"括":{"docs":{},"一":{"docs":{},"个":{"docs":{},"或":{"docs":{},"者":{"docs":{},"多":{"docs":{},"个":{"docs":{},"单":{"docs":{},"词":{"docs":{},"没":{"docs":{},"个":{"docs":{},"单":{"docs":{},"词":{"docs":{},"都":{"docs":{},"首":{"docs":{},"字":{"docs":{},"母":{"docs":{},"大":{"docs":{},"写":{"docs":{},"；":{"docs":{"第七章 通用程序设计/56.遵守普遍接受的命名规则.html":{"ref":"第七章 通用程序设计/56.遵守普遍接受的命名规则.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"型":{"docs":{},"参":{"docs":{},"数":{"docs":{},"名":{"docs":{},"称":{"docs":{},"通":{"docs":{},"常":{"docs":{},"由":{"docs":{},"单":{"docs":{},"个":{"docs":{},"字":{"docs":{},"母":{"docs":{},"组":{"docs":{},"成":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"字":{"docs":{},"母":{"docs":{},"通":{"docs":{},"常":{"docs":{},"是":{"docs":{},"以":{"docs":{},"下":{"docs":{},"五":{"docs":{},"种":{"docs":{},"类":{"docs":{},"型":{"docs":{},"之":{"docs":{},"一":{"docs":{},"；":{"docs":{"第七章 通用程序设计/56.遵守普遍接受的命名规则.html":{"ref":"第七章 通用程序设计/56.遵守普遍接受的命名规则.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"定":{"docs":{},"义":{"docs":{},"不":{"docs":{},"明":{"docs":{},"确":{"docs":{},"所":{"docs":{},"产":{"docs":{},"生":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{},"；":{"docs":{"第八章 异常/58.选择合适的异常.html":{"ref":"第八章 异常/58.选择合适的异常.html","tf":0.030303030303030304}}}}}}}}}}}}}}},"经":{"docs":{},"过":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"类":{"docs":{},"型":{"docs":{},"检":{"docs":{},"查":{"docs":{},"之":{"docs":{},"后":{"docs":{},"把":{"docs":{},"参":{"docs":{},"数":{"docs":{},"转":{"docs":{},"换":{"docs":{},"成":{"docs":{},"正":{"docs":{},"确":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"；":{"docs":{"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html":{"ref":"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"编":{"docs":{},"写":{"docs":{},"的":{"docs":{},"技":{"docs":{},"巧":{"docs":{},"有":{"docs":{},"：":{"docs":{"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html":{"ref":"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html","tf":0.03571428571428571}}}}}}}}},"自":{"docs":{},"反":{"docs":{},"性":{"docs":{},"：":{"docs":{},"对":{"docs":{},"于":{"docs":{},"任":{"docs":{},"何":{"docs":{},"非":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"值":{"docs":{},"x":{"docs":{},"，":{"docs":{},"x":{"docs":{},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},"必":{"docs":{},"须":{"docs":{},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html":{"ref":"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"己":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"可":{"docs":{},"以":{"docs":{},"融":{"docs":{},"入":{"docs":{},"主":{"docs":{},"流":{"docs":{},"，":{"docs":{},"更":{"docs":{},"方":{"docs":{},"便":{"docs":{},"让":{"docs":{},"其":{"docs":{},"他":{"docs":{},"人":{"docs":{},"阅":{"docs":{},"读":{"docs":{},"和":{"docs":{},"理":{"docs":{},"解":{"docs":{},"。":{"docs":{"第七章 通用程序设计/47.多使用类库.html":{"ref":"第七章 通用程序设计/47.多使用类库.html","tf":0.1111111111111111}}}}}}}}}}}}}}}}}}}}}}}}}}},"覆":{"docs":{},"盖":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"方":{"docs":{},"法":{"docs":{},"总":{"docs":{},"要":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"；":{"docs":{"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html":{"ref":"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"时":{"docs":{},"机":{"docs":{"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html":{"ref":"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html","tf":0.03571428571428571}}}},"规":{"docs":{},"范":{"docs":{},"写":{"docs":{},"法":{"docs":{"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html":{"ref":"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html","tf":0.03571428571428571}}}}}}},"看":{"docs":{},"起":{"docs":{},"来":{"docs":{},"似":{"docs":{},"乎":{"docs":{},"很":{"docs":{},"简":{"docs":{},"单":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"有":{"docs":{},"许":{"docs":{},"多":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"方":{"docs":{},"式":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"错":{"docs":{},"误":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"后":{"docs":{},"果":{"docs":{},"非":{"docs":{},"常":{"docs":{},"严":{"docs":{},"重":{"docs":{},"，":{"docs":{},"最":{"docs":{},"容":{"docs":{},"易":{"docs":{},"避":{"docs":{},"免":{"docs":{},"这":{"docs":{},"类":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"办":{"docs":{},"法":{"docs":{},"就":{"docs":{},"是":{"docs":{},"不":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"在":{"docs":{},"这":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"类":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"实":{"docs":{},"例":{"docs":{},"都":{"docs":{},"只":{"docs":{},"与":{"docs":{},"它":{"docs":{},"自":{"docs":{},"身":{"docs":{},"相":{"docs":{},"等":{"docs":{},"。":{"docs":{},"下":{"docs":{},"面":{"docs":{},"这":{"docs":{},"几":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"就":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"：":{"docs":{"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html":{"ref":"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"好":{"docs":{},"处":{"docs":{"第二章 对象通用的方法/10.覆盖toString.html":{"ref":"第二章 对象通用的方法/10.覆盖toString.html","tf":0.1}}}}}}},"的":{"docs":{},"注":{"docs":{},"意":{"docs":{},"事":{"docs":{},"项":{"docs":{"第二章 对象通用的方法/10.覆盖toString.html":{"ref":"第二章 对象通用的方法/10.覆盖toString.html","tf":0.1}}}}}}}}}}}}}}}}},"超":{"docs":{},"类":{"docs":{},"已":{"docs":{},"经":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"了":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"，":{"docs":{},"从":{"docs":{},"超":{"docs":{},"类":{"docs":{},"继":{"docs":{},"承":{"docs":{},"过":{"docs":{},"来":{"docs":{},"的":{"docs":{},"行":{"docs":{},"为":{"docs":{},"对":{"docs":{},"于":{"docs":{},"子":{"docs":{},"类":{"docs":{},"来":{"docs":{},"说":{"docs":{},"也":{"docs":{},"是":{"docs":{},"合":{"docs":{},"适":{"docs":{},"的":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"大":{"docs":{},"多":{"docs":{},"数":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"实":{"docs":{},"现":{"docs":{},"都":{"docs":{},"从":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"继":{"docs":{},"承":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"类":{"docs":{},"似":{"docs":{},"的":{"docs":{},"有":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"和":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"等":{"docs":{},"；":{"docs":{"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html":{"ref":"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"非":{"docs":{},"空":{"docs":{},"性":{"docs":{},"：":{"docs":{},"对":{"docs":{},"于":{"docs":{},"任":{"docs":{},"何":{"docs":{},"非":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"值":{"docs":{},"x":{"docs":{},"，":{"docs":{},"x":{"docs":{},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{},"必":{"docs":{},"须":{"docs":{},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"；":{"docs":{"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html":{"ref":"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"静":{"docs":{},"态":{"docs":{},"成":{"docs":{},"员":{"docs":{},"类":{"docs":{"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.03278688524590164}},"常":{"docs":{},"见":{"docs":{},"用":{"docs":{},"法":{"docs":{},"是":{"docs":{},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"个":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"，":{"docs":{},"它":{"docs":{},"允":{"docs":{},"许":{"docs":{},"外":{"docs":{},"部":{"docs":{},"类":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"被":{"docs":{},"看":{"docs":{},"作":{"docs":{},"是":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"不":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"类":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"接":{"docs":{},"口":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"往":{"docs":{},"往":{"docs":{},"使":{"docs":{},"用":{"docs":{},"非":{"docs":{},"静":{"docs":{},"态":{"docs":{},"成":{"docs":{},"员":{"docs":{},"类":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"它":{"docs":{},"们":{"docs":{},"的":{"docs":{},"集":{"docs":{},"合":{"docs":{},"视":{"docs":{},"图":{"docs":{},"（":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"（":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},"a":{"docs":{},"f":{"docs":{},"e":{"docs":{},"）":{"docs":{},"：":{"docs":{},"该":{"docs":{},"类":{"docs":{},"是":{"docs":{},"实":{"docs":{},"例":{"docs":{},"可":{"docs":{},"变":{"docs":{},"的":{"docs":{},"，":{"docs":{},"如":{"docs":{},"需":{"docs":{},"安":{"docs":{},"全":{"docs":{},"地":{"docs":{},"并":{"docs":{},"发":{"docs":{},"使":{"docs":{},"用":{"docs":{},"，":{"docs":{},"必":{"docs":{},"须":{"docs":{},"外":{"docs":{},"部":{"docs":{},"手":{"docs":{},"动":{"docs":{},"同":{"docs":{},"步":{"docs":{},"。":{"docs":{},"如":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"和":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"；":{"docs":{"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909},"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0037267080745341614},"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547},"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.010752688172043012},"第七章 通用程序设计/46.for-each循环优于传统的for循环.html":{"ref":"第七章 通用程序设计/46.for-each循环优于传统的for循环.html","tf":0.025}}},"?":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909}}},"@":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909},"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936},"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.025},"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.01987577639751553},"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576},"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.016},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"y":{"docs":{},".":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}}}}}}},"（":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"y":{"docs":{},".":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"）":{"docs":{},"元":{"docs":{},"注":{"docs":{},"解":{"docs":{},"指":{"docs":{},"示":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"注":{"docs":{},"解":{"docs":{},"应":{"docs":{},"该":{"docs":{},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"保":{"docs":{},"留":{"docs":{},"。":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"第六章 方法/44.API需要编写文档注释.html":{"ref":"第六章 方法/44.API需要编写文档注释.html","tf":0.03333333333333333},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{},")":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"（":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{},"）":{"docs":{},"元":{"docs":{},"注":{"docs":{},"解":{"docs":{},"表":{"docs":{},"明":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"注":{"docs":{},"解":{"docs":{},"只":{"docs":{},"对":{"docs":{},"方":{"docs":{},"法":{"docs":{},"声":{"docs":{},"明":{"docs":{},"合":{"docs":{},"法":{"docs":{},"：":{"docs":{},"它":{"docs":{},"不":{"docs":{},"能":{"docs":{},"应":{"docs":{},"用":{"docs":{},"于":{"docs":{},"类":{"docs":{},"声":{"docs":{},"明":{"docs":{},"，":{"docs":{},"属":{"docs":{},"性":{"docs":{},"声":{"docs":{},"明":{"docs":{},"或":{"docs":{},"其":{"docs":{},"他":{"docs":{},"程":{"docs":{},"序":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"的":{"docs":{},"取":{"docs":{},"值":{"docs":{},"有":{"docs":{},"这":{"docs":{},"些":{"docs":{},"：":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}},":":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"第六章 方法/44.API需要编写文档注释.html":{"ref":"第六章 方法/44.API需要编写文档注释.html","tf":0.03333333333333333},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909},"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}},"的":{"docs":{},"写":{"docs":{},"法":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909}}}}}}}}},";":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.007142857142857143}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}}}},",":{"docs":{"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.010752688172043012}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"第八章 异常/59.避免不必要的使用受检的异常.html":{"ref":"第八章 异常/59.避免不必要的使用受检的异常.html","tf":0.04878048780487805}}}}}},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.007751937984496124}},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"）":{"docs":{},"：":{"docs":{},"即":{"docs":{},"便":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"都":{"docs":{},"被":{"docs":{},"外":{"docs":{},"部":{"docs":{},"同":{"docs":{},"步":{"docs":{},"保":{"docs":{},"卫":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"类":{"docs":{},"仍":{"docs":{},"不":{"docs":{},"能":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"被":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"并":{"docs":{},"发":{"docs":{},"使":{"docs":{},"用":{"docs":{},"。":{"docs":{},"这":{"docs":{},"种":{"docs":{},"类":{"docs":{},"或":{"docs":{},"者":{"docs":{},"方":{"docs":{},"法":{"docs":{},"非":{"docs":{},"常":{"docs":{},"少":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"t":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"队":{"docs":{},"里":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"已":{"docs":{},"经":{"docs":{},"废":{"docs":{},"除":{"docs":{},"了":{"docs":{},"。":{"docs":{"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"_":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}},";":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.007453416149068323}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.004968944099378882}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"p":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012}}}}}}}},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":0.011111111111111112}}}}}},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"\"":{"docs":{"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.011904761904761904}}}}}}},":":{"docs":{},"g":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},")":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}},"{":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.015151515151515152}},"(":{"docs":{},"\"":{"1":{"docs":{},"\"":{"docs":{},",":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.015151515151515152}}}}},"2":{"docs":{},"\"":{"docs":{},",":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.015151515151515152}}}}},"3":{"docs":{},"\"":{"docs":{},",":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.015151515151515152}}}}},"docs":{}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}}}}}},"[":{"docs":{},"]":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.015151515151515152}}}},"s":{"docs":{},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.015151515151515152}},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"h":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},")":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"h":{"docs":{},")":{"docs":{},";":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},",":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}}}}}}}}},"[":{"docs":{},"h":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},"]":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"h":{"docs":{},")":{"docs":{},";":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"）":{"docs":{},"的":{"docs":{},"原":{"docs":{},"则":{"docs":{},"：":{"docs":{},"只":{"docs":{},"要":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"，":{"docs":{},"它":{"docs":{},"们":{"docs":{},"就":{"docs":{},"会":{"docs":{},"把":{"docs":{},"设":{"docs":{},"计":{"docs":{},"决":{"docs":{},"策":{"docs":{},"集":{"docs":{},"中":{"docs":{},"在":{"docs":{},"单":{"docs":{},"个":{"docs":{},"模":{"docs":{},"块":{"docs":{},"中":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"改":{"docs":{},"变":{"docs":{},"单":{"docs":{},"个":{"docs":{},"决":{"docs":{},"策":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"会":{"docs":{},"影":{"docs":{},"响":{"docs":{},"到":{"docs":{},"系":{"docs":{},"统":{"docs":{},"的":{"docs":{},"其":{"docs":{},"他":{"docs":{},"部":{"docs":{},"分":{"docs":{},"；":{"docs":{"第七章 通用程序设计/55.谨慎的进行优化.html":{"ref":"第七章 通用程序设计/55.谨慎的进行优化.html","tf":0.038461538461538464}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"第八章 异常/61.抛出与抽象相对应的异常.html":{"ref":"第八章 异常/61.抛出与抽象相对应的异常.html","tf":0.020833333333333332}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{},";":{"docs":{"第八章 异常/61.抛出与抽象相对应的异常.html":{"ref":"第八章 异常/61.抛出与抽象相对应的异常.html","tf":0.020833333333333332}}}}}}},"c":{"docs":{},"a":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"第八章 异常/61.抛出与抽象相对应的异常.html":{"ref":"第八章 异常/61.抛出与抽象相对应的异常.html","tf":0.020833333333333332}}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"第八章 异常/61.抛出与抽象相对应的异常.html":{"ref":"第八章 异常/61.抛出与抽象相对应的异常.html","tf":0.020833333333333332}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"为":{"docs":{},"：":{"docs":{"第八章 异常/61.抛出与抽象相对应的异常.html":{"ref":"第八章 异常/61.抛出与抽象相对应的异常.html","tf":0.020833333333333332}}}}}}}}}}}}}}}}}}}}}}}}}},"​":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.1},"第十章 序列化/74.谨慎的实现Serializable接口.html":{"ref":"第十章 序列化/74.谨慎的实现Serializable接口.html","tf":0.058823529411764705}}},"把":{"docs":{},"某":{"docs":{},"个":{"docs":{},"非":{"docs":{},"零":{"docs":{},"的":{"docs":{},"常":{"docs":{},"数":{"docs":{},"值":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"说":{"1":{"7":{"docs":{},"保":{"docs":{},"存":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"名":{"docs":{},"为":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"的":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{},"中":{"docs":{},"。":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}},"标":{"docs":{},"准":{"docs":{},"的":{"docs":{},"命":{"docs":{},"名":{"docs":{},"规":{"docs":{},"范":{"docs":{},"当":{"docs":{},"做":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"内":{"docs":{},"在":{"docs":{},"的":{"docs":{},"机":{"docs":{},"制":{"docs":{},"看":{"docs":{},"待":{"docs":{},"，":{"docs":{},"按":{"docs":{},"照":{"docs":{},"规":{"docs":{},"范":{"docs":{},"命":{"docs":{},"名":{"docs":{},"，":{"docs":{},"不":{"docs":{},"仅":{"docs":{},"会":{"docs":{},"让":{"docs":{},"代":{"docs":{},"码":{"docs":{},"的":{"docs":{},"可":{"docs":{},"读":{"docs":{},"性":{"docs":{},"更":{"docs":{},"强":{"docs":{},"，":{"docs":{},"而":{"docs":{},"且":{"docs":{},"会":{"docs":{},"减":{"docs":{},"少":{"docs":{},"一":{"docs":{},"些":{"docs":{},"不":{"docs":{},"必":{"docs":{},"要":{"docs":{},"的":{"docs":{},"错":{"docs":{},"误":{"docs":{},"。":{"docs":{"第七章 通用程序设计/56.遵守普遍接受的命名规则.html":{"ref":"第七章 通用程序设计/56.遵守普遍接受的命名规则.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"代":{"docs":{},"码":{"docs":{},"放":{"docs":{},"在":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"第八章 异常/57.只针对异常的情况才使用异常.html":{"ref":"第八章 异常/57.只针对异常的情况才使用异常.html","tf":0.043478260869565216}}}}}}}}}},"按":{"docs":{},"照":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"公":{"docs":{},"式":{"docs":{},"，":{"docs":{},"把":{"docs":{},"步":{"docs":{},"骤":{"2":{"docs":{},".":{"docs":{},"a":{"docs":{},"计":{"docs":{},"算":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"散":{"docs":{},"列":{"docs":{},"码":{"docs":{},"c":{"docs":{},"合":{"docs":{},"并":{"docs":{},"到":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"中":{"docs":{},"。":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}},"预":{"docs":{},"想":{"docs":{},"的":{"docs":{},"会":{"docs":{},"打":{"docs":{},"印":{"docs":{},"输":{"docs":{},"出":{"3":{"docs":{},"，":{"docs":{},"但":{"docs":{},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"打":{"docs":{},"印":{"docs":{},"输":{"docs":{},"出":{"6":{"docs":{},"。":{"docs":{},"这":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"，":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"内":{"docs":{},"部":{"docs":{},"实":{"docs":{},"现":{"docs":{},"调":{"docs":{},"用":{"docs":{},"了":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"总":{"docs":{},"共":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"就":{"docs":{},"是":{"3":{"docs":{},"+":{"3":{"docs":{},"=":{"6":{"docs":{},"。":{"docs":{},"这":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"就":{"docs":{},"是":{"docs":{},"父":{"docs":{},"类":{"docs":{},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"”":{"docs":{},"自":{"docs":{},"用":{"docs":{},"性":{"docs":{},"“":{"docs":{},"导":{"docs":{},"致":{"docs":{},"的":{"docs":{},"。":{"docs":{},"那":{"docs":{},"么":{"docs":{},"，":{"docs":{},"针":{"docs":{},"对":{"docs":{},"由":{"docs":{},"继":{"docs":{},"承":{"docs":{},"带":{"docs":{},"来":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"应":{"docs":{},"该":{"docs":{},"如":{"docs":{},"何":{"docs":{},"解":{"docs":{},"决":{"docs":{},"？":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}}}}},"示":{"docs":{},"例":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909},"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936},"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}},"代":{"docs":{},"码":{"docs":{},"为":{"docs":{},"：":{"docs":{"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.007874015748031496}}}}}},"：":{"docs":{},"当":{"docs":{},"方":{"docs":{},"法":{"docs":{},"需":{"docs":{},"要":{"1":{"docs":{},"个":{"docs":{},"或":{"docs":{},"者":{"docs":{},"多":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"时":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"使":{"docs":{},"用":{"docs":{},"可":{"docs":{},"变":{"docs":{},"参":{"docs":{},"数":{"docs":{},"就":{"docs":{},"会":{"docs":{},"变":{"docs":{},"得":{"docs":{},"不":{"docs":{},"优":{"docs":{},"雅":{"docs":{},"：":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}},"返":{"docs":{},"回":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"。":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909}}}}}}}}},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"数":{"docs":{},"组":{"docs":{},"或":{"docs":{},"者":{"docs":{},"集":{"docs":{},"合":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"没":{"docs":{},"理":{"docs":{},"由":{"docs":{},"返":{"docs":{},"回":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"，":{"docs":{},"而":{"docs":{},"应":{"docs":{},"该":{"docs":{},"返":{"docs":{},"回":{"docs":{},"一":{"docs":{},"个":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{},"零":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"或":{"docs":{},"者":{"docs":{},"集":{"docs":{},"合":{"docs":{},"。":{"docs":{"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":{"ref":"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html","tf":0.019230769230769232}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"与":{"docs":{},"被":{"docs":{},"调":{"docs":{},"对":{"docs":{},"象":{"docs":{},"同":{"docs":{},"值":{"docs":{},"的":{"docs":{},"基":{"docs":{},"本":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"通":{"docs":{},"常":{"docs":{},"被":{"docs":{},"称":{"docs":{},"为":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"；":{"docs":{"第七章 通用程序设计/56.遵守普遍接受的命名规则.html":{"ref":"第七章 通用程序设计/56.遵守普遍接受的命名规则.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"视":{"docs":{},"图":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"通":{"docs":{},"常":{"docs":{},"被":{"docs":{},"称":{"docs":{},"为":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"a":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"。":{"docs":{"第七章 通用程序设计/56.遵守普遍接受的命名规则.html":{"ref":"第七章 通用程序设计/56.遵守普遍接受的命名规则.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"骤":{"2":{"docs":{},".":{"docs":{},"a":{"docs":{},".":{"3":{"docs":{},")":{"docs":{},"，":{"docs":{},"为":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"类":{"docs":{},"型":{"docs":{},"值":{"docs":{},"计":{"docs":{},"算":{"docs":{},"散":{"docs":{},"列":{"docs":{},"值":{"docs":{},"。":{"docs":{"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"ref":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}},"docs":{}},"总":{"docs":{},"结":{"docs":{"第二章 对象通用的方法/10.覆盖toString.html":{"ref":"第二章 对象通用的方法/10.覆盖toString.html","tf":0.1},"第三章 类和接口/13.使类和成员的可访问性最小化.html":{"ref":"第三章 类和接口/13.使类和成员的可访问性最小化.html","tf":0.0625},"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713},"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082},"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576},"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547},"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.008},"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886}}},"之":{"docs":{},"，":{"docs":{},"在":{"docs":{},"设":{"docs":{},"计":{"docs":{},"类":{"docs":{},"和":{"docs":{},"成":{"docs":{},"员":{"docs":{},"时":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"尽":{"docs":{},"可":{"docs":{},"能":{"docs":{},"的":{"docs":{},"降":{"docs":{},"低":{"docs":{},"可":{"docs":{},"访":{"docs":{},"问":{"docs":{},"性":{"docs":{},"，":{"docs":{},"除":{"docs":{},"了":{"docs":{},"公":{"docs":{},"有":{"docs":{},"静":{"docs":{},"态":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"域":{"docs":{},"的":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"情":{"docs":{},"形":{"docs":{},"之":{"docs":{},"外":{"docs":{},"，":{"docs":{},"公":{"docs":{},"有":{"docs":{},"类":{"docs":{},"都":{"docs":{},"不":{"docs":{},"应":{"docs":{},"该":{"docs":{},"包":{"docs":{},"含":{"docs":{},"公":{"docs":{},"有":{"docs":{},"域":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"要":{"docs":{},"确":{"docs":{},"保":{"docs":{},"公":{"docs":{},"有":{"docs":{},"的":{"docs":{},"静":{"docs":{},"态":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"域":{"docs":{},"所":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"是":{"docs":{},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"的":{"docs":{},"。":{"docs":{"第三章 类和接口/13.使类和成员的可访问性最小化.html":{"ref":"第三章 类和接口/13.使类和成员的可访问性最小化.html","tf":0.0625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"大":{"docs":{},"多":{"docs":{},"数":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"重":{"docs":{},"复":{"docs":{},"造":{"docs":{},"轮":{"docs":{},"子":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"你":{"docs":{},"要":{"docs":{},"做":{"docs":{},"的":{"docs":{},"事":{"docs":{},"情":{"docs":{},"看":{"docs":{},"起":{"docs":{},"来":{"docs":{},"十":{"docs":{},"分":{"docs":{},"常":{"docs":{},"见":{"docs":{},"的":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"去":{"docs":{},"使":{"docs":{},"用":{"docs":{},"开":{"docs":{},"源":{"docs":{},"的":{"docs":{},"组":{"docs":{},"件":{"docs":{},"，":{"docs":{},"通":{"docs":{},"常":{"docs":{},"这":{"docs":{},"些":{"docs":{},"由":{"docs":{},"社":{"docs":{},"区":{"docs":{},"维":{"docs":{},"护":{"docs":{},"的":{"docs":{},"组":{"docs":{},"件":{"docs":{},"在":{"docs":{},"性":{"docs":{},"能":{"docs":{},"上":{"docs":{},"是":{"docs":{},"有":{"docs":{},"保":{"docs":{},"障":{"docs":{},"的":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"会":{"docs":{},"持":{"docs":{},"续":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"更":{"docs":{},"新":{"docs":{},"。":{"docs":{"第七章 通用程序设计/47.多使用类库.html":{"ref":"第七章 通用程序设计/47.多使用类库.html","tf":0.1111111111111111}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"原":{"docs":{},"生":{"docs":{},"态":{"docs":{},"类":{"docs":{},"型":{"docs":{},"会":{"docs":{},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"导":{"docs":{},"致":{"docs":{},"异":{"docs":{},"常":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"不":{"docs":{},"要":{"docs":{},"再":{"docs":{},"新":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"使":{"docs":{},"用":{"docs":{},"。":{"docs":{},"但":{"docs":{},"就":{"docs":{},"有":{"docs":{},"人":{"docs":{},"问":{"docs":{},"既":{"docs":{},"然":{"docs":{},"这":{"docs":{},"么":{"docs":{},"不":{"docs":{},"推":{"docs":{},"荐":{"docs":{},"使":{"docs":{},"用":{"docs":{},"，":{"docs":{},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"还":{"docs":{},"要":{"docs":{},"存":{"docs":{},"在":{"docs":{},"原":{"docs":{},"生":{"docs":{},"态":{"docs":{},"类":{"docs":{},"型":{"docs":{},"呢":{"docs":{},"？":{"docs":{},"原":{"docs":{},"生":{"docs":{},"态":{"docs":{},"类":{"docs":{},"型":{"docs":{},"只":{"docs":{},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"与":{"docs":{},"引":{"docs":{},"入":{"docs":{},"泛":{"docs":{},"型":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"遗":{"docs":{},"留":{"docs":{},"代":{"docs":{},"码":{"docs":{},"进":{"docs":{},"行":{"docs":{},"兼":{"docs":{},"容":{"docs":{},"和":{"docs":{},"互":{"docs":{},"换":{"docs":{},"而":{"docs":{},"提":{"docs":{},"供":{"docs":{},"的":{"docs":{},"；":{"docs":{"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"非":{"docs":{},"受":{"docs":{},"检":{"docs":{},"警":{"docs":{},"告":{"docs":{},"很":{"docs":{},"重":{"docs":{},"要":{"docs":{},"，":{"docs":{},"不":{"docs":{},"要":{"docs":{},"忽":{"docs":{},"略":{"docs":{},"它":{"docs":{},"们":{"docs":{},"。":{"docs":{},"每":{"docs":{},"一":{"docs":{},"条":{"docs":{},"警":{"docs":{},"告":{"docs":{},"都":{"docs":{},"表":{"docs":{},"示":{"docs":{},"可":{"docs":{},"能":{"docs":{},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"异":{"docs":{},"常":{"docs":{},"。":{"docs":{},"要":{"docs":{},"尽":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"努":{"docs":{},"力":{"docs":{},"去":{"docs":{},"消":{"docs":{},"除":{"docs":{},"这":{"docs":{},"些":{"docs":{},"警":{"docs":{},"告":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"无":{"docs":{},"法":{"docs":{},"消":{"docs":{},"除":{"docs":{},"但":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"证":{"docs":{},"明":{"docs":{},"引":{"docs":{},"起":{"docs":{},"警":{"docs":{},"告":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"是":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"尽":{"docs":{},"可":{"docs":{},"能":{"docs":{},"小":{"docs":{},"的":{"docs":{},"范":{"docs":{},"围":{"docs":{},"中":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"＠":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"\"":{"docs":{},")":{"docs":{},"注":{"docs":{},"解":{"docs":{},"来":{"docs":{},"禁":{"docs":{},"止":{"docs":{},"警":{"docs":{},"告":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"要":{"docs":{},"把":{"docs":{},"禁":{"docs":{},"止":{"docs":{},"的":{"docs":{},"原":{"docs":{},"因":{"docs":{},"记":{"docs":{},"录":{"docs":{},"下":{"docs":{},"来":{"docs":{},"。":{"docs":{"第四章 泛型/24.消除非受检警告.html":{"ref":"第四章 泛型/24.消除非受检警告.html","tf":0.07142857142857142}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{},"其":{"docs":{},"他":{"docs":{},"规":{"docs":{},"则":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"尽":{"docs":{},"管":{"docs":{},"可":{"docs":{},"变":{"docs":{},"参":{"docs":{},"数":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"很":{"docs":{},"方":{"docs":{},"便":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"它":{"docs":{},"们":{"docs":{},"不":{"docs":{},"应":{"docs":{},"该":{"docs":{},"被":{"docs":{},"过":{"docs":{},"度":{"docs":{},"滥":{"docs":{},"用":{"docs":{},"。":{"docs":{},"除":{"docs":{},"非":{"docs":{},"有":{"docs":{},"必":{"docs":{},"要":{"docs":{},"，":{"docs":{},"尽":{"docs":{},"量":{"docs":{},"不":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"于":{"docs":{},"任":{"docs":{},"何":{"docs":{},"需":{"docs":{},"要":{"docs":{},"精":{"docs":{},"确":{"docs":{},"答":{"docs":{},"案":{"docs":{},"的":{"docs":{},"计":{"docs":{},"算":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"请":{"docs":{},"不":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{},"或":{"docs":{},"者":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"你":{"docs":{},"想":{"docs":{},"让":{"docs":{},"系":{"docs":{},"统":{"docs":{},"来":{"docs":{},"记":{"docs":{},"录":{"docs":{},"十":{"docs":{},"进":{"docs":{},"制":{"docs":{},"小":{"docs":{},"数":{"docs":{},"点":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"不":{"docs":{},"介":{"docs":{},"意":{"docs":{},"因":{"docs":{},"为":{"docs":{},"不":{"docs":{},"使":{"docs":{},"用":{"docs":{},"基":{"docs":{},"本":{"docs":{},"类":{"docs":{},"型":{"docs":{},"带":{"docs":{},"来":{"docs":{},"的":{"docs":{},"不":{"docs":{},"便":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"b":{"docs":{},"i":{"docs":{},"g":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"。":{"docs":{"第七章 通用程序设计/48.需要精确答案，请避免使用float和double.html":{"ref":"第七章 通用程序设计/48.需要精确答案，请避免使用float和double.html","tf":0.07142857142857142}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"更":{"docs":{},"加":{"docs":{},"合":{"docs":{},"适":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"可":{"docs":{},"以":{"docs":{},"编":{"docs":{},"写":{"docs":{},"更":{"docs":{},"加":{"docs":{},"适":{"docs":{},"当":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"就":{"docs":{},"应":{"docs":{},"该":{"docs":{},"避":{"docs":{},"免":{"docs":{},"使":{"docs":{},"用":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"来":{"docs":{},"表":{"docs":{},"示":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"使":{"docs":{},"用":{"docs":{},"不":{"docs":{},"当":{"docs":{},"，":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"会":{"docs":{},"比":{"docs":{},"其":{"docs":{},"他":{"docs":{},"类":{"docs":{},"型":{"docs":{},"更":{"docs":{},"加":{"docs":{},"笨":{"docs":{},"拙":{"docs":{},"、":{"docs":{},"速":{"docs":{},"度":{"docs":{},"更":{"docs":{},"慢":{"docs":{},"。":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"经":{"docs":{},"常":{"docs":{},"被":{"docs":{},"错":{"docs":{},"误":{"docs":{},"的":{"docs":{},"用":{"docs":{},"来":{"docs":{},"替":{"docs":{},"代":{"docs":{},"基":{"docs":{},"本":{"docs":{},"类":{"docs":{},"型":{"docs":{},"、":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"类":{"docs":{},"型":{"docs":{},"。":{"docs":{"第七章 通用程序设计/50.尽量避免使用字符串.html":{"ref":"第七章 通用程序设计/50.尽量避免使用字符串.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"千":{"docs":{},"万":{"docs":{},"不":{"docs":{},"要":{"docs":{},"将":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"就":{"docs":{},"等":{"docs":{},"同":{"docs":{},"于":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"接":{"docs":{},"口":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"要":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"着":{"docs":{},"重":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"的":{"docs":{},"应":{"docs":{},"用":{"docs":{},"场":{"docs":{},"景":{"docs":{},"和":{"docs":{},"上":{"docs":{},"面":{"docs":{},"所":{"docs":{},"述":{"docs":{},"的":{"docs":{},"这":{"docs":{},"些":{"docs":{},"注":{"docs":{},"意":{"docs":{},"事":{"docs":{},"项":{"docs":{},"。":{"docs":{"第十章 序列化/74.谨慎的实现Serializable接口.html":{"ref":"第十章 序列化/74.谨慎的实现Serializable接口.html","tf":0.058823529411764705}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"而":{"docs":{},"言":{"docs":{},"之":{"docs":{},"，":{"docs":{},"不":{"docs":{},"要":{"docs":{},"费":{"docs":{},"力":{"docs":{},"去":{"docs":{},"编":{"docs":{},"写":{"docs":{},"快":{"docs":{},"速":{"docs":{},"的":{"docs":{},"程":{"docs":{},"序":{"docs":{},"—":{"docs":{},"—":{"docs":{},"应":{"docs":{},"该":{"docs":{},"努":{"docs":{},"力":{"docs":{},"编":{"docs":{},"写":{"docs":{},"好":{"docs":{},"的":{"docs":{},"程":{"docs":{},"序":{"docs":{},"，":{"docs":{},"速":{"docs":{},"度":{"docs":{},"自":{"docs":{},"然":{"docs":{},"会":{"docs":{},"随":{"docs":{},"之":{"docs":{},"而":{"docs":{},"来":{"docs":{},"。":{"docs":{},"在":{"docs":{},"设":{"docs":{},"计":{"docs":{},"系":{"docs":{},"统":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"特":{"docs":{},"别":{"docs":{},"是":{"docs":{},"在":{"docs":{},"设":{"docs":{},"计":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"、":{"docs":{},"线":{"docs":{},"路":{"docs":{},"层":{"docs":{},"协":{"docs":{},"议":{"docs":{},"和":{"docs":{},"永":{"docs":{},"久":{"docs":{},"数":{"docs":{},"据":{"docs":{},"格":{"docs":{},"式":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"一":{"docs":{},"定":{"docs":{},"要":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"性":{"docs":{},"能":{"docs":{},"的":{"docs":{},"因":{"docs":{},"素":{"docs":{},"。":{"docs":{},"当":{"docs":{},"构":{"docs":{},"建":{"docs":{},"完":{"docs":{},"系":{"docs":{},"统":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"要":{"docs":{},"测":{"docs":{},"量":{"docs":{},"它":{"docs":{},"的":{"docs":{},"性":{"docs":{},"能":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"它":{"docs":{},"足":{"docs":{},"够":{"docs":{},"快":{"docs":{},"，":{"docs":{},"你":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"就":{"docs":{},"完":{"docs":{},"成":{"docs":{},"了":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"够":{"docs":{},"快":{"docs":{},"，":{"docs":{},"则":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"性":{"docs":{},"能":{"docs":{},"剖":{"docs":{},"析":{"docs":{},"器":{"docs":{},"的":{"docs":{},"帮":{"docs":{},"助":{"docs":{},"下":{"docs":{},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"根":{"docs":{},"源":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"设":{"docs":{},"法":{"docs":{},"优":{"docs":{},"化":{"docs":{},"系":{"docs":{},"统":{"docs":{},"中":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"部":{"docs":{},"分":{"docs":{},"。":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"步":{"docs":{},"骤":{"docs":{},"是":{"docs":{},"检":{"docs":{},"查":{"docs":{},"所":{"docs":{},"选":{"docs":{},"择":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"：":{"docs":{},"再":{"docs":{},"多":{"docs":{},"的":{"docs":{},"底":{"docs":{},"层":{"docs":{},"优":{"docs":{},"化":{"docs":{},"也":{"docs":{},"无":{"docs":{},"法":{"docs":{},"弥":{"docs":{},"补":{"docs":{},"算":{"docs":{},"法":{"docs":{},"的":{"docs":{},"选":{"docs":{},"择":{"docs":{},"不":{"docs":{},"当":{"docs":{},"。":{"docs":{},"必":{"docs":{},"要":{"docs":{},"时":{"docs":{},"重":{"docs":{},"复":{"docs":{},"这":{"docs":{},"个":{"docs":{},"过":{"docs":{},"程":{"docs":{},"，":{"docs":{},"在":{"docs":{},"每":{"docs":{},"次":{"docs":{},"改":{"docs":{},"变":{"docs":{},"之":{"docs":{},"后":{"docs":{},"都":{"docs":{},"要":{"docs":{},"测":{"docs":{},"量":{"docs":{},"性":{"docs":{},"能":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"满":{"docs":{},"意":{"docs":{},"为":{"docs":{},"止":{"docs":{},"。":{"docs":{"第七章 通用程序设计/55.谨慎的进行优化.html":{"ref":"第七章 通用程序设计/55.谨慎的进行优化.html","tf":0.038461538461538464}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"每":{"docs":{},"当":{"docs":{},"你":{"docs":{},"编":{"docs":{},"写":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"都":{"docs":{},"要":{"docs":{},"这":{"docs":{},"样":{"docs":{},"想":{"docs":{},"：":{"docs":{},"你":{"docs":{},"正":{"docs":{},"在":{"docs":{},"编":{"docs":{},"写":{"docs":{},"一":{"docs":{},"个":{"docs":{},"公":{"docs":{},"有":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"，":{"docs":{},"无":{"docs":{},"论":{"docs":{},"给":{"docs":{},"它":{"docs":{},"传":{"docs":{},"递":{"docs":{},"什":{"docs":{},"么":{"docs":{},"样":{"docs":{},"的":{"docs":{},"字":{"docs":{},"节":{"docs":{},"流":{"docs":{},"，":{"docs":{},"它":{"docs":{},"都":{"docs":{},"必":{"docs":{},"须":{"docs":{},"产":{"docs":{},"生":{"docs":{},"一":{"docs":{},"个":{"docs":{},"有":{"docs":{},"效":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"。":{"docs":{},"下":{"docs":{},"面":{"docs":{},"这":{"docs":{},"些":{"docs":{},"经":{"docs":{},"验":{"docs":{},"，":{"docs":{},"有":{"docs":{},"助":{"docs":{},"于":{"docs":{},"编":{"docs":{},"写":{"docs":{},"出":{"docs":{},"更":{"docs":{},"加":{"docs":{},"健":{"docs":{},"壮":{"docs":{},"的":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"方":{"docs":{},"法":{"docs":{},"：":{"docs":{"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"!":{"docs":{},"=":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.015873015873015872},"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":{"ref":"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html","tf":0.019230769230769232}}}},">":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.023809523809523808},"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.015748031496062992},"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901}}},"y":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"z":{"docs":{},")":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}}}}}}}}}}}}}}},")":{"docs":{"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html":{"ref":"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html","tf":0.02702702702702703},"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.016149068322981366}},")":{"docs":{},")":{"docs":{},";":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}},";":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0037267080745341614}}}},";":{"docs":{"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html":{"ref":"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html","tf":0.06756756756756757},"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.01987577639751553}}},",":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}},"将":{"docs":{},"对":{"docs":{},"象":{"docs":{},"与":{"docs":{},"指":{"docs":{},"定":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"进":{"docs":{},"行":{"docs":{},"比":{"docs":{},"较":{"docs":{},"。":{"docs":{},"当":{"docs":{},"该":{"docs":{},"对":{"docs":{},"象":{"docs":{},"小":{"docs":{},"于":{"docs":{},"、":{"docs":{},"等":{"docs":{},"于":{"docs":{},"或":{"docs":{},"者":{"docs":{},"大":{"docs":{},"于":{"docs":{},"指":{"docs":{},"定":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"分":{"docs":{},"别":{"docs":{},"返":{"docs":{},"回":{"docs":{},"一":{"docs":{},"个":{"docs":{},"负":{"docs":{},"整":{"docs":{},"数":{"docs":{},"，":{"docs":{},"零":{"docs":{},"或":{"docs":{},"者":{"docs":{},"正":{"docs":{},"整":{"docs":{},"数":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"由":{"docs":{},"于":{"docs":{},"指":{"docs":{},"定":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"而":{"docs":{},"无":{"docs":{},"法":{"docs":{},"与":{"docs":{},"该":{"docs":{},"对":{"docs":{},"象":{"docs":{},"进":{"docs":{},"行":{"docs":{},"比":{"docs":{},"较":{"docs":{},"，":{"docs":{},"则":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"。":{"docs":{},"在":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"说":{"docs":{},"明":{"docs":{},"中":{"docs":{},"，":{"docs":{},"符":{"docs":{},"号":{"docs":{},"s":{"docs":{},"g":{"docs":{},"n":{"docs":{},"(":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},")":{"docs":{},"表":{"docs":{},"示":{"docs":{},"数":{"docs":{},"学":{"docs":{},"中":{"docs":{},"的":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"它":{"docs":{},"根":{"docs":{},"据":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"(":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},"的":{"docs":{},"值":{"docs":{},"为":{"docs":{},"负":{"docs":{},"值":{"docs":{},"、":{"docs":{},"零":{"docs":{},"和":{"docs":{},"正":{"docs":{},"值":{"docs":{},"，":{"docs":{},"分":{"docs":{},"别":{"docs":{},"返":{"docs":{},"回":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"上":{"docs":{},"面":{"docs":{},"的":{"docs":{},"标":{"docs":{},"签":{"docs":{},"类":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"转":{"docs":{},"换":{"docs":{},"成":{"docs":{},"类":{"docs":{},"层":{"docs":{},"次":{"docs":{},"结":{"docs":{},"构":{"docs":{},"：":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}},"例":{"docs":{},"由":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"改":{"docs":{},"写":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}}}}}}}}}}}},"进":{"docs":{},"行":{"docs":{},"修":{"docs":{},"改":{"docs":{},"：":{"docs":{"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":{"ref":"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html","tf":0.019230769230769232}}}}}}}}},"局":{"docs":{},"部":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"作":{"docs":{},"用":{"docs":{},"域":{"docs":{},"最":{"docs":{},"小":{"docs":{},"化":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"增":{"docs":{},"强":{"docs":{},"代":{"docs":{},"码":{"docs":{},"的":{"docs":{},"可":{"docs":{},"读":{"docs":{},"性":{"docs":{},"和":{"docs":{},"可":{"docs":{},"维":{"docs":{},"护":{"docs":{},"性":{"docs":{},"，":{"docs":{},"并":{"docs":{},"降":{"docs":{},"低":{"docs":{},"出":{"docs":{},"错":{"docs":{},"的":{"docs":{},"可":{"docs":{},"能":{"docs":{},"性":{"docs":{},"。":{"docs":{},"那":{"docs":{},"么":{"docs":{},"，":{"docs":{},"常":{"docs":{},"用":{"docs":{},"的":{"docs":{},"将":{"docs":{},"局":{"docs":{},"部":{"docs":{},"变":{"docs":{},"量":{"docs":{},"作":{"docs":{},"用":{"docs":{},"域":{"docs":{},"最":{"docs":{},"小":{"docs":{},"化":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"有":{"docs":{},"哪":{"docs":{},"几":{"docs":{},"个":{"docs":{},"方":{"docs":{},"面":{"docs":{},"？":{"docs":{"第七章 通用程序设计/45.将局部变量的作用域最小化.html":{"ref":"第七章 通用程序设计/45.将局部变量的作用域最小化.html","tf":0.125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"强":{"docs":{},"烈":{"docs":{},"建":{"docs":{},"议":{"docs":{},"(":{"docs":{},"x":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"y":{"docs":{},")":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}}}}}}}}}}}}}}}}}}}}},"必":{"docs":{},"须":{"docs":{},"确":{"docs":{},"保":{"docs":{},"x":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"y":{"docs":{},")":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}}}}}}}}}}}}}}}},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"x":{"docs":{},"和":{"docs":{},"y":{"docs":{},"都":{"docs":{},"满":{"docs":{},"足":{"docs":{},"s":{"docs":{},"g":{"docs":{},"n":{"docs":{},"(":{"docs":{},"x":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"y":{"docs":{},")":{"docs":{},")":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"个":{"docs":{},"比":{"docs":{},"较":{"docs":{},"关":{"docs":{},"系":{"docs":{},"是":{"docs":{},"可":{"docs":{},"传":{"docs":{},"递":{"docs":{},"的":{"docs":{},"：":{"docs":{},"(":{"docs":{},"x":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"y":{"docs":{},")":{"docs":{"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"ref":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","tf":0.007936507936507936}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"包":{"docs":{},"级":{"docs":{},"访":{"docs":{},"问":{"docs":{},"；":{"3":{"docs":{},".":{"docs":{"第三章 类和接口/13.使类和成员的可访问性最小化.html":{"ref":"第三章 类和接口/13.使类和成员的可访问性最小化.html","tf":0.0625}}}},"docs":{}}}}},"名":{"docs":{},"称":{"docs":{},"的":{"docs":{},"其":{"docs":{},"余":{"docs":{},"部":{"docs":{},"分":{"docs":{},"应":{"docs":{},"该":{"docs":{},"包":{"docs":{},"括":{"docs":{},"一":{"docs":{},"个":{"docs":{},"或":{"docs":{},"者":{"docs":{},"多":{"docs":{},"个":{"docs":{},"描":{"docs":{},"述":{"docs":{},"该":{"docs":{},"包":{"docs":{},"的":{"docs":{},"组":{"docs":{},"成":{"docs":{},"部":{"docs":{},"分":{"docs":{},"。":{"docs":{},"这":{"docs":{},"些":{"docs":{},"组":{"docs":{},"成":{"docs":{},"部":{"docs":{},"分":{"docs":{"第七章 通用程序设计/56.遵守普遍接受的命名规则.html":{"ref":"第七章 通用程序设计/56.遵守普遍接受的命名规则.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"命":{"docs":{},"名":{"docs":{},"：":{"docs":{},"包":{"docs":{},"的":{"docs":{},"名":{"docs":{},"称":{"docs":{},"应":{"docs":{},"该":{"docs":{},"是":{"docs":{},"层":{"docs":{},"次":{"docs":{},"状":{"docs":{},"的":{"docs":{},"，":{"docs":{},"用":{"docs":{},"句":{"docs":{},"号":{"docs":{},"分":{"docs":{},"隔":{"docs":{},"每":{"docs":{},"部":{"docs":{},"分":{"docs":{},"。":{"docs":{},"每":{"docs":{},"个":{"docs":{},"部":{"docs":{},"分":{"docs":{},"都":{"docs":{},"包":{"docs":{},"括":{"docs":{},"小":{"docs":{},"写":{"docs":{},"字":{"docs":{},"母":{"docs":{},"和":{"docs":{},"数":{"docs":{},"字":{"docs":{},"（":{"docs":{},"很":{"docs":{},"少":{"docs":{},"使":{"docs":{},"用":{"docs":{},"数":{"docs":{},"字":{"docs":{},"）":{"docs":{},"。":{"docs":{},"任":{"docs":{},"何":{"docs":{},"将":{"docs":{},"在":{"docs":{},"你":{"docs":{},"的":{"docs":{},"组":{"docs":{},"织":{"docs":{},"之":{"docs":{},"外":{"docs":{},"使":{"docs":{},"用":{"docs":{},"包":{"docs":{},"，":{"docs":{},"其":{"docs":{},"名":{"docs":{},"称":{"docs":{},"都":{"docs":{},"应":{"docs":{},"该":{"docs":{},"以":{"docs":{},"你":{"docs":{},"的":{"docs":{},"组":{"docs":{},"织":{"docs":{},"的":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"域":{"docs":{},"名":{"docs":{},"开":{"docs":{},"头":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"顶":{"docs":{},"级":{"docs":{},"域":{"docs":{},"名":{"docs":{},"放":{"docs":{},"在":{"docs":{},"前":{"docs":{},"面":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"：":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},".":{"docs":{},"c":{"docs":{},"m":{"docs":{},"u":{"docs":{"第七章 通用程序设计/56.遵守普遍接受的命名规则.html":{"ref":"第七章 通用程序设计/56.遵守普遍接受的命名规则.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"尽":{"docs":{},"可":{"docs":{},"能":{"docs":{},"使":{"docs":{},"每":{"docs":{},"个":{"docs":{},"类":{"docs":{},"或":{"docs":{},"者":{"docs":{},"成":{"docs":{},"员":{"docs":{},"不":{"docs":{},"被":{"docs":{},"外":{"docs":{},"界":{"docs":{},"访":{"docs":{},"问":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"使":{"docs":{},"用":{"docs":{},"与":{"docs":{},"你":{"docs":{},"正":{"docs":{},"在":{"docs":{},"编":{"docs":{},"写":{"docs":{},"的":{"docs":{},"软":{"docs":{},"件":{"docs":{},"的":{"docs":{},"对":{"docs":{},"应":{"docs":{},"功":{"docs":{},"能":{"docs":{},"相":{"docs":{},"一":{"docs":{},"致":{"docs":{},"的":{"docs":{},"、":{"docs":{},"尽":{"docs":{},"可":{"docs":{},"能":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"访":{"docs":{},"问":{"docs":{},"级":{"docs":{},"别":{"docs":{},"；":{"docs":{},"对":{"docs":{},"于":{"docs":{},"成":{"docs":{},"员":{"docs":{},"（":{"docs":{},"域":{"docs":{},"、":{"docs":{},"方":{"docs":{},"法":{"docs":{},"、":{"docs":{},"嵌":{"docs":{},"套":{"docs":{},"类":{"docs":{},"或":{"docs":{},"者":{"docs":{},"嵌":{"docs":{},"套":{"docs":{},"接":{"docs":{},"口":{"docs":{},"）":{"docs":{},"有":{"docs":{},"四":{"docs":{},"种":{"docs":{},"访":{"docs":{},"问":{"docs":{},"级":{"docs":{},"别":{"docs":{},"：":{"1":{"docs":{},".":{"docs":{"第三章 类和接口/13.使类和成员的可访问性最小化.html":{"ref":"第三章 类和接口/13.使类和成员的可访问性最小化.html","tf":0.0625}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"管":{"docs":{},"异":{"docs":{},"常":{"docs":{},"转":{"docs":{},"译":{"docs":{},"与":{"docs":{},"直":{"docs":{},"接":{"docs":{},"在":{"docs":{},"高":{"docs":{},"层":{"docs":{},"将":{"docs":{},"底":{"docs":{},"层":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{},"继":{"docs":{},"续":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"相":{"docs":{},"比":{"docs":{},"有":{"docs":{},"所":{"docs":{},"改":{"docs":{},"进":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"它":{"docs":{},"也":{"docs":{},"不":{"docs":{},"能":{"docs":{},"被":{"docs":{},"滥":{"docs":{},"用":{"docs":{},"。":{"docs":{},"如":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"，":{"docs":{},"处":{"docs":{},"理":{"docs":{},"来":{"docs":{},"自":{"docs":{},"低":{"docs":{},"层":{"docs":{},"异":{"docs":{},"常":{"docs":{},"的":{"docs":{},"最":{"docs":{},"好":{"docs":{},"做":{"docs":{},"法":{"docs":{},"是":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"极":{"docs":{},"力":{"docs":{},"避":{"docs":{},"免":{"docs":{},"底":{"docs":{},"层":{"docs":{},"异":{"docs":{},"常":{"docs":{},"的":{"docs":{},"发":{"docs":{},"生":{"docs":{},"。":{"docs":{},"有":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"给":{"docs":{},"低":{"docs":{},"层":{"docs":{},"传":{"docs":{},"递":{"docs":{},"参":{"docs":{},"数":{"docs":{},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"检":{"docs":{},"査":{"docs":{},"更":{"docs":{},"高":{"docs":{},"层":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"有":{"docs":{},"效":{"docs":{},"性":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"避":{"docs":{},"免":{"docs":{},"低":{"docs":{},"层":{"docs":{},"方":{"docs":{},"法":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"异":{"docs":{},"常":{"docs":{},"；":{"docs":{"第八章 异常/61.抛出与抽象相对应的异常.html":{"ref":"第八章 异常/61.抛出与抽象相对应的异常.html","tf":0.020833333333333332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"由":{"docs":{},"于":{"docs":{},"+":{"docs":{},"+":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"不":{"docs":{},"是":{"docs":{},"原":{"docs":{},"子":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"在":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"会":{"docs":{},"出":{"docs":{},"错":{"docs":{},"。":{"docs":{},"+":{"docs":{},"+":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"执":{"docs":{},"行":{"docs":{},"两":{"docs":{},"项":{"docs":{},"操":{"docs":{},"作":{"docs":{},"：":{"1":{"docs":{},"、":{"docs":{},"读":{"docs":{},"取":{"docs":{},"值":{"docs":{},"；":{"2":{"docs":{},"、":{"docs":{},"写":{"docs":{},"回":{"docs":{},"新":{"docs":{},"值":{"docs":{},"（":{"docs":{},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"原":{"docs":{},"值":{"docs":{},"+":{"1":{"docs":{},"）":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"在":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"读":{"docs":{},"取":{"docs":{},"旧":{"docs":{},"值":{"docs":{},"和":{"docs":{},"写":{"docs":{},"会":{"docs":{},"新":{"docs":{},"值":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"读":{"docs":{},"取":{"docs":{},"了":{"docs":{},"这":{"docs":{},"个":{"docs":{},"域":{"docs":{},"，":{"docs":{},"就":{"docs":{},"会":{"docs":{},"产":{"docs":{},"生":{"docs":{},"错":{"docs":{},"误":{"docs":{},"，":{"docs":{},"他":{"docs":{},"们":{"docs":{},"会":{"docs":{},"得":{"docs":{},"到":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"时":{"docs":{},"候":{"docs":{},"就":{"docs":{},"需":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"来":{"docs":{},"使":{"docs":{},"得":{"docs":{},"线":{"docs":{},"程":{"docs":{},"间":{"docs":{},"互":{"docs":{},"斥":{"docs":{},"访":{"docs":{},"问":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"保":{"docs":{},"证":{"docs":{},"原":{"docs":{},"子":{"docs":{},"性":{"docs":{},"。":{"docs":{"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"要":{"docs":{},"区":{"docs":{},"分":{"docs":{},"设":{"docs":{},"计":{"docs":{},"良":{"docs":{},"好":{"docs":{},"的":{"docs":{},"模":{"docs":{},"块":{"docs":{},"和":{"docs":{},"设":{"docs":{},"计":{"docs":{},"不":{"docs":{},"好":{"docs":{},"的":{"docs":{},"模":{"docs":{},"块":{"docs":{},"，":{"docs":{},"最":{"docs":{},"重":{"docs":{},"要":{"docs":{},"的":{"docs":{},"因":{"docs":{},"素":{"docs":{},"在":{"docs":{},"于":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"模":{"docs":{},"块":{"docs":{},"对":{"docs":{},"于":{"docs":{},"外":{"docs":{},"部":{"docs":{},"其":{"docs":{},"他":{"docs":{},"模":{"docs":{},"块":{"docs":{},"而":{"docs":{},"言":{"docs":{},"，":{"docs":{},"是":{"docs":{},"否":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"其":{"docs":{},"内":{"docs":{},"部":{"docs":{},"数":{"docs":{},"据":{"docs":{},"和":{"docs":{},"其":{"docs":{},"他":{"docs":{},"细":{"docs":{},"节":{"docs":{},"。":{"docs":{},"设":{"docs":{},"计":{"docs":{},"良":{"docs":{},"好":{"docs":{},"的":{"docs":{},"模":{"docs":{},"块":{"docs":{},"会":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"细":{"docs":{},"节":{"docs":{},"，":{"docs":{},"把":{"docs":{},"它":{"docs":{},"的":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"于":{"docs":{},"它":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"清":{"docs":{},"晰":{"docs":{},"的":{"docs":{},"隔":{"docs":{},"离":{"docs":{},"起":{"docs":{},"来":{"docs":{},"，":{"docs":{},"模":{"docs":{},"块":{"docs":{},"之":{"docs":{},"间":{"docs":{},"只":{"docs":{},"通":{"docs":{},"过":{"docs":{},"它":{"docs":{},"们":{"docs":{},"的":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"进":{"docs":{},"行":{"docs":{},"通":{"docs":{},"信":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"，":{"docs":{},"在":{"docs":{},"设":{"docs":{},"计":{"docs":{},"类":{"docs":{},"和":{"docs":{},"成":{"docs":{},"员":{"docs":{},"时":{"docs":{},"有":{"docs":{},"怎":{"docs":{},"样":{"docs":{},"的":{"docs":{},"设":{"docs":{},"计":{"docs":{},"原":{"docs":{},"则":{"docs":{},"？":{"docs":{"第三章 类和接口/13.使类和成员的可访问性最小化.html":{"ref":"第三章 类和接口/13.使类和成员的可访问性最小化.html","tf":0.0625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"泛":{"docs":{},"型":{"docs":{},"，":{"docs":{},"但":{"docs":{},"不":{"docs":{},"确":{"docs":{},"定":{"docs":{},"或":{"docs":{},"者":{"docs":{},"不":{"docs":{},"关":{"docs":{},"心":{"docs":{},"实":{"docs":{},"际":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"问":{"docs":{},"号":{"docs":{},"替":{"docs":{},"代":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"泛":{"docs":{},"型":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"为":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"编":{"docs":{},"写":{"docs":{},"文":{"docs":{},"档":{"docs":{},"，":{"docs":{},"文":{"docs":{},"档":{"docs":{},"注":{"docs":{},"释":{"docs":{},"是":{"docs":{},"最":{"docs":{},"好":{"docs":{},"、":{"docs":{},"最":{"docs":{},"有":{"docs":{},"效":{"docs":{},"的":{"docs":{},"途":{"docs":{},"径":{"docs":{},"。":{"docs":{},"对":{"docs":{},"于":{"docs":{},"所":{"docs":{},"有":{"docs":{},"可":{"docs":{},"导":{"docs":{},"出":{"docs":{},"的":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"元":{"docs":{},"素":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"文":{"docs":{},"档":{"docs":{},"注":{"docs":{},"释":{"docs":{},"应":{"docs":{},"该":{"docs":{},"被":{"docs":{},"看":{"docs":{},"作":{"docs":{},"是":{"docs":{},"强":{"docs":{},"制":{"docs":{},"性":{"docs":{},"的":{"docs":{},"。":{"docs":{},"要":{"docs":{},"采":{"docs":{},"用":{"docs":{},"一":{"docs":{},"致":{"docs":{},"的":{"docs":{},"风":{"docs":{},"格":{"docs":{},"来":{"docs":{},"遵":{"docs":{},"循":{"docs":{},"标":{"docs":{},"准":{"docs":{},"的":{"docs":{},"约":{"docs":{},"定":{"docs":{},"。":{"docs":{},"在":{"docs":{},"文":{"docs":{},"档":{"docs":{},"注":{"docs":{},"释":{"docs":{},"内":{"docs":{},"部":{"docs":{},"出":{"docs":{},"现":{"docs":{},"任":{"docs":{},"何":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{},"标":{"docs":{},"签":{"docs":{},"都":{"docs":{},"是":{"docs":{},"允":{"docs":{},"许":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{},"字":{"docs":{},"符":{"docs":{},"必":{"docs":{},"须":{"docs":{},"要":{"docs":{},"经":{"docs":{},"过":{"docs":{},"转":{"docs":{},"义":{"docs":{},"。":{"docs":{"第六章 方法/44.API需要编写文档注释.html":{"ref":"第六章 方法/44.API需要编写文档注释.html","tf":0.03333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"你":{"docs":{},"编":{"docs":{},"写":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"所":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"异":{"docs":{},"常":{"docs":{},"建":{"docs":{},"立":{"docs":{},"文":{"docs":{},"档":{"docs":{},"，":{"docs":{},"对":{"docs":{},"受":{"docs":{},"检":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{},"和":{"docs":{},"未":{"docs":{},"受":{"docs":{},"检":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{},"，":{"docs":{},"就":{"docs":{},"像":{"docs":{},"对":{"docs":{},"于":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"和":{"docs":{},"具":{"docs":{},"体":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"都":{"docs":{},"一":{"docs":{},"样":{"docs":{},"。":{"docs":{},"要":{"docs":{},"为":{"docs":{},"每":{"docs":{},"个":{"docs":{},"受":{"docs":{},"检":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{},"提":{"docs":{},"供":{"docs":{},"单":{"docs":{},"独":{"docs":{},"的":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},"字":{"docs":{},"句":{"docs":{},"，":{"docs":{},"不":{"docs":{},"要":{"docs":{},"为":{"docs":{},"未":{"docs":{},"受":{"docs":{},"检":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{},"提":{"docs":{},"供":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},"语":{"docs":{},"句":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"没":{"docs":{},"有":{"docs":{},"为":{"docs":{},"可":{"docs":{},"以":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{},"建":{"docs":{},"立":{"docs":{},"文":{"docs":{},"档":{"docs":{},",":{"docs":{},"那":{"docs":{},"么":{"docs":{},"其":{"docs":{},"他":{"docs":{},"开":{"docs":{},"发":{"docs":{},"人":{"docs":{},"员":{"docs":{},"很":{"docs":{},"难":{"docs":{},"或":{"docs":{},"者":{"docs":{},"根":{"docs":{},"本":{"docs":{},"不":{"docs":{},"可":{"docs":{},"能":{"docs":{},"有":{"docs":{},"效":{"docs":{},"使":{"docs":{},"用":{"docs":{},"你":{"docs":{},"的":{"docs":{},"类":{"docs":{},"或":{"docs":{},"接":{"docs":{},"口":{"docs":{},"。":{"docs":{"第八章 异常/62.每个方法抛出的异常都要有文档.html":{"ref":"第八章 异常/62.每个方法抛出的异常都要有文档.html","tf":0.1111111111111111}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"考":{"docs":{},"虑":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"设":{"docs":{},"计":{"docs":{},"决":{"docs":{},"策":{"docs":{},"的":{"docs":{},"性":{"docs":{},"能":{"docs":{},"后":{"docs":{},"果":{"docs":{},"。":{"docs":{},"使":{"docs":{},"公":{"docs":{},"有":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"成":{"docs":{},"为":{"docs":{},"可":{"docs":{},"变":{"docs":{},"的":{"docs":{},"（":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"第七章 通用程序设计/55.谨慎的进行优化.html":{"ref":"第七章 通用程序设计/55.谨慎的进行优化.html","tf":0.038461538461538464}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"满":{"docs":{},"足":{"docs":{},"可":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"的":{"docs":{},"单":{"docs":{},"例":{"docs":{},"，":{"docs":{},"有":{"docs":{},"两":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"：":{"docs":{"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.011904761904761904}}}}}}}}}}}}}}}}}},"确":{"docs":{},"保":{"docs":{},"能":{"docs":{},"够":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"进":{"docs":{},"行":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"构":{"docs":{},"造":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"采":{"docs":{},"用":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"代":{"docs":{},"理":{"docs":{},"模":{"docs":{},"式":{"docs":{},"。":{"docs":{},"所":{"docs":{},"谓":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"代":{"docs":{},"理":{"docs":{},"模":{"docs":{},"式":{"docs":{},"相":{"docs":{},"当":{"docs":{},"简":{"docs":{},"单":{"docs":{},"，":{"docs":{},"首":{"docs":{},"先":{"docs":{},"，":{"docs":{},"为":{"docs":{},"可":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"的":{"docs":{},"类":{"docs":{},"设":{"docs":{},"计":{"docs":{},"一":{"docs":{},"个":{"docs":{},"私":{"docs":{},"有":{"docs":{},"的":{"docs":{},"静":{"docs":{},"态":{"docs":{},"嵌":{"docs":{},"套":{"docs":{},"类":{"docs":{},"，":{"docs":{},"精":{"docs":{},"确":{"docs":{},"地":{"docs":{},"表":{"docs":{},"示":{"docs":{},"外":{"docs":{},"围":{"docs":{},"类":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"的":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"嵌":{"docs":{},"套":{"docs":{},"类":{"docs":{},"被":{"docs":{},"称":{"docs":{},"作":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"代":{"docs":{},"理":{"docs":{},"（":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"设":{"docs":{},"计":{"docs":{},"类":{"docs":{},"和":{"docs":{},"成":{"docs":{},"员":{"docs":{},"有":{"docs":{},"这":{"docs":{},"样":{"docs":{},"几":{"docs":{},"个":{"docs":{},"基":{"docs":{},"本":{"docs":{},"原":{"docs":{},"则":{"docs":{},"：":{"docs":{"第三章 类和接口/13.使类和成员的可访问性最小化.html":{"ref":"第三章 类和接口/13.使类和成员的可访问性最小化.html","tf":0.0625}}}}}}}}}}}}}}}},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"类":{"docs":{},"有":{"docs":{},"以":{"docs":{},"下":{"docs":{},"几":{"docs":{},"条":{"docs":{},"规":{"docs":{},"则":{"docs":{},"：":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"形":{"docs":{},"式":{"docs":{},"和":{"docs":{},"设":{"docs":{},"计":{"docs":{},"该":{"docs":{},"类":{"docs":{},"的":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"第十章 序列化/75.考虑使用自定义的序列化形式.html":{"ref":"第十章 序列化/75.考虑使用自定义的序列化形式.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}}}}}},"该":{"docs":{},"类":{"docs":{},"的":{"docs":{},"子":{"docs":{},"类":{"docs":{},"或":{"docs":{},"者":{"docs":{},"包":{"docs":{},"类":{"docs":{},"所":{"docs":{},"有":{"docs":{},"类":{"docs":{},"均":{"docs":{},"可":{"docs":{},"访":{"docs":{},"问":{"docs":{},"到":{"docs":{},"；":{"4":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"第三章 类和接口/13.使类和成员的可访问性最小化.html":{"ref":"第三章 类和接口/13.使类和成员的可访问性最小化.html","tf":0.0625}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"忽":{"docs":{},"略":{"docs":{},"了":{"docs":{},"被":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"只":{"docs":{},"返":{"docs":{},"回":{"docs":{},"该":{"docs":{},"类":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"时":{"docs":{},"创":{"docs":{},"建":{"docs":{},"的":{"docs":{},"那":{"docs":{},"个":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"的":{"docs":{},"e":{"docs":{},"l":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"实":{"docs":{},"例":{"docs":{},"。":{"docs":{},"事":{"docs":{},"实":{"docs":{},"上":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"进":{"docs":{},"行":{"docs":{},"实":{"docs":{},"例":{"docs":{},"控":{"docs":{},"制":{"docs":{},"，":{"docs":{},"带":{"docs":{},"有":{"docs":{},"对":{"docs":{},"象":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"实":{"docs":{},"例":{"docs":{},"域":{"docs":{},"则":{"docs":{},"都":{"docs":{},"必":{"docs":{},"须":{"docs":{},"声":{"docs":{},"明":{"docs":{},"为":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"的":{"docs":{},"。":{"docs":{},"否":{"docs":{},"则":{"docs":{},"，":{"docs":{},"利":{"docs":{},"用":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"方":{"docs":{},"法":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"单":{"docs":{},"例":{"docs":{},"也":{"docs":{},"会":{"docs":{},"遭":{"docs":{},"受":{"docs":{},"到":{"docs":{},"攻":{"docs":{},"击":{"docs":{},"。":{"docs":{"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.011904761904761904}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"默":{"docs":{},"认":{"docs":{},"级":{"docs":{},"别":{"docs":{"第三章 类和接口/13.使类和成员的可访问性最小化.html":{"ref":"第三章 类和接口/13.使类和成员的可访问性最小化.html","tf":0.0625}}}},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"形":{"docs":{},"式":{"docs":{},"描":{"docs":{},"述":{"docs":{},"了":{"docs":{},"该":{"docs":{},"兑":{"docs":{},"现":{"docs":{},"内":{"docs":{},"部":{"docs":{},"所":{"docs":{},"包":{"docs":{},"含":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"以":{"docs":{},"及":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"可":{"docs":{},"以":{"docs":{},"从":{"docs":{},"这":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"到":{"docs":{},"达":{"docs":{},"的":{"docs":{},"其":{"docs":{},"他":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"内":{"docs":{},"部":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"即":{"docs":{},"完":{"docs":{},"整":{"docs":{},"了":{"docs":{},"描":{"docs":{},"述":{"docs":{},"了":{"docs":{},"所":{"docs":{},"有":{"docs":{},"对":{"docs":{},"象":{"docs":{},"被":{"docs":{},"链":{"docs":{},"接":{"docs":{},"起":{"docs":{},"来":{"docs":{},"的":{"docs":{},"拓":{"docs":{},"扑":{"docs":{},"结":{"docs":{},"构":{"docs":{},"。":{"docs":{},"对":{"docs":{},"于":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"理":{"docs":{},"想":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"形":{"docs":{},"式":{"docs":{},"应":{"docs":{},"该":{"docs":{},"只":{"docs":{},"包":{"docs":{},"含":{"docs":{},"该":{"docs":{},"对":{"docs":{},"象":{"docs":{},"所":{"docs":{},"表":{"docs":{},"示":{"docs":{},"的":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"而":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"数":{"docs":{},"据":{"docs":{},"和":{"docs":{},"物":{"docs":{},"理":{"docs":{},"表":{"docs":{},"示":{"docs":{},"应":{"docs":{},"该":{"docs":{},"是":{"docs":{},"相":{"docs":{},"互":{"docs":{},"独":{"docs":{},"立":{"docs":{},"。":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"物":{"docs":{},"理":{"docs":{},"表":{"docs":{},"示":{"docs":{},"等":{"docs":{},"同":{"docs":{},"于":{"docs":{},"它":{"docs":{},"的":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"内":{"docs":{},"容":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"就":{"docs":{},"适":{"docs":{},"合":{"docs":{},"使":{"docs":{},"用":{"docs":{},"默":{"docs":{},"认":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"形":{"docs":{},"式":{"docs":{},"。":{"docs":{"第十章 序列化/75.考虑使用自定义的序列化形式.html":{"ref":"第十章 序列化/75.考虑使用自定义的序列化形式.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.02111801242236025}},")":{"docs":{"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html":{"ref":"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html","tf":0.013513513513513514}}},",":{"docs":{"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html":{"ref":"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html","tf":0.013513513513513514},"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.02111801242236025}}},";":{"docs":{"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html":{"ref":"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html","tf":0.06756756756756757}}}},"公":{"docs":{},"有":{"docs":{},"类":{"docs":{},"永":{"docs":{},"远":{"docs":{},"都":{"docs":{},"不":{"docs":{},"应":{"docs":{},"该":{"docs":{},"暴":{"docs":{},"露":{"docs":{},"可":{"docs":{},"变":{"docs":{},"的":{"docs":{},"域":{"docs":{},"，":{"docs":{},"有":{"docs":{},"时":{"docs":{},"候":{"docs":{},"会":{"docs":{},"需":{"docs":{},"要":{"docs":{},"用":{"docs":{},"包":{"docs":{},"级":{"docs":{},"私":{"docs":{},"有":{"docs":{},"的":{"docs":{},"或":{"docs":{},"者":{"docs":{},"私":{"docs":{},"有":{"docs":{},"的":{"docs":{},"嵌":{"docs":{},"套":{"docs":{},"类":{"docs":{},"来":{"docs":{},"暴":{"docs":{},"露":{"docs":{},"域":{"docs":{},"，":{"docs":{},"无":{"docs":{},"论":{"docs":{},"这":{"docs":{},"个":{"docs":{},"类":{"docs":{},"的":{"docs":{},"域":{"docs":{},"是":{"docs":{},"可":{"docs":{},"变":{"docs":{},"的":{"docs":{},"还":{"docs":{},"是":{"docs":{},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"的":{"docs":{},"。":{"docs":{"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html":{"ref":"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html","tf":0.013513513513513514}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"这":{"docs":{},"样":{"docs":{},"一":{"docs":{},"个":{"docs":{},"反":{"docs":{},"例":{"docs":{},"：":{"docs":{"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html":{"ref":"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html","tf":0.013513513513513514}}}}},"例":{"docs":{},"子":{"docs":{"第十章 序列化/75.考虑使用自定义的序列化形式.html":{"ref":"第十章 序列化/75.考虑使用自定义的序列化形式.html","tf":0.02631578947368421}}}}}},"的":{"docs":{},"反":{"docs":{},"例":{"docs":{},"：":{"docs":{"第八章 异常/65.不要忽略异常.html":{"ref":"第八章 异常/65.不要忽略异常.html","tf":0.0625}}}}}},"几":{"docs":{},"种":{"docs":{},"错":{"docs":{},"误":{"docs":{},"的":{"docs":{},"说":{"docs":{},"法":{"docs":{},"：":{"docs":{"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886}}}}}}}}},"点":{"docs":{},"需":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"：":{"docs":{"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}}}}}}}}}},"时":{"docs":{},"候":{"docs":{},"通":{"docs":{},"过":{"docs":{},"一":{"docs":{},"个":{"docs":{},"标":{"docs":{},"签":{"docs":{},"域":{"docs":{},"，":{"docs":{},"让":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"实":{"docs":{},"现":{"docs":{},"多":{"docs":{},"种":{"docs":{},"风":{"docs":{},"格":{"docs":{},"的":{"docs":{},"类":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"类":{"docs":{},"称":{"docs":{},"之":{"docs":{},"为":{"docs":{},"标":{"docs":{},"签":{"docs":{},"类":{"docs":{},"。":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"会":{"docs":{},"使":{"docs":{},"用":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"中":{"docs":{},"的":{"docs":{},"值":{"docs":{},"来":{"docs":{},"作":{"docs":{},"为":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"条":{"docs":{},"件":{"docs":{},"来":{"docs":{},"分":{"docs":{},"发":{"docs":{},"至":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"如":{"docs":{},"采":{"docs":{},"用":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"来":{"docs":{},"写":{"docs":{},"加":{"docs":{},"、":{"docs":{},"减":{"docs":{},"、":{"docs":{},"乘":{"docs":{},"、":{"docs":{},"除":{"docs":{},"的":{"docs":{},"运":{"docs":{},"算":{"docs":{},"。":{"docs":{},"代":{"docs":{},"码":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"人":{"docs":{},"认":{"docs":{},"为":{"docs":{},"：":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"比":{"docs":{},"零":{"docs":{},"长":{"docs":{},"度":{"docs":{},"数":{"docs":{},"组":{"docs":{},"更":{"docs":{},"好":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"它":{"docs":{},"避":{"docs":{},"免":{"docs":{},"了":{"docs":{},"分":{"docs":{},"配":{"docs":{},"数":{"docs":{},"组":{"docs":{},"所":{"docs":{},"需":{"docs":{},"要":{"docs":{},"的":{"docs":{},"开":{"docs":{},"销":{"docs":{},"。":{"docs":{},"这":{"docs":{},"种":{"docs":{},"观":{"docs":{},"点":{"docs":{},"是":{"docs":{},"站":{"docs":{},"不":{"docs":{},"住":{"docs":{},"脚":{"docs":{},"的":{"docs":{},"，":{"docs":{},"原":{"docs":{},"因":{"docs":{},"有":{"docs":{},"两":{"docs":{},"点":{"docs":{},"。":{"docs":{},"第":{"docs":{},"一":{"docs":{},"这":{"docs":{},"个":{"docs":{},"级":{"docs":{},"别":{"docs":{},"上":{"docs":{},"担":{"docs":{},"心":{"docs":{},"性":{"docs":{},"能":{"docs":{},"问":{"docs":{},"题":{"docs":{},"是":{"docs":{},"不":{"docs":{},"明":{"docs":{},"智":{"docs":{},"的":{"docs":{},"，":{"docs":{},"除":{"docs":{},"非":{"docs":{},"分":{"docs":{},"析":{"docs":{},"表":{"docs":{},"明":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"正":{"docs":{},"是":{"docs":{},"造":{"docs":{},"成":{"docs":{},"性":{"docs":{},"能":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"真":{"docs":{},"正":{"docs":{},"源":{"docs":{},"头":{"docs":{},"。":{"docs":{},"第":{"docs":{},"二":{"docs":{},"每":{"docs":{},"次":{"docs":{},"都":{"docs":{},"返":{"docs":{},"回":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"零":{"docs":{},"长":{"docs":{},"度":{"docs":{},"数":{"docs":{},"组":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"零":{"docs":{},"长":{"docs":{},"度":{"docs":{},"数":{"docs":{},"组":{"docs":{},"是":{"docs":{},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"的":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"被":{"docs":{},"自":{"docs":{},"由":{"docs":{},"的":{"docs":{},"共":{"docs":{},"享":{"docs":{},"。":{"docs":{"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":{"ref":"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html","tf":0.019230769230769232}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"些":{"docs":{},"语":{"docs":{},"言":{"docs":{},"支":{"docs":{},"持":{"docs":{},"函":{"docs":{},"数":{"docs":{},"指":{"docs":{},"针":{"docs":{},"、":{"docs":{},"代":{"docs":{},"理":{"docs":{},"、":{"docs":{},"l":{"docs":{},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"d":{"docs":{},"a":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"支":{"docs":{},"持":{"docs":{},"类":{"docs":{},"似":{"docs":{},"的":{"docs":{},"机":{"docs":{},"制":{"docs":{},"，":{"docs":{},"允":{"docs":{},"许":{"docs":{},"程":{"docs":{},"序":{"docs":{},"把":{"docs":{},"”":{"docs":{},"调":{"docs":{},"用":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"能":{"docs":{},"力":{"docs":{},"”":{"docs":{},"储":{"docs":{},"存":{"docs":{},"起":{"docs":{},"来":{"docs":{},"并":{"docs":{},"传":{"docs":{},"递":{"docs":{},"这":{"docs":{},"种":{"docs":{},"能":{"docs":{},"力":{"docs":{},"。":{"docs":{},"最":{"docs":{},"常":{"docs":{},"用":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"就":{"docs":{},"是":{"docs":{},"比":{"docs":{},"较":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"传":{"docs":{},"入":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"比":{"docs":{},"较":{"docs":{},"策":{"docs":{},"略":{"docs":{},"会":{"docs":{},"得":{"docs":{},"到":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"比":{"docs":{},"较":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"这":{"docs":{},"也":{"docs":{},"正":{"docs":{},"是":{"docs":{},"策":{"docs":{},"略":{"docs":{},"模":{"docs":{},"式":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"例":{"docs":{},"子":{"docs":{},"。":{"docs":{},"可":{"docs":{},"是":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"没":{"docs":{},"有":{"docs":{},"提":{"docs":{},"供":{"docs":{},"函":{"docs":{},"数":{"docs":{},"指":{"docs":{},"针":{"docs":{},"。":{"docs":{"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"三":{"docs":{},"条":{"docs":{},"与":{"docs":{},"优":{"docs":{},"化":{"docs":{},"有":{"docs":{},"关":{"docs":{},"的":{"docs":{},"格":{"docs":{},"言":{"docs":{},"是":{"docs":{},"每":{"docs":{},"个":{"docs":{},"人":{"docs":{},"都":{"docs":{},"应":{"docs":{},"该":{"docs":{},"知":{"docs":{},"道":{"docs":{},"的":{"docs":{},"：":{"docs":{"第七章 通用程序设计/55.谨慎的进行优化.html":{"ref":"第七章 通用程序设计/55.谨慎的进行优化.html","tf":0.038461538461538464}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"很":{"docs":{},"重":{"docs":{},"要":{"docs":{},"的":{"docs":{},"原":{"docs":{},"则":{"docs":{},"，":{"docs":{},"异":{"docs":{},"常":{"docs":{},"的":{"docs":{},"细":{"docs":{},"节":{"docs":{},"消":{"docs":{},"息":{"docs":{},"应":{"docs":{},"该":{"docs":{},"清":{"docs":{},"晰":{"docs":{},"的":{"docs":{},"描":{"docs":{},"述":{"docs":{},"出":{"docs":{},"异":{"docs":{},"常":{"docs":{},"，":{"docs":{},"便":{"docs":{},"于":{"docs":{},"以":{"docs":{},"后":{"docs":{},"分":{"docs":{},"析":{"docs":{},"。":{"docs":{},"为":{"docs":{},"了":{"docs":{},"清":{"docs":{},"晰":{"docs":{},"的":{"docs":{},"描":{"docs":{},"述":{"docs":{},"异":{"docs":{},"常":{"docs":{},"，":{"docs":{},"异":{"docs":{},"常":{"docs":{},"的":{"docs":{},"细":{"docs":{},"节":{"docs":{},"信":{"docs":{},"息":{"docs":{},"应":{"docs":{},"该":{"docs":{},"包":{"docs":{},"含":{"docs":{},"所":{"docs":{},"有":{"docs":{},"“":{"docs":{},"对":{"docs":{},"该":{"docs":{},"异":{"docs":{},"常":{"docs":{},"有":{"docs":{},"贡":{"docs":{},"献":{"docs":{},"”":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"和":{"docs":{},"域":{"docs":{},"的":{"docs":{},"值":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"f":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"异":{"docs":{},"常":{"docs":{},"的":{"docs":{},"细":{"docs":{},"节":{"docs":{},"消":{"docs":{},"息":{"docs":{},"应":{"docs":{},"该":{"docs":{},"包":{"docs":{},"含":{"docs":{},"下":{"docs":{},"界":{"docs":{},"、":{"docs":{},"上":{"docs":{},"界":{"docs":{},"以":{"docs":{},"及":{"docs":{},"没":{"docs":{},"有":{"docs":{},"落":{"docs":{},"在":{"docs":{},"界":{"docs":{},"内":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"值":{"docs":{},"。":{"docs":{},"该":{"docs":{},"细":{"docs":{},"节":{"docs":{},"消":{"docs":{},"息":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"许":{"docs":{},"多":{"docs":{},"关":{"docs":{},"于":{"docs":{},"失":{"docs":{},"败":{"docs":{},"的":{"docs":{},"信":{"docs":{},"息":{"docs":{},"。":{"docs":{},"这":{"docs":{},"三":{"docs":{},"个":{"docs":{},"值":{"docs":{},"中":{"docs":{},"任":{"docs":{},"何":{"docs":{},"一":{"docs":{},"个":{"docs":{},"或":{"docs":{},"者":{"docs":{},"全":{"docs":{},"部":{"docs":{},"都":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"错":{"docs":{},"的":{"docs":{},"。":{"docs":{},"实":{"docs":{},"标":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"值":{"docs":{},"可":{"docs":{},"能":{"docs":{},"小":{"docs":{},"于":{"docs":{},"下":{"docs":{},"界":{"docs":{},"或":{"docs":{},"等":{"docs":{},"于":{"docs":{},"上":{"docs":{},"界":{"docs":{},"（":{"docs":{},"“":{"docs":{},"越":{"docs":{},"界":{"docs":{},"错":{"docs":{},"误":{"docs":{},"”":{"docs":{},"）":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"它":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"个":{"docs":{},"无":{"docs":{},"效":{"docs":{},"值":{"docs":{},"，":{"docs":{},"太":{"docs":{},"小":{"docs":{},"或":{"docs":{},"太":{"docs":{},"大":{"docs":{},"。":{"docs":{},"下":{"docs":{},"界":{"docs":{},"也":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"大":{"docs":{},"于":{"docs":{},"上":{"docs":{},"界":{"docs":{},"（":{"docs":{},"严":{"docs":{},"重":{"docs":{},"违":{"docs":{},"反":{"docs":{},"内":{"docs":{},"部":{"docs":{},"约":{"docs":{},"束":{"docs":{},"条":{"docs":{},"件":{"docs":{},"的":{"docs":{},"一":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"）":{"docs":{},"。":{"docs":{},"每":{"docs":{},"一":{"docs":{},"种":{"docs":{},"情":{"docs":{},"形":{"docs":{},"都":{"docs":{},"代":{"docs":{},"表":{"docs":{},"了":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"程":{"docs":{},"序":{"docs":{},"员":{"docs":{},"知":{"docs":{},"道":{"docs":{},"应":{"docs":{},"该":{"docs":{},"去":{"docs":{},"查":{"docs":{},"找":{"docs":{},"哪":{"docs":{},"种":{"docs":{},"错":{"docs":{},"误":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"极":{"docs":{},"大":{"docs":{},"地":{"docs":{},"加":{"docs":{},"速":{"docs":{},"排":{"docs":{},"错":{"docs":{},"过":{"docs":{},"程":{"docs":{},"；":{"docs":{},"为":{"docs":{},"了":{"docs":{},"确":{"docs":{},"保":{"docs":{},"在":{"docs":{},"异":{"docs":{},"常":{"docs":{},"的":{"docs":{},"细":{"docs":{},"节":{"docs":{},"消":{"docs":{},"息":{"docs":{},"中":{"docs":{},"包":{"docs":{},"含":{"docs":{},"足":{"docs":{},"够":{"docs":{},"的":{"docs":{},"能":{"docs":{},"捕":{"docs":{},"获":{"docs":{},"失":{"docs":{},"败":{"docs":{},"的":{"docs":{},"信":{"docs":{},"息":{"docs":{},"，":{"docs":{},"一":{"docs":{},"种":{"docs":{},"办":{"docs":{},"法":{"docs":{},"是":{"docs":{},"在":{"docs":{},"异":{"docs":{},"常":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"中":{"docs":{},"引":{"docs":{},"入":{"docs":{},"这":{"docs":{},"些":{"docs":{},"信":{"docs":{},"息":{"docs":{},"。":{"docs":{"第八章 异常/63.编写合适的异常信息.html":{"ref":"第八章 异常/63.编写合适的异常信息.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"条":{"docs":{},"件":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"（":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886}}}}}}}}}}}}}}}}}}}},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"类":{"docs":{},"的":{"docs":{},"具":{"docs":{},"体":{"docs":{},"实":{"docs":{},"现":{"docs":{},"为":{"docs":{},"：":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}}}}}}}}}}}}}}}}}}},"假":{"docs":{},"设":{"docs":{},"调":{"docs":{},"用":{"docs":{},"了":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"a":{"docs":{},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"m":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"s":{"docs":{},"类":{"docs":{},"，":{"docs":{},"希":{"docs":{},"望":{"docs":{},"j":{"docs":{},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"上":{"docs":{},"面":{"docs":{},"的":{"docs":{},"反":{"docs":{},"例":{"docs":{},"；":{"docs":{"第八章 异常/57.只针对异常的情况才使用异常.html":{"ref":"第八章 异常/57.只针对异常的情况才使用异常.html","tf":0.043478260869565216}}}}}}}}},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"个":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"的":{"docs":{},"注":{"docs":{},"解":{"docs":{},"：":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}}}}}},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},".":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"用":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"基":{"docs":{},"类":{"docs":{},"（":{"docs":{},"往":{"docs":{},"往":{"docs":{},"是":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{},"）":{"docs":{},"来":{"docs":{},"引":{"docs":{},"用":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"它":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"类":{"docs":{},"；":{"docs":{"第七章 通用程序设计/52.通过接口引用对象.html":{"ref":"第七章 通用程序设计/52.通过接口引用对象.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"保":{"docs":{},"证":{"docs":{},"类":{"docs":{},"不":{"docs":{},"会":{"docs":{},"被":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"：":{"docs":{},"防":{"docs":{},"止":{"docs":{},"子":{"docs":{},"类":{"docs":{},"恶":{"docs":{},"意":{"docs":{},"修":{"docs":{},"改":{"docs":{},"实":{"docs":{},"例":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"禁":{"docs":{},"止":{"docs":{},"类":{"docs":{},"被":{"docs":{},"子":{"docs":{},"类":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"其":{"docs":{},"定":{"docs":{},"义":{"docs":{},"为":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"；":{"docs":{},"或":{"docs":{},"者":{"docs":{},"让":{"docs":{},"类":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"都":{"docs":{},"变":{"docs":{},"成":{"docs":{},"私":{"docs":{},"有":{"docs":{},"的":{"docs":{},"或":{"docs":{},"者":{"docs":{},"包":{"docs":{},"级":{"docs":{},"私":{"docs":{},"有":{"docs":{},"的":{"docs":{},"，":{"docs":{},"并":{"docs":{},"添":{"docs":{},"加":{"docs":{},"公":{"docs":{},"有":{"docs":{},"的":{"docs":{},"静":{"docs":{},"态":{"docs":{},"工":{"docs":{},"厂":{"docs":{},"来":{"docs":{},"代":{"docs":{},"替":{"docs":{},"公":{"docs":{},"有":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"；":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"并":{"docs":{},"将":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"和":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"。":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}}}}}}}}}}}}}}}}}}}}}}}},"发":{"docs":{},"程":{"docs":{},"序":{"docs":{},"要":{"docs":{},"比":{"docs":{},"单":{"docs":{},"线":{"docs":{},"程":{"docs":{},"程":{"docs":{},"序":{"docs":{},"的":{"docs":{},"设":{"docs":{},"计":{"docs":{},"更":{"docs":{},"加":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"失":{"docs":{},"败":{"docs":{},"难":{"docs":{},"以":{"docs":{},"重":{"docs":{},"现":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"又":{"docs":{},"无":{"docs":{},"法":{"docs":{},"避":{"docs":{},"免":{"docs":{},"采":{"docs":{},"用":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"采":{"docs":{},"用":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"并":{"docs":{},"发":{"docs":{},"是":{"docs":{},"能":{"docs":{},"够":{"docs":{},"从":{"docs":{},"多":{"docs":{},"核":{"docs":{},"计":{"docs":{},"算":{"docs":{},"机":{"docs":{},"获":{"docs":{},"得":{"docs":{},"最":{"docs":{},"佳":{"docs":{},"性":{"docs":{},"能":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"有":{"docs":{},"效":{"docs":{},"途":{"docs":{},"径":{"docs":{},"。":{"docs":{},"在":{"docs":{},"并":{"docs":{},"发":{"docs":{},"时":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"涉":{"docs":{},"及":{"docs":{},"到":{"docs":{},"可":{"docs":{},"变":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"着":{"docs":{},"重":{"docs":{},"去":{"docs":{},"思":{"docs":{},"考":{"docs":{},"的":{"docs":{},"地":{"docs":{},"方":{"docs":{},"，":{"docs":{},"在":{"docs":{},"面":{"docs":{},"对":{"docs":{},"可":{"docs":{},"变":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"并":{"docs":{},"发":{"docs":{},"访":{"docs":{},"问":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"有":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"方":{"docs":{},"式":{"docs":{},"可":{"docs":{},"以":{"docs":{},"保":{"docs":{},"证":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"性":{"docs":{},"？":{"docs":{"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"集":{"docs":{},"合":{"docs":{},"：":{"docs":{},"并":{"docs":{},"发":{"docs":{},"集":{"docs":{},"合":{"docs":{},"针":{"docs":{},"对":{"docs":{},"标":{"docs":{},"准":{"docs":{},"的":{"docs":{},"集":{"docs":{},"合":{"docs":{},"接":{"docs":{},"口":{"docs":{},"（":{"docs":{},"如":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"、":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"和":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"）":{"docs":{},"做":{"docs":{},"了":{"docs":{},"进":{"docs":{},"一":{"docs":{},"步":{"docs":{},"的":{"docs":{},"处":{"docs":{},"理":{"docs":{},"，":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"高":{"docs":{},"性":{"docs":{},"能":{"docs":{},"的":{"docs":{},"并":{"docs":{},"发":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"常":{"docs":{},"用":{"docs":{},"的":{"docs":{},"有":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"，":{"docs":{},"它":{"docs":{},"就":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"了":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"接":{"docs":{},"口":{"docs":{},"并":{"docs":{},"保":{"docs":{},"证":{"docs":{},"了":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"。":{"docs":{},"另":{"docs":{},"外":{"docs":{},"，":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"实":{"docs":{},"现":{"docs":{},"了":{"docs":{},"可":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"即":{"docs":{},"当":{"docs":{},"队":{"docs":{},"列":{"docs":{},"为":{"docs":{},"空":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"会":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"“":{"docs":{},"取":{"docs":{},"数":{"docs":{},"据":{"docs":{},"”":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"直":{"docs":{},"至":{"docs":{},"队":{"docs":{},"列":{"docs":{},"不":{"docs":{},"为":{"docs":{},"空":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"当":{"docs":{},"队":{"docs":{},"列":{"docs":{},"满":{"docs":{},"时":{"docs":{},"，":{"docs":{},"会":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"“":{"docs":{},"插":{"docs":{},"入":{"docs":{},"数":{"docs":{},"据":{"docs":{},"”":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"直":{"docs":{},"至":{"docs":{},"队":{"docs":{},"列":{"docs":{},"未":{"docs":{},"满":{"docs":{},"。":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"被":{"docs":{},"广":{"docs":{},"泛":{"docs":{},"的":{"docs":{},"应":{"docs":{},"用":{"docs":{},"在":{"docs":{},"“":{"docs":{},"生":{"docs":{},"产":{"docs":{},"者":{"docs":{"第九章 并发/69.优先使用提供的并发工具.html":{"ref":"第九章 并发/69.优先使用提供的并发工具.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"且":{"docs":{},"需":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"的":{"docs":{},"是":{"docs":{},"，":{"docs":{},"保":{"docs":{},"护":{"docs":{},"性":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"在":{"docs":{},"参":{"docs":{},"数":{"docs":{},"有":{"docs":{},"效":{"docs":{},"性":{"docs":{},"检":{"docs":{},"查":{"docs":{},"的":{"docs":{},"前":{"docs":{},"面":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"不":{"docs":{},"能":{"docs":{},"使":{"docs":{},"用":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"方":{"docs":{},"法":{"docs":{},"进":{"docs":{},"行":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"第十章 序列化/76.保护性地编写readObject方法.html":{"ref":"第十章 序列化/76.保护性地编写readObject方法.html","tf":0.009900990099009901}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"域":{"docs":{},"都":{"docs":{},"成":{"docs":{},"为":{"docs":{},"私":{"docs":{},"有":{"docs":{},"的":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"可":{"docs":{},"以":{"docs":{},"防":{"docs":{},"止":{"docs":{},"客":{"docs":{},"户":{"docs":{},"端":{"docs":{},"获":{"docs":{},"得":{"docs":{},"访":{"docs":{},"问":{"docs":{},"被":{"docs":{},"域":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"可":{"docs":{},"变":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"权":{"docs":{},"限":{"docs":{},"，":{"docs":{},"并":{"docs":{},"防":{"docs":{},"止":{"docs":{},"客":{"docs":{},"户":{"docs":{},"端":{"docs":{},"修":{"docs":{},"改":{"docs":{},"这":{"docs":{},"些":{"docs":{},"对":{"docs":{},"象":{"docs":{},"；":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"的":{"docs":{},"；":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}}}}}}}}}}}}}},"谓":{"docs":{},"位":{"docs":{},"域":{"docs":{},"是":{"docs":{},"指":{"docs":{},"利":{"docs":{},"用":{"docs":{},"就":{"docs":{},"是":{"docs":{},"用":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"模":{"docs":{},"式":{"docs":{},"，":{"docs":{},"将":{"2":{"docs":{},"的":{"docs":{},"不":{"docs":{},"同":{"docs":{},"倍":{"docs":{},"数":{"docs":{},"赋":{"docs":{},"予":{"docs":{},"每":{"docs":{},"个":{"docs":{},"常":{"docs":{},"量":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"位":{"docs":{},"操":{"docs":{},"作":{"docs":{},"将":{"docs":{},"多":{"docs":{},"个":{"docs":{},"常":{"docs":{},"量":{"docs":{},"进":{"docs":{},"行":{"docs":{},"组":{"docs":{},"合":{"docs":{},"来":{"docs":{},"表":{"docs":{},"达":{"docs":{},"具":{"docs":{},"体":{"docs":{},"的":{"docs":{},"业":{"docs":{},"务":{"docs":{},"意":{"docs":{},"义":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"实":{"docs":{},"例":{"docs":{},"：":{"docs":{"第五章 枚举和注解/32.用EnumSet代替位域.html":{"ref":"第五章 枚举和注解/32.用EnumSet代替位域.html","tf":0.03125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"后":{"docs":{},"置":{"docs":{},"条":{"docs":{},"件":{"docs":{},"是":{"docs":{},"指":{"docs":{},"在":{"docs":{},"调":{"docs":{},"用":{"docs":{},"成":{"docs":{},"功":{"docs":{},"完":{"docs":{},"成":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"条":{"docs":{},"件":{"docs":{},"必":{"docs":{},"须":{"docs":{},"要":{"docs":{},"满":{"docs":{},"足":{"docs":{},"；":{"docs":{"第六章 方法/44.API需要编写文档注释.html":{"ref":"第六章 方法/44.API需要编写文档注释.html","tf":0.03333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"确":{"docs":{},"保":{"docs":{},"对":{"docs":{},"于":{"docs":{},"任":{"docs":{},"何":{"docs":{},"可":{"docs":{},"变":{"docs":{},"组":{"docs":{},"件":{"docs":{},"的":{"docs":{},"互":{"docs":{},"斥":{"docs":{},"性":{"docs":{},"访":{"docs":{},"问":{"docs":{},"：":{"docs":{},"如":{"docs":{},"果":{"docs":{},"类":{"docs":{},"具":{"docs":{},"有":{"docs":{},"指":{"docs":{},"向":{"docs":{},"可":{"docs":{},"变":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"域":{"docs":{},"，":{"docs":{},"则":{"docs":{},"必":{"docs":{},"须":{"docs":{},"确":{"docs":{},"保":{"docs":{},"客":{"docs":{},"户":{"docs":{},"端":{"docs":{},"无":{"docs":{},"法":{"docs":{},"获":{"docs":{},"得":{"docs":{},"指":{"docs":{},"向":{"docs":{},"这":{"docs":{},"些":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"；":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"获":{"docs":{},"取":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"时":{"docs":{},"不":{"docs":{},"是":{"docs":{},"直":{"docs":{},"接":{"docs":{},"返":{"docs":{},"回":{"docs":{},"对":{"docs":{},"象":{"docs":{},"引":{"docs":{},"用":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"返":{"docs":{},"回":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},".":{"docs":{"第三章 类和接口/15.使可变性最小化.html":{"ref":"第三章 类和接口/15.使可变性最小化.html","tf":0.009174311926605505}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},")":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"a":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"{":{"docs":{"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.012048192771084338}}},";":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.024096385542168676}}}}}}},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{},"、":{"docs":{},"非":{"docs":{},"受":{"docs":{},"检":{"docs":{},"方":{"docs":{},"法":{"docs":{},"调":{"docs":{},"用":{"docs":{},"警":{"docs":{},"告":{"docs":{},"、":{"docs":{},"非":{"docs":{},"受":{"docs":{},"检":{"docs":{},"普":{"docs":{},"通":{"docs":{},"数":{"docs":{},"组":{"docs":{},"创":{"docs":{},"建":{"docs":{},"警":{"docs":{},"告":{"docs":{},"以":{"docs":{},"及":{"docs":{},"非":{"docs":{},"受":{"docs":{},"检":{"docs":{},"转":{"docs":{},"换":{"docs":{},"警":{"docs":{},"告":{"docs":{},"(":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"第四章 泛型/24.消除非受检警告.html":{"ref":"第四章 泛型/24.消除非受检警告.html","tf":0.07142857142857142}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},")":{"docs":{},"，":{"docs":{},"要":{"docs":{},"尽":{"docs":{},"可":{"docs":{},"能":{"docs":{},"消":{"docs":{},"除":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"警":{"docs":{},"告":{"docs":{},"，":{"docs":{},"以":{"docs":{},"确":{"docs":{},"保":{"docs":{},"代":{"docs":{},"码":{"docs":{},"安":{"docs":{},"全":{"docs":{},"。":{"docs":{"第四章 泛型/24.消除非受检警告.html":{"ref":"第四章 泛型/24.消除非受检警告.html","tf":0.07142857142857142}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{},")":{"docs":{},",":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}}}}}}}}}}},",":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}},"e":{"docs":{},"k":{"docs":{},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441}}}}}}}},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},"{":{"docs":{"第八章 异常/57.只针对异常的情况才使用异常.html":{"ref":"第八章 异常/57.只针对异常的情况才使用异常.html","tf":0.043478260869565216}}}}}}}}}}}}}},"与":{"docs":{},"方":{"docs":{},"法":{"docs":{},"调":{"docs":{},"用":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"是":{"docs":{},"，":{"docs":{},"继":{"docs":{},"承":{"docs":{},"打":{"docs":{},"破":{"docs":{},"封":{"docs":{},"装":{"docs":{},"性":{"docs":{},"。":{"docs":{},"子":{"docs":{},"类":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"于":{"docs":{},"父":{"docs":{},"类":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"父":{"docs":{},"类":{"docs":{},"的":{"docs":{},"具":{"docs":{},"体":{"docs":{},"实":{"docs":{},"现":{"docs":{},"细":{"docs":{},"节":{"docs":{},"改":{"docs":{},"变":{"docs":{},"，":{"docs":{},"子":{"docs":{},"类":{"docs":{},"也":{"docs":{},"会":{"docs":{},"跟":{"docs":{},"着":{"docs":{},"相":{"docs":{},"应":{"docs":{},"改":{"docs":{},"变":{"docs":{},"。":{"docs":{},"除":{"docs":{},"非":{"docs":{},"父":{"docs":{},"类":{"docs":{},"就":{"docs":{},"是":{"docs":{},"专":{"docs":{},"门":{"docs":{},"为":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"而":{"docs":{},"设":{"docs":{},"计":{"docs":{},"的":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"有":{"docs":{},"良":{"docs":{},"好":{"docs":{},"的":{"docs":{},"文":{"docs":{},"档":{"docs":{},"说":{"docs":{},"明":{"docs":{},"；":{"2":{"docs":{},".":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"常":{"docs":{},"量":{"docs":{},"相":{"docs":{},"比":{"docs":{},"，":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"的":{"docs":{},"可":{"docs":{},"读":{"docs":{},"性":{"docs":{},"更":{"docs":{},"强":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"更":{"docs":{},"加":{"docs":{},"安":{"docs":{},"全":{"docs":{},"，":{"docs":{},"功":{"docs":{},"能":{"docs":{},"更":{"docs":{},"加":{"docs":{},"强":{"docs":{},"大":{"docs":{},"，":{"docs":{},"在":{"docs":{},"实":{"docs":{},"际":{"docs":{},"开":{"docs":{},"发":{"docs":{},"中":{"docs":{},"应":{"docs":{},"该":{"docs":{},"使":{"docs":{},"用":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"代":{"docs":{},"替":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"模":{"docs":{},"式":{"docs":{},"。":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"什":{"docs":{},"么":{"docs":{},"时":{"docs":{},"候":{"docs":{},"使":{"docs":{},"用":{"docs":{},"继":{"docs":{},"承":{"docs":{},"？":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}}},"考":{"docs":{},"虑":{"docs":{},"使":{"docs":{},"用":{"docs":{},"保":{"docs":{},"护":{"docs":{},"性":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"？":{"docs":{"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.007874015748031496}}}}}}}}}}}},"用":{"docs":{},"装":{"docs":{},"箱":{"docs":{},"类":{"docs":{},"型":{"docs":{"第七章 通用程序设计/49.基本类型优先于装箱基本类型.html":{"ref":"第七章 通用程序设计/49.基本类型优先于装箱基本类型.html","tf":0.05555555555555555}}}}}}},"应":{"docs":{},"该":{"docs":{},"让":{"docs":{},"具":{"docs":{},"体":{"docs":{},"类":{"docs":{},"去":{"docs":{},"声":{"docs":{},"明":{"docs":{},"变":{"docs":{},"量":{"docs":{},"呢":{"docs":{},"？":{"docs":{"第七章 通用程序设计/52.通过接口引用对象.html":{"ref":"第七章 通用程序设计/52.通过接口引用对象.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}}}},"只":{"docs":{},"有":{"docs":{},"当":{"docs":{},"子":{"docs":{},"类":{"docs":{},"真":{"docs":{},"正":{"docs":{},"是":{"docs":{},"超":{"docs":{},"类":{"docs":{},"的":{"docs":{},"子":{"docs":{},"类":{"docs":{},"型":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},")":{"docs":{},"时":{"docs":{},"，":{"docs":{},"才":{"docs":{},"适":{"docs":{},"合":{"docs":{},"用":{"docs":{},"继":{"docs":{},"承":{"docs":{},"。":{"docs":{},"对":{"docs":{},"于":{"docs":{},"两":{"docs":{},"个":{"docs":{},"类":{"docs":{},"a":{"docs":{},"和":{"docs":{},"b":{"docs":{},"，":{"docs":{},"只":{"docs":{},"有":{"docs":{},"当":{"docs":{},"两":{"docs":{},"者":{"docs":{},"之":{"docs":{},"间":{"docs":{},"确":{"docs":{},"实":{"docs":{},"存":{"docs":{},"在":{"docs":{},"\"":{"docs":{},"i":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"父":{"docs":{},"类":{"docs":{},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"的":{"docs":{},"”":{"docs":{},"自":{"docs":{},"用":{"docs":{},"性":{"docs":{},"“":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"导":{"docs":{},"致":{"docs":{},"的":{"docs":{},"子":{"docs":{},"类":{"docs":{},"方":{"docs":{},"法":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"出":{"docs":{},"错":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"统":{"docs":{},"计":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"自":{"docs":{},"创":{"docs":{},"建":{"docs":{},"以":{"docs":{},"来":{"docs":{},"插":{"docs":{},"入":{"docs":{},"了":{"docs":{},"多":{"docs":{},"少":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"和":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"：":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"简":{"docs":{},"而":{"docs":{},"言":{"docs":{},"之":{"docs":{},"，":{"docs":{},"继":{"docs":{},"承":{"docs":{},"的":{"docs":{},"功":{"docs":{},"能":{"docs":{},"非":{"docs":{},"常":{"docs":{},"强":{"docs":{},"大":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"也":{"docs":{},"存":{"docs":{},"在":{"docs":{},"诸":{"docs":{},"多":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"它":{"docs":{},"违":{"docs":{},"反":{"docs":{},"了":{"docs":{},"封":{"docs":{},"装":{"docs":{},"原":{"docs":{},"则":{"docs":{},"。":{"docs":{},"只":{"docs":{},"有":{"docs":{},"当":{"docs":{},"子":{"docs":{},"类":{"docs":{},"和":{"docs":{},"超":{"docs":{},"类":{"docs":{},"之":{"docs":{},"间":{"docs":{},"确":{"docs":{},"实":{"docs":{},"存":{"docs":{},"在":{"docs":{},"子":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"关":{"docs":{},"系":{"docs":{},"时":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"继":{"docs":{},"承":{"docs":{},"才":{"docs":{},"是":{"docs":{},"恰":{"docs":{},"当":{"docs":{},"的":{"docs":{},"。":{"docs":{},"即":{"docs":{},"使":{"docs":{},"如":{"docs":{},"此":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"子":{"docs":{},"类":{"docs":{},"和":{"docs":{},"超":{"docs":{},"类":{"docs":{},"处":{"docs":{},"在":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"包":{"docs":{},"中":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"超":{"docs":{},"类":{"docs":{},"并":{"docs":{},"不":{"docs":{},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"继":{"docs":{},"承":{"docs":{},"而":{"docs":{},"设":{"docs":{},"计":{"docs":{},"的":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"继":{"docs":{},"承":{"docs":{},"将":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"脆":{"docs":{},"弱":{"docs":{},"性":{"docs":{},"。":{"docs":{},"为":{"docs":{},"了":{"docs":{},"避":{"docs":{},"免":{"docs":{},"这":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"复":{"docs":{},"合":{"docs":{},"和":{"docs":{},"转":{"docs":{},"发":{"docs":{},"机":{"docs":{},"制":{"docs":{},"来":{"docs":{},"代":{"docs":{},"替":{"docs":{},"继":{"docs":{},"承":{"docs":{},"，":{"docs":{},"尤":{"docs":{},"其":{"docs":{},"是":{"docs":{},"当":{"docs":{},"存":{"docs":{},"在":{"docs":{},"适":{"docs":{},"当":{"docs":{},"的":{"docs":{},"接":{"docs":{},"口":{"docs":{},"可":{"docs":{},"以":{"docs":{},"实":{"docs":{},"现":{"docs":{},"包":{"docs":{},"装":{"docs":{},"类":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"。":{"docs":{},"包":{"docs":{},"装":{"docs":{},"类":{"docs":{},"不":{"docs":{},"仅":{"docs":{},"比":{"docs":{},"子":{"docs":{},"类":{"docs":{},"更":{"docs":{},"加":{"docs":{},"健":{"docs":{},"壮":{"docs":{},"，":{"docs":{},"而":{"docs":{},"且":{"docs":{},"功":{"docs":{},"能":{"docs":{},"也":{"docs":{},"更":{"docs":{},"强":{"docs":{},"大":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"共":{"docs":{},"有":{"docs":{},"四":{"docs":{},"种":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"嵌":{"docs":{},"套":{"docs":{},"类":{"docs":{},"，":{"docs":{},"每":{"docs":{},"一":{"docs":{},"种":{"docs":{},"都":{"docs":{},"有":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"用":{"docs":{},"途":{"docs":{},"。":{"docs":{"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"采":{"docs":{},"用":{"docs":{},"复":{"docs":{},"合":{"docs":{},"/":{"docs":{},"转":{"docs":{},"发":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"重":{"docs":{},"写":{"docs":{},"上":{"docs":{},"面":{"docs":{},"的":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"，":{"docs":{},"包":{"docs":{},"含":{"docs":{},"了":{"docs":{},"两":{"docs":{},"个":{"docs":{},"部":{"docs":{},"分":{"docs":{},"：":{"docs":{},"新":{"docs":{},"类":{"docs":{},"本":{"docs":{},"身":{"docs":{},"以":{"docs":{},"及":{"docs":{},"被":{"docs":{},"包":{"docs":{},"含":{"docs":{},"的":{"docs":{},"转":{"docs":{},"发":{"docs":{},"类":{"docs":{},"：":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"要":{"docs":{},"采":{"docs":{},"用":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"去":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"方":{"docs":{},"法":{"docs":{},"接":{"docs":{},"受":{"docs":{},"的":{"docs":{},"是":{"docs":{},"可":{"docs":{},"变":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"想":{"docs":{},"要":{"docs":{},"正":{"docs":{},"确":{"docs":{},"输":{"docs":{},"出":{"docs":{},"数":{"docs":{},"组":{"docs":{},"内":{"docs":{},"容":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"数":{"docs":{},"组":{"docs":{},"里":{"docs":{},"元":{"docs":{},"素":{"docs":{},"必":{"docs":{},"须":{"docs":{},"是":{"docs":{},"对":{"docs":{},"象":{"docs":{},"引":{"docs":{},"用":{"docs":{},"型":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"能":{"docs":{},"是":{"docs":{},"基":{"docs":{},"本":{"docs":{},"类":{"docs":{},"型":{"docs":{},"数":{"docs":{},"据":{"docs":{},"。":{"docs":{},"如":{"docs":{},"下":{"docs":{},"例":{"docs":{},"：":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"枚":{"docs":{},"举":{"docs":{},"实":{"docs":{},"现":{"docs":{},"：":{"docs":{},"可":{"docs":{},"以":{"docs":{},"采":{"docs":{},"用":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"实":{"docs":{},"现":{"docs":{},"可":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"的":{"docs":{},"单":{"docs":{},"例":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"安":{"docs":{},"全":{"docs":{},"性":{"docs":{},"由":{"docs":{},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{},"提":{"docs":{},"供":{"docs":{},"保":{"docs":{},"障":{"docs":{},"，":{"docs":{},"而":{"docs":{},"且":{"docs":{},"代":{"docs":{},"码":{"docs":{},"十":{"docs":{},"分":{"docs":{},"简":{"docs":{},"洁":{"docs":{},"，":{"docs":{},"实":{"docs":{},"例":{"docs":{},"域":{"docs":{},"也":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"用":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"修":{"docs":{},"饰":{"docs":{},"：":{"docs":{"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.011904761904761904}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"针":{"docs":{},"对":{"docs":{},"继":{"docs":{},"承":{"docs":{},"带":{"docs":{},"来":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"采":{"docs":{},"用":{"docs":{},"复":{"docs":{},"合":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"进":{"docs":{},"行":{"docs":{},"解":{"docs":{},"决":{"docs":{},"，":{"docs":{},"即":{"docs":{},"不":{"docs":{},"用":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"现":{"docs":{},"有":{"docs":{},"的":{"docs":{},"类":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"在":{"docs":{},"新":{"docs":{},"的":{"docs":{},"类":{"docs":{},"中":{"docs":{},"增":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{},"私":{"docs":{},"有":{"docs":{},"域":{"docs":{},"，":{"docs":{},"它":{"docs":{},"引":{"docs":{},"用":{"docs":{},"现":{"docs":{},"有":{"docs":{},"类":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"实":{"docs":{},"例":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"现":{"docs":{},"有":{"docs":{},"类":{"docs":{},"变":{"docs":{},"成":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"类":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"组":{"docs":{},"件":{"docs":{},"，":{"docs":{},"新":{"docs":{},"类":{"docs":{},"中":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"实":{"docs":{},"例":{"docs":{},"方":{"docs":{},"法":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"调":{"docs":{},"用":{"docs":{},"被":{"docs":{},"包":{"docs":{},"含":{"docs":{},"的":{"docs":{},"类":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{},"相":{"docs":{},"应":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"这":{"docs":{},"称":{"docs":{},"之":{"docs":{},"为":{"docs":{},"转":{"docs":{},"发":{"docs":{},"。":{"docs":{"第三章 类和接口/16.复合优于继承.html":{"ref":"第三章 类和接口/16.复合优于继承.html","tf":0.0035714285714285713}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"自":{"docs":{},"用":{"docs":{},"性":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"机":{"docs":{},"械":{"docs":{},"的":{"docs":{},"消":{"docs":{},"除":{"docs":{},"类":{"docs":{},"中":{"docs":{},"可":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"自":{"docs":{},"用":{"docs":{},"特":{"docs":{},"征":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"改":{"docs":{},"变":{"docs":{},"它":{"docs":{},"们":{"docs":{},"的":{"docs":{},"行":{"docs":{},"为":{"docs":{},"。":{"docs":{},"将":{"docs":{},"每":{"docs":{},"个":{"docs":{},"可":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"体":{"docs":{},"移":{"docs":{},"动":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"私":{"docs":{},"有":{"docs":{},"的":{"docs":{},"辅":{"docs":{},"助":{"docs":{},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"。":{"docs":{},"并":{"docs":{},"且":{"docs":{},"让":{"docs":{},"每":{"docs":{},"个":{"docs":{},"可":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"调":{"docs":{},"用":{"docs":{},"它":{"docs":{},"的":{"docs":{},"私":{"docs":{},"有":{"docs":{},"辅":{"docs":{},"助":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{},"然":{"docs":{},"后":{"docs":{},"，":{"docs":{},"用":{"docs":{},"”":{"docs":{},"直":{"docs":{},"接":{"docs":{},"调":{"docs":{},"用":{"docs":{},"可":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"私":{"docs":{},"有":{"docs":{},"辅":{"docs":{},"助":{"docs":{},"方":{"docs":{},"法":{"docs":{},"“":{"docs":{},"来":{"docs":{},"代":{"docs":{},"替":{"docs":{},"”":{"docs":{},"可":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"自":{"docs":{},"用":{"docs":{},"调":{"docs":{},"用":{"docs":{},"“":{"docs":{},"。":{"docs":{"第三章 类和接口/17.要么为继承而设计，并提供文档说明，要么就禁止继承.html":{"ref":"第三章 类和接口/17.要么为继承而设计，并提供文档说明，要么就禁止继承.html","tf":0.09090909090909091}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"上":{"docs":{},"面":{"docs":{},"的":{"docs":{},"分":{"docs":{},"析":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"出":{"docs":{},"禁":{"docs":{},"止":{"docs":{},"创":{"docs":{},"建":{"docs":{},"参":{"docs":{},"数":{"docs":{},"化":{"docs":{},"类":{"docs":{},"型":{"docs":{},"数":{"docs":{},"组":{"docs":{},"等":{"docs":{},"情":{"docs":{},"况":{"docs":{},"是":{"docs":{},"合":{"docs":{},"理":{"docs":{},"的":{"docs":{},"，":{"docs":{},"能":{"docs":{},"够":{"docs":{},"将":{"docs":{},"错":{"docs":{},"误":{"docs":{},"暴":{"docs":{},"露":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"期":{"docs":{},"。":{"docs":{},"像":{"docs":{},"e":{"docs":{},"、":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"、":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"应":{"docs":{},"称":{"docs":{},"作":{"docs":{},"不":{"docs":{},"可":{"docs":{},"具":{"docs":{},"体":{"docs":{},"化":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"。":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"可":{"docs":{},"具":{"docs":{},"体":{"docs":{},"化":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"化":{"docs":{},"类":{"docs":{},"型":{"docs":{},"是":{"docs":{},"无":{"docs":{},"限":{"docs":{},"制":{"docs":{},"的":{"docs":{},"通":{"docs":{},"配":{"docs":{},"符":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"如":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"和":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"。":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"不":{"docs":{},"常":{"docs":{},"用":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"创":{"docs":{},"建":{"docs":{},"无":{"docs":{},"限":{"docs":{},"制":{"docs":{},"通":{"docs":{},"配":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"是":{"docs":{},"合":{"docs":{},"法":{"docs":{},"的":{"docs":{},"。":{"docs":{"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"例":{"docs":{},"，":{"docs":{},"对":{"docs":{},"数":{"docs":{},"组":{"docs":{},"标":{"docs":{},"准":{"docs":{},"的":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"模":{"docs":{},"式":{"docs":{},"并":{"docs":{},"不":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"冗":{"docs":{},"余":{"docs":{},"的":{"docs":{},"检":{"docs":{},"查":{"docs":{},"，":{"docs":{},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{},"会":{"docs":{},"对":{"docs":{},"其":{"docs":{},"进":{"docs":{},"行":{"docs":{},"优":{"docs":{},"化":{"docs":{},"；":{"docs":{"第八章 异常/57.只针对异常的情况才使用异常.html":{"ref":"第八章 异常/57.只针对异常的情况才使用异常.html","tf":0.043478260869565216}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"常":{"docs":{},"量":{"docs":{},"以":{"docs":{},"下":{"docs":{},"不":{"docs":{},"足":{"docs":{},"：":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}}},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"采":{"docs":{},"用":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"来":{"docs":{},"解":{"docs":{},"决":{"docs":{},"。":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}}}}}}}}}}},"命":{"docs":{},"名":{"docs":{},"模":{"docs":{},"式":{"docs":{},"带":{"docs":{},"来":{"docs":{},"的":{"docs":{},"这":{"docs":{},"些":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"该":{"docs":{},"如":{"docs":{},"何":{"docs":{},"解":{"docs":{},"决":{"docs":{},"？":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"，":{"docs":{},"最":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"一":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"是":{"docs":{},"：":{"docs":{"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.011904761904761904}}}}}}}}}}}}}}}}}}}}}}}},"关":{"docs":{},"于":{"docs":{},"程":{"docs":{},"序":{"docs":{},"文":{"docs":{},"档":{"docs":{},"的":{"docs":{},"格":{"docs":{},"言":{"docs":{},"：":{"docs":{},"好":{"docs":{},"的":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"文":{"docs":{},"档":{"docs":{},"应":{"docs":{},"该":{"docs":{},"描":{"docs":{},"述":{"docs":{},"一":{"docs":{},"个":{"docs":{},"给":{"docs":{},"定":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"做":{"docs":{},"了":{"docs":{},"什":{"docs":{},"么":{"docs":{},"工":{"docs":{},"作":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"描":{"docs":{},"述":{"docs":{},"它":{"docs":{},"是":{"docs":{},"如":{"docs":{},"何":{"docs":{},"做":{"docs":{},"到":{"docs":{},"的":{"docs":{},"。":{"docs":{},"由":{"docs":{},"此":{"docs":{},"看":{"docs":{},"来":{"docs":{},"，":{"docs":{},"上":{"docs":{},"面":{"docs":{},"的":{"docs":{},"这":{"docs":{},"段":{"docs":{},"文":{"docs":{},"档":{"docs":{},"违":{"docs":{},"背":{"docs":{},"了":{"docs":{},"这":{"docs":{},"一":{"docs":{},"格":{"docs":{},"言":{"docs":{},"，":{"docs":{},"这":{"docs":{},"正":{"docs":{},"是":{"docs":{},"继":{"docs":{},"承":{"docs":{},"破":{"docs":{},"坏":{"docs":{},"了":{"docs":{},"封":{"docs":{},"装":{"docs":{},"性":{"docs":{},"所":{"docs":{},"带":{"docs":{},"来":{"docs":{},"的":{"docs":{},"不":{"docs":{},"幸":{"docs":{},"后":{"docs":{},"果":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"在":{"docs":{},"上":{"docs":{},"面":{"docs":{},"这":{"docs":{},"段":{"docs":{},"文":{"docs":{},"档":{"docs":{},"中":{"docs":{},"它":{"docs":{},"必":{"docs":{},"须":{"docs":{},"要":{"docs":{},"说":{"docs":{},"明":{"docs":{},"清":{"docs":{},"楚":{"docs":{},"调":{"docs":{},"用":{"docs":{},"可":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"方":{"docs":{},"法":{"docs":{},"所":{"docs":{},"带":{"docs":{},"来":{"docs":{},"的":{"docs":{},"影":{"docs":{},"响":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"，":{"docs":{},"为":{"docs":{},"了":{"docs":{},"设":{"docs":{},"计":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"的":{"docs":{},"文":{"docs":{},"档":{"docs":{},"，":{"docs":{},"以":{"docs":{},"便":{"docs":{},"它":{"docs":{},"能":{"docs":{},"够":{"docs":{},"被":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"子":{"docs":{},"类":{"docs":{},"化":{"docs":{},"，":{"docs":{},"必":{"docs":{},"须":{"docs":{},"描":{"docs":{},"述":{"docs":{},"清":{"docs":{},"楚":{"docs":{},"那":{"docs":{},"些":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"未":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"细":{"docs":{},"节":{"docs":{},"。":{"docs":{"第三章 类和接口/17.要么为继承而设计，并提供文档说明，要么就禁止继承.html":{"ref":"第三章 类和接口/17.要么为继承而设计，并提供文档说明，要么就禁止继承.html","tf":0.09090909090909091}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"键":{"docs":{},"字":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"：":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"是":{"docs":{},"保":{"docs":{},"证":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"一":{"docs":{},"大":{"docs":{},"利":{"docs":{},"器":{"docs":{},"，":{"docs":{},"它":{"docs":{},"可":{"docs":{},"以":{"docs":{},"保":{"docs":{},"证":{"docs":{},"同":{"docs":{},"一":{"docs":{},"时":{"docs":{},"刻":{"docs":{},"，":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"可":{"docs":{},"以":{"docs":{},"执":{"docs":{},"行":{"docs":{},"某":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"和":{"docs":{},"修":{"docs":{},"改":{"docs":{},"某":{"docs":{},"一":{"docs":{},"个":{"docs":{},"可":{"docs":{},"变":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"仅":{"docs":{},"仅":{"docs":{},"将":{"docs":{},"它":{"docs":{},"理":{"docs":{},"解":{"docs":{},"成":{"docs":{},"是":{"docs":{},"互":{"docs":{},"斥":{"docs":{},"的":{"docs":{},"也":{"docs":{},"是":{"docs":{},"不":{"docs":{},"完":{"docs":{},"全":{"docs":{},"正":{"docs":{},"确":{"docs":{},"的":{"docs":{},"，":{"docs":{},"它":{"docs":{},"主":{"docs":{},"要":{"docs":{},"有":{"docs":{},"两":{"docs":{},"种":{"docs":{},"意":{"docs":{},"义":{"docs":{},"：":{"docs":{"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"：":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"最":{"docs":{},"重":{"docs":{},"要":{"docs":{},"的":{"docs":{},"功":{"docs":{},"能":{"docs":{},"是":{"docs":{},"能":{"docs":{},"够":{"docs":{},"保":{"docs":{},"证":{"docs":{},"数":{"docs":{},"据":{"docs":{},"可":{"docs":{},"见":{"docs":{},"性":{"docs":{},"，":{"docs":{},"当":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"修":{"docs":{},"改":{"docs":{},"可":{"docs":{},"变":{"docs":{},"数":{"docs":{},"据":{"docs":{},"后":{"docs":{},"，":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"会":{"docs":{},"立":{"docs":{},"刻":{"docs":{},"知":{"docs":{},"道":{"docs":{},"最":{"docs":{},"新":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"。":{"docs":{},"在":{"docs":{},"上":{"docs":{},"面":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"中":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"读":{"docs":{},"写":{"docs":{},"本":{"docs":{},"身":{"docs":{},"就":{"docs":{},"是":{"docs":{},"原":{"docs":{},"子":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"利":{"docs":{},"用":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"只":{"docs":{},"是":{"docs":{},"利":{"docs":{},"用":{"docs":{},"到":{"docs":{},"它":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"可":{"docs":{},"见":{"docs":{},"性":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"由":{"docs":{},"于":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"会":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"想":{"docs":{},"性":{"docs":{},"能":{"docs":{},"更":{"docs":{},"优":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"上":{"docs":{},"面":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"采":{"docs":{},"用":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"进":{"docs":{},"行":{"docs":{},"修":{"docs":{},"改":{"docs":{},"：":{"docs":{"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"将":{"docs":{},"不":{"docs":{},"会":{"docs":{},"如":{"docs":{},"预":{"docs":{},"期":{"docs":{},"执":{"docs":{},"行":{"docs":{},"；":{"docs":{"第三章 类和接口/17.要么为继承而设计，并提供文档说明，要么就禁止继承.html":{"ref":"第三章 类和接口/17.要么为继承而设计，并提供文档说明，要么就禁止继承.html","tf":0.09090909090909091}}}}}}}}}}},"的":{"docs":{},"文":{"docs":{},"档":{"docs":{},"注":{"docs":{},"释":{"docs":{},"应":{"docs":{},"该":{"docs":{},"简":{"docs":{},"洁":{"docs":{},"的":{"docs":{},"描":{"docs":{},"述":{"docs":{},"出":{"docs":{},"它":{"docs":{},"和":{"docs":{},"客":{"docs":{},"户":{"docs":{},"端":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"约":{"docs":{},"定":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"约":{"docs":{},"定":{"docs":{},"应":{"docs":{},"该":{"docs":{},"说":{"docs":{},"明":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"做":{"docs":{},"了":{"docs":{},"什":{"docs":{},"么":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"说":{"docs":{},"明":{"docs":{},"它":{"docs":{},"是":{"docs":{},"如":{"docs":{},"何":{"docs":{},"完":{"docs":{},"成":{"docs":{},"这":{"docs":{},"项":{"docs":{},"工":{"docs":{},"作":{"docs":{},"的":{"docs":{},"。":{"docs":{},"文":{"docs":{},"档":{"docs":{},"注":{"docs":{},"释":{"docs":{},"应":{"docs":{},"该":{"docs":{},"列":{"docs":{},"举":{"docs":{},"如":{"docs":{},"下":{"docs":{},"内":{"docs":{},"容":{"docs":{},"：":{"docs":{"第六章 方法/44.API需要编写文档注释.html":{"ref":"第六章 方法/44.API需要编写文档注释.html","tf":0.03333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{},"域":{"docs":{},"的":{"docs":{},"名":{"docs":{},"称":{"docs":{"第七章 通用程序设计/56.遵守普遍接受的命名规则.html":{"ref":"第七章 通用程序设计/56.遵守普遍接受的命名规则.html","tf":0.02857142857142857}},"与":{"docs":{},"类":{"docs":{},"和":{"docs":{},"接":{"docs":{},"口":{"docs":{},"的":{"docs":{},"名":{"docs":{},"称":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"都":{"docs":{},"遵":{"docs":{},"守":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"字":{"docs":{},"面":{"docs":{},"惯":{"docs":{},"例":{"docs":{},"，":{"docs":{},"只":{"docs":{},"不":{"docs":{},"过":{"docs":{},"方":{"docs":{},"法":{"docs":{},"或":{"docs":{},"者":{"docs":{},"域":{"docs":{},"的":{"docs":{},"名":{"docs":{},"称":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"母":{"docs":{},"应":{"docs":{},"该":{"docs":{},"小":{"docs":{},"写":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"，":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"。":{"docs":{"第七章 通用程序设计/56.遵守普遍接受的命名规则.html":{"ref":"第七章 通用程序设计/56.遵守普遍接受的命名规则.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"接":{"docs":{},"口":{"docs":{},"只":{"docs":{},"适":{"docs":{},"用":{"docs":{},"被":{"docs":{},"用":{"docs":{},"来":{"docs":{},"定":{"docs":{},"义":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"不":{"docs":{},"应":{"docs":{},"该":{"docs":{},"被":{"docs":{},"用":{"docs":{},"来":{"docs":{},"导":{"docs":{},"出":{"docs":{},"常":{"docs":{},"量":{"docs":{},"。":{"docs":{"第三章 类和接口/19.接口只用于定义类型.html":{"ref":"第三章 类和接口/19.接口只用于定义类型.html","tf":0.02702702702702703}}}}}}}}}}}}}}}}}}}}}}}}}},"同":{"docs":{},"样":{"docs":{},"的":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"都":{"docs":{},"用":{"docs":{},"到":{"docs":{},"了":{"docs":{},"某":{"docs":{},"些":{"docs":{},"数":{"docs":{},"据":{"docs":{},"域":{"docs":{},"，":{"docs":{},"就":{"docs":{},"应":{"docs":{},"该":{"docs":{},"把":{"docs":{},"他":{"docs":{},"们":{"docs":{},"放":{"docs":{},"在":{"docs":{},"这":{"docs":{},"个":{"docs":{},"类":{"docs":{},"中":{"docs":{},"。":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"j":{"docs":{},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}},"重":{"docs":{},"要":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"在":{"docs":{},"没":{"docs":{},"有":{"docs":{},"认":{"docs":{},"真":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"好":{"docs":{},"默":{"docs":{},"认":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"形":{"docs":{},"式":{"docs":{},"是":{"docs":{},"否":{"docs":{},"合":{"docs":{},"适":{"docs":{},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"不":{"docs":{},"要":{"docs":{},"贸":{"docs":{},"然":{"docs":{},"使":{"docs":{},"用":{"docs":{},"默":{"docs":{},"认":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"行":{"docs":{},"为":{"docs":{},"。":{"docs":{},"在":{"docs":{},"作":{"docs":{},"出":{"docs":{},"决":{"docs":{},"定":{"docs":{},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"你":{"docs":{},"需":{"docs":{},"要":{"docs":{},"从":{"docs":{},"灵":{"docs":{},"活":{"docs":{},"性":{"docs":{},"、":{"docs":{},"性":{"docs":{},"能":{"docs":{},"和":{"docs":{},"正":{"docs":{},"确":{"docs":{},"性":{"docs":{},"多":{"docs":{},"个":{"docs":{},"角":{"docs":{},"度":{"docs":{},"对":{"docs":{},"这":{"docs":{},"种":{"docs":{},"编":{"docs":{},"码":{"docs":{},"形":{"docs":{},"式":{"docs":{},"进":{"docs":{},"行":{"docs":{},"考":{"docs":{},"察":{"docs":{},"。":{"docs":{},"一":{"docs":{},"般":{"docs":{},"来":{"docs":{},"讲":{"docs":{},"，":{"docs":{},"只":{"docs":{},"有":{"docs":{},"当":{"docs":{},"你":{"docs":{},"自":{"docs":{},"行":{"docs":{},"设":{"docs":{},"计":{"docs":{},"的":{"docs":{},"自":{"docs":{},"定":{"docs":{},"义":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"形":{"docs":{},"式":{"docs":{},"与":{"docs":{},"默":{"docs":{},"认":{"docs":{},"的":{"docs":{},"形":{"docs":{},"式":{"docs":{},"基":{"docs":{},"本":{"docs":{},"相":{"docs":{},"同":{"docs":{},"时":{"docs":{},"，":{"docs":{},"才":{"docs":{},"能":{"docs":{},"接":{"docs":{},"受":{"docs":{},"默":{"docs":{},"认":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"形":{"docs":{},"式":{"docs":{},"。":{"docs":{},"选":{"docs":{},"择":{"docs":{},"合":{"docs":{},"适":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"有":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"注":{"docs":{},"意":{"docs":{},"事":{"docs":{},"项":{"docs":{},"？":{"docs":{"第十章 序列化/75.考虑使用自定义的序列化形式.html":{"ref":"第十章 序列化/75.考虑使用自定义的序列化形式.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"步":{"docs":{},"不":{"docs":{},"仅":{"docs":{},"可":{"docs":{},"以":{"docs":{},"阻":{"docs":{},"止":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"看":{"docs":{},"到":{"docs":{},"对":{"docs":{},"象":{"docs":{},"处":{"docs":{},"于":{"docs":{},"不":{"docs":{},"一":{"docs":{},"致":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"还":{"docs":{},"可":{"docs":{},"以":{"docs":{},"保":{"docs":{},"证":{"docs":{},"进":{"docs":{},"入":{"docs":{},"同":{"docs":{},"步":{"docs":{},"方":{"docs":{},"法":{"docs":{},"或":{"docs":{},"者":{"docs":{},"同":{"docs":{},"步":{"docs":{},"代":{"docs":{},"码":{"docs":{},"块":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"都":{"docs":{},"看":{"docs":{},"到":{"docs":{},"由":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"锁":{"docs":{},"保":{"docs":{},"护":{"docs":{},"的":{"docs":{},"之":{"docs":{},"前":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"修":{"docs":{},"改":{"docs":{},"效":{"docs":{},"果":{"docs":{},"。":{"docs":{"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"器":{"docs":{},"：":{"docs":{},"同":{"docs":{},"步":{"docs":{},"器":{"docs":{},"能":{"docs":{},"够":{"docs":{},"完":{"docs":{},"成":{"docs":{},"线":{"docs":{},"程":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"协":{"docs":{},"调":{"docs":{},"，":{"docs":{},"最":{"docs":{},"常":{"docs":{},"用":{"docs":{},"的":{"docs":{},"有":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"和":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"，":{"docs":{},"较":{"docs":{},"不":{"docs":{},"常":{"docs":{},"用":{"docs":{},"的":{"docs":{},"有":{"docs":{},"c":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"docs":{},"和":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"。":{"docs":{"第九章 并发/69.优先使用提供的并发工具.html":{"ref":"第九章 并发/69.优先使用提供的并发工具.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"：":{"docs":{},"在":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"域":{"docs":{},"值":{"docs":{},"得":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"同":{"docs":{},"步":{"docs":{},"方":{"docs":{},"法":{"docs":{},"从":{"docs":{},"而":{"docs":{},"保":{"docs":{},"证":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"性":{"docs":{},"，":{"docs":{},"如":{"docs":{},"：":{"docs":{"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"域":{"docs":{},"不":{"docs":{},"能":{"docs":{},"做":{"docs":{},"成":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"的":{"docs":{},"，":{"docs":{},"除":{"docs":{},"非":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"域":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"相":{"docs":{},"关":{"docs":{},"域":{"docs":{},"，":{"docs":{},"那":{"docs":{},"就":{"docs":{},"会":{"docs":{},"需":{"docs":{},"要":{"docs":{},"增":{"docs":{},"加":{"docs":{},"更":{"docs":{},"多":{"docs":{},"的":{"docs":{},"样":{"docs":{},"板":{"docs":{},"代":{"docs":{},"码":{"docs":{},"；":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"所":{"docs":{},"修":{"docs":{},"饰":{"docs":{},"，":{"docs":{},"你":{"docs":{},"就":{"docs":{},"必":{"docs":{},"须":{"docs":{},"提":{"docs":{},"供":{"docs":{},"一":{"docs":{},"个":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{},"它":{"docs":{},"首":{"docs":{},"先":{"docs":{},"调":{"docs":{},"用":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"再":{"docs":{},"把":{"docs":{},"这":{"docs":{},"些":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{"第十章 序列化/75.考虑使用自定义的序列化形式.html":{"ref":"第十章 序列化/75.考虑使用自定义的序列化形式.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"进":{"docs":{},"行":{"docs":{},"恢":{"docs":{},"复":{"docs":{},"为":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"初":{"docs":{},"始":{"docs":{},"值":{"docs":{},"；":{"docs":{},"同":{"docs":{},"样":{"docs":{},"的":{"docs":{},"，":{"docs":{},"在":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"，":{"docs":{},"被":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"修":{"docs":{},"饰":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"域":{"docs":{},"会":{"docs":{},"被":{"docs":{},"省":{"docs":{},"略":{"docs":{},"掉":{"docs":{"第十章 序列化/75.考虑使用自定义的序列化形式.html":{"ref":"第十章 序列化/75.考虑使用自定义的序列化形式.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"增":{"docs":{},"加":{"docs":{},"了":{"docs":{},"内":{"docs":{},"存":{"docs":{},"的":{"docs":{},"占":{"docs":{},"用":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"实":{"docs":{},"例":{"docs":{},"承":{"docs":{},"担":{"docs":{},"着":{"docs":{},"属":{"docs":{},"于":{"docs":{},"其":{"docs":{},"他":{"docs":{},"风":{"docs":{},"格":{"docs":{},"的":{"docs":{},"不":{"docs":{},"相":{"docs":{},"关":{"docs":{},"域":{"docs":{},"；":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"多":{"docs":{},"个":{"docs":{},"实":{"docs":{},"现":{"docs":{},"乱":{"docs":{},"七":{"docs":{},"八":{"docs":{},"糟":{"docs":{},"地":{"docs":{},"挤":{"docs":{},"在":{"docs":{},"了":{"docs":{},"单":{"docs":{},"个":{"docs":{},"类":{"docs":{},"中":{"docs":{},"，":{"docs":{},"破":{"docs":{},"坏":{"docs":{},"了":{"docs":{},"可":{"docs":{},"读":{"docs":{},"性":{"docs":{},"；":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}},"程":{"docs":{},"序":{"docs":{},"员":{"docs":{},"可":{"docs":{},"以":{"docs":{},"独":{"docs":{},"立":{"docs":{},"的":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"层":{"docs":{},"次":{"docs":{},"结":{"docs":{},"构":{"docs":{},"。":{"docs":{},"并":{"docs":{},"且":{"docs":{},"不":{"docs":{},"用":{"docs":{},"访":{"docs":{},"问":{"docs":{},"根":{"docs":{},"类":{"docs":{},"的":{"docs":{},"源":{"docs":{},"代":{"docs":{},"码":{"docs":{},"就":{"docs":{},"能":{"docs":{},"相":{"docs":{},"互":{"docs":{},"操":{"docs":{},"作":{"docs":{},"；":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"据":{"docs":{},"类":{"docs":{},"型":{"docs":{},"没":{"docs":{},"有":{"docs":{},"提":{"docs":{},"供":{"docs":{},"任":{"docs":{},"何":{"docs":{},"关":{"docs":{},"于":{"docs":{},"其":{"docs":{},"风":{"docs":{},"格":{"docs":{},"的":{"docs":{},"线":{"docs":{},"索":{"docs":{},"；":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}},"组":{"docs":{},"和":{"docs":{},"泛":{"docs":{},"型":{"docs":{},"化":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"主":{"docs":{},"要":{"docs":{},"区":{"docs":{},"别":{"docs":{},"有":{"docs":{},"：":{"docs":{"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888}}}}}}}}}}},"的":{"docs":{},"列":{"docs":{},"表":{"docs":{},"在":{"docs":{},"实":{"docs":{},"际":{"docs":{},"使":{"docs":{},"用":{"docs":{},"中":{"docs":{},"经":{"docs":{},"常":{"docs":{},"会":{"docs":{},"被":{"docs":{},"用":{"docs":{},"来":{"docs":{},"装":{"docs":{},"载":{"docs":{},"数":{"docs":{},"据":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"不":{"docs":{},"清":{"docs":{},"楚":{"docs":{},"数":{"docs":{},"组":{"docs":{},"和":{"docs":{},"泛":{"docs":{},"型":{"docs":{},"化":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"区":{"docs":{},"别":{"docs":{},"，":{"docs":{},"经":{"docs":{},"常":{"docs":{},"会":{"docs":{},"造":{"docs":{},"成":{"docs":{},"数":{"docs":{},"组":{"docs":{},"和":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"的":{"docs":{},"混":{"docs":{},"用":{"docs":{},"；":{"docs":{"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"着":{"docs":{},"非":{"docs":{},"常":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"规":{"docs":{},"则":{"docs":{},"。":{"docs":{},"数":{"docs":{},"组":{"docs":{},"是":{"docs":{},"协":{"docs":{},"变":{"docs":{},"且":{"docs":{},"可":{"docs":{},"具":{"docs":{},"体":{"docs":{},"化":{"docs":{},"的":{"docs":{},"，":{"docs":{},"泛":{"docs":{},"型":{"docs":{},"是":{"docs":{},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"的":{"docs":{},"且":{"docs":{},"是":{"docs":{},"可":{"docs":{},"被":{"docs":{},"擦":{"docs":{},"除":{"docs":{},"的":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"数":{"docs":{},"组":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"安":{"docs":{},"全":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"没":{"docs":{},"有":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"安":{"docs":{},"全":{"docs":{},"，":{"docs":{},"反":{"docs":{},"之":{"docs":{},"，":{"docs":{},"泛":{"docs":{},"型":{"docs":{},"也":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"一":{"docs":{},"般":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"数":{"docs":{},"组":{"docs":{},"和":{"docs":{},"泛":{"docs":{},"型":{"docs":{},"不":{"docs":{},"能":{"docs":{},"很":{"docs":{},"好":{"docs":{},"的":{"docs":{},"混":{"docs":{},"合":{"docs":{},"使":{"docs":{},"用":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"发":{"docs":{},"现":{"docs":{},"自":{"docs":{},"己":{"docs":{},"将":{"docs":{},"它":{"docs":{},"们":{"docs":{},"混":{"docs":{},"合":{"docs":{},"起":{"docs":{},"来":{"docs":{},"使":{"docs":{},"用":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"得":{"docs":{},"到":{"docs":{},"了":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"错":{"docs":{},"误":{"docs":{},"或":{"docs":{},"警":{"docs":{},"告":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"就":{"docs":{},"要":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"用":{"docs":{},"列":{"docs":{},"表":{"docs":{},"代":{"docs":{},"替":{"docs":{},"数":{"docs":{},"组":{"docs":{},"。":{"docs":{"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"具":{"docs":{},"体":{"docs":{},"化":{"docs":{},"的":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{},"，":{"docs":{},"数":{"docs":{},"组":{"docs":{},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"才":{"docs":{},"会":{"docs":{},"约":{"docs":{},"束":{"docs":{},"数":{"docs":{},"据":{"docs":{},"类":{"docs":{},"型":{"docs":{},"是":{"docs":{},"否":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"。":{"docs":{},"泛":{"docs":{},"型":{"docs":{},"则":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"擦":{"docs":{},"除":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},")":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"泛":{"docs":{},"型":{"docs":{},"只":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"强":{"docs":{},"化":{"docs":{},"它":{"docs":{},"们":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"信":{"docs":{},"息":{"docs":{},"，":{"docs":{},"并":{"docs":{},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"丢":{"docs":{},"弃":{"docs":{},"（":{"docs":{},"或":{"docs":{},"者":{"docs":{},"擦":{"docs":{},"除":{"docs":{},"）":{"docs":{},"它":{"docs":{},"们":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"类":{"docs":{},"型":{"docs":{},"约":{"docs":{},"束":{"docs":{},"。":{"docs":{},"类":{"docs":{},"型":{"docs":{},"擦":{"docs":{},"除":{"docs":{},"主":{"docs":{},"要":{"docs":{},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"兼":{"docs":{},"容":{"docs":{},"之":{"docs":{},"前":{"docs":{},"没":{"docs":{},"有":{"docs":{},"泛":{"docs":{},"型":{"docs":{},"特":{"docs":{},"性":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"。":{"docs":{"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"协":{"docs":{},"变":{"docs":{},"的":{"docs":{},"而":{"docs":{},"泛":{"docs":{},"型":{"docs":{},"是":{"docs":{},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"的":{"docs":{},"，":{"docs":{},"协":{"docs":{},"变":{"docs":{},"的":{"docs":{},"意":{"docs":{},"思":{"docs":{},"是":{"docs":{},"如":{"docs":{},"果":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"为":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"的":{"docs":{},"子":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"数":{"docs":{},"组":{"docs":{},"类":{"docs":{},"型":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"[":{"docs":{},"]":{"docs":{},"就":{"docs":{},"是":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"[":{"docs":{},"]":{"docs":{},"的":{"docs":{},"子":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"的":{"docs":{},"意":{"docs":{},"思":{"docs":{},"是":{"docs":{},"对":{"docs":{},"于":{"docs":{},"任":{"docs":{},"意":{"docs":{},"两":{"docs":{},"个":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"1":{"docs":{},"和":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"2":{"docs":{},"，":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"既":{"docs":{},"不":{"docs":{},"是":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"的":{"docs":{},"子":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"也":{"docs":{},"不":{"docs":{},"是":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"的":{"docs":{},"超":{"docs":{},"类":{"docs":{},"型":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"下":{"docs":{},"面":{"docs":{},"这":{"docs":{},"个":{"docs":{},"例":{"docs":{},"子":{"docs":{},"：":{"docs":{"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"编":{"docs":{},"译":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"会":{"docs":{},"出":{"docs":{},"现":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"异":{"docs":{},"常":{"docs":{"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}}}}}}}}}}},"索":{"docs":{},"引":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"与":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"序":{"docs":{},"数":{"docs":{},"强":{"docs":{},"依":{"docs":{},"赖":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}}}}}}}}}}}}}}}}}}},"无":{"docs":{},"法":{"docs":{},"给":{"docs":{},"标":{"docs":{},"签":{"docs":{},"类":{"docs":{},"添":{"docs":{},"加":{"docs":{},"风":{"docs":{},"格":{"docs":{},"，":{"docs":{},"除":{"docs":{},"非":{"docs":{},"可":{"docs":{},"以":{"docs":{},"修":{"docs":{},"改":{"docs":{},"它":{"docs":{},"的":{"docs":{},"源":{"docs":{},"文":{"docs":{},"件":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"一":{"docs":{},"定":{"docs":{},"要":{"docs":{},"添":{"docs":{},"加":{"docs":{},"风":{"docs":{},"格":{"docs":{},"，":{"docs":{},"就":{"docs":{},"必":{"docs":{},"须":{"docs":{},"记":{"docs":{},"得":{"docs":{},"给":{"docs":{},"每":{"docs":{},"个":{"docs":{},"条":{"docs":{},"件":{"docs":{},"语":{"docs":{},"句":{"docs":{},"都":{"docs":{},"添":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{},"条":{"docs":{},"件":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"类":{"docs":{},"就":{"docs":{},"会":{"docs":{},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"失":{"docs":{},"败":{"docs":{},"；":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"确":{"docs":{},"保":{"docs":{},"它":{"docs":{},"们":{"docs":{},"只":{"docs":{},"用":{"docs":{},"于":{"docs":{},"相":{"docs":{},"应":{"docs":{},"的":{"docs":{},"程":{"docs":{},"序":{"docs":{},"元":{"docs":{},"素":{"docs":{},"上":{"docs":{},"，":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}},"限":{"docs":{},"制":{"docs":{},"通":{"docs":{},"配":{"docs":{},"符":{"docs":{"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082}}}}}}},"条":{"docs":{},"件":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"（":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886}}}}}}}}}}}}}}}}}}}}},"论":{"docs":{},"你":{"docs":{},"选":{"docs":{},"择":{"docs":{},"了":{"docs":{},"哪":{"docs":{},"种":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"形":{"docs":{},"式":{"docs":{},"，":{"docs":{},"都":{"docs":{},"要":{"docs":{},"为":{"docs":{},"自":{"docs":{},"己":{"docs":{},"编":{"docs":{},"写":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"可":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"的":{"docs":{},"类":{"docs":{},"声":{"docs":{},"明":{"docs":{},"一":{"docs":{},"个":{"docs":{},"显":{"docs":{},"式":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"版":{"docs":{},"本":{"docs":{},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{},"。":{"docs":{},"这":{"docs":{},"样":{"docs":{},"可":{"docs":{},"以":{"docs":{},"避":{"docs":{},"免":{"docs":{},"序":{"docs":{},"列":{"docs":{},"版":{"docs":{},"本":{"docs":{},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{},"成":{"docs":{},"为":{"docs":{},"潜":{"docs":{},"在":{"docs":{},"的":{"docs":{},"不":{"docs":{},"兼":{"docs":{},"容":{"docs":{},"根":{"docs":{},"源":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"也":{"docs":{},"会":{"docs":{},"带":{"docs":{},"来":{"docs":{},"小":{"docs":{},"小":{"docs":{},"的":{"docs":{},"性":{"docs":{},"能":{"docs":{},"好":{"docs":{},"处":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"去":{"docs":{},"算":{"docs":{},"序":{"docs":{},"列":{"docs":{},"版":{"docs":{},"本":{"docs":{},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{},"。":{"docs":{"第十章 序列化/75.考虑使用自定义的序列化形式.html":{"ref":"第十章 序列化/75.考虑使用自定义的序列化形式.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"标":{"docs":{},"签":{"docs":{},"类":{"docs":{},"很":{"docs":{},"少":{"docs":{},"有":{"docs":{},"适":{"docs":{},"用":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"。":{"docs":{},"当":{"docs":{},"想":{"docs":{},"要":{"docs":{},"编":{"docs":{},"写":{"docs":{},"一":{"docs":{},"个":{"docs":{},"包":{"docs":{},"含":{"docs":{},"显":{"docs":{},"示":{"docs":{},"标":{"docs":{},"签":{"docs":{},"域":{"docs":{},"的":{"docs":{},"类":{"docs":{},"时":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"一":{"docs":{},"下":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"标":{"docs":{},"签":{"docs":{},"是":{"docs":{},"否":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"取":{"docs":{},"消":{"docs":{},"，":{"docs":{},"是":{"docs":{},"否":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"类":{"docs":{},"层":{"docs":{},"次":{"docs":{},"来":{"docs":{},"代":{"docs":{},"替":{"docs":{},"。":{"docs":{},"当":{"docs":{},"遇":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"包":{"docs":{},"含":{"docs":{},"标":{"docs":{},"签":{"docs":{},"域":{"docs":{},"的":{"docs":{},"现":{"docs":{},"有":{"docs":{},"类":{"docs":{},"时":{"docs":{},"，":{"docs":{},"就":{"docs":{},"要":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"一":{"docs":{},"下":{"docs":{},"将":{"docs":{},"它":{"docs":{},"重":{"docs":{},"构":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"层":{"docs":{},"次":{"docs":{},"结":{"docs":{},"构":{"docs":{},"中":{"docs":{},"去":{"docs":{},"。":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"过":{"docs":{},"于":{"docs":{},"冗":{"docs":{},"长":{"docs":{},"、":{"docs":{},"容":{"docs":{},"易":{"docs":{},"出":{"docs":{},"错":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"效":{"docs":{},"率":{"docs":{},"低":{"docs":{},"下":{"docs":{},"。":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}},"每":{"docs":{},"个":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"都":{"docs":{},"配":{"docs":{},"有":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"类":{"docs":{},"，":{"docs":{},"这":{"docs":{},"些":{"docs":{},"类":{"docs":{},"都":{"docs":{},"没":{"docs":{},"有":{"docs":{},"受":{"docs":{},"到":{"docs":{},"不":{"docs":{},"相":{"docs":{},"关":{"docs":{},"域":{"docs":{},"的":{"docs":{},"拖":{"docs":{},"累":{"docs":{},"。":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"域":{"docs":{},"都":{"docs":{},"是":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"的":{"docs":{},"。":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"确":{"docs":{},"保":{"docs":{},"每":{"docs":{},"个":{"docs":{},"类":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"都":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"它":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"域":{"docs":{},"；":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"都":{"docs":{},"应":{"docs":{},"该":{"docs":{},"利":{"docs":{},"用":{"docs":{},"严":{"docs":{},"谨":{"docs":{},"的":{"docs":{},"说":{"docs":{},"明":{"docs":{},"或":{"docs":{},"者":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"注":{"docs":{},"解":{"docs":{},"，":{"docs":{},"清":{"docs":{},"楚":{"docs":{},"地":{"docs":{},"在":{"docs":{},"文":{"docs":{},"档":{"docs":{},"中":{"docs":{},"说":{"docs":{},"明":{"docs":{},"它":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"属":{"docs":{},"性":{"docs":{},"。":{"docs":{},"有":{"docs":{},"条":{"docs":{},"件":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"类":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"说":{"docs":{},"明":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"方":{"docs":{},"法":{"docs":{},"需":{"docs":{},"要":{"docs":{},"同":{"docs":{},"步":{"docs":{},"访":{"docs":{},"问":{"docs":{},"，":{"docs":{},"以":{"docs":{},"及":{"docs":{},"获":{"docs":{},"得":{"docs":{},"哪":{"docs":{},"把":{"docs":{},"锁":{"docs":{},"。":{"docs":{},"无":{"docs":{},"条":{"docs":{},"件":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"类":{"docs":{},"可":{"docs":{},"以":{"docs":{},"采":{"docs":{},"用":{"docs":{},"私":{"docs":{},"有":{"docs":{},"锁":{"docs":{},"对":{"docs":{},"象":{"docs":{},"来":{"docs":{},"防":{"docs":{},"止":{"docs":{},"“":{"docs":{},"拒":{"docs":{},"绝":{"docs":{},"服":{"docs":{},"务":{"docs":{},"攻":{"docs":{},"击":{"docs":{},"”":{"docs":{},"。":{"docs":{},"涉":{"docs":{},"及":{"docs":{},"到":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"严":{"docs":{},"格":{"docs":{},"按":{"docs":{},"照":{"docs":{},"规":{"docs":{},"范":{"docs":{},"编":{"docs":{},"写":{"docs":{},"文":{"docs":{},"档":{"docs":{},"。":{"docs":{"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"泛":{"docs":{},"型":{"docs":{},"都":{"docs":{},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"个":{"docs":{},"原":{"docs":{},"生":{"docs":{},"态":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"即":{"docs":{},"不":{"docs":{},"带":{"docs":{},"任":{"docs":{},"何":{"docs":{},"实":{"docs":{},"际":{"docs":{},"类":{"docs":{},"型":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"泛":{"docs":{},"型":{"docs":{},"名":{"docs":{},"称":{"docs":{},"，":{"docs":{},"如":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"原":{"docs":{},"生":{"docs":{},"态":{"docs":{},"类":{"docs":{},"型":{"docs":{},"是":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"。":{"docs":{"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"基":{"docs":{},"本":{"docs":{},"类":{"docs":{},"型":{"docs":{},"都":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"称":{"docs":{},"为":{"docs":{},"装":{"docs":{},"箱":{"docs":{},"基":{"docs":{},"本":{"docs":{},"类":{"docs":{},"型":{"docs":{},"（":{"docs":{},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{"第七章 通用程序设计/49.基本类型优先于装箱基本类型.html":{"ref":"第七章 通用程序设计/49.基本类型优先于装箱基本类型.html","tf":0.05555555555555555}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"组":{"docs":{},"成":{"docs":{},"部":{"docs":{},"分":{"docs":{},"通":{"docs":{},"常":{"docs":{},"都":{"docs":{},"应":{"docs":{},"该":{"docs":{},"由":{"docs":{},"一":{"docs":{},"个":{"docs":{},"单":{"docs":{},"词":{"docs":{},"或":{"docs":{},"者":{"docs":{},"一":{"docs":{},"个":{"docs":{},"缩":{"docs":{},"写":{"docs":{},"词":{"docs":{},"组":{"docs":{},"成":{"docs":{},"；":{"docs":{"第七章 通用程序设计/56.遵守普遍接受的命名规则.html":{"ref":"第七章 通用程序设计/56.遵守普遍接受的命名规则.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}},"种":{"docs":{},"类":{"docs":{},"型":{"docs":{},"都":{"docs":{},"有":{"docs":{},"一":{"docs":{},"种":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"独":{"docs":{},"立":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"相":{"docs":{},"应":{"docs":{},"的":{"docs":{},"子":{"docs":{},"类":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"允":{"docs":{},"许":{"docs":{},"程":{"docs":{},"序":{"docs":{},"员":{"docs":{},"指":{"docs":{},"明":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"限":{"docs":{},"制":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"并":{"docs":{},"将":{"docs":{},"参":{"docs":{},"数":{"docs":{},"输":{"docs":{},"入":{"docs":{},"到":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"；":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"次":{"docs":{},"新":{"docs":{},"增":{"docs":{},"加":{"docs":{},"运":{"docs":{},"算":{"docs":{},"种":{"docs":{},"类":{"docs":{},"，":{"docs":{},"都":{"docs":{},"需":{"docs":{},"要":{"docs":{},"重":{"docs":{},"写":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"y":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"就":{"docs":{},"不":{"docs":{},"会":{"docs":{},"有":{"docs":{},"遗":{"docs":{},"漏":{"docs":{},"修":{"docs":{},"改":{"docs":{},"。":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"当":{"docs":{},"编":{"docs":{},"写":{"docs":{},"方":{"docs":{},"法":{"docs":{},"或":{"docs":{},"者":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"它":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"有":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"限":{"docs":{},"制":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"把":{"docs":{},"这":{"docs":{},"些":{"docs":{},"限":{"docs":{},"制":{"docs":{},"写":{"docs":{},"在":{"docs":{},"文":{"docs":{},"档":{"docs":{},"中":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"在":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"体":{"docs":{},"的":{"docs":{},"开":{"docs":{},"头":{"docs":{},"处":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"显":{"docs":{},"示":{"docs":{},"的":{"docs":{},"检":{"docs":{},"查":{"docs":{},"来":{"docs":{},"实":{"docs":{},"施":{"docs":{},"这":{"docs":{},"些":{"docs":{},"限":{"docs":{},"制":{"docs":{},"。":{"docs":{},"养":{"docs":{},"成":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"习":{"docs":{},"惯":{"docs":{},"是":{"docs":{},"非":{"docs":{},"常":{"docs":{},"重":{"docs":{},"要":{"docs":{},"的":{"docs":{},"。":{"docs":{"第六章 方法/38.检查方法参数的有效性.html":{"ref":"第六章 方法/38.检查方法参数的有效性.html","tf":0.125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"它":{"docs":{},"允":{"docs":{},"许":{"docs":{},"由":{"docs":{},"客":{"docs":{},"户":{"docs":{},"端":{"docs":{},"提":{"docs":{},"供":{"docs":{},"对":{"docs":{},"象":{"docs":{},"进":{"docs":{},"入":{"docs":{},"到":{"docs":{},"类":{"docs":{},"的":{"docs":{},"内":{"docs":{},"部":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"时":{"docs":{},"，":{"docs":{},"就":{"docs":{},"需":{"docs":{},"要":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"，":{"docs":{},"客":{"docs":{},"户":{"docs":{},"端":{"docs":{},"提":{"docs":{},"供":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"是":{"docs":{},"否":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"可":{"docs":{},"变":{"docs":{},"的":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"，":{"docs":{},"就":{"docs":{},"要":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"能":{"docs":{},"否":{"docs":{},"忍":{"docs":{},"受":{"docs":{},"对":{"docs":{},"象":{"docs":{},"可":{"docs":{},"变":{"docs":{},"时":{"docs":{},"，":{"docs":{},"对":{"docs":{},"类":{"docs":{},"的":{"docs":{},"内":{"docs":{},"部":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"发":{"docs":{},"生":{"docs":{},"改":{"docs":{},"变":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"能":{"docs":{},"，":{"docs":{},"则":{"docs":{},"要":{"docs":{},"在":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"或":{"docs":{},"者":{"docs":{},"方":{"docs":{},"法":{"docs":{},"上":{"docs":{},"对":{"docs":{},"外":{"docs":{},"部":{"docs":{},"对":{"docs":{},"象":{"docs":{},"进":{"docs":{},"行":{"docs":{},"保":{"docs":{},"护":{"docs":{},"性":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"，":{"docs":{},"让":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"后":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"进":{"docs":{},"入":{"docs":{},"到":{"docs":{},"类":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"原":{"docs":{},"始":{"docs":{},"的":{"docs":{},"可":{"docs":{},"变":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"使":{"docs":{},"用":{"docs":{},"外":{"docs":{},"部":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"作":{"docs":{},"为":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"或":{"docs":{},"者":{"docs":{},"作":{"docs":{},"为":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"的":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"，":{"docs":{},"就":{"docs":{},"应":{"docs":{},"该":{"docs":{},"意":{"docs":{},"识":{"docs":{},"到":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"在":{"docs":{},"插":{"docs":{},"入":{"docs":{},"之":{"docs":{},"后":{"docs":{},"再":{"docs":{},"被":{"docs":{},"修":{"docs":{},"改":{"docs":{},"，":{"docs":{},"相":{"docs":{},"应":{"docs":{},"的":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"或":{"docs":{},"者":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"就":{"docs":{},"会":{"docs":{},"遭":{"docs":{},"到":{"docs":{},"破":{"docs":{},"坏":{"docs":{},"。":{"docs":{"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"写":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"或":{"docs":{},"者":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"就":{"docs":{},"应":{"docs":{},"该":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"使":{"docs":{},"用":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"代":{"docs":{},"理":{"docs":{},"模":{"docs":{},"式":{"docs":{},"。":{"docs":{},"要":{"docs":{},"想":{"docs":{},"稳":{"docs":{},"健":{"docs":{},"地":{"docs":{},"将":{"docs":{},"带":{"docs":{},"有":{"docs":{},"重":{"docs":{},"要":{"docs":{},"约":{"docs":{},"束":{"docs":{},"条":{"docs":{},"件":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"时":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"模":{"docs":{},"式":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"最":{"docs":{},"容":{"docs":{},"易":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"首":{"docs":{},"先":{"docs":{},"要":{"docs":{},"为":{"docs":{},"标":{"docs":{},"签":{"docs":{},"类":{"docs":{},"中":{"docs":{},"的":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"都":{"docs":{},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"个":{"docs":{},"包":{"docs":{},"含":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{},"，":{"docs":{},"这":{"docs":{},"每":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"行":{"docs":{},"为":{"docs":{},"都":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"于":{"docs":{},"标":{"docs":{},"签":{"docs":{},"值":{"docs":{},"。":{"docs":{},"在":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"类":{"docs":{},"中":{"docs":{},"，":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"：":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"。":{"docs":{"第三章 类和接口/20.类层次优于标签类.html":{"ref":"第三章 类和接口/20.类层次优于标签类.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"具":{"docs":{},"体":{"docs":{},"策":{"docs":{},"略":{"docs":{},"类":{"docs":{},"往":{"docs":{},"往":{"docs":{},"使":{"docs":{},"用":{"docs":{},"匿":{"docs":{},"名":{"docs":{},"类":{"docs":{},"声":{"docs":{},"明":{"docs":{},"：":{"docs":{"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.007751937984496124}}}}}}}}}}}}}}}},"有":{"docs":{},"的":{"docs":{},"优":{"docs":{},"点":{"docs":{},"：":{"docs":{},"程":{"docs":{},"序":{"docs":{},"更":{"docs":{},"加":{"docs":{},"灵":{"docs":{},"活":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"其":{"docs":{},"他":{"docs":{},"代":{"docs":{},"码":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"是":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"接":{"docs":{},"口":{"docs":{},"中":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"当":{"docs":{},"你":{"docs":{},"想":{"docs":{},"改":{"docs":{},"变":{"docs":{},"具":{"docs":{},"体":{"docs":{},"实":{"docs":{},"现":{"docs":{},"类":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"这":{"docs":{},"里":{"docs":{},"将":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"换":{"docs":{},"成":{"docs":{},"了":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"，":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"改":{"docs":{},"变":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"，":{"docs":{},"对":{"docs":{},"其":{"docs":{},"他":{"docs":{},"地":{"docs":{},"方":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"而":{"docs":{},"言":{"docs":{},"是":{"docs":{},"无":{"docs":{},"感":{"docs":{},"知":{"docs":{},"的":{"docs":{},"，":{"docs":{},"并":{"docs":{},"不":{"docs":{},"会":{"docs":{},"影":{"docs":{},"响":{"docs":{},"其":{"docs":{},"他":{"docs":{},"地":{"docs":{},"方":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"第七章 通用程序设计/52.通过接口引用对象.html":{"ref":"第七章 通用程序设计/52.通过接口引用对象.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"函":{"docs":{},"数":{"docs":{},"指":{"docs":{},"针":{"docs":{},"的":{"docs":{},"主":{"docs":{},"要":{"docs":{},"作":{"docs":{},"用":{"docs":{},"就":{"docs":{},"是":{"docs":{},"实":{"docs":{},"现":{"docs":{},"策":{"docs":{},"略":{"docs":{},"模":{"docs":{},"式":{"docs":{},"，":{"docs":{},"为":{"docs":{},"了":{"docs":{},"在":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"中":{"docs":{},"实":{"docs":{},"现":{"docs":{},"这":{"docs":{},"种":{"docs":{},"模":{"docs":{},"式":{"docs":{},"，":{"docs":{},"要":{"docs":{},"声":{"docs":{},"名":{"docs":{},"一":{"docs":{},"个":{"docs":{},"接":{"docs":{},"口":{"docs":{},"来":{"docs":{},"表":{"docs":{},"示":{"docs":{},"策":{"docs":{},"略":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"为":{"docs":{},"每":{"docs":{},"个":{"docs":{},"具":{"docs":{},"体":{"docs":{},"策":{"docs":{},"略":{"docs":{},"声":{"docs":{},"名":{"docs":{},"一":{"docs":{},"个":{"docs":{},"实":{"docs":{},"现":{"docs":{},"了":{"docs":{},"该":{"docs":{},"接":{"docs":{},"口":{"docs":{},"的":{"docs":{},"类":{"docs":{},"；":{"docs":{"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"因":{"docs":{},"为":{"docs":{},"策":{"docs":{},"略":{"docs":{},"接":{"docs":{},"口":{"docs":{},"被":{"docs":{},"用":{"docs":{},"做":{"docs":{},"所":{"docs":{},"有":{"docs":{},"具":{"docs":{},"体":{"docs":{},"策":{"docs":{},"略":{"docs":{},"实":{"docs":{},"例":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"我":{"docs":{},"们":{"docs":{},"并":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"为":{"docs":{},"了":{"docs":{},"导":{"docs":{},"出":{"docs":{},"具":{"docs":{},"体":{"docs":{},"策":{"docs":{},"略":{"docs":{},"而":{"docs":{},"把":{"docs":{},"具":{"docs":{},"体":{"docs":{},"策":{"docs":{},"略":{"docs":{},"类":{"docs":{},"做":{"docs":{},"成":{"docs":{},"公":{"docs":{},"有":{"docs":{},"的":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"导":{"docs":{},"出":{"docs":{},"公":{"docs":{},"有":{"docs":{},"的":{"docs":{},"静":{"docs":{},"态":{"docs":{},"域":{"docs":{},"或":{"docs":{},"者":{"docs":{},"静":{"docs":{},"态":{"docs":{},"工":{"docs":{},"厂":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"其":{"docs":{},"类":{"docs":{},"型":{"docs":{},"是":{"docs":{},"策":{"docs":{},"略":{"docs":{},"接":{"docs":{},"口":{"docs":{},"，":{"docs":{},"具":{"docs":{},"体":{"docs":{},"的":{"docs":{},"策":{"docs":{},"略":{"docs":{},"类":{"docs":{},"可":{"docs":{},"以":{"docs":{},"是":{"docs":{},"宿":{"docs":{},"主":{"docs":{},"类":{"docs":{},"的":{"docs":{},"私":{"docs":{},"有":{"docs":{},"嵌":{"docs":{},"套":{"docs":{},"类":{"docs":{},"：":{"docs":{"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"常":{"docs":{},"量":{"docs":{},"是":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"常":{"docs":{},"量":{"docs":{},"，":{"docs":{},"被":{"docs":{},"编":{"docs":{},"译":{"docs":{},"到":{"docs":{},"使":{"docs":{},"用":{"docs":{},"它":{"docs":{},"们":{"docs":{},"的":{"docs":{},"客":{"docs":{},"户":{"docs":{},"端":{"docs":{},"中":{"docs":{},"。":{"docs":{},"若":{"docs":{},"与":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"常":{"docs":{},"量":{"docs":{},"关":{"docs":{},"联":{"docs":{},"的":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"发":{"docs":{},"生":{"docs":{},"了":{"docs":{},"变":{"docs":{},"化":{"docs":{},"，":{"docs":{},"客":{"docs":{},"户":{"docs":{},"端":{"docs":{},"需":{"docs":{},"重":{"docs":{},"新":{"docs":{},"编":{"docs":{},"译":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"它":{"docs":{},"们":{"docs":{},"的":{"docs":{},"行":{"docs":{},"为":{"docs":{},"就":{"docs":{},"不":{"docs":{},"确":{"docs":{},"定":{"docs":{},"；":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"此":{"docs":{},"，":{"docs":{},"为":{"docs":{},"了":{"docs":{},"让":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"d":{"docs":{},"更":{"docs":{},"加":{"docs":{},"安":{"docs":{},"全":{"docs":{},"可":{"docs":{},"靠":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"对":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"进":{"docs":{},"行":{"docs":{},"保":{"docs":{},"护":{"docs":{},"性":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"，":{"docs":{},"将":{"docs":{},"上":{"docs":{},"面":{"docs":{},"这":{"docs":{},"段":{"docs":{},"代":{"docs":{},"码":{"docs":{},"改":{"docs":{},"变":{"docs":{},"如":{"docs":{},"下":{"docs":{},"这":{"docs":{},"种":{"docs":{},"形":{"docs":{},"式":{"docs":{},"：":{"docs":{"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"会":{"docs":{},"妨":{"docs":{},"碍":{"docs":{},"该":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"使":{"docs":{},"用":{"docs":{},"；":{"docs":{"第八章 异常/62.每个方法抛出的异常都要有文档.html":{"ref":"第八章 异常/62.每个方法抛出的异常都要有文档.html","tf":0.1111111111111111}}}}}}}}}}}}}},"此":{"docs":{},"时":{"docs":{},"，":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"具":{"docs":{},"体":{"docs":{},"策":{"docs":{},"略":{"docs":{},"类":{"docs":{},"声":{"docs":{},"名":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"第三章 类和接口/21.用函数对象表示策略.html":{"ref":"第三章 类和接口/21.用函数对象表示策略.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}},"从":{"docs":{},"语":{"docs":{},"法":{"docs":{},"上":{"docs":{},"讲":{"docs":{},"，":{"docs":{},"静":{"docs":{},"态":{"docs":{},"成":{"docs":{},"员":{"docs":{},"类":{"docs":{},"和":{"docs":{},"非":{"docs":{},"静":{"docs":{},"态":{"docs":{},"成":{"docs":{},"员":{"docs":{},"类":{"docs":{},"之":{"docs":{},"间":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"的":{"docs":{},"区":{"docs":{},"别":{"docs":{},"是":{"docs":{},"，":{"docs":{},"静":{"docs":{},"态":{"docs":{},"成":{"docs":{},"员":{"docs":{},"类":{"docs":{},"的":{"docs":{},"声":{"docs":{},"明":{"docs":{},"中":{"docs":{},"包":{"docs":{},"含":{"docs":{},"了":{"docs":{},"修":{"docs":{},"饰":{"docs":{},"符":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"。":{"docs":{},"尽":{"docs":{},"管":{"docs":{},"他":{"docs":{},"们":{"docs":{},"的":{"docs":{},"语":{"docs":{},"法":{"docs":{},"非":{"docs":{},"常":{"docs":{},"的":{"docs":{},"相":{"docs":{},"似":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"这":{"docs":{},"两":{"docs":{},"种":{"docs":{},"嵌":{"docs":{},"套":{"docs":{},"类":{"docs":{},"有":{"docs":{},"很":{"docs":{},"大":{"docs":{},"的":{"docs":{},"不":{"docs":{},"同":{"docs":{},"。":{"docs":{},"非":{"docs":{},"静":{"docs":{},"态":{"docs":{},"成":{"docs":{},"员":{"docs":{},"类":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"实":{"docs":{},"例":{"docs":{},"都":{"docs":{},"隐":{"docs":{},"含":{"docs":{},"着":{"docs":{},"与":{"docs":{},"外":{"docs":{},"围":{"docs":{},"类":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"外":{"docs":{},"围":{"docs":{},"实":{"docs":{},"例":{"docs":{},"（":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"上":{"docs":{},"例":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"出":{"docs":{},"，":{"docs":{},"数":{"docs":{},"组":{"docs":{},"是":{"docs":{},"协":{"docs":{},"变":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"是":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"的":{"docs":{},"子":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"[":{"docs":{},"]":{"docs":{},"是":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{},"的":{"docs":{},"子":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"第":{"docs":{},"一":{"docs":{},"段":{"docs":{},"代":{"docs":{},"码":{"docs":{},"会":{"docs":{},"编":{"docs":{},"译":{"docs":{},"通":{"docs":{},"过":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"，":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"类":{"docs":{},"型":{"docs":{},"是":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"的":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"，":{"docs":{},"插":{"docs":{},"入":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"就":{"docs":{},"会":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"。":{"docs":{},"而":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"是":{"docs":{},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"的":{"docs":{},"，":{"docs":{},"泛":{"docs":{},"型":{"docs":{},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"会":{"docs":{},"类":{"docs":{},"型":{"docs":{},"擦":{"docs":{},"除":{"docs":{},"，":{"docs":{},"类":{"docs":{},"型":{"docs":{},"检":{"docs":{},"查":{"docs":{},"会":{"docs":{},"放":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"期":{"docs":{},"间":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"第":{"docs":{},"二":{"docs":{},"段":{"docs":{},"代":{"docs":{},"码":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"期":{"docs":{},"间":{"docs":{},"就":{"docs":{},"不":{"docs":{},"会":{"docs":{},"通":{"docs":{},"过":{"docs":{},"，":{"docs":{},"将":{"docs":{},"问":{"docs":{},"题":{"docs":{},"暴":{"docs":{},"露":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"期":{"docs":{},"间":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"才":{"docs":{},"是":{"docs":{},"可":{"docs":{},"靠":{"docs":{},"的":{"docs":{},"。":{"docs":{"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"面":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"出":{"docs":{},"，":{"docs":{},"不":{"docs":{},"推":{"docs":{},"荐":{"docs":{},"在":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"中":{"docs":{},"使":{"docs":{},"用":{"docs":{},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"来":{"docs":{},"判":{"docs":{},"断":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"行":{"docs":{},"为":{"docs":{},"。":{"docs":{},"那":{"docs":{},"什":{"docs":{},"么":{"docs":{},"时":{"docs":{},"候":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"呢":{"docs":{},"？":{"docs":{},"主":{"docs":{},"要":{"docs":{},"是":{"docs":{},"适":{"docs":{},"用":{"docs":{},"于":{"docs":{},"给":{"docs":{},"外":{"docs":{},"部":{"docs":{},"的":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"类":{"docs":{},"型":{"docs":{},"增":{"docs":{},"加":{"docs":{},"特":{"docs":{},"定":{"docs":{},"于":{"docs":{},"常":{"docs":{},"量":{"docs":{},"的":{"docs":{},"行":{"docs":{},"为":{"docs":{},"。":{"docs":{},"如":{"docs":{},"，":{"docs":{},"假":{"docs":{},"设":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"不":{"docs":{},"受":{"docs":{},"开":{"docs":{},"发":{"docs":{},"者":{"docs":{},"自":{"docs":{},"己":{"docs":{},"控":{"docs":{},"制":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"希":{"docs":{},"望":{"docs":{},"它":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"实":{"docs":{},"例":{"docs":{},"方":{"docs":{},"法":{"docs":{},"来":{"docs":{},"返":{"docs":{},"回":{"docs":{},"每":{"docs":{},"个":{"docs":{},"运":{"docs":{},"算":{"docs":{},"的":{"docs":{},"反":{"docs":{},"运":{"docs":{},"算":{"docs":{},"，":{"docs":{},"则":{"docs":{},"可":{"docs":{},"以":{"docs":{},"：":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"逻":{"docs":{},"辑":{"docs":{},"的":{"docs":{},"角":{"docs":{},"度":{"docs":{},"而":{"docs":{},"言":{"docs":{},"，":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"类":{"docs":{},"可":{"docs":{},"以":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"由":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"、":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"以":{"docs":{},"及":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"三":{"docs":{},"个":{"docs":{},"属":{"docs":{},"性":{"docs":{},"来":{"docs":{},"进":{"docs":{},"行":{"docs":{},"表":{"docs":{},"示":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"，":{"docs":{},"这":{"docs":{},"三":{"docs":{},"个":{"docs":{},"属":{"docs":{},"性":{"docs":{},"可":{"docs":{},"以":{"docs":{},"精":{"docs":{},"确":{"docs":{},"的":{"docs":{},"反":{"docs":{},"映":{"docs":{},"出":{"docs":{},"它":{"docs":{},"的":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"内":{"docs":{},"容":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"可":{"docs":{},"以":{"docs":{},"采":{"docs":{},"用":{"docs":{},"默":{"docs":{},"认":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"形":{"docs":{},"式":{"docs":{},"，":{"docs":{},"同":{"docs":{},"样":{"docs":{},"也":{"docs":{},"需":{"docs":{},"要":{"docs":{},"在":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"中":{"docs":{},"进":{"docs":{},"行":{"docs":{},"参":{"docs":{},"数":{"docs":{},"有":{"docs":{},"效":{"docs":{},"性":{"docs":{},"检":{"docs":{},"测":{"docs":{},"和":{"docs":{},"保":{"docs":{},"护":{"docs":{},"性":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"。":{"docs":{"第十章 序列化/75.考虑使用自定义的序列化形式.html":{"ref":"第十章 序列化/75.考虑使用自定义的序列化形式.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"假":{"docs":{},"设":{"docs":{},"调":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"（":{"docs":{},"如":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"）":{"docs":{},"，":{"docs":{},"该":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"入":{"docs":{},"参":{"docs":{},"需":{"docs":{},"要":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"实":{"docs":{},"例":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"已":{"docs":{},"经":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"确":{"docs":{},"定":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"创":{"docs":{},"建":{"docs":{},"该":{"docs":{},"类":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"时":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"采":{"docs":{},"用":{"docs":{},"创":{"docs":{},"建":{"docs":{},"匿":{"docs":{},"名":{"docs":{},"类":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"来":{"docs":{},"创":{"docs":{},"建":{"docs":{},"该":{"docs":{},"类":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"没":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"现":{"docs":{},"有":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"就":{"docs":{},"设":{"docs":{},"计":{"docs":{},"成":{"docs":{},"局":{"docs":{},"部":{"docs":{},"类":{"docs":{},"。":{"docs":{"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"匿":{"docs":{},"名":{"docs":{},"类":{"docs":{"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082}},"多":{"docs":{},"用":{"docs":{},"于":{"docs":{},"表":{"docs":{},"示":{"docs":{},"具":{"docs":{},"体":{"docs":{},"策":{"docs":{},"略":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"比":{"docs":{},"较":{"docs":{},"器":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"，":{"docs":{},"还":{"docs":{},"可":{"docs":{},"用":{"docs":{},"于":{"docs":{},"创":{"docs":{},"建":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"时":{"docs":{},"的":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"等":{"docs":{},"。":{"docs":{"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"没":{"docs":{},"有":{"docs":{},"类":{"docs":{},"名":{"docs":{},"，":{"docs":{},"它":{"docs":{},"不":{"docs":{},"是":{"docs":{},"外":{"docs":{},"围":{"docs":{},"类":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"成":{"docs":{},"员":{"docs":{},"，":{"docs":{},"并":{"docs":{},"不":{"docs":{},"与":{"docs":{},"其":{"docs":{},"他":{"docs":{},"的":{"docs":{},"成":{"docs":{},"员":{"docs":{},"一":{"docs":{},"起":{"docs":{},"被":{"docs":{},"声":{"docs":{},"明":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"在":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"同":{"docs":{},"时":{"docs":{},"被":{"docs":{},"声":{"docs":{},"明":{"docs":{},"和":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"。":{"docs":{},"匿":{"docs":{},"名":{"docs":{},"类":{"docs":{},"可":{"docs":{},"以":{"docs":{},"出":{"docs":{},"现":{"docs":{},"在":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"任":{"docs":{},"何":{"docs":{},"允":{"docs":{},"许":{"docs":{},"存":{"docs":{},"在":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"的":{"docs":{},"地":{"docs":{},"方":{"docs":{},"。":{"docs":{},"当":{"docs":{},"且":{"docs":{},"仅":{"docs":{},"当":{"docs":{},"匿":{"docs":{},"名":{"docs":{},"类":{"docs":{},"出":{"docs":{},"现":{"docs":{},"在":{"docs":{},"非":{"docs":{},"静":{"docs":{},"态":{"docs":{},"的":{"docs":{},"环":{"docs":{},"境":{"docs":{},"中":{"docs":{},"时":{"docs":{},"，":{"docs":{},"它":{"docs":{},"才":{"docs":{},"有":{"docs":{},"外":{"docs":{},"围":{"docs":{},"实":{"docs":{},"例":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"即":{"docs":{},"使":{"docs":{},"它":{"docs":{},"们":{"docs":{},"出":{"docs":{},"现":{"docs":{},"在":{"docs":{},"静":{"docs":{},"态":{"docs":{},"的":{"docs":{},"环":{"docs":{},"境":{"docs":{},"中":{"docs":{},"，":{"docs":{},"也":{"docs":{},"不":{"docs":{},"可":{"docs":{},"能":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"任":{"docs":{},"何":{"docs":{},"静":{"docs":{},"态":{"docs":{},"成":{"docs":{},"员":{"docs":{},"。":{"docs":{"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"适":{"docs":{},"用":{"docs":{},"性":{"docs":{},"受":{"docs":{},"到":{"docs":{},"诸":{"docs":{},"多":{"docs":{},"的":{"docs":{},"限":{"docs":{},"制":{"docs":{},"。":{"docs":{},"除":{"docs":{},"了":{"docs":{},"在":{"docs":{},"它":{"docs":{},"们":{"docs":{},"被":{"docs":{},"声":{"docs":{},"明":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"之":{"docs":{},"外":{"docs":{},"，":{"docs":{},"是":{"docs":{},"无":{"docs":{},"法":{"docs":{},"将":{"docs":{},"它":{"docs":{},"们":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"的":{"docs":{},"，":{"docs":{},"你":{"docs":{},"不":{"docs":{},"能":{"docs":{},"执":{"docs":{},"行":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"测":{"docs":{},"试":{"docs":{},"。":{"docs":{},"你":{"docs":{},"无":{"docs":{},"法":{"docs":{},"声":{"docs":{},"明":{"docs":{},"一":{"docs":{},"个":{"docs":{},"匿":{"docs":{},"名":{"docs":{},"类":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"多":{"docs":{},"个":{"docs":{},"接":{"docs":{},"口":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"，":{"docs":{},"并":{"docs":{},"同":{"docs":{},"时":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"类":{"docs":{},"和":{"docs":{},"实":{"docs":{},"现":{"docs":{},"接":{"docs":{},"口":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{},"匿":{"docs":{},"名":{"docs":{},"类":{"docs":{},"出":{"docs":{},"现":{"docs":{},"在":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"当":{"docs":{},"中":{"docs":{},"，":{"docs":{},"它":{"docs":{},"们":{"docs":{},"必":{"docs":{},"须":{"docs":{},"保":{"docs":{},"持":{"docs":{},"简":{"docs":{},"短":{"docs":{},"—":{"docs":{},"—":{"docs":{},"大":{"docs":{},"约":{"1":{"0":{"docs":{},"行":{"docs":{},"或":{"docs":{},"者":{"docs":{},"更":{"docs":{},"少":{"docs":{},"些":{"docs":{},"—":{"docs":{},"—":{"docs":{},"否":{"docs":{},"则":{"docs":{},"会":{"docs":{},"影":{"docs":{},"响":{"docs":{},"程":{"docs":{},"序":{"docs":{},"的":{"docs":{},"可":{"docs":{},"读":{"docs":{},"性":{"docs":{},"。":{"docs":{"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"局":{"docs":{},"部":{"docs":{},"类":{"docs":{"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082}},"是":{"docs":{},"四":{"docs":{},"种":{"docs":{},"嵌":{"docs":{},"套":{"docs":{},"类":{"docs":{},"中":{"docs":{},"用":{"docs":{},"的":{"docs":{},"最":{"docs":{},"少":{"docs":{},"的":{"docs":{},"类":{"docs":{},"。":{"docs":{},"在":{"docs":{},"任":{"docs":{},"何":{"docs":{},"“":{"docs":{},"可":{"docs":{},"以":{"docs":{},"声":{"docs":{},"明":{"docs":{},"局":{"docs":{},"部":{"docs":{},"变":{"docs":{},"量":{"docs":{},"”":{"docs":{},"的":{"docs":{},"地":{"docs":{},"方":{"docs":{},"，":{"docs":{},"都":{"docs":{},"可":{"docs":{},"以":{"docs":{},"声":{"docs":{},"明":{"docs":{},"局":{"docs":{},"部":{"docs":{},"类":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"局":{"docs":{},"部":{"docs":{},"类":{"docs":{},"也":{"docs":{},"遵":{"docs":{},"守":{"docs":{},"同":{"docs":{},"样":{"docs":{},"的":{"docs":{},"作":{"docs":{},"用":{"docs":{},"域":{"docs":{},"规":{"docs":{},"则":{"docs":{},"。":{"docs":{},"局":{"docs":{},"部":{"docs":{},"类":{"docs":{},"与":{"docs":{},"其":{"docs":{},"他":{"docs":{},"三":{"docs":{},"种":{"docs":{},"嵌":{"docs":{},"套":{"docs":{},"类":{"docs":{},"中":{"docs":{},"的":{"docs":{},"每":{"docs":{},"一":{"docs":{},"种":{"docs":{},"都":{"docs":{},"有":{"docs":{},"一":{"docs":{},"些":{"docs":{},"共":{"docs":{},"同":{"docs":{},"的":{"docs":{},"属":{"docs":{},"性":{"docs":{},"。":{"docs":{},"与":{"docs":{},"成":{"docs":{},"员":{"docs":{},"类":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"局":{"docs":{},"部":{"docs":{},"类":{"docs":{},"有":{"docs":{},"名":{"docs":{},"字":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"重":{"docs":{},"复":{"docs":{},"使":{"docs":{},"用":{"docs":{},"。":{"docs":{},"与":{"docs":{},"匿":{"docs":{},"名":{"docs":{},"类":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"只":{"docs":{},"有":{"docs":{},"当":{"docs":{},"局":{"docs":{},"部":{"docs":{},"类":{"docs":{},"实":{"docs":{},"在":{"docs":{},"非":{"docs":{},"静":{"docs":{},"态":{"docs":{},"环":{"docs":{},"境":{"docs":{},"中":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"才":{"docs":{},"有":{"docs":{},"外":{"docs":{},"围":{"docs":{},"实":{"docs":{},"例":{"docs":{},"，":{"docs":{},"它":{"docs":{},"们":{"docs":{},"也":{"docs":{},"不":{"docs":{},"能":{"docs":{},"包":{"docs":{},"含":{"docs":{},"静":{"docs":{},"态":{"docs":{},"成":{"docs":{},"员":{"docs":{},"。":{"docs":{},"与":{"docs":{},"匿":{"docs":{},"名":{"docs":{},"类":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"它":{"docs":{},"们":{"docs":{},"必":{"docs":{},"须":{"docs":{},"简":{"docs":{},"短":{"docs":{},"以":{"docs":{},"便":{"docs":{},"不":{"docs":{},"会":{"docs":{},"影":{"docs":{},"响":{"docs":{},"到":{"docs":{},"可":{"docs":{},"读":{"docs":{},"性":{"docs":{},"。":{"docs":{"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"嵌":{"docs":{},"套":{"docs":{},"类":{"docs":{},"（":{"docs":{},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082}}}}}}}}}},"私":{"docs":{},"有":{"docs":{},"静":{"docs":{},"态":{"docs":{},"成":{"docs":{},"员":{"docs":{},"类":{"docs":{},"的":{"docs":{},"一":{"docs":{},"种":{"docs":{},"常":{"docs":{},"见":{"docs":{},"用":{"docs":{},"法":{"docs":{},"用":{"docs":{},"来":{"docs":{},"代":{"docs":{},"表":{"docs":{},"外":{"docs":{},"围":{"docs":{},"类":{"docs":{},"所":{"docs":{},"代":{"docs":{},"表":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"组":{"docs":{},"件":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"一":{"docs":{},"个":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"实":{"docs":{},"例":{"docs":{},"，":{"docs":{},"他":{"docs":{},"把":{"docs":{},"键":{"docs":{},"和":{"docs":{},"值":{"docs":{},"关":{"docs":{},"联":{"docs":{},"起":{"docs":{},"来":{"docs":{},"。":{"docs":{},"许":{"docs":{},"多":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"内":{"docs":{},"部":{"docs":{},"都":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"对":{"docs":{},"应":{"docs":{},"于":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"中":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"。":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"每":{"docs":{},"个":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"都":{"docs":{},"与":{"docs":{},"一":{"docs":{},"个":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"关":{"docs":{},"联":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"上":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"并":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"访":{"docs":{},"问":{"docs":{},"该":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"非":{"docs":{},"静":{"docs":{},"态":{"docs":{},"成":{"docs":{},"员":{"docs":{},"来":{"docs":{},"表":{"docs":{},"示":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"是":{"docs":{},"很":{"docs":{},"浪":{"docs":{},"费":{"docs":{},"的":{"docs":{},"：":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"修":{"docs":{},"饰":{"docs":{},"的":{"docs":{},"静":{"docs":{},"态":{"docs":{},"成":{"docs":{},"员":{"docs":{},"类":{"docs":{},"是":{"docs":{},"最":{"docs":{},"佳":{"docs":{},"的":{"docs":{},"选":{"docs":{},"择":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"小":{"docs":{},"心":{"docs":{},"漏":{"docs":{},"掉":{"docs":{},"了":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"声":{"docs":{},"明":{"docs":{},"中":{"docs":{},"的":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"修":{"docs":{},"饰":{"docs":{},"符":{"docs":{},"，":{"docs":{},"该":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"依":{"docs":{},"然":{"docs":{},"可":{"docs":{},"以":{"docs":{},"工":{"docs":{},"作":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"每":{"docs":{},"个":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"中":{"docs":{},"将":{"docs":{},"会":{"docs":{},"包":{"docs":{},"含":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"向":{"docs":{},"该":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"就":{"docs":{},"浪":{"docs":{},"费":{"docs":{},"了":{"docs":{},"空":{"docs":{},"间":{"docs":{},"和":{"docs":{},"时":{"docs":{},"间":{"docs":{},"。":{"docs":{"第三章 类和接口/22.优先考虑静态成员类.html":{"ref":"第三章 类和接口/22.优先考虑静态成员类.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"锁":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"：":{"docs":{"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886}}}}}}}}}}},"上":{"docs":{},"例":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{},"原":{"docs":{},"生":{"docs":{},"态":{"docs":{},"泛":{"docs":{},"型":{"docs":{},"，":{"docs":{},"编":{"docs":{},"译":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"很":{"docs":{},"显":{"docs":{},"然":{"docs":{},"由":{"docs":{},"于":{"docs":{},"添":{"docs":{},"加":{"docs":{},"了":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"在":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"集":{"docs":{},"合":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"会":{"docs":{},"出":{"docs":{},"现":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"如":{"docs":{},"果":{"docs":{},"使":{"docs":{},"用":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"并":{"docs":{},"不":{"docs":{},"是":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"的":{"docs":{},"子":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"编":{"docs":{},"译":{"docs":{},"就":{"docs":{},"不":{"docs":{},"会":{"docs":{},"通":{"docs":{},"过":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"就":{"docs":{},"更":{"docs":{},"加":{"docs":{},"安":{"docs":{},"全":{"docs":{},"。":{"docs":{"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{},"反":{"docs":{},"射":{"docs":{},"，":{"docs":{},"让":{"docs":{},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{},"@":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"注":{"docs":{},"解":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"能":{"docs":{},"够":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"统":{"docs":{},"计":{"docs":{},"了":{"docs":{},"被":{"docs":{},"@":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"标":{"docs":{},"注":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"以":{"docs":{},"及":{"docs":{},"方":{"docs":{},"法":{"docs":{},"成":{"docs":{},"功":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"出":{"docs":{},"，":{"docs":{},"只":{"docs":{},"有":{"docs":{},"让":{"docs":{},"注":{"docs":{},"解":{"docs":{},"和":{"docs":{},"反":{"docs":{},"射":{"docs":{},"结":{"docs":{},"合":{"docs":{},"起":{"docs":{},"来":{"docs":{},"使":{"docs":{},"用":{"docs":{},"时":{"docs":{},"，":{"docs":{},"才":{"docs":{},"能":{"docs":{},"发":{"docs":{},"挥":{"docs":{},"更":{"docs":{},"强":{"docs":{},"大":{"docs":{},"的":{"docs":{},"语":{"docs":{},"义":{"docs":{},"作":{"docs":{},"用":{"docs":{},"。":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"旨":{"docs":{},"在":{"docs":{},"将":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"类":{"docs":{},"型":{"docs":{},"按":{"docs":{},"照":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}}}}}}}}}}}}}}}}}}}}}},"述":{"docs":{},"的":{"docs":{},"这":{"docs":{},"些":{"docs":{},"规":{"docs":{},"则":{"docs":{},"能":{"docs":{},"够":{"docs":{},"保":{"docs":{},"证":{"docs":{},"设":{"docs":{},"计":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"可":{"docs":{},"读":{"docs":{},"性":{"docs":{},"更":{"docs":{},"强":{"docs":{},"，":{"docs":{},"性":{"docs":{},"能":{"docs":{},"更":{"docs":{},"好":{"docs":{},"，":{"docs":{},"在":{"docs":{},"实":{"docs":{},"际":{"docs":{},"开":{"docs":{},"发":{"docs":{},"中":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"遵":{"docs":{},"守":{"docs":{},"这":{"docs":{},"些":{"docs":{},"规":{"docs":{},"则":{"docs":{},"。":{"docs":{"第六章 方法/40.谨慎的设计方法签名.html":{"ref":"第六章 方法/40.谨慎的设计方法签名.html","tf":0.125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"面":{"docs":{},"的":{"docs":{},"这":{"docs":{},"种":{"docs":{},"重":{"docs":{},"构":{"docs":{},"方":{"docs":{},"式":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"代":{"docs":{},"码":{"docs":{},"调":{"docs":{},"用":{"docs":{},"更":{"docs":{},"加":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"让":{"docs":{},"程":{"docs":{},"序":{"docs":{},"更":{"docs":{},"有":{"docs":{},"灵":{"docs":{},"活":{"docs":{},"性":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"凡":{"docs":{},"是":{"docs":{},"涉":{"docs":{},"及":{"docs":{},"到":{"docs":{},"状":{"docs":{},"态":{"docs":{},"更":{"docs":{},"新":{"docs":{},"和":{"docs":{},"状":{"docs":{},"态":{"docs":{},"测":{"docs":{},"试":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"都":{"docs":{},"需":{"docs":{},"要":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"第八章 异常/59.避免不必要的使用受检的异常.html":{"ref":"第八章 异常/59.避免不必要的使用受检的异常.html","tf":0.024390243902439025}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"例":{"docs":{},"子":{"docs":{},"，":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"捕":{"docs":{},"获":{"docs":{},"了":{"docs":{},"异":{"docs":{},"常":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"是":{"docs":{},"空":{"docs":{},"的":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"块":{"docs":{},"，":{"docs":{},"会":{"docs":{},"不":{"docs":{},"经":{"docs":{},"意":{"docs":{},"间":{"docs":{},"忘":{"docs":{},"记":{"docs":{},"处":{"docs":{},"理":{"docs":{},"异":{"docs":{},"常":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"会":{"docs":{},"埋":{"docs":{},"下":{"docs":{},"隐":{"docs":{},"患":{"docs":{},"，":{"docs":{},"面":{"docs":{},"对":{"docs":{},"异":{"docs":{},"常":{"docs":{},"应":{"docs":{},"该":{"docs":{},"有":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"基":{"docs":{},"本":{"docs":{},"的":{"docs":{},"原":{"docs":{},"则":{"docs":{},"？":{"docs":{"第八章 异常/65.不要忽略异常.html":{"ref":"第八章 异常/65.不要忽略异常.html","tf":0.0625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"进":{"docs":{},"行":{"docs":{},"同":{"docs":{},"步":{"docs":{},"，":{"docs":{},"不":{"docs":{},"遵":{"docs":{},"从":{"docs":{},"此":{"docs":{},"建":{"docs":{},"议":{"docs":{},"将":{"docs":{},"导":{"docs":{},"致":{"docs":{},"无":{"docs":{},"法":{"docs":{},"确":{"docs":{},"定":{"docs":{},"的":{"docs":{},"行":{"docs":{},"为":{"docs":{},"：":{"docs":{"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886}}}}}}}}}}}}}}}}}}}}}}}}},"则":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"通":{"docs":{},"配":{"docs":{},"符":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"只":{"docs":{},"能":{"docs":{},"包":{"docs":{},"含":{"docs":{},"某":{"docs":{},"种":{"docs":{},"未":{"docs":{},"知":{"docs":{},"对":{"docs":{},"象":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"集":{"docs":{},"合":{"docs":{},"；":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"则":{"docs":{},"是":{"docs":{},"原":{"docs":{},"生":{"docs":{},"态":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"它":{"docs":{},"脱":{"docs":{},"离":{"docs":{},"了":{"docs":{},"泛":{"docs":{},"型":{"docs":{},"安":{"docs":{},"全":{"docs":{},"性":{"docs":{},"检":{"docs":{},"查":{"docs":{},"规":{"docs":{},"则":{"docs":{},"。":{"docs":{},"前":{"docs":{},"两":{"docs":{},"个":{"docs":{},"是":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"种":{"docs":{},"不":{"docs":{},"安":{"docs":{},"全":{"docs":{},"。":{"docs":{"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"原":{"docs":{},"生":{"docs":{},"态":{"docs":{},"类":{"docs":{},"型":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"和":{"docs":{},"参":{"docs":{},"数":{"docs":{},"化":{"docs":{},"类":{"docs":{},"型":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"之":{"docs":{},"间":{"docs":{},"到":{"docs":{},"底":{"docs":{},"有":{"docs":{},"什":{"docs":{},"么":{"docs":{},"区":{"docs":{},"别":{"docs":{},"呢":{"docs":{},"？":{"docs":{"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"因":{"docs":{"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.016666666666666666}},"及":{"docs":{},"解":{"docs":{},"决":{"docs":{},"方":{"docs":{},"法":{"docs":{"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888}}}}}}}}},"是":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"化":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"可":{"docs":{},"以":{"docs":{},"包":{"docs":{},"含":{"docs":{},"任":{"docs":{},"何":{"docs":{},"对":{"docs":{},"象":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"集":{"docs":{},"合":{"docs":{},"；":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"原":{"docs":{},"生":{"docs":{},"态":{"docs":{},"类":{"docs":{},"型":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"子":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"参":{"docs":{},"数":{"docs":{},"化":{"docs":{},"类":{"docs":{},"型":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"的":{"docs":{},"子":{"docs":{},"类":{"docs":{},"型":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"使":{"docs":{},"用":{"docs":{},"像":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"原":{"docs":{},"生":{"docs":{},"态":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"就":{"docs":{},"会":{"docs":{},"丢":{"docs":{},"失":{"docs":{},"类":{"docs":{},"型":{"docs":{},"安":{"docs":{},"全":{"docs":{},"性":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"如":{"docs":{},"果":{"docs":{},"使":{"docs":{},"用":{"docs":{},"像":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"化":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"则":{"docs":{},"不":{"docs":{},"会":{"docs":{},"丢":{"docs":{},"失":{"docs":{},"类":{"docs":{},"型":{"docs":{},"安":{"docs":{},"全":{"docs":{},"性":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"下":{"docs":{},"例":{"docs":{},"代":{"docs":{},"码":{"docs":{},"：":{"docs":{"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"泛":{"docs":{},"型":{"docs":{},"指":{"docs":{},"声":{"docs":{},"明":{"docs":{},"中":{"docs":{},"具":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"或":{"docs":{},"者":{"docs":{},"多":{"docs":{},"个":{"docs":{},"类":{"docs":{},"型":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"类":{"docs":{},"或":{"docs":{},"者":{"docs":{},"接":{"docs":{},"口":{"docs":{},"。":{"docs":{},"每":{"docs":{},"种":{"docs":{},"泛":{"docs":{},"型":{"docs":{},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"组":{"docs":{},"参":{"docs":{},"数":{"docs":{},"化":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"构":{"docs":{},"成":{"docs":{},"格":{"docs":{},"式":{"docs":{},"为":{"docs":{},"：":{"docs":{},"类":{"docs":{},"或":{"docs":{},"者":{"docs":{},"接":{"docs":{},"口":{"docs":{},"的":{"docs":{},"名":{"docs":{},"称":{"docs":{},"，":{"docs":{},"接":{"docs":{},"着":{"docs":{},"用":{"docs":{},"尖":{"docs":{},"括":{"docs":{},"号":{"docs":{},"<":{"docs":{},">":{"docs":{},"把":{"docs":{},"实":{"docs":{},"际":{"docs":{},"类":{"docs":{},"型":{"docs":{},"参":{"docs":{},"数":{"docs":{},"列":{"docs":{},"表":{"docs":{},"括":{"docs":{},"起":{"docs":{},"来":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"，":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"化":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"元":{"docs":{},"素":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"的":{"docs":{},"列":{"docs":{},"表":{"docs":{},"，":{"docs":{},"（":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"是":{"docs":{},"与":{"docs":{},"形":{"docs":{},"式":{"docs":{},"类":{"docs":{},"型":{"docs":{},"参":{"docs":{},"数":{"docs":{},"e":{"docs":{},"相":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"实":{"docs":{},"际":{"docs":{},"类":{"docs":{},"型":{"docs":{},"参":{"docs":{},"数":{"docs":{},"）":{"docs":{},"。":{"docs":{"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"优":{"docs":{},"势":{"docs":{},"在":{"docs":{},"于":{"docs":{},"：":{"1":{"docs":{},".":{"docs":{"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082}}}},"docs":{}}}}}}}}},"由":{"docs":{},"于":{"docs":{},"集":{"docs":{},"合":{"docs":{},"已":{"docs":{},"经":{"docs":{},"知":{"docs":{},"道":{"docs":{},"装":{"docs":{},"载":{"docs":{},"的":{"docs":{},"是":{"docs":{},"哪":{"docs":{},"种":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"从":{"docs":{},"集":{"docs":{},"合":{"docs":{},"中":{"docs":{},"取":{"docs":{},"出":{"docs":{},"对":{"docs":{},"象":{"docs":{},"时":{"docs":{},"就":{"docs":{},"无":{"docs":{},"需":{"docs":{},"再":{"docs":{},"进":{"docs":{},"行":{"docs":{},"转":{"docs":{},"换":{"docs":{},"；":{"docs":{"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"该":{"docs":{},"方":{"docs":{},"法":{"docs":{},"要":{"docs":{},"求":{"docs":{},"参":{"docs":{},"数":{"docs":{},"至":{"docs":{},"少":{"docs":{},"有":{"1":{"docs":{},"个":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"可":{"docs":{},"变":{"docs":{},"参":{"docs":{},"数":{"docs":{},"可":{"docs":{},"以":{"docs":{},"接":{"docs":{},"受":{"docs":{},"的":{"docs":{},"是":{"0":{"docs":{},"个":{"docs":{},"或":{"docs":{},"者":{"docs":{},"多":{"docs":{},"个":{"docs":{},"指":{"docs":{},"定":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"需":{"docs":{},"要":{"docs":{},"判":{"docs":{},"断":{"docs":{},"当":{"docs":{},"前":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"是":{"docs":{},"否":{"docs":{},"为":{"0":{"docs":{},"，":{"docs":{},"最":{"docs":{},"终":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"是":{"docs":{},"将":{"docs":{},"这":{"docs":{},"种":{"docs":{},"检":{"docs":{},"验":{"docs":{},"放":{"docs":{},"到":{"docs":{},"了":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"。":{"docs":{},"针":{"docs":{},"对":{"docs":{},"这":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"做":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"调":{"docs":{},"整":{"docs":{},"：":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{},"方":{"docs":{},"法":{"docs":{},"入":{"docs":{},"参":{"docs":{},"要":{"docs":{},"求":{"docs":{},"了":{"docs":{},"必":{"docs":{},"须":{"docs":{},"传":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"就":{"docs":{},"少":{"docs":{},"了":{"docs":{},"参":{"docs":{},"数":{"docs":{},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"判":{"docs":{},"断":{"docs":{},"，":{"docs":{},"方":{"docs":{},"法":{"docs":{},"变":{"docs":{},"得":{"docs":{},"优":{"docs":{},"雅":{"docs":{},"。":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"受":{"docs":{},"检":{"docs":{},"异":{"docs":{},"常":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"调":{"docs":{},"用":{"docs":{},"方":{"docs":{},"必":{"docs":{},"须":{"docs":{},"做":{"docs":{},"出":{"docs":{},"处":{"docs":{},"理":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"在":{"docs":{},"设":{"docs":{},"计":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"就":{"docs":{},"需":{"docs":{},"要":{"docs":{},"着":{"docs":{},"重":{"docs":{},"去":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"所":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"的":{"docs":{},"受":{"docs":{},"检":{"docs":{},"异":{"docs":{},"常":{"docs":{},"，":{"docs":{},"是":{"docs":{},"否":{"docs":{},"真":{"docs":{},"的":{"docs":{},"是":{"docs":{},"合":{"docs":{},"理":{"docs":{},"的":{"docs":{},"，":{"docs":{},"要":{"docs":{},"站":{"docs":{},"在":{"docs":{},"调":{"docs":{},"用":{"docs":{},"方":{"docs":{},"的":{"docs":{},"角":{"docs":{},"度":{"docs":{},"去":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"。":{"docs":{"第八章 异常/59.避免不必要的使用受检的异常.html":{"ref":"第八章 异常/59.避免不必要的使用受检的异常.html","tf":0.024390243902439025}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"并":{"docs":{},"发":{"docs":{},"程":{"docs":{},"序":{"docs":{},"很":{"docs":{},"容":{"docs":{},"易":{"docs":{},"出":{"docs":{},"现":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"管":{"docs":{},"理":{"docs":{},"也":{"docs":{},"是":{"docs":{},"件":{"docs":{},"很":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"的":{"docs":{},"事":{"docs":{},"情":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"当":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"时":{"docs":{},"，":{"docs":{},"不":{"docs":{},"要":{"docs":{},"通":{"docs":{},"过":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"手":{"docs":{},"动":{"docs":{},"创":{"docs":{},"建":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"框":{"docs":{},"架":{"docs":{},"进":{"docs":{},"行":{"docs":{},"管":{"docs":{},"理":{"docs":{},"。":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"的":{"docs":{},"优":{"docs":{},"点":{"docs":{},"是":{"docs":{},"什":{"docs":{},"么":{"docs":{},"？":{"docs":{"第九章 并发/68.executor和task优于创建线程.html":{"ref":"第九章 并发/68.executor和task优于创建线程.html","tf":0.125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"作":{"docs":{},"为":{"docs":{},"一":{"docs":{},"种":{"docs":{},"构":{"docs":{},"造":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"往":{"docs":{},"往":{"docs":{},"因":{"docs":{},"为":{"docs":{},"这":{"docs":{},"种":{"docs":{},"利":{"docs":{},"用":{"docs":{},"语":{"docs":{},"言":{"docs":{},"之":{"docs":{},"外":{"docs":{},"的":{"docs":{},"机":{"docs":{},"制":{"docs":{},"来":{"docs":{},"创":{"docs":{},"建":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"普":{"docs":{},"通":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"，":{"docs":{},"就":{"docs":{},"容":{"docs":{},"易":{"docs":{},"遭":{"docs":{},"受":{"docs":{},"攻":{"docs":{},"击":{"docs":{},"。":{"docs":{},"在":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"时":{"docs":{},"，":{"docs":{},"实":{"docs":{},"例":{"docs":{},"的":{"docs":{},"创":{"docs":{},"建":{"docs":{},"是":{"docs":{},"由":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"方":{"docs":{},"法":{"docs":{},"来":{"docs":{},"完":{"docs":{},"成":{"docs":{},"的":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{},"这":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"不":{"docs":{},"同":{"docs":{},"于":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"创":{"docs":{},"建":{"docs":{},"类":{"docs":{},"实":{"docs":{},"例":{"docs":{},"的":{"docs":{},"通":{"docs":{},"道":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"在":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"中":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"约":{"docs":{},"束":{"docs":{},"条":{"docs":{},"件":{"docs":{},"在":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"中":{"docs":{},"也":{"docs":{},"得":{"docs":{},"一":{"docs":{},"条":{"docs":{},"不":{"docs":{},"落":{"docs":{},"下":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{},"而":{"docs":{},"且":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"的":{"docs":{},"出":{"docs":{},"现":{"docs":{},"，":{"docs":{},"让":{"docs":{},"伪":{"docs":{},"字":{"docs":{},"节":{"docs":{},"流":{"docs":{},"攻":{"docs":{},"击":{"docs":{},"和":{"docs":{},"内":{"docs":{},"部":{"docs":{},"域":{"docs":{},"的":{"docs":{},"盗":{"docs":{},"用":{"docs":{},"攻":{"docs":{},"击":{"docs":{},"成":{"docs":{},"为":{"docs":{},"可":{"docs":{},"能":{"docs":{},"。":{"docs":{},"伪":{"docs":{},"字":{"docs":{},"节":{"docs":{},"流":{"docs":{},"攻":{"docs":{},"击":{"docs":{},"就":{"docs":{},"是":{"docs":{},"伪":{"docs":{},"造":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"节":{"docs":{},"流":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"读":{"docs":{},"取":{"docs":{},"，":{"docs":{},"内":{"docs":{},"部":{"docs":{},"域":{"docs":{},"的":{"docs":{},"盗":{"docs":{},"用":{"docs":{},"攻":{"docs":{},"击":{"docs":{},"是":{"docs":{},"指":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"外":{"docs":{},"部":{"docs":{},"类":{"docs":{},"包":{"docs":{},"含":{"docs":{},"该":{"docs":{},"类":{"docs":{},"，":{"docs":{},"用":{"docs":{},"外":{"docs":{},"部":{"docs":{},"类":{"docs":{},"的":{"docs":{},"字":{"docs":{},"段":{"docs":{},"去":{"docs":{},"指":{"docs":{},"向":{"docs":{},"该":{"docs":{},"类":{"docs":{},"的":{"docs":{},"可":{"docs":{},"变":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{},"那":{"docs":{},"么":{"docs":{},"应":{"docs":{},"该":{"docs":{},"使":{"docs":{},"用":{"docs":{},"哪":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"能":{"docs":{},"够":{"docs":{},"极":{"docs":{},"大":{"docs":{},"的":{"docs":{},"减":{"docs":{},"少":{"docs":{},"风":{"docs":{},"险":{"docs":{},"？":{"docs":{"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"无":{"docs":{},"限":{"docs":{},"制":{"docs":{},"通":{"docs":{},"配":{"docs":{},"符":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082}}}}}}}}}}}},"虽":{"docs":{},"然":{"docs":{},"不":{"docs":{},"应":{"docs":{},"该":{"docs":{},"在":{"docs":{},"新":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"使":{"docs":{},"用":{"docs":{},"想":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"这":{"docs":{},"样":{"docs":{},"原":{"docs":{},"生":{"docs":{},"态":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"参":{"docs":{},"数":{"docs":{},"化":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"以":{"docs":{},"允":{"docs":{},"许":{"docs":{},"插":{"docs":{},"入":{"docs":{},"任":{"docs":{},"意":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"如":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"看":{"docs":{},"起":{"docs":{},"来":{"docs":{},"代":{"docs":{},"码":{"docs":{},"不":{"docs":{},"够":{"docs":{},"简":{"docs":{},"洁":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"修":{"docs":{},"改":{"docs":{},"起":{"docs":{},"来":{"docs":{},"确":{"docs":{},"实":{"docs":{},"比":{"docs":{},"较":{"docs":{},"安":{"docs":{},"全":{"docs":{},"，":{"docs":{},"不":{"docs":{},"怕":{"docs":{},"有":{"docs":{},"遗":{"docs":{},"漏":{"docs":{},"。":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"这":{"docs":{},"还":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"的":{"docs":{},"。":{"docs":{"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"ref":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","tf":0.01639344262295082}}}}}}}}}},"仔":{"docs":{},"细":{"docs":{},"检":{"docs":{},"查":{"docs":{},"代":{"docs":{},"码":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"，":{"docs":{},"确":{"docs":{},"定":{"docs":{},"在":{"docs":{},"类":{"docs":{},"型":{"docs":{},"转":{"docs":{},"换":{"docs":{},"上":{"docs":{},"没":{"docs":{},"有":{"docs":{},"错":{"docs":{},"误":{"docs":{},"，":{"docs":{},"尽":{"docs":{},"力":{"docs":{},"通":{"docs":{},"过":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"提":{"docs":{},"示":{"docs":{},"，":{"docs":{},"消":{"docs":{},"除":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"警":{"docs":{},"告":{"docs":{},"；":{"docs":{"第四章 泛型/24.消除非受检警告.html":{"ref":"第四章 泛型/24.消除非受检警告.html","tf":0.07142857142857142}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"用":{"docs":{},"泛":{"docs":{},"型":{"docs":{},"编":{"docs":{},"程":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"会":{"docs":{},"遇":{"docs":{},"到":{"docs":{},"许":{"docs":{},"多":{"docs":{},"的":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"警":{"docs":{},"告":{"docs":{},"：":{"docs":{},"非":{"docs":{},"受":{"docs":{},"检":{"docs":{},"强":{"docs":{},"制":{"docs":{},"转":{"docs":{},"化":{"docs":{},"警":{"docs":{},"告":{"docs":{},"(":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"第四章 泛型/24.消除非受检警告.html":{"ref":"第四章 泛型/24.消除非受检警告.html","tf":0.07142857142857142}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"语":{"docs":{},"句":{"docs":{},"中":{"docs":{},"是":{"docs":{},"非":{"docs":{},"法":{"docs":{},"的":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"增":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{},"局":{"docs":{},"部":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"在":{"docs":{},"变":{"docs":{},"量":{"docs":{},"上":{"docs":{},"使":{"docs":{},"用":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"注":{"docs":{},"解":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"将":{"docs":{},"这":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"解":{"docs":{},"决":{"docs":{},"；":{"docs":{"第四章 泛型/24.消除非受检警告.html":{"ref":"第四章 泛型/24.消除非受检警告.html","tf":0.07142857142857142}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"基":{"docs":{},"于":{"docs":{},"以":{"docs":{},"上":{"docs":{},"两":{"docs":{},"点":{"docs":{},"原":{"docs":{},"因":{"docs":{},"，":{"docs":{},"创":{"docs":{},"建":{"docs":{},"泛":{"docs":{},"型":{"docs":{},"、":{"docs":{},"参":{"docs":{},"数":{"docs":{},"化":{"docs":{},"类":{"docs":{},"型":{"docs":{},"或":{"docs":{},"者":{"docs":{},"是":{"docs":{},"类":{"docs":{},"型":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"都":{"docs":{},"是":{"docs":{},"非":{"docs":{},"法":{"docs":{},"的":{"docs":{},"。":{"docs":{},"如":{"docs":{},"：":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"第四章 泛型/25.List优于数组.html":{"ref":"第四章 泛型/25.List优于数组.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"本":{"docs":{},"类":{"docs":{},"型":{"docs":{},"只":{"docs":{},"具":{"docs":{},"有":{"docs":{},"具":{"docs":{},"体":{"docs":{},"功":{"docs":{},"能":{"docs":{},"值":{"docs":{},"，":{"docs":{},"如":{"docs":{},"数":{"docs":{},"值":{"docs":{},"等":{"docs":{},"，":{"docs":{},"而":{"docs":{},"装":{"docs":{},"箱":{"docs":{},"类":{"docs":{},"型":{"docs":{},"还":{"docs":{},"具":{"docs":{},"有":{"docs":{},"非":{"docs":{},"功":{"docs":{},"能":{"docs":{},"值":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"；":{"docs":{"第七章 通用程序设计/49.基本类型优先于装箱基本类型.html":{"ref":"第七章 通用程序设计/49.基本类型优先于装箱基本类型.html","tf":0.05555555555555555}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"值":{"docs":{},"，":{"docs":{},"而":{"docs":{},"装":{"docs":{},"箱":{"docs":{},"类":{"docs":{},"型":{"docs":{},"具":{"docs":{},"有":{"docs":{},"和":{"docs":{},"它":{"docs":{},"们":{"docs":{},"值":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"统":{"docs":{},"一":{"docs":{},"性":{"docs":{},"，":{"docs":{},"即":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"第七章 通用程序设计/49.基本类型优先于装箱基本类型.html":{"ref":"第七章 通用程序设计/49.基本类型优先于装箱基本类型.html","tf":0.05555555555555555}}}}}}}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{},"装":{"docs":{},"箱":{"docs":{},"类":{"docs":{},"型":{"docs":{},"主":{"docs":{},"要":{"docs":{},"有":{"3":{"docs":{},"个":{"docs":{},"主":{"docs":{},"要":{"docs":{},"区":{"docs":{},"别":{"docs":{},"：":{"docs":{"第七章 通用程序设计/49.基本类型优先于装箱基本类型.html":{"ref":"第七章 通用程序设计/49.基本类型优先于装箱基本类型.html","tf":0.05555555555555555}}}}}}}}},"docs":{}}}}}}}}},"通":{"docs":{},"常":{"docs":{},"要":{"docs":{},"比":{"docs":{},"装":{"docs":{},"箱":{"docs":{},"类":{"docs":{},"型":{"docs":{},"更":{"docs":{},"节":{"docs":{},"省":{"docs":{},"空":{"docs":{},"间":{"docs":{},"和":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"间":{"docs":{},"。":{"docs":{"第七章 通用程序设计/49.基本类型优先于装箱基本类型.html":{"ref":"第七章 通用程序设计/49.基本类型优先于装箱基本类型.html","tf":0.05555555555555555}}}}}}}}}}}}}}}}}}}}}}}}},"%":{"docs":{},"f":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}},"%":{"docs":{},"n":{"docs":{},"\"":{"docs":{},",":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441}}}}}}},"s":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.002484472049689441}}},"d":{"docs":{},"%":{"docs":{},"n":{"docs":{},"\"":{"docs":{},",":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}},",":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}},"k":{"docs":{},"g":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}},"i":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}},"e":{"docs":{},"y":{"docs":{"第七章 通用程序设计/50.尽量避免使用字符串.html":{"ref":"第七章 通用程序设计/50.尽量避免使用字符串.html","tf":0.02666666666666667}},"(":{"docs":{},")":{"docs":{"第七章 通用程序设计/50.尽量避免使用字符串.html":{"ref":"第七章 通用程序设计/50.尽量避免使用字符串.html","tf":0.013333333333333334}},";":{"docs":{"第七章 通用程序设计/50.尽量避免使用字符串.html":{"ref":"第七章 通用程序设计/50.尽量避免使用字符串.html","tf":0.013333333333333334}}}}},")":{"docs":{},";":{"docs":{"第七章 通用程序设计/50.尽量避免使用字符串.html":{"ref":"第七章 通用程序设计/50.尽量避免使用字符串.html","tf":0.02666666666666667}}}},",":{"docs":{"第七章 通用程序设计/50.尽量避免使用字符串.html":{"ref":"第七章 通用程序设计/50.尽量避免使用字符串.html","tf":0.02666666666666667}}}}}},"以":{"docs":{},"上":{"docs":{},"代":{"docs":{},"码":{"docs":{},"是":{"docs":{},"计":{"docs":{},"算":{"docs":{},"工":{"docs":{},"人":{"docs":{},"工":{"docs":{},"资":{"docs":{},"。":{"docs":{},"平":{"docs":{},"时":{"docs":{},"工":{"docs":{},"作":{"8":{"docs":{},"小":{"docs":{},"时":{"docs":{},"，":{"docs":{},"超":{"docs":{},"过":{"8":{"docs":{},"小":{"docs":{},"时":{"docs":{},"，":{"docs":{},"以":{"docs":{},"加":{"docs":{},"班":{"docs":{},"工":{"docs":{},"资":{"docs":{},"方":{"docs":{},"式":{"docs":{},"另":{"docs":{},"外":{"docs":{},"计":{"docs":{},"算":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"双":{"docs":{},"休":{"docs":{},"日":{"docs":{},"，":{"docs":{},"都":{"docs":{},"按":{"docs":{},"照":{"docs":{},"加":{"docs":{},"班":{"docs":{},"方":{"docs":{},"式":{"docs":{},"处":{"docs":{},"理":{"docs":{},"工":{"docs":{},"资":{"docs":{},"。":{"docs":{},"上":{"docs":{},"面":{"docs":{},"代":{"docs":{},"码":{"docs":{},"的":{"docs":{},"写":{"docs":{},"法":{"docs":{},"和":{"docs":{},"上":{"docs":{},"一":{"docs":{},"小":{"docs":{},"节":{"docs":{},"给":{"docs":{},"出":{"docs":{},"的":{"docs":{},"差":{"docs":{},"不":{"docs":{},"多":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"来":{"docs":{},"分":{"docs":{},"拆":{"docs":{},"计":{"docs":{},"算":{"docs":{},"。":{"docs":{},"还":{"docs":{},"是":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"此":{"docs":{},"时":{"docs":{},"新":{"docs":{},"增":{"docs":{},"加":{"docs":{},"一":{"docs":{},"种":{"docs":{},"工":{"docs":{},"资":{"docs":{},"的":{"docs":{},"计":{"docs":{},"算":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"常":{"docs":{},"量":{"docs":{},"需":{"docs":{},"要":{"docs":{},"改":{"docs":{},"，":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"方":{"docs":{},"法":{"docs":{},"也":{"docs":{},"需":{"docs":{},"要":{"docs":{},"改":{"docs":{},"。":{"docs":{},"按":{"docs":{},"上":{"docs":{},"一":{"docs":{},"小":{"docs":{},"节":{"docs":{},"的":{"docs":{},"介":{"docs":{},"绍":{"docs":{},"继":{"docs":{},"续":{"docs":{},"修":{"docs":{},"改":{"docs":{},"：":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}}}},"面":{"docs":{},"的":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"、":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"为":{"docs":{},"例":{"docs":{},"，":{"docs":{},"用":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"重":{"docs":{},"写":{"docs":{},"：":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}}}}}}}}}}}}}}}}}}},"下":{"docs":{},"是":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"注":{"docs":{},"解":{"docs":{},"在":{"docs":{},"实":{"docs":{},"践":{"docs":{},"中":{"docs":{},"的":{"docs":{},"应":{"docs":{},"用":{"docs":{},"。":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}},"你":{"docs":{},"可":{"docs":{},"以":{"docs":{},"写":{"docs":{},"的":{"docs":{},"更":{"docs":{},"详":{"docs":{},"细":{"docs":{},"些":{"docs":{},"：":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}}},"大":{"docs":{},"家":{"docs":{},"一":{"docs":{},"开":{"docs":{},"始":{"docs":{},"都":{"docs":{},"会":{"docs":{},"这":{"docs":{},"样":{"docs":{},"写":{"docs":{},"的":{"docs":{},"。":{"docs":{},"实":{"docs":{},"际":{"docs":{},"开":{"docs":{},"发":{"docs":{},"中":{"docs":{},"，":{"docs":{},"有":{"docs":{},"很":{"docs":{},"多":{"docs":{},"开":{"docs":{},"发":{"docs":{},"者":{"docs":{},"也":{"docs":{},"这":{"docs":{},"样":{"docs":{},"写":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"有":{"docs":{},"个":{"docs":{},"不":{"docs":{},"足":{"docs":{},"：":{"docs":{},"如":{"docs":{},"果":{"docs":{},"需":{"docs":{},"要":{"docs":{},"新":{"docs":{},"增":{"docs":{},"加":{"docs":{},"运":{"docs":{},"算":{"docs":{},"，":{"docs":{},"譬":{"docs":{},"如":{"docs":{},"模":{"docs":{},"运":{"docs":{},"算":{"docs":{},"，":{"docs":{},"不":{"docs":{},"仅":{"docs":{},"仅":{"docs":{},"需":{"docs":{},"要":{"docs":{},"添":{"docs":{},"加":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"类":{"docs":{},"型":{"docs":{},"常":{"docs":{},"量":{"docs":{},"，":{"docs":{},"还":{"docs":{},"需":{"docs":{},"要":{"docs":{},"修":{"docs":{},"改":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"y":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{},"万":{"docs":{},"一":{"docs":{},"忘":{"docs":{},"记":{"docs":{},"修":{"docs":{},"改":{"docs":{},"了":{"docs":{},"，":{"docs":{},"那":{"docs":{},"就":{"docs":{},"是":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"错":{"docs":{},"误":{"docs":{},"。":{"docs":{},"将":{"docs":{},"代":{"docs":{},"码":{"docs":{},"修":{"docs":{},"改":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"多":{"docs":{},"数":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"都":{"docs":{},"喜":{"docs":{},"欢":{"docs":{},"用":{"docs":{},"具":{"docs":{},"体":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"来":{"docs":{},"声":{"docs":{},"明":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"弊":{"docs":{},"端":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"将":{"docs":{},"来":{"docs":{},"想":{"docs":{},"将":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"换":{"docs":{},"成":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"影":{"docs":{},"响":{"docs":{},"其":{"docs":{},"他":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"。":{"docs":{},"在":{"docs":{},"声":{"docs":{},"明":{"docs":{},"变":{"docs":{},"量":{"docs":{},"是":{"docs":{},"最":{"docs":{},"佳":{"docs":{},"的":{"docs":{},"实":{"docs":{},"践":{"docs":{},"是":{"docs":{},"什":{"docs":{},"么":{"docs":{},"？":{"docs":{"第七章 通用程序设计/52.通过接口引用对象.html":{"ref":"第七章 通用程序设计/52.通过接口引用对象.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"正":{"docs":{},"常":{"docs":{},"的":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"都":{"docs":{},"要":{"docs":{},"优":{"docs":{},"于":{"docs":{},"延":{"docs":{},"迟":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"非":{"docs":{},"要":{"docs":{},"进":{"docs":{},"行":{"docs":{},"延":{"docs":{},"迟":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"针":{"docs":{},"对":{"docs":{},"实":{"docs":{},"例":{"docs":{},"域":{"docs":{},"采":{"docs":{},"用":{"docs":{},"双":{"docs":{},"重":{"docs":{},"检":{"docs":{},"测":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"针":{"docs":{},"对":{"docs":{},"静":{"docs":{},"态":{"docs":{},"域":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"利":{"docs":{},"用":{"docs":{},"静":{"docs":{},"态":{"docs":{},"内":{"docs":{},"部":{"docs":{},"类":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"次":{"docs":{},"访":{"docs":{},"问":{"docs":{},"才":{"docs":{},"进":{"docs":{},"行":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"的":{"docs":{},"特":{"docs":{},"性":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"静":{"docs":{},"态":{"docs":{},"内":{"docs":{},"部":{"docs":{},"类":{"docs":{},"来":{"docs":{},"完":{"docs":{},"成":{"docs":{},"延":{"docs":{},"迟":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"。":{"docs":{"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"枚":{"docs":{},"举":{"docs":{},"策":{"docs":{},"略":{"docs":{},"模":{"docs":{},"式":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}},"类":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"用":{"docs":{},"来":{"docs":{},"表":{"docs":{},"示":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"值":{"docs":{},"在":{"docs":{},"类":{"docs":{},"型":{"docs":{},"中":{"docs":{},"的":{"docs":{},"索":{"docs":{},"引":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"看":{"docs":{},"起":{"docs":{},"来":{"docs":{},"很":{"docs":{},"美":{"docs":{},"好":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"真":{"docs":{},"的":{"docs":{},"方":{"docs":{},"便":{"docs":{},"维":{"docs":{},"护":{"docs":{},"吗":{"docs":{},"？":{"docs":{"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.016666666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"没":{"docs":{},"有":{"docs":{},"便":{"docs":{},"利":{"docs":{},"方":{"docs":{},"法":{"docs":{},"将":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"常":{"docs":{},"量":{"docs":{},"翻":{"docs":{},"译":{"docs":{},"成":{"docs":{},"可":{"docs":{},"打":{"docs":{},"印":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"的":{"docs":{},"意":{"docs":{},"思":{"docs":{},"应":{"docs":{},"该":{"docs":{},"是":{"docs":{},"比":{"docs":{},"如":{"docs":{},"你":{"docs":{},"想":{"docs":{},"调":{"docs":{},"用":{"docs":{},"的":{"docs":{},"是":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"，":{"docs":{},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"显":{"docs":{},"示":{"docs":{},"的":{"docs":{},"是":{"0":{"docs":{},"，":{"docs":{},"但":{"docs":{},"你":{"docs":{},"不":{"docs":{},"能":{"docs":{},"确":{"docs":{},"定":{"docs":{},"是":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"f":{"docs":{},"u":{"docs":{},"j":{"docs":{},"i":{"docs":{},"还":{"docs":{},"是":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"；":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"提":{"docs":{},"供":{"docs":{},"将":{"docs":{},"参":{"docs":{},"数":{"docs":{},"值":{"docs":{},"与":{"docs":{},"程":{"docs":{},"序":{"docs":{},"元":{"docs":{},"素":{"docs":{},"关":{"docs":{},"联":{"docs":{},"起":{"docs":{},"来":{"docs":{},"的":{"docs":{},"好":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{"第六章 方法/44.API需要编写文档注释.html":{"ref":"第六章 方法/44.API需要编写文档注释.html","tf":0.03333333333333333}}}}}}},"直":{"docs":{},"接":{"docs":{},"上":{"docs":{},"例":{"docs":{},"子":{"docs":{},"来":{"docs":{},"分":{"docs":{},"析":{"docs":{},"：":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}},"实":{"docs":{},"现":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"接":{"docs":{},"口":{"docs":{},"有":{"docs":{},"如":{"docs":{},"下":{"docs":{},"这":{"docs":{},"些":{"docs":{},"缺":{"docs":{},"点":{"docs":{},"：":{"docs":{"第十章 序列化/74.谨慎的实现Serializable接口.html":{"ref":"第十章 序列化/74.谨慎的实现Serializable接口.html","tf":0.058823529411764705}}}}}}}}}}}}}}}}}}}}}}}}}}}},"看":{"docs":{},"了":{"docs":{},"上":{"docs":{},"面":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"我":{"docs":{},"觉":{"docs":{},"得":{"docs":{},"大":{"docs":{},"家":{"docs":{},"都":{"docs":{},"不":{"docs":{},"会":{"docs":{},"这":{"docs":{},"样":{"docs":{},"写":{"docs":{},"吧":{"docs":{},"。":{"docs":{},"其":{"docs":{},"实":{"docs":{},"细":{"docs":{},"想":{"docs":{},"一":{"docs":{},"下":{"docs":{},"，":{"docs":{},"最":{"docs":{},"主":{"docs":{},"要":{"docs":{},"的":{"docs":{},"不":{"docs":{},"同":{"docs":{},"就":{"docs":{},"是":{"docs":{},"计":{"docs":{},"算":{"docs":{},"加":{"docs":{},"班":{"docs":{},"时":{"docs":{},"间":{"docs":{},"的":{"docs":{},"工":{"docs":{},"资":{"docs":{},"方":{"docs":{},"式":{"docs":{},"不":{"docs":{},"同":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"分":{"docs":{},"工":{"docs":{},"作":{"docs":{},"日":{"docs":{},"和":{"docs":{},"双":{"docs":{},"休":{"docs":{},"日":{"docs":{},"的":{"docs":{},"。":{"docs":{},"继":{"docs":{},"续":{"docs":{},"修":{"docs":{},"改":{"docs":{},"：":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"补":{"docs":{},"充":{"docs":{},"一":{"docs":{},"点":{"docs":{"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"ref":"第五章 枚举和注解/30.使用枚举代替int 常量.html","tf":0.0012422360248447205}}}}}},",":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.015151515151515152},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}},"o":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},",":{"docs":{"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.016666666666666666}}}}}}}}},"。":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"一":{"docs":{},"般":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"都":{"docs":{},"不":{"docs":{},"使":{"docs":{},"用":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"你":{"docs":{},"所":{"docs":{},"表":{"docs":{},"示":{"docs":{},"的":{"docs":{},"这":{"docs":{},"种":{"docs":{},"关":{"docs":{},"系":{"docs":{},"是":{"docs":{},"多":{"docs":{},"维":{"docs":{},"的":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}}}}}}}}}}}}}}}}}},"即":{"docs":{},"使":{"docs":{},"要":{"docs":{},"用":{"docs":{},"也":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"情":{"docs":{},"况":{"docs":{},"。":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}}}}}}}}}}}}}}},"就":{"docs":{},"使":{"docs":{},"用":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}}}}},"最":{"docs":{},"好":{"docs":{},"不":{"docs":{},"要":{"docs":{},"用":{"docs":{},"序":{"docs":{},"数":{"docs":{},"来":{"docs":{},"索":{"docs":{},"引":{"docs":{},"数":{"docs":{},"组":{"docs":{"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"ref":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","tf":0.007575757575757576}}}}}}}}}}}},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"是":{"docs":{},"，":{"docs":{},"保":{"docs":{},"证":{"docs":{},"可":{"docs":{},"运":{"docs":{},"行":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"尽":{"docs":{},"可":{"docs":{},"能":{"docs":{},"少":{"docs":{},"，":{"docs":{},"或":{"docs":{},"不":{"docs":{},"明":{"docs":{},"显":{"docs":{},"高":{"docs":{},"于":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"的":{"docs":{},"数":{"docs":{},"量":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"，":{"docs":{},"可":{"docs":{},"运":{"docs":{},"行":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"足":{"docs":{},"够":{"docs":{},"少":{"docs":{},"，":{"docs":{},"对":{"docs":{},"线":{"docs":{},"程":{"docs":{},"调":{"docs":{},"度":{"docs":{},"器":{"docs":{},"而":{"docs":{},"言":{"docs":{},"就":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"“":{"docs":{},"纠":{"docs":{},"结":{"docs":{},"”":{"docs":{},"为":{"docs":{},"哪":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"分":{"docs":{},"配":{"docs":{},"时":{"docs":{},"间":{"docs":{},"片":{"docs":{},"，":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"让":{"docs":{},"多":{"docs":{},"核":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"处":{"docs":{},"理":{"docs":{},"这":{"docs":{},"些":{"docs":{},"线":{"docs":{},"程":{"docs":{},"就":{"docs":{},"好":{"docs":{},"了":{"docs":{},"。":{"docs":{},"从":{"docs":{},"侧":{"docs":{},"面":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"就":{"docs":{},"降":{"docs":{},"低":{"docs":{},"了":{"docs":{},"对":{"docs":{},"线":{"docs":{},"程":{"docs":{},"调":{"docs":{},"度":{"docs":{},"器":{"docs":{},"的":{"docs":{},"调":{"docs":{},"度":{"docs":{},"策":{"docs":{},"略":{"docs":{},"的":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"。":{"docs":{},"那":{"docs":{},"么":{"docs":{},"，":{"docs":{},"保":{"docs":{},"证":{"docs":{},"尽":{"docs":{},"可":{"docs":{},"能":{"docs":{},"少":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"就":{"docs":{},"是":{"docs":{},"，":{"docs":{},"让":{"docs":{},"每":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"都":{"docs":{},"做":{"docs":{},"有":{"docs":{},"意":{"docs":{},"义":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"从":{"docs":{},"整":{"docs":{},"体":{"docs":{},"而":{"docs":{},"言":{"docs":{},"，":{"docs":{},"就":{"docs":{},"会":{"docs":{},"降":{"docs":{},"低":{"docs":{},"总":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"；":{"docs":{"第九章 并发/72.不要依赖于线程调度器.html":{"ref":"第九章 并发/72.不要依赖于线程调度器.html","tf":0.125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"—":{"docs":{},"—":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.014388489208633094}},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"d":{"docs":{"第七章 通用程序设计/55.谨慎的进行优化.html":{"ref":"第七章 通用程序设计/55.谨慎的进行优化.html","tf":0.038461538461538464}}}}}}}},"m":{"docs":{},".":{"docs":{},"a":{"docs":{},".":{"docs":{},"j":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"[":{"docs":{},"j":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"7":{"5":{"docs":{},"]":{"docs":{"第七章 通用程序设计/55.谨慎的进行优化.html":{"ref":"第七章 通用程序设计/55.谨慎的进行优化.html","tf":0.038461538461538464}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"a":{"docs":{},"m":{"docs":{"第七章 通用程序设计/55.谨慎的进行优化.html":{"ref":"第七章 通用程序设计/55.谨慎的进行优化.html","tf":0.038461538461538464}}}}}}}}}}},"他":{"docs":{},"们":{"docs":{},"只":{"docs":{},"提":{"docs":{},"供":{"docs":{},"信":{"docs":{},"息":{"docs":{},"供":{"docs":{},"相":{"docs":{},"关":{"docs":{},"程":{"docs":{},"序":{"docs":{},"使":{"docs":{},"用":{"docs":{},"。":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}},"利":{"docs":{},"用":{"docs":{},"反":{"docs":{},"射":{"docs":{},"和":{"docs":{},"注":{"docs":{},"解":{"docs":{},"结":{"docs":{},"合":{"docs":{},"发":{"docs":{},"挥":{"docs":{},"语":{"docs":{},"义":{"docs":{},"上":{"docs":{},"的":{"docs":{},"作":{"docs":{},"用":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"方":{"docs":{},"法":{"docs":{},"：":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"特":{"docs":{},"性":{"docs":{},"允":{"docs":{},"许":{"docs":{},"你":{"docs":{},"用":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"创":{"docs":{},"建":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"代":{"docs":{},"替":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"实":{"docs":{},"例":{"docs":{},"。":{"docs":{},"对":{"docs":{},"于":{"docs":{},"一":{"docs":{},"个":{"docs":{},"正":{"docs":{},"在":{"docs":{},"被":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"它":{"docs":{},"的":{"docs":{},"类":{"docs":{},"定":{"docs":{},"义":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"具":{"docs":{},"备":{"docs":{},"正":{"docs":{},"确":{"docs":{},"的":{"docs":{},"声":{"docs":{},"明":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"在":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"新":{"docs":{},"建":{"docs":{},"对":{"docs":{},"象":{"docs":{},"上":{"docs":{},"的":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"方":{"docs":{},"法":{"docs":{},"就":{"docs":{},"会":{"docs":{},"被":{"docs":{},"调":{"docs":{},"用":{"docs":{},"。":{"docs":{},"然":{"docs":{},"后":{"docs":{},"，":{"docs":{},"该":{"docs":{},"方":{"docs":{},"法":{"docs":{},"返":{"docs":{},"回":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"引":{"docs":{},"用":{"docs":{},"将":{"docs":{},"被":{"docs":{},"返":{"docs":{},"回":{"docs":{},"，":{"docs":{},"取":{"docs":{},"代":{"docs":{},"新":{"docs":{},"建":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"在":{"docs":{},"每":{"docs":{},"次":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"返":{"docs":{},"回":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"确":{"docs":{},"保":{"docs":{},"被":{"docs":{},"多":{"docs":{},"次":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"后":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"也":{"docs":{},"只":{"docs":{},"会":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"。":{"docs":{},"示":{"docs":{},"例":{"docs":{},"代":{"docs":{},"码":{"docs":{},"为":{"docs":{},"：":{"docs":{"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"ref":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","tf":0.011904761904761904}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"命":{"docs":{},"名":{"docs":{},"模":{"docs":{},"式":{"docs":{},"的":{"docs":{},"缺":{"docs":{},"点":{"docs":{},"：":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}},"它":{"docs":{},"被":{"docs":{},"称":{"docs":{},"为":{"docs":{},"标":{"docs":{},"记":{"docs":{},"注":{"docs":{},"解":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"它":{"docs":{},"没":{"docs":{},"有":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"只":{"docs":{},"是":{"docs":{},"“":{"docs":{},"标":{"docs":{},"记":{"docs":{},"”":{"docs":{},"注":{"docs":{},"解":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"或":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"声":{"docs":{},"明":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}},"文":{"docs":{},"字":{"docs":{},"拼":{"docs":{},"写":{"docs":{},"错":{"docs":{},"误":{"docs":{},"导":{"docs":{},"致":{"docs":{},"失":{"docs":{},"败":{"docs":{},"，":{"docs":{},"测":{"docs":{},"试":{"docs":{},"方":{"docs":{},"法":{"docs":{},"没":{"docs":{},"有":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"也":{"docs":{},"没":{"docs":{},"有":{"docs":{},"报":{"docs":{},"错":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"假":{"docs":{},"设":{"docs":{},"意":{"docs":{},"外":{"docs":{},"地":{"docs":{},"命":{"docs":{},"名":{"docs":{},"了":{"docs":{},"测":{"docs":{},"试":{"docs":{},"方":{"docs":{},"法":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"a":{"docs":{},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"a":{"docs":{},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"。":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"档":{"docs":{},"注":{"docs":{},"释":{"docs":{},"的":{"docs":{},"三":{"docs":{},"个":{"docs":{},"部":{"docs":{},"分":{"docs":{},"：":{"docs":{"第六章 方法/44.API需要编写文档注释.html":{"ref":"第六章 方法/44.API需要编写文档注释.html","tf":0.03333333333333333}}}}}}}}}}}},"更":{"docs":{},"一":{"docs":{},"般":{"docs":{},"地":{"docs":{},"说":{"docs":{},"，":{"docs":{},"注":{"docs":{},"解":{"docs":{},"不":{"docs":{},"会":{"docs":{},"改":{"docs":{},"变":{"docs":{},"注":{"docs":{},"解":{"docs":{},"代":{"docs":{},"码":{"docs":{},"的":{"docs":{},"语":{"docs":{},"义":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"反":{"docs":{},"射":{"docs":{},"和":{"docs":{},"注":{"docs":{},"解":{"docs":{},"结":{"docs":{},"合":{"docs":{},"起":{"docs":{},"来":{"docs":{},"，":{"docs":{},"发":{"docs":{},"挥":{"docs":{},"更":{"docs":{},"强":{"docs":{},"大":{"docs":{},"的":{"docs":{},"作":{"docs":{},"用":{"docs":{},"。":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"高":{"docs":{},"层":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"应":{"docs":{},"该":{"docs":{},"捕":{"docs":{},"获":{"docs":{},"低":{"docs":{},"层":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"可":{"docs":{},"以":{"docs":{},"按":{"docs":{},"照":{"docs":{},"高":{"docs":{},"层":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"进":{"docs":{},"行":{"docs":{},"解":{"docs":{},"释":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{},"。":{"docs":{},"这":{"docs":{},"种":{"docs":{},"做":{"docs":{},"法":{"docs":{},"被":{"docs":{},"称":{"docs":{},"为":{"docs":{},"异":{"docs":{},"常":{"docs":{},"转":{"docs":{},"译":{"docs":{},"（":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"如":{"docs":{},"下":{"docs":{},"所":{"docs":{},"示":{"docs":{},"：":{"docs":{"第八章 异常/61.抛出与抽象相对应的异常.html":{"ref":"第八章 异常/61.抛出与抽象相对应的异常.html","tf":0.020833333333333332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"容":{"docs":{},"易":{"docs":{},"引":{"docs":{},"发":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{},"和":{"docs":{},"安":{"docs":{},"全":{"docs":{},"漏":{"docs":{},"洞":{"docs":{},"：":{"docs":{},"一":{"docs":{},"般":{"docs":{},"对":{"docs":{},"象":{"docs":{},"是":{"docs":{},"由":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"创":{"docs":{},"建":{"docs":{},"的":{"docs":{},"，":{"docs":{},"而":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"也":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"对":{"docs":{},"象":{"docs":{},"创":{"docs":{},"建":{"docs":{},"机":{"docs":{},"制":{"docs":{},"，":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"构":{"docs":{},"造":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"机":{"docs":{},"制":{"docs":{},"中":{"docs":{},"没":{"docs":{},"有":{"docs":{},"显":{"docs":{},"式":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"，":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"要":{"docs":{},"确":{"docs":{},"保":{"docs":{},"：":{"docs":{},"由":{"docs":{},"真":{"docs":{},"正":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"建":{"docs":{},"立":{"docs":{},"的":{"docs":{},"约":{"docs":{},"束":{"docs":{},"关":{"docs":{},"系":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"不":{"docs":{},"允":{"docs":{},"许":{"docs":{},"攻":{"docs":{},"击":{"docs":{},"者":{"docs":{},"访":{"docs":{},"问":{"docs":{},"正":{"docs":{},"在":{"docs":{},"构":{"docs":{},"造":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"内":{"docs":{},"部":{"docs":{},"信":{"docs":{},"息":{"docs":{},"。":{"docs":{},"依":{"docs":{},"靠":{"docs":{},"默":{"docs":{},"认":{"docs":{},"的":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"机":{"docs":{},"制":{"docs":{},"，":{"docs":{},"很":{"docs":{},"容":{"docs":{},"易":{"docs":{},"使":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"约":{"docs":{},"束":{"docs":{},"关":{"docs":{},"系":{"docs":{},"遭":{"docs":{},"到":{"docs":{},"破":{"docs":{},"坏":{"docs":{},"，":{"docs":{},"以":{"docs":{},"及":{"docs":{},"遭":{"docs":{},"受":{"docs":{},"到":{"docs":{},"非":{"docs":{},"法":{"docs":{},"访":{"docs":{},"问":{"docs":{},"。":{"docs":{"第十章 序列化/74.谨慎的实现Serializable接口.html":{"ref":"第十章 序列化/74.谨慎的实现Serializable接口.html","tf":0.058823529411764705}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"注":{"docs":{},"解":{"docs":{},"很":{"docs":{},"好":{"docs":{},"地":{"docs":{},"解":{"docs":{},"决":{"docs":{},"了":{"docs":{},"由":{"docs":{},"命":{"docs":{},"名":{"docs":{},"模":{"docs":{},"式":{"docs":{},"带":{"docs":{},"来":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"这":{"docs":{},"些":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"j":{"docs":{},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"4":{"docs":{},"也":{"docs":{},"开":{"docs":{},"始":{"docs":{},"采":{"docs":{},"用":{"docs":{},"注":{"docs":{},"解":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"代":{"docs":{},"替":{"docs":{},"了":{"docs":{},"以":{"docs":{},"往":{"docs":{},"的":{"docs":{},"命":{"docs":{},"名":{"docs":{},"模":{"docs":{},"式":{"docs":{},"。":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"型":{"docs":{},"声":{"docs":{},"明":{"docs":{},"上":{"docs":{},"的":{"docs":{},"这":{"docs":{},"种":{"docs":{},"注":{"docs":{},"解":{"docs":{},"称":{"docs":{},"为":{"docs":{},"元":{"docs":{},"注":{"docs":{},"解":{"docs":{},"。":{"docs":{"第五章 枚举和注解/35.注解优于命名模式.html":{"ref":"第五章 枚举和注解/35.注解优于命名模式.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}},"意":{"docs":{},"：":{"docs":{},"保":{"docs":{},"护":{"docs":{},"性":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"在":{"docs":{},"参":{"docs":{},"数":{"docs":{},"有":{"docs":{},"效":{"docs":{},"性":{"docs":{},"检":{"docs":{},"查":{"docs":{},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"参":{"docs":{},"数":{"docs":{},"有":{"docs":{},"效":{"docs":{},"性":{"docs":{},"检":{"docs":{},"查":{"docs":{},"针":{"docs":{},"对":{"docs":{},"的":{"docs":{},"是":{"docs":{},"已":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"而":{"docs":{},"非":{"docs":{},"是":{"docs":{},"原":{"docs":{},"始":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"第六章 方法/39.参数进行保护性拷贝.html":{"ref":"第六章 方法/39.参数进行保护性拷贝.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"基":{"docs":{},"本":{"docs":{},"类":{"docs":{},"型":{"docs":{},"和":{"docs":{},"装":{"docs":{},"箱":{"docs":{},"类":{"docs":{},"型":{"docs":{},"混":{"docs":{},"合":{"docs":{},"使":{"docs":{},"用":{"docs":{},"，":{"docs":{},"装":{"docs":{},"箱":{"docs":{},"类":{"docs":{},"型":{"docs":{},"会":{"docs":{},"拆":{"docs":{},"箱":{"docs":{},"为":{"docs":{},"基":{"docs":{},"本":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"这":{"docs":{},"时":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"装":{"docs":{},"箱":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"，":{"docs":{},"就":{"docs":{},"会":{"docs":{},"容":{"docs":{},"易":{"docs":{},"报":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"。":{"docs":{"第七章 通用程序设计/49.基本类型优先于装箱基本类型.html":{"ref":"第七章 通用程序设计/49.基本类型优先于装箱基本类型.html","tf":0.05555555555555555}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"绝":{"docs":{},"大":{"docs":{},"多":{"docs":{},"数":{"docs":{},"方":{"docs":{},"法":{"docs":{},"和":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"对":{"docs":{},"于":{"docs":{},"传":{"docs":{},"递":{"docs":{},"给":{"docs":{},"他":{"docs":{},"们":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"值":{"docs":{},"都":{"docs":{},"会":{"docs":{},"有":{"docs":{},"某":{"docs":{},"些":{"docs":{},"限":{"docs":{},"制":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"索":{"docs":{},"引":{"docs":{},"值":{"docs":{},"必":{"docs":{},"须":{"docs":{},"是":{"docs":{},"非":{"docs":{},"负":{"docs":{},"数":{"docs":{},"，":{"docs":{},"对":{"docs":{},"象":{"docs":{},"引":{"docs":{},"用":{"docs":{},"不":{"docs":{},"能":{"docs":{},"为":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"等":{"docs":{},"等":{"docs":{},"。":{"docs":{},"在":{"docs":{},"编":{"docs":{},"写":{"docs":{},"方":{"docs":{},"法":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"普":{"docs":{},"遍":{"docs":{},"的":{"docs":{},"原":{"docs":{},"则":{"docs":{},"是":{"docs":{},"“":{"docs":{},"应":{"docs":{},"该":{"docs":{},"在":{"docs":{},"发":{"docs":{},"生":{"docs":{},"错":{"docs":{},"误":{"docs":{},"之":{"docs":{},"后":{"docs":{},"尽":{"docs":{},"快":{"docs":{},"检":{"docs":{},"测":{"docs":{},"出":{"docs":{},"错":{"docs":{},"误":{"docs":{},"”":{"docs":{},"，":{"docs":{},"按":{"docs":{},"照":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"原":{"docs":{},"则":{"docs":{},"，":{"docs":{},"在":{"docs":{},"实":{"docs":{},"际":{"docs":{},"开":{"docs":{},"发":{"docs":{},"中":{"docs":{},"应":{"docs":{},"该":{"docs":{},"怎":{"docs":{},"样":{"docs":{},"做":{"docs":{},"？":{"docs":{"第六章 方法/38.检查方法参数的有效性.html":{"ref":"第六章 方法/38.检查方法参数的有效性.html","tf":0.125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"谨":{"docs":{},"慎":{"docs":{},"的":{"docs":{},"选":{"docs":{},"择":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"名":{"docs":{},"称":{"docs":{},"：":{"docs":{},"遵":{"docs":{},"循":{"docs":{},"标":{"docs":{},"准":{"docs":{},"的":{"docs":{},"命":{"docs":{},"名":{"docs":{},"规":{"docs":{},"范":{"docs":{},"；":{"docs":{"第六章 方法/40.谨慎的设计方法签名.html":{"ref":"第六章 方法/40.谨慎的设计方法签名.html","tf":0.125}}}}}}}}}}}}}}}}}}}}}}},"先":{"docs":{},"来":{"docs":{},"看":{"docs":{},"一":{"docs":{},"个":{"docs":{},"错":{"docs":{},"误":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"：":{"docs":{"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.010752688172043012}}}}}}}},"反":{"docs":{},"例":{"docs":{},"：":{"docs":{"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":{"ref":"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html","tf":0.019230769230769232},"第七章 通用程序设计/52.通过接口引用对象.html":{"ref":"第七章 通用程序设计/52.通过接口引用对象.html","tf":0.047619047619047616},"第八章 异常/57.只针对异常的情况才使用异常.html":{"ref":"第八章 异常/57.只针对异常的情况才使用异常.html","tf":0.043478260869565216}}}}}}}}}},"能":{"docs":{},"够":{"docs":{},"重":{"docs":{},"载":{"docs":{},"并":{"docs":{},"不":{"docs":{},"意":{"docs":{},"味":{"docs":{},"者":{"docs":{},"应":{"docs":{},"该":{"docs":{},"重":{"docs":{},"载":{"docs":{},"，":{"docs":{},"一":{"docs":{},"般":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"多":{"docs":{},"个":{"docs":{},"具":{"docs":{},"有":{"docs":{},"相":{"docs":{},"同":{"docs":{},"参":{"docs":{},"数":{"docs":{},"数":{"docs":{},"目":{"docs":{},"的":{"docs":{},"重":{"docs":{},"载":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"还":{"docs":{},"是":{"docs":{},"尽":{"docs":{},"量":{"docs":{},"避":{"docs":{},"免":{"docs":{},"使":{"docs":{},"用":{"docs":{},"重":{"docs":{},"载":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"能":{"docs":{},"避":{"docs":{},"免":{"docs":{},"重":{"docs":{},"载":{"docs":{},"，":{"docs":{},"就":{"docs":{},"需":{"docs":{},"要":{"docs":{},"保":{"docs":{},"证":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"重":{"docs":{},"载":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"类":{"docs":{},"型":{"docs":{},"无":{"docs":{},"论":{"docs":{},"经":{"docs":{},"过":{"docs":{},"怎":{"docs":{},"样":{"docs":{},"的":{"docs":{},"转":{"docs":{},"换":{"docs":{},"（":{"docs":{},"如":{"docs":{},"泛":{"docs":{},"型":{"docs":{},"和":{"docs":{},"自":{"docs":{},"动":{"docs":{},"拆":{"docs":{},"箱":{"docs":{},"和":{"docs":{},"装":{"docs":{},"箱":{"docs":{},"）":{"docs":{},"后":{"docs":{},"都":{"docs":{},"能":{"docs":{},"“":{"docs":{},"完":{"docs":{},"全":{"docs":{},"不":{"docs":{},"同":{"docs":{},"”":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"根":{"docs":{},"据":{"docs":{},"参":{"docs":{},"数":{"docs":{},"类":{"docs":{},"型":{"docs":{},"能":{"docs":{},"够":{"docs":{},"指":{"docs":{},"向":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"重":{"docs":{},"载":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"调":{"docs":{},"用":{"docs":{},"哪":{"docs":{},"个":{"docs":{},"具":{"docs":{},"体":{"docs":{},"的":{"docs":{},"重":{"docs":{},"载":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"就":{"docs":{},"决":{"docs":{},"定":{"docs":{},"了":{"docs":{},"，":{"docs":{},"根":{"docs":{},"据":{"docs":{},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"类":{"docs":{},"型":{"docs":{},"。":{"docs":{},"而":{"docs":{},"对":{"docs":{},"于":{"docs":{},"被":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"选":{"docs":{},"择":{"docs":{},"则":{"docs":{},"是":{"docs":{},"动":{"docs":{},"态":{"docs":{},"的":{"docs":{},"，":{"docs":{},"是":{"docs":{},"根":{"docs":{},"据":{"docs":{},"调":{"docs":{},"用":{"docs":{},"该":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"来":{"docs":{},"选":{"docs":{},"择":{"docs":{},"合":{"docs":{},"适":{"docs":{},"的":{"docs":{},"“":{"docs":{},"被":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"的":{"docs":{},"版":{"docs":{},"本":{"docs":{},"”":{"docs":{},"。":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"是":{"docs":{},"用":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"多":{"docs":{},"态":{"docs":{},"的":{"docs":{},"，":{"docs":{},"而":{"docs":{},"重":{"docs":{},"载":{"docs":{},"并":{"docs":{},"不":{"docs":{},"是":{"docs":{},"；":{"docs":{"第六章 方法/41.慎用重载.html":{"ref":"第六章 方法/41.慎用重载.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"方":{"docs":{},"客":{"docs":{},"户":{"docs":{},"端":{"docs":{},"代":{"docs":{},"码":{"docs":{},"：":{"docs":{"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":{"ref":"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html","tf":0.019230769230769232}}}}}}}}}}},"[":{"docs":{},"[":{"docs":{},"i":{"docs":{},"@":{"1":{"5":{"docs":{},"d":{"docs":{},"b":{"9":{"7":{"4":{"2":{"docs":{},"]":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}},"docs":{}},"docs":{}}}},"t":{"docs":{},"o":{"docs":{},",":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012}}}}}},"遍":{"docs":{},"历":{"docs":{},"数":{"docs":{},"组":{"docs":{"第六章 方法/42.慎用可变参数.html":{"ref":"第六章 方法/42.慎用可变参数.html","tf":0.010752688172043012}}}}}},";":{"docs":{"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":{"ref":"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html","tf":0.019230769230769232}}},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"由":{"docs":{},"于":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"在":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"返":{"docs":{},"回":{"docs":{},"了":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"给":{"docs":{},"调":{"docs":{},"用":{"docs":{},"方":{"docs":{},"增":{"docs":{},"加":{"docs":{},"了":{"docs":{},"额":{"docs":{},"外":{"docs":{},"的":{"docs":{},"判":{"docs":{},"断":{"docs":{},"为":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"而":{"docs":{},"从":{"docs":{},"业":{"docs":{},"务":{"docs":{},"意":{"docs":{},"义":{"docs":{},"上":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"一":{"docs":{},"般":{"docs":{},"是":{"docs":{},"指":{"docs":{},"异":{"docs":{},"常":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"的":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"，":{"docs":{},"针":{"docs":{},"对":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"为":{"docs":{},"集":{"docs":{},"合":{"docs":{},"或":{"docs":{},"者":{"docs":{},"数":{"docs":{},"组":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"应":{"docs":{},"该":{"docs":{},"返":{"docs":{},"回":{"docs":{},"什":{"docs":{},"么":{"docs":{},"？":{"docs":{"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":{"ref":"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html","tf":0.019230769230769232}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"前":{"docs":{},"提":{"docs":{},"条":{"docs":{},"件":{"docs":{},"是":{"docs":{},"指":{"docs":{},"为":{"docs":{},"了":{"docs":{},"使":{"docs":{},"客":{"docs":{},"户":{"docs":{},"能":{"docs":{},"够":{"docs":{},"调":{"docs":{},"用":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"而":{"docs":{},"必":{"docs":{},"须":{"docs":{},"满":{"docs":{},"足":{"docs":{},"的":{"docs":{},"条":{"docs":{},"件":{"docs":{},"；":{"docs":{"第六章 方法/44.API需要编写文档注释.html":{"ref":"第六章 方法/44.API需要编写文档注释.html","tf":0.03333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}},"（":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"）":{"docs":{"第六章 方法/44.API需要编写文档注释.html":{"ref":"第六章 方法/44.API需要编写文档注释.html","tf":0.03333333333333333}}}}}}}}}}}}}}}}}}}},"副":{"docs":{},"作":{"docs":{},"用":{"docs":{},"是":{"docs":{},"指":{"docs":{},"系":{"docs":{},"统":{"docs":{},"状":{"docs":{},"态":{"docs":{},"中":{"docs":{},"可":{"docs":{},"以":{"docs":{},"观":{"docs":{},"察":{"docs":{},"到":{"docs":{},"的":{"docs":{},"变":{"docs":{},"化":{"docs":{},"，":{"docs":{},"它":{"docs":{},"不":{"docs":{},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"获":{"docs":{},"得":{"docs":{},"后":{"docs":{},"置":{"docs":{},"条":{"docs":{},"件":{"docs":{},"而":{"docs":{},"明":{"docs":{},"确":{"docs":{},"要":{"docs":{},"求":{"docs":{},"的":{"docs":{},"变":{"docs":{},"化":{"docs":{},"；":{"docs":{"第六章 方法/44.API需要编写文档注释.html":{"ref":"第六章 方法/44.API需要编写文档注释.html","tf":0.03333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"（":{"docs":{},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{"第六章 方法/44.API需要编写文档注释.html":{"ref":"第六章 方法/44.API需要编写文档注释.html","tf":0.03333333333333333}}}}}}}}}},"后":{"docs":{},"置":{"docs":{},"条":{"docs":{},"件":{"docs":{},"（":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"）":{"docs":{"第六章 方法/44.API需要编写文档注释.html":{"ref":"第六章 方法/44.API需要编写文档注释.html","tf":0.03333333333333333}}}}}}}}}}}}}}}}}}}}},"添":{"docs":{},"加":{"docs":{},"文":{"docs":{},"档":{"docs":{},"注":{"docs":{},"释":{"docs":{},"规":{"docs":{},"范":{"docs":{},"：":{"docs":{"第六章 方法/44.API需要编写文档注释.html":{"ref":"第六章 方法/44.API需要编写文档注释.html","tf":0.03333333333333333}}}}}}}}}}},"第":{"docs":{},"一":{"docs":{},"部":{"docs":{},"分":{"docs":{},"是":{"docs":{},"简":{"docs":{},"述":{"docs":{},"。":{"docs":{},"文":{"docs":{},"档":{"docs":{},"中":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"属":{"docs":{},"性":{"docs":{},"和":{"docs":{},"方":{"docs":{},"法":{"docs":{},"都":{"docs":{},"是":{"docs":{},"先":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"列":{"docs":{},"表":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"才":{"docs":{},"在":{"docs":{},"后":{"docs":{},"面":{"docs":{},"一":{"docs":{},"个":{"docs":{},"一":{"docs":{},"个":{"docs":{},"的":{"docs":{},"详":{"docs":{},"细":{"docs":{},"的":{"docs":{},"说":{"docs":{},"明":{"docs":{},"；":{"docs":{"第六章 方法/44.API需要编写文档注释.html":{"ref":"第六章 方法/44.API需要编写文档注释.html","tf":0.03333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"三":{"docs":{},"部":{"docs":{},"分":{"docs":{},"是":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"说":{"docs":{},"明":{"docs":{},"部":{"docs":{},"分":{"docs":{},"。":{"docs":{},"这":{"docs":{},"部":{"docs":{},"分":{"docs":{},"包":{"docs":{},"括":{"docs":{},"版":{"docs":{},"本":{"docs":{},"说":{"docs":{},"明":{"docs":{},"、":{"docs":{},"参":{"docs":{},"数":{"docs":{},"说":{"docs":{},"明":{"docs":{},"、":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"说":{"docs":{},"明":{"docs":{},"等":{"docs":{},"。":{"docs":{"第六章 方法/44.API需要编写文档注释.html":{"ref":"第六章 方法/44.API需要编写文档注释.html","tf":0.03333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"二":{"docs":{},"部":{"docs":{},"分":{"docs":{},"是":{"docs":{},"详":{"docs":{},"细":{"docs":{},"说":{"docs":{},"明":{"docs":{},"部":{"docs":{},"分":{"docs":{},"。":{"docs":{},"该":{"docs":{},"部":{"docs":{},"分":{"docs":{},"对":{"docs":{},"属":{"docs":{},"性":{"docs":{},"或":{"docs":{},"者":{"docs":{},"方":{"docs":{},"法":{"docs":{},"进":{"docs":{},"行":{"docs":{},"详":{"docs":{},"细":{"docs":{},"的":{"docs":{},"说":{"docs":{},"明":{"docs":{},"，":{"docs":{},"在":{"docs":{},"格":{"docs":{},"式":{"docs":{},"上":{"docs":{},"没":{"docs":{},"有":{"docs":{},"什":{"docs":{},"么":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"的":{"docs":{},"要":{"docs":{},"求":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"包":{"docs":{},"含":{"docs":{},"若":{"docs":{},"干":{"docs":{},"个":{"docs":{},"点":{"docs":{},"号":{"docs":{},"；":{"docs":{"第六章 方法/44.API需要编写文档注释.html":{"ref":"第六章 方法/44.API需要编写文档注释.html","tf":0.03333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"种":{"docs":{},"合":{"docs":{},"理":{"docs":{},"用":{"docs":{},"途":{"docs":{},"与":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"本":{"docs":{},"地":{"docs":{},"对":{"docs":{},"等":{"docs":{},"体":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"v":{"docs":{},"i":{"docs":{"第一章 创建和销毁对象/7.避免使用finalize方法.html":{"ref":"第一章 创建和销毁对象/7.避免使用finalize方法.html","tf":0.06666666666666667}}}}}}}}}}}}}}}}}}}}}}}},"表":{"docs":{},"示":{"docs":{},"显":{"docs":{},"示":{"docs":{},"，":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"第六章 方法/44.API需要编写文档注释.html":{"ref":"第六章 方法/44.API需要编写文档注释.html","tf":0.03333333333333333}}}}}}}}},"隐":{"docs":{},"藏":{"docs":{"第六章 方法/44.API需要编写文档注释.html":{"ref":"第六章 方法/44.API需要编写文档注释.html","tf":0.03333333333333333}}}}}},"几":{"docs":{},"乎":{"docs":{},"每":{"docs":{},"个":{"docs":{},"局":{"docs":{},"部":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"声":{"docs":{},"明":{"docs":{},"都":{"docs":{},"应":{"docs":{},"该":{"docs":{},"包":{"docs":{},"含":{"docs":{},"一":{"docs":{},"个":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"没":{"docs":{},"有":{"docs":{},"足":{"docs":{},"够":{"docs":{},"信":{"docs":{},"息":{"docs":{},"来":{"docs":{},"对":{"docs":{},"一":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"进":{"docs":{},"行":{"docs":{},"有":{"docs":{},"意":{"docs":{},"义":{"docs":{},"的":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"，":{"docs":{},"就":{"docs":{},"应":{"docs":{},"该":{"docs":{},"推":{"docs":{},"迟":{"docs":{},"这":{"docs":{},"个":{"docs":{},"声":{"docs":{},"明":{"docs":{},",":{"docs":{},"直":{"docs":{},"到":{"docs":{},"可":{"docs":{},"以":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"为":{"docs":{},"止":{"docs":{},"，":{"docs":{},"例":{"docs":{},"外":{"docs":{},"情":{"docs":{},"况":{"docs":{},"是":{"docs":{},"与":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"有":{"docs":{},"关":{"docs":{},"。":{"docs":{"第七章 通用程序设计/45.将局部变量的作用域最小化.html":{"ref":"第七章 通用程序设计/45.将局部变量的作用域最小化.html","tf":0.125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"第七章 通用程序设计/46.for-each循环优于传统的for循环.html":{"ref":"第七章 通用程序设计/46.for-each循环优于传统的for循环.html","tf":0.025}},"。":{"docs":{},"同":{"docs":{},"样":{"docs":{},"地":{"docs":{},"，":{"docs":{},"在":{"docs":{},"适":{"docs":{},"合":{"docs":{},"使":{"docs":{},"用":{"docs":{},"复":{"docs":{},"合":{"docs":{},"模":{"docs":{},"式":{"docs":{},"的":{"docs":{},"公":{"docs":{},"有":{"docs":{},"类":{"docs":{},"中":{"docs":{},"使":{"docs":{},"用":{"docs":{},"继":{"docs":{},"承":{"docs":{},"，":{"docs":{},"会":{"docs":{},"把":{"docs":{},"这":{"docs":{},"个":{"docs":{},"类":{"docs":{},"与":{"docs":{},"它":{"docs":{},"的":{"docs":{},"超":{"docs":{},"类":{"docs":{},"永":{"docs":{},"远":{"docs":{},"地":{"docs":{},"束":{"docs":{},"缚":{"docs":{},"在":{"docs":{},"一":{"docs":{},"起":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"人":{"docs":{},"为":{"docs":{},"地":{"docs":{},"限":{"docs":{},"制":{"docs":{},"了":{"docs":{},"子":{"docs":{},"类":{"docs":{},"的":{"docs":{},"性":{"docs":{},"能":{"docs":{"第七章 通用程序设计/55.谨慎的进行优化.html":{"ref":"第七章 通用程序设计/55.谨慎的进行优化.html","tf":0.038461538461538464}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"大":{"docs":{},"量":{"docs":{},"不":{"docs":{},"必":{"docs":{},"要":{"docs":{},"的":{"docs":{},"保":{"docs":{},"护":{"docs":{},"性":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"（":{"docs":{},"见":{"docs":{},"第":{"3":{"9":{"docs":{},"条":{"docs":{},"：":{"docs":{},"必":{"docs":{},"要":{"docs":{},"时":{"docs":{},"进":{"docs":{},"行":{"docs":{},"保":{"docs":{},"护":{"docs":{},"性":{"docs":{},"拷":{"docs":{},"贝":{"docs":{"第七章 通用程序设计/55.谨慎的进行优化.html":{"ref":"第七章 通用程序设计/55.谨慎的进行优化.html","tf":0.038461538461538464}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"但":{"docs":{},"无":{"docs":{},"法":{"docs":{},"执":{"docs":{},"行":{"docs":{"第八章 异常/58.选择合适的异常.html":{"ref":"第八章 异常/58.选择合适的异常.html","tf":0.030303030303030304}}}}}}},"试":{"docs":{},"图":{"docs":{},"建":{"docs":{},"立":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{"第八章 异常/58.选择合适的异常.html":{"ref":"第八章 异常/58.选择合适的异常.html","tf":0.030303030303030304}}}}}}}}}}}},"平":{"docs":{},"行":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"：":{"docs":{},"如":{"docs":{},"果":{"docs":{},"需":{"docs":{},"要":{"docs":{},"并":{"docs":{},"行":{"docs":{},"的":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"多":{"docs":{},"个":{"docs":{},"集":{"docs":{},"合":{"docs":{},"，":{"docs":{},"就":{"docs":{},"需":{"docs":{},"要":{"docs":{},"显":{"docs":{},"式":{"docs":{},"的":{"docs":{},"控":{"docs":{},"制":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"和":{"docs":{},"索":{"docs":{},"引":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"以":{"docs":{},"便":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"和":{"docs":{},"索":{"docs":{},"引":{"docs":{},"能":{"docs":{},"够":{"docs":{},"同":{"docs":{},"步":{"docs":{},"前":{"docs":{},"移":{"docs":{},"。":{"docs":{"第七章 通用程序设计/46.for-each循环优于传统的for循环.html":{"ref":"第七章 通用程序设计/46.for-each循环优于传统的for循环.html","tf":0.025}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"转":{"docs":{},"换":{"docs":{},"：":{"docs":{},"如":{"docs":{},"果":{"docs":{},"在":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"转":{"docs":{},"换":{"docs":{},"部":{"docs":{},"分":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"就":{"docs":{},"需":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"或":{"docs":{},"者":{"docs":{},"索":{"docs":{},"引":{"docs":{},"，":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"设":{"docs":{},"定":{"docs":{},"特":{"docs":{},"定":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"；":{"docs":{"第七章 通用程序设计/46.for-each循环优于传统的for循环.html":{"ref":"第七章 通用程序设计/46.for-each循环优于传统的for循环.html","tf":0.025}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"、":{"docs":{},"返":{"docs":{},"回":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"对":{"docs":{},"象":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"通":{"docs":{},"常":{"docs":{},"被":{"docs":{},"称":{"docs":{},"为":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"和":{"docs":{},"t":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"。":{"docs":{"第七章 通用程序设计/56.遵守普遍接受的命名规则.html":{"ref":"第七章 通用程序设计/56.遵守普遍接受的命名规则.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"项":{"docs":{},"目":{"docs":{},"中":{"docs":{},"如":{"docs":{},"果":{"docs":{},"部":{"docs":{},"分":{"docs":{},"功":{"docs":{},"能":{"docs":{},"，":{"docs":{},"开":{"docs":{},"源":{"docs":{},"社":{"docs":{},"区":{"docs":{},"有":{"docs":{},"相":{"docs":{},"应":{"docs":{},"的":{"docs":{},"类":{"docs":{},"库":{"docs":{},"可":{"docs":{},"以":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"充":{"docs":{},"分":{"docs":{},"利":{"docs":{},"用":{"docs":{},"开":{"docs":{},"源":{"docs":{},"的":{"docs":{},"类":{"docs":{},"库":{"docs":{},"，":{"docs":{},"原":{"docs":{},"因":{"docs":{},"有":{"docs":{},"：":{"docs":{"第七章 通用程序设计/47.多使用类库.html":{"ref":"第七章 通用程序设计/47.多使用类库.html","tf":0.1111111111111111}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"、":{"docs":{},"*":{"docs":{},"、":{"docs":{},"/":{"docs":{},"等":{"docs":{},"算":{"docs":{},"术":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"直":{"docs":{},"接":{"docs":{},"对":{"docs":{},"其":{"docs":{},"对":{"docs":{},"象":{"docs":{},"进":{"docs":{},"行":{"docs":{},"数":{"docs":{},"学":{"docs":{},"运":{"docs":{},"算":{"docs":{},"，":{"docs":{},"而":{"docs":{},"必":{"docs":{},"须":{"docs":{},"调":{"docs":{},"用":{"docs":{},"其":{"docs":{},"相":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"也":{"docs":{},"必":{"docs":{},"须":{"docs":{},"是":{"docs":{},"b":{"docs":{},"i":{"docs":{},"g":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"；":{"docs":{"第七章 通用程序设计/48.需要精确答案，请避免使用float和double.html":{"ref":"第七章 通用程序设计/48.需要精确答案，请避免使用float和double.html","tf":0.07142857142857142}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"任":{"docs":{},"何":{"docs":{},"需":{"docs":{},"要":{"docs":{},"精":{"docs":{},"确":{"docs":{},"答":{"docs":{},"案":{"docs":{},"的":{"docs":{},"计":{"docs":{},"算":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"都":{"docs":{},"不":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{},"和":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"、":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"或":{"docs":{},"者":{"docs":{},"b":{"docs":{},"i":{"docs":{},"g":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"。":{"docs":{},"使":{"docs":{},"用":{"docs":{},"b":{"docs":{},"i":{"docs":{},"g":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"可":{"docs":{},"以":{"docs":{},"很":{"docs":{},"方":{"docs":{},"便":{"docs":{},"的":{"docs":{},"选":{"docs":{},"择":{"docs":{},"舍":{"docs":{},"入":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"它":{"docs":{},"一":{"docs":{},"共":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"8":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"；":{"docs":{"第七章 通用程序设计/48.需要精确答案，请避免使用float和double.html":{"ref":"第七章 通用程序设计/48.需要精确答案，请避免使用float和double.html","tf":0.07142857142857142}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"不":{"docs":{},"适":{"docs":{},"合":{"docs":{},"代":{"docs":{},"替":{"docs":{},"其":{"docs":{},"他":{"docs":{},"值":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"：":{"docs":{},"当":{"docs":{},"原":{"docs":{},"始":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"、":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{},"等":{"docs":{},"其":{"docs":{},"他":{"docs":{},"类":{"docs":{},"型":{"docs":{},"时":{"docs":{},"，":{"docs":{},"就":{"docs":{},"不":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"替":{"docs":{},"代":{"docs":{},"；":{"docs":{"第七章 通用程序设计/50.尽量避免使用字符串.html":{"ref":"第七章 通用程序设计/50.尽量避免使用字符串.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"枚":{"docs":{},"举":{"docs":{},"类":{"docs":{},"型":{"docs":{},"：":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"类":{"docs":{},"型":{"docs":{},"比":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"更":{"docs":{},"适":{"docs":{},"合":{"docs":{},"用":{"docs":{},"来":{"docs":{},"表":{"docs":{},"示":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"的":{"docs":{},"常":{"docs":{},"量":{"docs":{},"；":{"docs":{"第七章 通用程序设计/50.尽量避免使用字符串.html":{"ref":"第七章 通用程序设计/50.尽量避免使用字符串.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}}}}}}}}}}}}},"聚":{"docs":{},"集":{"docs":{},"类":{"docs":{},"型":{"docs":{},"：":{"docs":{},"如":{"docs":{},"果":{"docs":{},"一":{"docs":{},"个":{"docs":{},"实":{"docs":{},"体":{"docs":{},"有":{"docs":{},"多":{"docs":{},"个":{"docs":{},"组":{"docs":{},"件":{"docs":{},"，":{"docs":{},"用":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"来":{"docs":{},"表":{"docs":{},"示":{"docs":{},"这":{"docs":{},"个":{"docs":{},"实":{"docs":{},"体":{"docs":{},"通":{"docs":{},"常":{"docs":{},"不":{"docs":{},"恰":{"docs":{},"当":{"docs":{},"，":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"第七章 通用程序设计/50.尽量避免使用字符串.html":{"ref":"第七章 通用程序设计/50.尽量避免使用字符串.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"作":{"docs":{},"为":{"docs":{},"授":{"docs":{},"权":{"docs":{},"键":{"docs":{},"：":{"docs":{},"有":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"被":{"docs":{},"用":{"docs":{},"于":{"docs":{},"对":{"docs":{},"某":{"docs":{},"种":{"docs":{},"功":{"docs":{},"能":{"docs":{},"进":{"docs":{},"行":{"docs":{},"授":{"docs":{},"权":{"docs":{},"访":{"docs":{},"问":{"docs":{},"，":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"设":{"docs":{},"计":{"docs":{},"一":{"docs":{},"个":{"docs":{},"提":{"docs":{},"供":{"docs":{},"线":{"docs":{},"程":{"docs":{},"局":{"docs":{},"部":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"机":{"docs":{},"制":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"机":{"docs":{},"制":{"docs":{},"提":{"docs":{},"供":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{},"在":{"docs":{},"每":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"中":{"docs":{},"都":{"docs":{},"有":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"示":{"docs":{},"例":{"docs":{},"代":{"docs":{},"码":{"docs":{},"：":{"docs":{"第七章 通用程序设计/50.尽量避免使用字符串.html":{"ref":"第七章 通用程序设计/50.尽量避免使用字符串.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"实":{"docs":{},"际":{"docs":{},"开":{"docs":{},"发":{"docs":{},"中":{"docs":{},"被":{"docs":{},"高":{"docs":{},"频":{"docs":{},"使":{"docs":{},"用":{"docs":{},"，":{"docs":{},"同":{"docs":{},"样":{"docs":{},"也":{"docs":{},"存":{"docs":{},"在":{"docs":{},"着":{"docs":{},"被":{"docs":{},"滥":{"docs":{},"用":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"，":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"不":{"docs":{},"应":{"docs":{},"该":{"docs":{},"使":{"docs":{},"用":{"docs":{},"在":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"情":{"docs":{},"形":{"docs":{},"下":{"docs":{},"呢":{"docs":{},"？":{"docs":{"第七章 通用程序设计/50.尽量避免使用字符串.html":{"ref":"第七章 通用程序设计/50.尽量避免使用字符串.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"代":{"docs":{},"码":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"于":{"docs":{},"具":{"docs":{},"体":{"docs":{},"类":{"docs":{},"的":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"属":{"docs":{},"性":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"上":{"docs":{},"例":{"docs":{},"中":{"docs":{},"假":{"docs":{},"设":{"docs":{},"程":{"docs":{},"序":{"docs":{},"中":{"docs":{},"需":{"docs":{},"要":{"docs":{},"利":{"docs":{},"用":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"特":{"docs":{},"性":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"采":{"docs":{},"用":{"docs":{},"接":{"docs":{},"口":{"docs":{},"声":{"docs":{},"明":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"无":{"docs":{},"意":{"docs":{},"间":{"docs":{},"将":{"docs":{},"实":{"docs":{},"现":{"docs":{},"类":{"docs":{},"改":{"docs":{},"成":{"docs":{},"了":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"就":{"docs":{},"会":{"docs":{},"造":{"docs":{},"成":{"docs":{},"极":{"docs":{},"大":{"docs":{},"的":{"docs":{},"错":{"docs":{},"误":{"docs":{},"。":{"docs":{"第七章 通用程序设计/52.通过接口引用对象.html":{"ref":"第七章 通用程序设计/52.通过接口引用对象.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"像":{"docs":{},"上":{"docs":{},"例":{"docs":{},"中":{"docs":{},"采":{"docs":{},"用":{"docs":{},"接":{"docs":{},"口":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"声":{"docs":{},"明":{"docs":{},"变":{"docs":{},"量":{"docs":{},"更":{"docs":{},"加":{"docs":{},"合":{"docs":{},"适":{"docs":{},"，":{"docs":{},"如":{"docs":{},"：":{"docs":{"第七章 通用程序设计/52.通过接口引用对象.html":{"ref":"第七章 通用程序设计/52.通过接口引用对象.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}}}}}}}}},"顶":{"docs":{},"层":{"docs":{},"类":{"docs":{},"是":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{"第七章 通用程序设计/52.通过接口引用对象.html":{"ref":"第七章 通用程序设计/52.通过接口引用对象.html","tf":0.047619047619047616}}}}}}}}}}}}},"丧":{"docs":{},"失":{"docs":{},"了":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"类":{"docs":{},"型":{"docs":{},"检":{"docs":{},"查":{"docs":{},"的":{"docs":{},"好":{"docs":{},"处":{"docs":{},"：":{"docs":{},"如":{"docs":{},"果":{"docs":{},"程":{"docs":{},"序":{"docs":{},"企":{"docs":{},"图":{"docs":{},"用":{"docs":{},"反":{"docs":{},"射":{"docs":{},"访":{"docs":{},"问":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"时":{"docs":{},"，":{"docs":{},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"将":{"docs":{},"会":{"docs":{},"失":{"docs":{},"败":{"docs":{},"；":{"docs":{"第七章 通用程序设计/53.慎用反射机制.html":{"ref":"第七章 通用程序设计/53.慎用反射机制.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"反":{"docs":{},"射":{"docs":{},"很":{"docs":{},"强":{"docs":{},"大":{"docs":{},"的":{"docs":{},"功":{"docs":{},"能":{"docs":{},"机":{"docs":{},"制":{"docs":{},"不":{"docs":{},"能":{"docs":{},"否":{"docs":{},"认":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"特":{"docs":{},"定":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"系":{"docs":{},"统":{"docs":{},"编":{"docs":{},"程":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"反":{"docs":{},"射":{"docs":{},"机":{"docs":{},"制":{"docs":{},"很":{"docs":{},"有":{"docs":{},"用":{"docs":{},"途":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"他":{"docs":{},"也":{"docs":{},"有":{"docs":{},"很":{"docs":{},"多":{"docs":{},"缺":{"docs":{},"点":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"普":{"docs":{},"通":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"调":{"docs":{},"用":{"docs":{},"，":{"docs":{},"建":{"docs":{},"议":{"docs":{},"不":{"docs":{},"采":{"docs":{},"用":{"docs":{},"反":{"docs":{},"射":{"docs":{},"机":{"docs":{},"制":{"docs":{},"。":{"docs":{"第七章 通用程序设计/53.慎用反射机制.html":{"ref":"第七章 通用程序设计/53.慎用反射机制.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"机":{"docs":{},"制":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"通":{"docs":{},"过":{"docs":{},"程":{"docs":{},"序":{"docs":{},"来":{"docs":{},"访":{"docs":{},"问":{"docs":{},"关":{"docs":{},"于":{"docs":{},"已":{"docs":{},"装":{"docs":{},"载":{"docs":{},"的":{"docs":{},"类":{"docs":{},"的":{"docs":{},"信":{"docs":{},"息":{"docs":{},"的":{"docs":{},"能":{"docs":{},"力":{"docs":{},"，":{"docs":{},"给":{"docs":{},"定":{"docs":{},"一":{"docs":{},"个":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"实":{"docs":{},"例":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"获":{"docs":{},"得":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"、":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{},"、":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"实":{"docs":{},"例":{"docs":{},"，":{"docs":{},"这":{"docs":{},"些":{"docs":{},"对":{"docs":{},"象":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"类":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"、":{"docs":{},"访":{"docs":{},"问":{"docs":{},"类":{"docs":{},"成":{"docs":{},"员":{"docs":{},"名":{"docs":{},"称":{"docs":{},"、":{"docs":{},"域":{"docs":{},"类":{"docs":{},"型":{"docs":{},"、":{"docs":{},"方":{"docs":{},"法":{"docs":{},"签":{"docs":{},"名":{"docs":{},"等":{"docs":{},"信":{"docs":{},"息":{"docs":{},"。":{"docs":{},"反":{"docs":{},"射":{"docs":{},"机":{"docs":{},"制":{"docs":{},"很":{"docs":{},"强":{"docs":{},"大":{"docs":{},"，":{"docs":{},"但":{"docs":{},"使":{"docs":{},"用":{"docs":{},"起":{"docs":{},"来":{"docs":{},"有":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"注":{"docs":{},"意":{"docs":{},"事":{"docs":{},"项":{"docs":{},"呢":{"docs":{},"？":{"docs":{"第七章 通用程序设计/53.慎用反射机制.html":{"ref":"第七章 通用程序设计/53.慎用反射机制.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"这":{"docs":{},"个":{"docs":{},"类":{"docs":{},"时":{"docs":{},"，":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"会":{"docs":{},"调":{"docs":{},"用":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"返":{"docs":{},"回":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"d":{"docs":{},"对":{"docs":{},"象":{"docs":{},"！":{"docs":{},"这":{"docs":{},"里":{"docs":{},"同":{"docs":{},"样":{"docs":{},"调":{"docs":{},"用":{"docs":{},"了":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"d":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"会":{"docs":{},"和":{"docs":{},"原":{"docs":{},"来":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"对":{"docs":{},"象":{"docs":{},"一":{"docs":{},"样":{"docs":{"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"性":{"docs":{},"能":{"docs":{},"损":{"docs":{},"失":{"docs":{},"：":{"docs":{},"反":{"docs":{},"射":{"docs":{},"方":{"docs":{},"法":{"docs":{},"调":{"docs":{},"用":{"docs":{},"比":{"docs":{},"普":{"docs":{},"通":{"docs":{},"方":{"docs":{},"法":{"docs":{},"调":{"docs":{},"用":{"docs":{},"要":{"docs":{},"慢":{"docs":{},"很":{"docs":{},"多":{"docs":{},"。":{"docs":{"第七章 通用程序设计/53.慎用反射机制.html":{"ref":"第七章 通用程序设计/53.慎用反射机制.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}},"执":{"docs":{},"行":{"docs":{},"反":{"docs":{},"射":{"docs":{},"访":{"docs":{},"问":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"代":{"docs":{},"码":{"docs":{},"很":{"docs":{},"冗":{"docs":{},"长":{"docs":{},"：":{"docs":{},"由":{"docs":{},"于":{"docs":{},"使":{"docs":{},"用":{"docs":{},"反":{"docs":{},"射":{"docs":{},"，":{"docs":{},"会":{"docs":{},"有":{"docs":{},"很":{"docs":{},"多":{"docs":{},"的":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"需":{"docs":{},"要":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"第七章 通用程序设计/53.慎用反射机制.html":{"ref":"第七章 通用程序设计/53.慎用反射机制.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"某":{"docs":{},"个":{"docs":{},"动":{"docs":{},"作":{"docs":{},"方":{"docs":{},"法":{"docs":{},"通":{"docs":{},"常":{"docs":{},"用":{"docs":{},"动":{"docs":{},"词":{"docs":{},"或":{"docs":{},"者":{"docs":{},"动":{"docs":{},"词":{"docs":{},"短":{"docs":{},"语":{"docs":{},"来":{"docs":{},"命":{"docs":{},"名":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"和":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"；":{"docs":{"第七章 通用程序设计/56.遵守普遍接受的命名规则.html":{"ref":"第七章 通用程序设计/56.遵守普遍接受的命名规则.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"本":{"docs":{},"地":{"docs":{},"方":{"docs":{},"法":{"docs":{},"不":{"docs":{},"是":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"于":{"docs":{},"平":{"docs":{},"台":{"docs":{},"的":{"docs":{},"具":{"docs":{},"体":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"编":{"docs":{},"写":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"不":{"docs":{},"再":{"docs":{},"是":{"docs":{},"可":{"docs":{},"自":{"docs":{},"由":{"docs":{},"移":{"docs":{},"植":{"docs":{},"的":{"docs":{},"；":{"docs":{"第七章 通用程序设计/54.慎用本地方法.html":{"ref":"第七章 通用程序设计/54.慎用本地方法.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"极":{"docs":{},"少":{"docs":{},"数":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"会":{"docs":{},"需":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{},"本":{"docs":{},"地":{"docs":{},"方":{"docs":{},"法":{"docs":{},"来":{"docs":{},"提":{"docs":{},"高":{"docs":{},"性":{"docs":{},"能":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"必":{"docs":{},"须":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{},"本":{"docs":{},"地":{"docs":{},"方":{"docs":{},"法":{"docs":{},"来":{"docs":{},"访":{"docs":{},"问":{"docs":{},"底":{"docs":{},"层":{"docs":{},"资":{"docs":{},"源":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"全":{"docs":{},"面":{"docs":{},"的":{"docs":{},"进":{"docs":{},"行":{"docs":{},"测":{"docs":{},"试":{"docs":{},"。":{"docs":{},"*":{"docs":{},"*":{"docs":{},"使":{"docs":{},"用":{"docs":{},"本":{"docs":{},"地":{"docs":{},"方":{"docs":{},"法":{"docs":{},"来":{"docs":{},"提":{"docs":{},"高":{"docs":{},"性":{"docs":{},"能":{"docs":{},"的":{"docs":{},"做":{"docs":{},"法":{"docs":{},"是":{"docs":{},"不":{"docs":{},"被":{"docs":{},"建":{"docs":{},"议":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"。":{"docs":{"第七章 通用程序设计/54.慎用本地方法.html":{"ref":"第七章 通用程序设计/54.慎用本地方法.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"程":{"docs":{},"序":{"docs":{},"更":{"docs":{},"难":{"docs":{},"调":{"docs":{},"试":{"docs":{},"，":{"docs":{},"进":{"docs":{},"入":{"docs":{},"和":{"docs":{},"退":{"docs":{},"出":{"docs":{},"本":{"docs":{},"地":{"docs":{},"方":{"docs":{},"法":{"docs":{},"都":{"docs":{},"需":{"docs":{},"要":{"docs":{},"巨":{"docs":{},"大":{"docs":{},"性":{"docs":{},"能":{"docs":{},"消":{"docs":{},"耗":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"仅":{"docs":{},"仅":{"docs":{},"是":{"docs":{},"实":{"docs":{},"现":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"本":{"docs":{},"地":{"docs":{},"方":{"docs":{},"法":{"docs":{},"就":{"docs":{},"是":{"docs":{},"得":{"docs":{},"不":{"docs":{},"偿":{"docs":{},"失":{"docs":{},"的":{"docs":{},"；":{"docs":{"第七章 通用程序设计/54.慎用本地方法.html":{"ref":"第七章 通用程序设计/54.慎用本地方法.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"努":{"docs":{},"力":{"docs":{},"避":{"docs":{},"免":{"docs":{},"那":{"docs":{},"些":{"docs":{},"限":{"docs":{},"制":{"docs":{},"性":{"docs":{},"能":{"docs":{},"的":{"docs":{},"设":{"docs":{},"计":{"docs":{},"决":{"docs":{},"策":{"docs":{},"。":{"docs":{},"当":{"docs":{},"一":{"docs":{},"个":{"docs":{},"系":{"docs":{},"统":{"docs":{},"设":{"docs":{},"计":{"docs":{},"完":{"docs":{},"成":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"最":{"docs":{},"难":{"docs":{},"以":{"docs":{},"更":{"docs":{},"改":{"docs":{},"的":{"docs":{},"组":{"docs":{},"件":{"docs":{},"是":{"docs":{},"那":{"docs":{},"些":{"docs":{},"指":{"docs":{},"定":{"docs":{},"了":{"docs":{},"模":{"docs":{},"块":{"docs":{},"之":{"docs":{},"间":{"docs":{},"交":{"docs":{},"互":{"docs":{},"关":{"docs":{},"系":{"docs":{},"以":{"docs":{},"及":{"docs":{},"模":{"docs":{},"块":{"docs":{},"与":{"docs":{},"外":{"docs":{},"界":{"docs":{},"交":{"docs":{},"互":{"docs":{},"关":{"docs":{},"系":{"docs":{},"的":{"docs":{},"组":{"docs":{},"件":{"docs":{},"。":{"docs":{},"在":{"docs":{},"这":{"docs":{},"些":{"docs":{},"设":{"docs":{},"计":{"docs":{},"组":{"docs":{},"件":{"docs":{},"之":{"docs":{},"中":{"docs":{},"，":{"docs":{},"最":{"docs":{},"主":{"docs":{},"要":{"docs":{},"的":{"docs":{},"是":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"协":{"docs":{},"议":{"docs":{},"以":{"docs":{},"及":{"docs":{},"永":{"docs":{},"久":{"docs":{},"数":{"docs":{},"据":{"docs":{},"格":{"docs":{},"式":{"docs":{},"。":{"docs":{},"这":{"docs":{},"些":{"docs":{},"设":{"docs":{},"计":{"docs":{},"组":{"docs":{},"件":{"docs":{},"不":{"docs":{},"仅":{"docs":{},"在":{"docs":{},"事":{"docs":{},"后":{"docs":{},"难":{"docs":{},"以":{"docs":{},"甚":{"docs":{},"至":{"docs":{},"不":{"docs":{},"可":{"docs":{},"能":{"docs":{},"改":{"docs":{},"变":{"docs":{},"，":{"docs":{},"而":{"docs":{},"且":{"docs":{},"它":{"docs":{},"们":{"docs":{},"都":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"对":{"docs":{},"系":{"docs":{},"统":{"docs":{},"本":{"docs":{},"该":{"docs":{},"达":{"docs":{},"到":{"docs":{},"的":{"docs":{},"性":{"docs":{},"能":{"docs":{},"产":{"docs":{},"生":{"docs":{},"严":{"docs":{},"重":{"docs":{},"的":{"docs":{},"限":{"docs":{},"制":{"docs":{},"；":{"docs":{"第七章 通用程序设计/55.谨慎的进行优化.html":{"ref":"第七章 通用程序设计/55.谨慎的进行优化.html","tf":0.038461538461538464}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"很":{"docs":{},"多":{"docs":{},"计":{"docs":{},"算":{"docs":{},"上":{"docs":{},"的":{"docs":{},"过":{"docs":{},"失":{"docs":{},"都":{"docs":{},"被":{"docs":{},"归":{"docs":{},"咎":{"docs":{},"于":{"docs":{},"效":{"docs":{},"率":{"docs":{},"（":{"docs":{},"没":{"docs":{},"有":{"docs":{},"必":{"docs":{},"要":{"docs":{},"达":{"docs":{},"到":{"docs":{},"的":{"docs":{},"效":{"docs":{},"率":{"docs":{},"）":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"任":{"docs":{},"何":{"docs":{},"其":{"docs":{},"他":{"docs":{},"的":{"docs":{},"原":{"docs":{},"因":{"docs":{},"，":{"docs":{},"—":{"docs":{},"—":{"docs":{},"甚":{"docs":{},"至":{"docs":{},"包":{"docs":{},"括":{"docs":{},"盲":{"docs":{},"目":{"docs":{},"地":{"docs":{},"做":{"docs":{},"傻":{"docs":{},"事":{"docs":{},"。":{"docs":{"第七章 通用程序设计/55.谨慎的进行优化.html":{"ref":"第七章 通用程序设计/55.谨慎的进行优化.html","tf":0.038461538461538464}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"规":{"docs":{},"则":{"1":{"docs":{},"：":{"docs":{},"不":{"docs":{},"要":{"docs":{},"进":{"docs":{},"行":{"docs":{},"优":{"docs":{},"化":{"docs":{},"。":{"docs":{"第七章 通用程序设计/55.谨慎的进行优化.html":{"ref":"第七章 通用程序设计/55.谨慎的进行优化.html","tf":0.038461538461538464}}}}}}}}}}},"2":{"docs":{},"（":{"docs":{},"仅":{"docs":{},"针":{"docs":{},"对":{"docs":{},"专":{"docs":{},"家":{"docs":{},"）":{"docs":{},"：":{"docs":{},"还":{"docs":{},"是":{"docs":{},"不":{"docs":{},"要":{"docs":{},"进":{"docs":{},"行":{"docs":{},"优":{"docs":{},"化":{"docs":{},"一":{"docs":{},"一":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"，":{"docs":{},"在":{"docs":{},"你":{"docs":{},"还":{"docs":{},"没":{"docs":{},"有":{"docs":{},"绝":{"docs":{},"对":{"docs":{},"清":{"docs":{},"晰":{"docs":{},"的":{"docs":{},"未":{"docs":{},"优":{"docs":{},"化":{"docs":{},"方":{"docs":{},"案":{"docs":{},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"请":{"docs":{},"不":{"docs":{},"要":{"docs":{},"进":{"docs":{},"行":{"docs":{},"优":{"docs":{},"化":{"docs":{},"．":{"docs":{"第七章 通用程序设计/55.谨慎的进行优化.html":{"ref":"第七章 通用程序设计/55.谨慎的进行优化.html","tf":0.038461538461538464}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"应":{"docs":{},"该":{"docs":{},"比":{"docs":{},"较":{"docs":{},"简":{"docs":{},"短":{"docs":{},"，":{"docs":{},"通":{"docs":{},"常":{"docs":{},"不":{"docs":{},"超":{"docs":{},"过":{"8":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"。":{"docs":{},"鼓":{"docs":{},"励":{"docs":{},"使":{"docs":{},"用":{"docs":{},"有":{"docs":{},"意":{"docs":{},"义":{"docs":{},"的":{"docs":{},"缩":{"docs":{},"写":{"docs":{},"形":{"docs":{},"式":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{"第七章 通用程序设计/56.遵守普遍接受的命名规则.html":{"ref":"第七章 通用程序设计/56.遵守普遍接受的命名规则.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}},"异":{"docs":{},"常":{"docs":{},"应":{"docs":{},"该":{"docs":{},"只":{"docs":{},"用":{"docs":{},"于":{"docs":{},"异":{"docs":{},"常":{"docs":{},"处":{"docs":{},"理":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"永":{"docs":{},"远":{"docs":{},"不":{"docs":{},"应":{"docs":{},"该":{"docs":{},"应":{"docs":{},"用":{"docs":{},"到":{"docs":{},"控":{"docs":{},"制":{"docs":{},"流":{"docs":{},"中":{"docs":{},"，":{"docs":{"第八章 异常/57.只针对异常的情况才使用异常.html":{"ref":"第八章 异常/57.只针对异常的情况才使用异常.html","tf":0.043478260869565216}}}}}}}}}}}}}}}}}}}}}}}}}}}},"机":{"docs":{},"制":{"docs":{},"的":{"docs":{},"设":{"docs":{},"计":{"docs":{},"初":{"docs":{},"衷":{"docs":{},"是":{"docs":{},"用":{"docs":{},"于":{"docs":{},"不":{"docs":{},"正":{"docs":{},"常":{"docs":{},"的":{"docs":{},"情":{"docs":{},"形":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{},"实":{"docs":{},"现":{"docs":{},"不":{"docs":{},"会":{"docs":{},"对":{"docs":{},"其":{"docs":{},"优":{"docs":{},"化":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"企":{"docs":{},"图":{"docs":{},"用":{"docs":{},"异":{"docs":{},"常":{"docs":{},"来":{"docs":{},"达":{"docs":{},"到":{"docs":{},"性":{"docs":{},"能":{"docs":{},"优":{"docs":{},"化":{"docs":{},"，":{"docs":{},"是":{"docs":{},"不":{"docs":{},"可":{"docs":{},"行":{"docs":{},"的":{"docs":{},"；":{"docs":{"第八章 异常/57.只针对异常的情况才使用异常.html":{"ref":"第八章 异常/57.只针对异常的情况才使用异常.html","tf":0.043478260869565216}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"细":{"docs":{},"节":{"docs":{},"消":{"docs":{},"息":{"docs":{},"不":{"docs":{},"应":{"docs":{},"该":{"docs":{},"与":{"docs":{},"“":{"docs":{},"用":{"docs":{},"户":{"docs":{},"层":{"docs":{},"次":{"docs":{},"的":{"docs":{},"错":{"docs":{},"误":{"docs":{},"消":{"docs":{},"息":{"docs":{},"”":{"docs":{},"混":{"docs":{},"为":{"docs":{},"一":{"docs":{},"谈":{"docs":{},"，":{"docs":{},"后":{"docs":{},"者":{"docs":{},"对":{"docs":{},"于":{"docs":{},"最":{"docs":{},"终":{"docs":{},"用":{"docs":{},"户":{"docs":{},"而":{"docs":{},"言":{"docs":{},"必":{"docs":{},"须":{"docs":{},"是":{"docs":{},"可":{"docs":{},"理":{"docs":{},"解":{"docs":{},"的":{"docs":{},"。":{"docs":{},"与":{"docs":{},"用":{"docs":{},"户":{"docs":{},"层":{"docs":{},"次":{"docs":{},"的":{"docs":{},"错":{"docs":{},"误":{"docs":{},"消":{"docs":{},"息":{"docs":{},"不":{"docs":{},"同":{"docs":{},"，":{"docs":{},"异":{"docs":{},"常":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"表":{"docs":{},"示":{"docs":{},"法":{"docs":{},"主":{"docs":{},"要":{"docs":{},"是":{"docs":{},"让":{"docs":{},"程":{"docs":{},"序":{"docs":{},"员":{"docs":{},"或":{"docs":{},"者":{"docs":{},"域":{"docs":{},"服":{"docs":{},"务":{"docs":{},"人":{"docs":{},"员":{"docs":{},"用":{"docs":{},"来":{"docs":{},"分":{"docs":{},"析":{"docs":{},"失":{"docs":{},"败":{"docs":{},"的":{"docs":{},"原":{"docs":{},"因":{"docs":{},"。":{"docs":{"第八章 异常/63.编写合适的异常信息.html":{"ref":"第八章 异常/63.编写合适的异常信息.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"受":{"docs":{},"检":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{"第八章 异常/58.选择合适的异常.html":{"ref":"第八章 异常/58.选择合适的异常.html","tf":0.030303030303030304}}}}},"异":{"docs":{},"常":{"docs":{},"通":{"docs":{},"过":{"docs":{},"强":{"docs":{},"制":{"docs":{},"调":{"docs":{},"用":{"docs":{},"者":{"docs":{},"通":{"docs":{},"过":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"处":{"docs":{},"理":{"docs":{},"异":{"docs":{},"常":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"能":{"docs":{},"够":{"docs":{},"从":{"docs":{},"一":{"docs":{},"定":{"docs":{},"程":{"docs":{},"度":{"docs":{},"上":{"docs":{},"确":{"docs":{},"保":{"docs":{},"程":{"docs":{},"序":{"docs":{},"的":{"docs":{},"可":{"docs":{},"靠":{"docs":{},"性":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"设":{"docs":{},"计":{"docs":{},"时":{"docs":{},"，":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"多":{"docs":{},"个":{"docs":{},"受":{"docs":{},"检":{"docs":{},"异":{"docs":{},"常":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"调":{"docs":{},"用":{"docs":{},"方":{"docs":{},"就":{"docs":{},"必":{"docs":{},"须":{"docs":{},"使":{"docs":{},"用":{"docs":{},"多":{"docs":{},"个":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"进":{"docs":{},"行":{"docs":{},"相":{"docs":{},"应":{"docs":{},"的":{"docs":{},"处":{"docs":{},"理":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"将":{"docs":{},"它":{"docs":{},"们":{"docs":{},"在":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},"出":{"docs":{},"去":{"docs":{},"，":{"docs":{},"反":{"docs":{},"而":{"docs":{},"让":{"docs":{},"调":{"docs":{},"用":{"docs":{},"方":{"docs":{},"增":{"docs":{},"加":{"docs":{},"了":{"docs":{},"负":{"docs":{},"担":{"docs":{},"。":{"docs":{},"那":{"docs":{},"么":{"docs":{},"，":{"docs":{},"在":{"docs":{},"设":{"docs":{},"计":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"否":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"异":{"docs":{},"常":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"应":{"docs":{},"该":{"docs":{},"有":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"原":{"docs":{},"则":{"docs":{},"？":{"docs":{"第八章 异常/59.避免不必要的使用受检的异常.html":{"ref":"第八章 异常/59.避免不必要的使用受检的异常.html","tf":0.024390243902439025}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"找":{"docs":{},"不":{"docs":{},"到":{"docs":{},"类":{"docs":{},"或":{"docs":{},"接":{"docs":{},"口":{"docs":{},"所":{"docs":{},"产":{"docs":{},"生":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{},"；":{"docs":{"第八章 异常/58.选择合适的异常.html":{"ref":"第八章 异常/58.选择合适的异常.html","tf":0.030303030303030304}}}}}}}}}}}}}}}},"目":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"等":{"docs":{},"待":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"另":{"docs":{},"一":{"docs":{},"线":{"docs":{},"程":{"docs":{},"中":{"docs":{},"断":{"docs":{},"目":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"所":{"docs":{},"产":{"docs":{},"生":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{},"。":{"docs":{"第八章 异常/58.选择合适的异常.html":{"ref":"第八章 异常/58.选择合适的异常.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}}}}}}}},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"异":{"docs":{},"常":{"docs":{"第八章 异常/58.选择合适的异常.html":{"ref":"第八章 异常/58.选择合适的异常.html","tf":0.030303030303030304}},"通":{"docs":{},"常":{"docs":{},"用":{"docs":{},"来":{"docs":{},"表":{"docs":{},"明":{"docs":{},"程":{"docs":{},"序":{"docs":{},"错":{"docs":{},"误":{"docs":{},"，":{"docs":{},"大":{"docs":{},"多":{"docs":{},"数":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"异":{"docs":{},"常":{"docs":{},"是":{"docs":{},"指":{"docs":{},"前":{"docs":{},"提":{"docs":{},"条":{"docs":{},"件":{"docs":{},"违":{"docs":{},"例":{"docs":{},"，":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"提":{"docs":{},"供":{"docs":{},"方":{"docs":{},"和":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"调":{"docs":{},"用":{"docs":{},"方":{"docs":{},"没":{"docs":{},"有":{"docs":{},"遵":{"docs":{},"守":{"docs":{},"双":{"docs":{},"方":{"docs":{},"的":{"docs":{},"约":{"docs":{},"定":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"在":{"docs":{},"访":{"docs":{},"问":{"docs":{},"数":{"docs":{},"组":{"docs":{},"时":{"docs":{},"，":{"docs":{},"访":{"docs":{},"问":{"docs":{},"的":{"docs":{},"索":{"docs":{},"引":{"docs":{},"超":{"docs":{},"过":{"docs":{},"了":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"就":{"docs":{},"会":{"docs":{},"出":{"docs":{},"现":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"f":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"，":{"docs":{},"不":{"docs":{},"想":{"docs":{},"调":{"docs":{},"用":{"docs":{},"者":{"docs":{},"恢":{"docs":{},"复":{"docs":{},"异":{"docs":{},"常":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"则":{"docs":{},"可":{"docs":{},"以":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"异":{"docs":{},"常":{"docs":{},"。":{"docs":{},"常":{"docs":{},"见":{"docs":{},"的":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"异":{"docs":{},"常":{"docs":{},"有":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"、":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"、":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"f":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"等":{"docs":{},"等":{"docs":{},"。":{"docs":{"第八章 异常/58.选择合适的异常.html":{"ref":"第八章 异常/58.选择合适的异常.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"错":{"docs":{},"误":{"docs":{"第八章 异常/58.选择合适的异常.html":{"ref":"第八章 异常/58.选择合适的异常.html","tf":0.030303030303030304}}}},"：":{"docs":{"第八章 异常/58.选择合适的异常.html":{"ref":"第八章 异常/58.选择合适的异常.html","tf":0.15151515151515152}}},"“":{"docs":{},"把":{"docs":{},"调":{"docs":{},"用":{"docs":{},"具":{"docs":{},"有":{"docs":{},"受":{"docs":{},"检":{"docs":{},"异":{"docs":{},"常":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"进":{"docs":{},"行":{"docs":{},"重":{"docs":{},"构":{"docs":{},"”":{"docs":{},"的":{"docs":{},"一":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"，":{"docs":{},"把":{"docs":{},"这":{"docs":{},"个":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"异":{"docs":{},"常":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"分":{"docs":{},"成":{"docs":{},"两":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"返":{"docs":{},"回":{"docs":{},"一":{"docs":{},"个":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"，":{"docs":{},"表":{"docs":{},"明":{"docs":{},"状":{"docs":{},"态":{"docs":{},"测":{"docs":{},"试":{"docs":{},"，":{"docs":{},"代":{"docs":{},"表":{"docs":{},"是":{"docs":{},"否":{"docs":{},"应":{"docs":{},"该":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"异":{"docs":{},"常":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"示":{"docs":{},"例":{"docs":{},"代":{"docs":{},"码":{"docs":{},"：":{"docs":{"第八章 异常/59.避免不必要的使用受检的异常.html":{"ref":"第八章 异常/59.避免不必要的使用受检的异常.html","tf":0.024390243902439025}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"只":{"docs":{},"要":{"docs":{},"是":{"docs":{},"加":{"docs":{},"了":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"或":{"docs":{},"者":{"docs":{},"代":{"docs":{},"码":{"docs":{},"块":{"docs":{},"就":{"docs":{},"一":{"docs":{},"定":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"，":{"docs":{},"而":{"docs":{},"没":{"docs":{},"有":{"docs":{},"加":{"docs":{},"这":{"docs":{},"个":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"就":{"docs":{},"不":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"”":{"docs":{},"。":{"docs":{},"这":{"docs":{},"种":{"docs":{},"观":{"docs":{},"点":{"docs":{},"将":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"于":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"等":{"docs":{},"同":{"docs":{},"起":{"docs":{},"来":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"认":{"docs":{},"为":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"只":{"docs":{},"有":{"docs":{},"两":{"docs":{},"种":{"docs":{},"极":{"docs":{},"端":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"要":{"docs":{},"么":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"，":{"docs":{},"要":{"docs":{},"么":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"不":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"。":{"docs":{"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"面":{"docs":{},"对":{"docs":{},"异":{"docs":{},"常":{"docs":{},"到":{"docs":{},"底":{"docs":{},"应":{"docs":{},"该":{"docs":{},"怎":{"docs":{},"样":{"docs":{},"做":{"docs":{},"？":{"docs":{"第八章 异常/61.抛出与抽象相对应的异常.html":{"ref":"第八章 异常/61.抛出与抽象相对应的异常.html","tf":0.020833333333333332}}}}}}}}}},"，":{"docs":{},"最":{"docs":{},"基":{"docs":{},"本":{"docs":{},"最":{"docs":{},"重":{"docs":{},"要":{"docs":{},"的":{"docs":{},"原":{"docs":{},"则":{"docs":{},"是":{"docs":{},"，":{"docs":{},"不":{"docs":{},"要":{"docs":{},"忽":{"docs":{},"略":{"docs":{},"异":{"docs":{},"常":{"docs":{},"，":{"docs":{},"必":{"docs":{},"须":{"docs":{},"对":{"docs":{},"异":{"docs":{},"常":{"docs":{},"进":{"docs":{},"行":{"docs":{},"处":{"docs":{},"理":{"docs":{},"。":{"docs":{"第八章 异常/65.不要忽略异常.html":{"ref":"第八章 异常/65.不要忽略异常.html","tf":0.0625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"始":{"docs":{},"终":{"docs":{},"要":{"docs":{},"单":{"docs":{},"独":{"docs":{},"地":{"docs":{},"声":{"docs":{},"明":{"docs":{},"受":{"docs":{},"检":{"docs":{},"异":{"docs":{},"常":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"使":{"docs":{},"用":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"的":{"docs":{},"@":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},"标":{"docs":{},"记":{"docs":{},",":{"docs":{},"准":{"docs":{},"确":{"docs":{},"地":{"docs":{},"记":{"docs":{},"录":{"docs":{},"下":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"每":{"docs":{},"个":{"docs":{},"异":{"docs":{},"常":{"docs":{},"的":{"docs":{},"条":{"docs":{},"件":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"方":{"docs":{},"法":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"多":{"docs":{},"个":{"docs":{},"异":{"docs":{},"常":{"docs":{},"类":{"docs":{},"，":{"docs":{},"不":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{},"它":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"异":{"docs":{},"常":{"docs":{},"类":{"docs":{},"的":{"docs":{},"父":{"docs":{},"类":{"docs":{},"，":{"docs":{},"永":{"docs":{},"远":{"docs":{},"不":{"docs":{},"要":{"docs":{},"声":{"docs":{},"明":{"docs":{},"方":{"docs":{},"法":{"docs":{},"”":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"”":{"docs":{},"，":{"docs":{},"或":{"docs":{},"更":{"docs":{},"糟":{"docs":{},"糕":{"docs":{},"的":{"docs":{},"声":{"docs":{},"明":{"docs":{},"它":{"docs":{},"”":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"第八章 异常/62.每个方法抛出的异常都要有文档.html":{"ref":"第八章 异常/62.每个方法抛出的异常都要有文档.html","tf":0.1111111111111111}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"堆":{"docs":{},"栈":{"docs":{},"轨":{"docs":{},"迹":{"docs":{},"的":{"docs":{},"用":{"docs":{},"途":{"docs":{},"是":{"docs":{},"与":{"docs":{},"源":{"docs":{},"文":{"docs":{},"件":{"docs":{},"结":{"docs":{},"合":{"docs":{},"起":{"docs":{},"来":{"docs":{},"进":{"docs":{},"行":{"docs":{},"分":{"docs":{},"析":{"docs":{},"，":{"docs":{},"它":{"docs":{},"通":{"docs":{},"常":{"docs":{},"包":{"docs":{},"含":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"该":{"docs":{},"异":{"docs":{},"常":{"docs":{},"的":{"docs":{},"确":{"docs":{},"切":{"docs":{},"文":{"docs":{},"件":{"docs":{},"和":{"docs":{},"行":{"docs":{},"数":{"docs":{},"，":{"docs":{},"以":{"docs":{},"及":{"docs":{},"堆":{"docs":{},"栈":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"其":{"docs":{},"他":{"docs":{},"方":{"docs":{},"法":{"docs":{},"调":{"docs":{},"用":{"docs":{},"所":{"docs":{},"在":{"docs":{},"的":{"docs":{},"文":{"docs":{},"件":{"docs":{},"和":{"docs":{},"行":{"docs":{},"数":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"描":{"docs":{},"述":{"docs":{},"异":{"docs":{},"常":{"docs":{},"信":{"docs":{},"息":{"docs":{},"量":{"docs":{},"过":{"docs":{},"多":{"docs":{},"，":{"docs":{},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"也":{"docs":{},"是":{"docs":{},"冗":{"docs":{},"余":{"docs":{},"的":{"docs":{},"，":{"docs":{},"有":{"docs":{},"些":{"docs":{},"信":{"docs":{},"息":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"阅":{"docs":{},"读":{"docs":{},"源":{"docs":{},"代":{"docs":{},"码":{"docs":{},"而":{"docs":{},"获":{"docs":{},"得":{"docs":{},"；":{"docs":{"第八章 异常/63.编写合适的异常信息.html":{"ref":"第八章 异常/63.编写合适的异常信息.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"千":{"docs":{},"万":{"docs":{},"不":{"docs":{},"要":{"docs":{},"忽":{"docs":{},"略":{"docs":{},"异":{"docs":{},"常":{"docs":{},"：":{"docs":{},"尽":{"docs":{},"管":{"docs":{},"这":{"docs":{},"条":{"docs":{},"原":{"docs":{},"则":{"docs":{},"是":{"docs":{},"很":{"docs":{},"显":{"docs":{},"而":{"docs":{},"易":{"docs":{},"见":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"它":{"docs":{},"却":{"docs":{},"常":{"docs":{},"常":{"docs":{},"被":{"docs":{},"违":{"docs":{},"反":{"docs":{},"，":{"docs":{},"当":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"的":{"docs":{},"设":{"docs":{},"计":{"docs":{},"者":{"docs":{},"声":{"docs":{},"明":{"docs":{},"一":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"将":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"某":{"docs":{},"个":{"docs":{},"异":{"docs":{},"常":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"他":{"docs":{},"们":{"docs":{},"等":{"docs":{},"于":{"docs":{},"正":{"docs":{},"在":{"docs":{},"试":{"docs":{},"图":{"docs":{},"说":{"docs":{},"明":{"docs":{},"一":{"docs":{},"些":{"docs":{},"危":{"docs":{},"险":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"，":{"docs":{},"千":{"docs":{},"万":{"docs":{},"不":{"docs":{},"要":{"docs":{},"忽":{"docs":{},"略":{"docs":{},"；":{"docs":{"第八章 异常/65.不要忽略异常.html":{"ref":"第八章 异常/65.不要忽略异常.html","tf":0.0625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"企":{"docs":{},"图":{"docs":{},"通":{"docs":{},"过":{"docs":{},"调":{"docs":{},"整":{"docs":{},"线":{"docs":{},"程":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"来":{"docs":{},"达":{"docs":{},"到":{"docs":{},"程":{"docs":{},"序":{"docs":{},"的":{"docs":{},"正":{"docs":{},"确":{"docs":{},"性":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"是":{"docs":{},"最":{"docs":{},"不":{"docs":{},"可":{"docs":{},"移":{"docs":{},"植":{"docs":{},"的":{"docs":{},"特":{"docs":{},"性":{"docs":{},"。":{"docs":{"第九章 并发/72.不要依赖于线程调度器.html":{"ref":"第九章 并发/72.不要依赖于线程调度器.html","tf":0.125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"能":{"docs":{},"让":{"docs":{},"程":{"docs":{},"序":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"线":{"docs":{},"程":{"docs":{},"调":{"docs":{},"度":{"docs":{},"器":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"会":{"docs":{},"失":{"docs":{},"去":{"docs":{},"健":{"docs":{},"壮":{"docs":{},"性":{"docs":{},"和":{"docs":{},"可":{"docs":{},"移":{"docs":{},"植":{"docs":{},"性":{"docs":{},"。":{"docs":{},"而":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"y":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"和":{"docs":{},"线":{"docs":{},"程":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"这":{"docs":{},"些":{"docs":{},"特":{"docs":{},"性":{"docs":{},"，":{"docs":{},"是":{"docs":{},"最":{"docs":{},"不":{"docs":{},"具":{"docs":{},"有":{"docs":{},"可":{"docs":{},"移":{"docs":{},"植":{"docs":{},"性":{"docs":{},"，":{"docs":{},"程":{"docs":{},"序":{"docs":{},"中":{"docs":{},"不":{"docs":{},"应":{"docs":{},"该":{"docs":{},"使":{"docs":{},"用":{"docs":{},"它":{"docs":{},"们":{"docs":{},"。":{"docs":{"第九章 并发/72.不要依赖于线程调度器.html":{"ref":"第九章 并发/72.不要依赖于线程调度器.html","tf":0.125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"（":{"docs":{},"s":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"第八章 异常/65.不要忽略异常.html":{"ref":"第八章 异常/65.不要忽略异常.html","tf":0.0625}}}}}}}}}}}}},"另":{"docs":{},"外":{"docs":{},"，":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"语":{"docs":{},"言":{"docs":{},"规":{"docs":{},"范":{"docs":{},"保":{"docs":{},"证":{"docs":{},"读":{"docs":{},"写":{"docs":{},"一":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"是":{"docs":{},"原":{"docs":{},"子":{"docs":{},"的":{"docs":{},"，":{"docs":{},"除":{"docs":{},"非":{"docs":{},"这":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"是":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"或":{"docs":{},"者":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"，":{"docs":{},"即":{"docs":{},"使":{"docs":{},"没":{"docs":{},"有":{"docs":{},"在":{"docs":{},"保":{"docs":{},"证":{"docs":{},"同":{"docs":{},"步":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"也":{"docs":{},"是":{"docs":{},"如":{"docs":{},"此":{"docs":{},"。":{"docs":{"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"考":{"docs":{},"虑":{"docs":{},"到":{"docs":{},"这":{"docs":{},"样":{"docs":{},"一":{"docs":{},"个":{"docs":{},"示":{"docs":{},"例":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"通":{"docs":{},"过":{"docs":{},"轮":{"docs":{},"询":{"docs":{},"标":{"docs":{},"志":{"docs":{},"位":{"docs":{},"而":{"docs":{},"达":{"docs":{},"到":{"docs":{},"优":{"docs":{},"雅":{"docs":{},"的":{"docs":{},"停":{"docs":{},"止":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"功":{"docs":{},"能":{"docs":{},"，":{"docs":{},"示":{"docs":{},"例":{"docs":{},"代":{"docs":{},"码":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"第九章 并发/66.同步访问共享的可变数据.html":{"ref":"第九章 并发/66.同步访问共享的可变数据.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"创":{"docs":{},"建":{"docs":{},"多":{"docs":{},"种":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"：":{"docs":{},"可":{"docs":{},"以":{"docs":{},"创":{"docs":{},"建":{"docs":{},"单":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"、":{"docs":{},"固":{"docs":{},"定":{"docs":{},"的":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"以":{"docs":{},"及":{"docs":{},"线":{"docs":{},"程":{"docs":{},"个":{"docs":{},"数":{"docs":{},"可":{"docs":{},"变":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"类":{"docs":{},"创":{"docs":{},"建":{"docs":{},"适":{"docs":{},"合":{"docs":{},"应":{"docs":{},"用":{"docs":{},"场":{"docs":{},"景":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"；":{"docs":{"第九章 并发/68.executor和task优于创建线程.html":{"ref":"第九章 并发/68.executor和task优于创建线程.html","tf":0.125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"等":{"docs":{},"待":{"docs":{},"任":{"docs":{},"务":{"docs":{},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"成":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"多":{"docs":{},"样":{"docs":{},"：":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"可":{"docs":{},"以":{"docs":{},"等":{"docs":{},"待":{"docs":{},"提":{"docs":{},"交":{"docs":{},"到":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"中":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"集":{"docs":{},"合":{"docs":{},"全":{"docs":{},"部":{"docs":{},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"成":{"docs":{},"（":{"docs":{},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},"或":{"docs":{},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},"）":{"docs":{},",":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"优":{"docs":{},"雅":{"docs":{},"的":{"docs":{},"等":{"docs":{},"待":{"docs":{},"结":{"docs":{},"束":{"docs":{},"（":{"docs":{},"a":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},"）":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"任":{"docs":{},"务":{"docs":{},"完":{"docs":{},"成":{"docs":{},"时":{"docs":{},"逐":{"docs":{},"个":{"docs":{},"获":{"docs":{},"取":{"docs":{},"这":{"docs":{},"些":{"docs":{},"任":{"docs":{},"务":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"（":{"docs":{},"利":{"docs":{},"用":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"）":{"docs":{},"等":{"docs":{},"等":{"docs":{},"；":{"docs":{"第九章 并发/68.executor和task优于创建线程.html":{"ref":"第九章 并发/68.executor和task优于创建线程.html","tf":0.125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"和":{"docs":{},"执":{"docs":{},"行":{"docs":{},"间":{"docs":{},"的":{"docs":{},"解":{"docs":{},"耦":{"docs":{},"：":{"docs":{},"使":{"docs":{},"用":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"好":{"docs":{},"处":{"docs":{},"在":{"docs":{},"于":{"docs":{},"将":{"docs":{},"线":{"docs":{},"程":{"docs":{},"执":{"docs":{},"行":{"docs":{},"机":{"docs":{},"制":{"docs":{},"和":{"docs":{},"任":{"docs":{},"务":{"docs":{},"解":{"docs":{},"耦":{"docs":{},"开":{"docs":{},"，":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"类":{"docs":{},"既":{"docs":{},"充":{"docs":{},"当":{"docs":{},"了":{"docs":{},"工":{"docs":{},"作":{"docs":{},"单":{"docs":{},"元":{"docs":{},"又":{"docs":{},"是":{"docs":{},"执":{"docs":{},"行":{"docs":{},"机":{"docs":{},"制":{"docs":{},"，":{"docs":{},"更":{"docs":{},"好":{"docs":{},"管":{"docs":{},"理":{"docs":{},"和":{"docs":{},"使":{"docs":{},"用":{"docs":{},"起":{"docs":{},"来":{"docs":{},"更":{"docs":{},"加":{"docs":{},"安":{"docs":{},"全":{"docs":{},"可":{"docs":{},"靠":{"docs":{},"。":{"docs":{"第九章 并发/68.executor和task优于创建线程.html":{"ref":"第九章 并发/68.executor和task优于创建线程.html","tf":0.125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"立":{"docs":{},"的":{"docs":{},"（":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886}}}}}}}}}}}},"的":{"docs":{},"安":{"docs":{},"全":{"docs":{},"性":{"docs":{},"级":{"docs":{},"别":{"docs":{},"：":{"docs":{"第九章 并发/70.线程安全性的文档化.html":{"ref":"第九章 并发/70.线程安全性的文档化.html","tf":0.018867924528301886}}}}}}}}},"组":{"docs":{},"并":{"docs":{},"没":{"docs":{},"有":{"docs":{},"提":{"docs":{},"供":{"docs":{},"太":{"docs":{},"多":{"docs":{},"有":{"docs":{},"用":{"docs":{},"的":{"docs":{},"功":{"docs":{},"能":{"docs":{},"，":{"docs":{},"而":{"docs":{},"且":{"docs":{},"它":{"docs":{},"们":{"docs":{},"提":{"docs":{},"供":{"docs":{},"的":{"docs":{},"许":{"docs":{},"多":{"docs":{},"功":{"docs":{},"能":{"docs":{},"还":{"docs":{},"都":{"docs":{},"是":{"docs":{},"有":{"docs":{},"缺":{"docs":{},"陷":{"docs":{},"的":{"docs":{},"。":{"docs":{},"当":{"docs":{},"管":{"docs":{},"理":{"docs":{},"线":{"docs":{},"程":{"docs":{},"或":{"docs":{},"处":{"docs":{},"理":{"docs":{},"线":{"docs":{},"程":{"docs":{},"组":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"时":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"使":{"docs":{},"用":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"。":{"docs":{"第九章 并发/73.避免使用线程组.html":{"ref":"第九章 并发/73.避免使用线程组.html","tf":0.14285714285714285}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"消":{"docs":{},"费":{"docs":{},"者":{"docs":{},"”":{"docs":{},"中":{"docs":{},"；":{"docs":{"第九章 并发/69.优先使用提供的并发工具.html":{"ref":"第九章 并发/69.优先使用提供的并发工具.html","tf":0.1}}}},"使":{"docs":{},"用":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"和":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"去":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"代":{"docs":{},"码":{"docs":{},"就":{"docs":{},"很":{"docs":{},"难":{"docs":{},"维":{"docs":{},"护":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"使":{"docs":{},"用":{"docs":{},"可":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"代":{"docs":{},"码":{"docs":{},"更":{"docs":{},"加":{"docs":{},"简":{"docs":{},"洁":{"docs":{},"，":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"也":{"docs":{},"更":{"docs":{},"加":{"docs":{},"清":{"docs":{},"晰":{"docs":{},"。":{"docs":{"第九章 并发/69.优先使用提供的并发工具.html":{"ref":"第九章 并发/69.优先使用提供的并发工具.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"高":{"docs":{},"并":{"docs":{},"发":{"docs":{},"程":{"docs":{},"序":{"docs":{},"既":{"docs":{},"很":{"docs":{},"难":{"docs":{},"保":{"docs":{},"证":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"而":{"docs":{},"且":{"docs":{},"一":{"docs":{},"旦":{"docs":{},"出":{"docs":{},"现":{"docs":{},"问":{"docs":{},"题":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"也":{"docs":{},"很":{"docs":{},"难":{"docs":{},"排":{"docs":{},"错":{"docs":{},"和":{"docs":{},"分":{"docs":{},"析":{"docs":{},"出":{"docs":{},"来":{"docs":{},"原":{"docs":{},"因":{"docs":{},"。":{"docs":{},"而":{"docs":{},"j":{"docs":{},".":{"docs":{},"u":{"docs":{},".":{"docs":{},"c":{"docs":{},"包":{"docs":{},"中":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"很":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"工":{"docs":{},"具":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"在":{"docs":{},"实":{"docs":{},"际":{"docs":{},"开":{"docs":{},"发":{"docs":{},"中":{"docs":{},"多":{"docs":{},"使":{"docs":{},"用":{"docs":{},"这":{"docs":{},"些":{"docs":{},"性":{"docs":{},"能":{"docs":{},"已":{"docs":{},"经":{"docs":{},"得":{"docs":{},"到":{"docs":{},"了":{"docs":{},"验":{"docs":{},"证":{"docs":{},"的":{"docs":{},"工":{"docs":{},"具":{"docs":{},"，":{"docs":{},"这":{"docs":{},"使":{"docs":{},"得":{"docs":{},"我":{"docs":{},"们":{"docs":{},"的":{"docs":{},"开":{"docs":{},"发":{"docs":{},"能":{"docs":{},"够":{"docs":{},"十":{"docs":{},"分":{"docs":{},"方":{"docs":{},"便":{"docs":{},"又":{"docs":{},"能":{"docs":{},"保":{"docs":{},"证":{"docs":{},"我":{"docs":{},"们":{"docs":{},"代":{"docs":{},"码":{"docs":{},"的":{"docs":{},"稳":{"docs":{},"定":{"docs":{},"性":{"docs":{},"。":{"docs":{},"常":{"docs":{},"用":{"docs":{},"的":{"docs":{},"并":{"docs":{},"发":{"docs":{},"工":{"docs":{},"具":{"docs":{},"有":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"？":{"docs":{"第九章 并发/69.优先使用提供的并发工具.html":{"ref":"第九章 并发/69.优先使用提供的并发工具.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"下":{"docs":{},"面":{"docs":{},"是":{"docs":{},"正":{"docs":{},"常":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"实":{"docs":{},"例":{"docs":{},"域":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"采":{"docs":{},"用":{"docs":{},"了":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"修":{"docs":{},"饰":{"docs":{},"符":{"docs":{},"：":{"docs":{"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"双":{"docs":{},"重":{"docs":{},"检":{"docs":{},"测":{"docs":{},"：":{"docs":{},"这":{"docs":{},"种":{"docs":{},"模":{"docs":{},"式":{"docs":{},"避":{"docs":{},"免":{"docs":{},"了":{"docs":{},"在":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"再":{"docs":{},"次":{"docs":{},"访":{"docs":{},"问":{"docs":{},"这":{"docs":{},"个":{"docs":{},"域":{"docs":{},"时":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"定":{"docs":{},"开":{"docs":{},"销":{"docs":{},"（":{"docs":{},"在":{"docs":{},"普":{"docs":{},"通":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"里":{"docs":{},"面":{"docs":{},"，":{"docs":{},"会":{"docs":{},"使":{"docs":{},"用":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"对":{"docs":{},"方":{"docs":{},"法":{"docs":{},"进":{"docs":{},"行":{"docs":{},"同":{"docs":{},"步":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"访":{"docs":{},"问":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"都":{"docs":{},"要":{"docs":{},"进":{"docs":{},"行":{"docs":{},"锁":{"docs":{},"定":{"docs":{},"）":{"docs":{},"。":{"docs":{},"这":{"docs":{},"种":{"docs":{},"模":{"docs":{},"式":{"docs":{},"的":{"docs":{},"思":{"docs":{},"想":{"docs":{},"是":{"docs":{},"：":{"docs":{},"两":{"docs":{},"次":{"docs":{},"检":{"docs":{},"查":{"docs":{},"域":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"第":{"docs":{},"一":{"docs":{},"次":{"docs":{},"检":{"docs":{},"查":{"docs":{},"时":{"docs":{},"不":{"docs":{},"锁":{"docs":{},"定":{"docs":{},"，":{"docs":{},"看":{"docs":{},"看":{"docs":{},"其":{"docs":{},"是":{"docs":{},"否":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"；":{"docs":{},"第":{"docs":{},"二":{"docs":{},"次":{"docs":{},"检":{"docs":{},"查":{"docs":{},"时":{"docs":{},"锁":{"docs":{},"定":{"docs":{},"。":{"docs":{},"只":{"docs":{},"用":{"docs":{},"当":{"docs":{},"第":{"docs":{},"二":{"docs":{},"次":{"docs":{},"检":{"docs":{},"查":{"docs":{},"时":{"docs":{},"，":{"docs":{},"表":{"docs":{},"明":{"docs":{},"其":{"docs":{},"没":{"docs":{},"有":{"docs":{},"被":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"，":{"docs":{},"才":{"docs":{},"会":{"docs":{},"调":{"docs":{},"用":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"方":{"docs":{},"法":{"docs":{},"对":{"docs":{},"其":{"docs":{},"进":{"docs":{},"行":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"已":{"docs":{},"经":{"docs":{},"被":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"了":{"docs":{},"，":{"docs":{},"就":{"docs":{},"不":{"docs":{},"会":{"docs":{},"锁":{"docs":{},"定":{"docs":{},"了":{"docs":{},"，":{"docs":{},"另":{"docs":{},"外":{"docs":{},"该":{"docs":{},"域":{"docs":{},"被":{"docs":{},"声":{"docs":{},"明":{"docs":{},"为":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"非":{"docs":{},"常":{"docs":{},"重":{"docs":{},"要":{"docs":{},"，":{"docs":{},"示":{"docs":{},"例":{"docs":{},"代":{"docs":{},"码":{"docs":{},"为":{"docs":{},"：":{"docs":{"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"延":{"docs":{},"迟":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"（":{"docs":{},"l":{"docs":{},"a":{"docs":{},"z":{"docs":{},"i":{"docs":{"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":0.011111111111111112}}}}}}}}}}}},"模":{"docs":{},"式":{"docs":{},"。":{"docs":{},"在":{"docs":{},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{},"的":{"docs":{},"优":{"docs":{},"化":{"docs":{},"下":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"不":{"docs":{},"仅":{"docs":{},"可":{"docs":{},"以":{"docs":{},"达":{"docs":{},"到":{"docs":{},"延":{"docs":{},"迟":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"的":{"docs":{},"效":{"docs":{},"果":{"docs":{},"，":{"docs":{},"也":{"docs":{},"能":{"docs":{},"保":{"docs":{},"证":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"。":{"docs":{},"示":{"docs":{},"例":{"docs":{},"代":{"docs":{},"码":{"docs":{},"为":{"docs":{},"：":{"docs":{"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"现":{"docs":{},"在":{"docs":{},"要":{"docs":{},"对":{"docs":{},"这":{"docs":{},"个":{"docs":{},"实":{"docs":{},"例":{"docs":{},"域":{"docs":{},"进":{"docs":{},"行":{"docs":{},"延":{"docs":{},"迟":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"，":{"docs":{},"有":{"docs":{},"这":{"docs":{},"样":{"docs":{},"几":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"：":{"docs":{"第九章 并发/71.慎用延迟初始化.html":{"ref":"第九章 并发/71.慎用延迟初始化.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}}}}}}},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"过":{"docs":{},"程":{"docs":{},"是":{"docs":{},"将":{"docs":{},"“":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"编":{"docs":{},"码":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"节":{"docs":{},"流":{"docs":{},"”":{"docs":{},"，":{"docs":{},"相":{"docs":{},"反":{"docs":{},"的":{"docs":{},"处":{"docs":{},"理":{"docs":{},"过":{"docs":{},"程":{"docs":{},"被":{"docs":{},"称":{"docs":{},"之":{"docs":{},"为":{"docs":{},"“":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"过":{"docs":{},"程":{"docs":{},"”":{"docs":{},"。":{"docs":{},"当":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"被":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"后":{"docs":{},"，":{"docs":{},"它":{"docs":{},"的":{"docs":{},"编":{"docs":{},"码":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"从":{"docs":{},"一":{"docs":{},"台":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"传":{"docs":{},"至":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"台":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"保":{"docs":{},"存":{"docs":{},"在":{"docs":{},"磁":{"docs":{},"盘":{"docs":{},"上":{"docs":{},"，":{"docs":{},"方":{"docs":{},"便":{"docs":{},"以":{"docs":{},"后":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"使":{"docs":{},"用":{"docs":{},"。":{"docs":{},"长":{"docs":{},"期":{"docs":{},"以":{"docs":{},"来":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"误":{"docs":{},"解":{"docs":{},"，":{"docs":{},"为":{"docs":{},"了":{"docs":{},"实":{"docs":{},"现":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"，":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"实":{"docs":{},"现":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"接":{"docs":{},"口":{"docs":{},"即":{"docs":{},"可":{"docs":{},"，":{"docs":{},"事":{"docs":{},"实":{"docs":{},"上":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"存":{"docs":{},"在":{"docs":{},"诸":{"docs":{},"多":{"docs":{},"危":{"docs":{},"害":{"docs":{},"，":{"docs":{},"贪":{"docs":{},"图":{"docs":{},"这":{"docs":{},"种":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"方":{"docs":{},"式":{"docs":{},"的":{"docs":{},"方":{"docs":{},"便":{"docs":{},"，":{"docs":{},"会":{"docs":{},"带":{"docs":{},"来":{"docs":{},"长":{"docs":{},"期":{"docs":{},"维":{"docs":{},"护":{"docs":{},"的":{"docs":{},"成":{"docs":{},"本":{"docs":{},"。":{"docs":{},"关":{"docs":{},"于":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"有":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"注":{"docs":{},"意":{"docs":{},"事":{"docs":{},"项":{"docs":{},"？":{"docs":{"第十章 序列化/74.谨慎的实现Serializable接口.html":{"ref":"第十章 序列化/74.谨慎的实现Serializable接口.html","tf":0.058823529411764705}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"外":{"docs":{},"围":{"docs":{},"类":{"docs":{},"时":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"其":{"docs":{},"实":{"docs":{},"是":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"内":{"docs":{},"部":{"docs":{},"的":{"docs":{},"代":{"docs":{},"理":{"docs":{},"类":{"docs":{},"对":{"docs":{},"象":{"docs":{},"！":{"docs":{"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"相":{"docs":{},"关":{"docs":{},"测":{"docs":{},"试":{"docs":{},"负":{"docs":{},"担":{"docs":{},"加":{"docs":{},"重":{"docs":{},"：":{"docs":{},"当":{"docs":{},"一":{"docs":{},"个":{"docs":{},"可":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"的":{"docs":{},"类":{"docs":{},"被":{"docs":{},"修":{"docs":{},"改":{"docs":{},"后":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"检":{"docs":{},"查":{"docs":{},"“":{"docs":{},"在":{"docs":{},"新":{"docs":{},"版":{"docs":{},"中":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"一":{"docs":{},"个":{"docs":{},"实":{"docs":{},"例":{"docs":{},"，":{"docs":{},"在":{"docs":{},"旧":{"docs":{},"版":{"docs":{},"本":{"docs":{},"中":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"”":{"docs":{},"及":{"docs":{},"“":{"docs":{},"在":{"docs":{},"旧":{"docs":{},"版":{"docs":{},"本":{"docs":{},"中":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"一":{"docs":{},"个":{"docs":{},"实":{"docs":{},"例":{"docs":{},"，":{"docs":{},"在":{"docs":{},"新":{"docs":{},"版":{"docs":{},"本":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"”":{"docs":{},"是":{"docs":{},"否":{"docs":{},"正":{"docs":{},"常":{"docs":{},"，":{"docs":{},"当":{"docs":{},"发":{"docs":{},"布":{"docs":{},"版":{"docs":{},"本":{"docs":{},"增":{"docs":{},"多":{"docs":{},"时":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"测":{"docs":{},"试":{"docs":{},"量":{"docs":{},"与":{"docs":{},"“":{"docs":{},"可":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"的":{"docs":{},"类":{"docs":{},"的":{"docs":{},"数":{"docs":{},"量":{"docs":{},"和":{"docs":{},"发":{"docs":{},"行":{"docs":{},"版":{"docs":{},"本":{"docs":{},"号":{"docs":{},"”":{"docs":{},"的":{"docs":{},"乘":{"docs":{},"积":{"docs":{},"成":{"docs":{},"正":{"docs":{},"比":{"docs":{},"。":{"docs":{"第十章 序列化/74.谨慎的实现Serializable接口.html":{"ref":"第十章 序列化/74.谨慎的实现Serializable接口.html","tf":0.058823529411764705}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"若":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"要":{"docs":{},"加":{"docs":{},"入":{"docs":{},"某":{"docs":{},"个":{"docs":{},"框":{"docs":{},"架":{"docs":{},"，":{"docs":{},"而":{"docs":{},"该":{"docs":{},"框":{"docs":{},"架":{"docs":{},"是":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"传":{"docs":{},"输":{"docs":{},"和":{"docs":{},"持":{"docs":{},"久":{"docs":{},"化":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"该":{"docs":{},"类":{"docs":{},"实":{"docs":{},"现":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"就":{"docs":{},"是":{"docs":{},"有":{"docs":{},"必":{"docs":{},"要":{"docs":{},"，":{"docs":{},"更":{"docs":{},"进":{"docs":{},"一":{"docs":{},"步":{"docs":{},"来":{"docs":{},"看":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"属":{"docs":{},"于":{"docs":{},"一":{"docs":{},"个":{"docs":{},"组":{"docs":{},"件":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"父":{"docs":{},"组":{"docs":{},"件":{"docs":{},"实":{"docs":{},"现":{"docs":{},"了":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"接":{"docs":{},"口":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"该":{"docs":{},"类":{"docs":{},"也":{"docs":{},"需":{"docs":{},"要":{"docs":{},"实":{"docs":{},"现":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"接":{"docs":{},"口":{"docs":{},"。":{"docs":{},"根":{"docs":{},"据":{"docs":{},"经":{"docs":{},"验":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"和":{"docs":{},"b":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"值":{"docs":{},"类":{"docs":{},"应":{"docs":{},"该":{"docs":{},"实":{"docs":{},"现":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"，":{"docs":{},"大":{"docs":{},"多":{"docs":{},"数":{"docs":{},"集":{"docs":{},"合":{"docs":{},"类":{"docs":{},"也":{"docs":{},"需":{"docs":{},"要":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{"第十章 序列化/74.谨慎的实现Serializable接口.html":{"ref":"第十章 序列化/74.谨慎的实现Serializable接口.html","tf":0.058823529411764705}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"降":{"docs":{},"低":{"docs":{},"灵":{"docs":{},"活":{"docs":{},"性":{"docs":{},"：":{"docs":{},"如":{"docs":{},"果":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"实":{"docs":{},"现":{"docs":{},"了":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"接":{"docs":{},"口":{"docs":{},"，":{"docs":{},"它":{"docs":{},"的":{"docs":{},"字":{"docs":{},"节":{"docs":{},"流":{"docs":{},"编":{"docs":{},"码":{"docs":{},"也":{"docs":{},"变":{"docs":{},"成":{"docs":{},"了":{"docs":{},"它":{"docs":{},"导":{"docs":{},"出":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"的":{"docs":{},"一":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"一":{"docs":{},"旦":{"docs":{},"这":{"docs":{},"个":{"docs":{},"类":{"docs":{},"被":{"docs":{},"广":{"docs":{},"泛":{"docs":{},"使":{"docs":{},"用":{"docs":{},"，":{"docs":{},"就":{"docs":{},"必":{"docs":{},"须":{"docs":{},"永":{"docs":{},"远":{"docs":{},"支":{"docs":{},"持":{"docs":{},"这":{"docs":{},"种":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{},"并":{"docs":{},"且":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{},"默":{"docs":{},"认":{"docs":{},"的":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"类":{"docs":{},"中":{"docs":{},"私":{"docs":{},"有":{"docs":{},"的":{"docs":{},"和":{"docs":{},"包":{"docs":{},"即":{"docs":{},"级":{"docs":{},"私":{"docs":{},"有":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"域":{"docs":{},"都":{"docs":{},"会":{"docs":{},"变":{"docs":{},"成":{"docs":{},"导":{"docs":{},"出":{"docs":{},"的":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"的":{"docs":{},"一":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"这":{"docs":{},"不":{"docs":{},"符":{"docs":{},"合":{"docs":{},"域":{"docs":{},"最":{"docs":{},"小":{"docs":{},"访":{"docs":{},"问":{"docs":{},"级":{"docs":{},"别":{"docs":{},"的":{"docs":{},"设":{"docs":{},"计":{"docs":{},"原":{"docs":{},"则":{"docs":{},"。":{"docs":{},"另":{"docs":{},"外":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"改":{"docs":{},"变":{"docs":{},"了":{"docs":{},"类":{"docs":{},"的":{"docs":{},"内":{"docs":{},"部":{"docs":{},"结":{"docs":{},"构":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"客":{"docs":{},"户":{"docs":{},"端":{"docs":{},"企":{"docs":{},"图":{"docs":{},"用":{"docs":{},"类":{"docs":{},"的":{"docs":{},"旧":{"docs":{},"版":{"docs":{},"本":{"docs":{},"来":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"，":{"docs":{},"而":{"docs":{},"使":{"docs":{},"用":{"docs":{},"新":{"docs":{},"版":{"docs":{},"本":{"docs":{},"来":{"docs":{},"进":{"docs":{},"行":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"程":{"docs":{},"序":{"docs":{},"就":{"docs":{},"会":{"docs":{},"出":{"docs":{},"错":{"docs":{},"。":{"docs":{"第十章 序列化/74.谨慎的实现Serializable接口.html":{"ref":"第十章 序列化/74.谨慎的实现Serializable接口.html","tf":0.058823529411764705}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"保":{"docs":{},"证":{"docs":{},"向":{"docs":{},"前":{"docs":{},"或":{"docs":{},"者":{"docs":{},"向":{"docs":{},"后":{"docs":{},"的":{"docs":{},"兼":{"docs":{},"容":{"docs":{},"性":{"docs":{},"；":{"docs":{"第十章 序列化/75.考虑使用自定义的序列化形式.html":{"ref":"第十章 序列化/75.考虑使用自定义的序列化形式.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"和":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"实":{"docs":{},"现":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"。":{"docs":{},"就":{"docs":{},"算":{"docs":{},"没":{"docs":{},"有":{"docs":{},"实":{"docs":{},"现":{"docs":{},"特":{"docs":{},"定":{"docs":{},"的":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"也":{"docs":{},"应":{"docs":{},"该":{"docs":{},"调":{"docs":{},"用":{"docs":{},"默":{"docs":{},"认":{"docs":{},"的":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"第十章 序列化/75.考虑使用自定义的序列化形式.html":{"ref":"第十章 序列化/75.考虑使用自定义的序列化形式.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"要":{"docs":{},"进":{"docs":{},"行":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"，":{"docs":{},"这":{"docs":{},"些":{"docs":{},"域":{"docs":{},"字":{"docs":{},"段":{"docs":{},"都":{"docs":{},"将":{"docs":{},"被":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"为":{"docs":{},"其":{"docs":{},"类":{"docs":{},"型":{"docs":{},"默":{"docs":{},"认":{"docs":{},"值":{"docs":{},"，":{"docs":{},"如":{"docs":{},"对":{"docs":{},"象":{"docs":{},"引":{"docs":{},"用":{"docs":{},"域":{"docs":{},"被":{"docs":{},"置":{"docs":{},"为":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"，":{"docs":{},"数":{"docs":{},"值":{"docs":{},"基":{"docs":{},"本":{"docs":{},"域":{"docs":{},"的":{"docs":{},"默":{"docs":{},"认":{"docs":{},"值":{"docs":{},"为":{"0":{"docs":{},"，":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"域":{"docs":{},"的":{"docs":{},"默":{"docs":{},"认":{"docs":{},"值":{"docs":{},"为":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"这":{"docs":{},"些":{"docs":{},"值":{"docs":{},"不":{"docs":{},"能":{"docs":{},"被":{"docs":{},"任":{"docs":{},"何":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{"第十章 序列化/75.考虑使用自定义的序列化形式.html":{"ref":"第十章 序列化/75.考虑使用自定义的序列化形式.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"|":{"docs":{},"|":{"docs":{"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.011834319526627219}}}},"需":{"docs":{},"要":{"docs":{},"将":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"方":{"docs":{},"法":{"docs":{},"添":{"docs":{},"加":{"docs":{},"到":{"docs":{},"外":{"docs":{},"围":{"docs":{},"类":{"docs":{},"中":{"docs":{},"，":{"docs":{},"该":{"docs":{},"方":{"docs":{},"法":{"docs":{},"可":{"docs":{},"以":{"docs":{},"产":{"docs":{},"生":{"docs":{},"一":{"docs":{},"个":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"代":{"docs":{},"理":{"docs":{},"对":{"docs":{},"象":{"docs":{},"来":{"docs":{},"代":{"docs":{},"替":{"docs":{},"外":{"docs":{},"围":{"docs":{},"类":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"。":{"docs":{},"换":{"docs":{},"句":{"docs":{},"话":{"docs":{},"说":{"docs":{},"，":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"方":{"docs":{},"法":{"docs":{},"在":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"将":{"docs":{},"外":{"docs":{},"围":{"docs":{},"类":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"转":{"docs":{},"换":{"docs":{},"成":{"docs":{},"了":{"docs":{},"它":{"docs":{},"的":{"docs":{},"代":{"docs":{},"理":{"docs":{},"对":{"docs":{},"象":{"docs":{},"；":{"docs":{"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"ref":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","tf":0.005917159763313609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"队":{"docs":{},"列":{"docs":{},"速":{"docs":{},"度":{"docs":{},"大":{"docs":{},"于":{"docs":{},"出":{"docs":{},"队":{"docs":{},"速":{"docs":{},"度":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"就":{"docs":{},"会":{"docs":{},"造":{"docs":{},"成":{"docs":{},"大":{"docs":{},"量":{"docs":{},"对":{"docs":{},"象":{"docs":{},"没":{"docs":{},"有":{"docs":{},"被":{"docs":{},"及":{"docs":{},"时":{"docs":{},"回":{"docs":{},"收":{"docs":{},"；":{"docs":{"第一章 创建和销毁对象/7.避免使用finalize方法.html":{"ref":"第一章 创建和销毁对象/7.避免使用finalize方法.html","tf":0.06666666666666667}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"4":{"docs":{},")":{"docs":{},",":{"docs":{"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.016666666666666666}}}}},"docs":{}},",":{"docs":{"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.016666666666666666}}}}}}}}}},"及":{"docs":{},"时":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"一":{"docs":{},"个":{"docs":{},"重":{"docs":{},"要":{"docs":{},"步":{"docs":{},"骤":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"算":{"docs":{},"法":{"docs":{},"在":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{},"实":{"docs":{},"现":{"docs":{},"平":{"docs":{},"台":{"docs":{},"上":{"docs":{},"会":{"docs":{},"有":{"docs":{},"很":{"docs":{},"大":{"docs":{},"的":{"docs":{},"差":{"docs":{},"别":{"docs":{},"，":{"docs":{},"也":{"docs":{},"许":{"docs":{},"在":{"docs":{},"测":{"docs":{},"试":{"docs":{},"的":{"docs":{},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{},"平":{"docs":{},"台":{"docs":{},"上":{"docs":{},"测":{"docs":{},"试":{"docs":{},"性":{"docs":{},"能":{"docs":{},"良":{"docs":{},"好":{"docs":{},"，":{"docs":{},"却":{"docs":{},"可":{"docs":{},"能":{"docs":{},"在":{"docs":{},"其":{"docs":{},"他":{"docs":{},"平":{"docs":{},"台":{"docs":{},"上":{"docs":{},"的":{"docs":{},"性":{"docs":{},"能":{"docs":{},"很":{"docs":{},"差":{"docs":{},"。":{"docs":{"第一章 创建和销毁对象/7.避免使用finalize方法.html":{"ref":"第一章 创建和销毁对象/7.避免使用finalize方法.html","tf":0.06666666666666667}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"许":{"docs":{},"多":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"天":{"docs":{},"生":{"docs":{},"就":{"docs":{},"与":{"docs":{},"一":{"docs":{},"个":{"docs":{},"单":{"docs":{},"独":{"docs":{},"的":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"值":{"docs":{},"相":{"docs":{},"关":{"docs":{},"联":{"docs":{},"。":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"都":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"它":{"docs":{},"返":{"docs":{},"回":{"docs":{},"每":{"docs":{},"个":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"常":{"docs":{},"量":{"docs":{},"在":{"docs":{},"类":{"docs":{},"型":{"docs":{},"中":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"如":{"docs":{},"下":{"docs":{},"例":{"docs":{},"：":{"docs":{"第五章 枚举和注解/31.用实例域代替序数.html":{"ref":"第五章 枚举和注解/31.用实例域代替序数.html","tf":0.016666666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"length":24591},"corpusTokens":["!=","\"","\"#\"","\")","\"+","\"after\"","\"heartbreak","\"hound","\"i","\"list\";","\"set\";","\"test\";","\"too\",","\"two\");","\"unknown","\"起始时间：\"","%d%n\",","%d,","%f","%f%n\",","%s","&&","(!stoprequested())","(!stoprequested)","(0","(4.869e+24,","(5.685e+26,","(5.975e+24,","(6.419e+23,","(8.683e+25,","(areacod","(areacodediff","(arrayindexoutofboundsexception){","(cheesesinstock.s","(collect","(doubl","(element","(elements.length","(except","(i.hasnext())","(inform","(int","(invocationtargetexcept","(iter","(linenumb","(long","(m.isannotationpresent(test.class))","(method","(no","(obj.actionpermitted(args))","(oper","(planet","(prefix","(radiu","(result","(set[])new","(shape){","(short)","(size","(start.compareto(end)","(this)","(x.equals(y))，但是这个并非绝对必要。一般来说，任何实现了comparable接口的类，若违反了这个条件，都应该明确予以说明。推荐使用这样的说法：“注意，该类具有内在的排序功能，但是与equals不一致”。",")",")。同样地，在适合使用复合模式的公有类中使用继承，会把这个类与它的超类永远地束缚在一起，从而人为地限制了子类的性能",")。这可能会导致大量不必要的保护性拷贝（见第39条：必要时进行保护性拷贝",")方法但无法执行",")方法试图建立一个类","*","*/","+","+\"","+=","+end);",",",",octet,","...","....","......","...;","/","/**","//","//2.000000","//args[0]=30输出结果","//constructor","//invoc","//remaind","//tag","//these","//thi","//use","//weight","//假设可以创建参数化类型数组","//取数据时目标类型是string，但是实际类型为integer，","//可选参数","//可选参数的默认值","//因此就会出现classcastexcept","//实现方案","//客户端调用该方法为","//或者被反射攻击","//数组赋值在运行时进行，由于initlist在运行时会擦除","//由于数组是协变的，可以赋值","//类型信息，转换为list，因此可以插入到数组中","//调用方式","//输入2","//输出","//输出结果为","//防止在类的内部被调用实例化","0","0)","0);","0){","0)暗示着x.compareto(z)","0,","0.42)","0.500000","0.580000000000001","0.75f);","0;","0;i();","0l;","0也成立。对应着equals使用规范里面的传递性。","0暗示着所有的z都满足sgn(x.compareto(z))","1","1)","1);","1,","1.","1.12588456e","1.5)","1.5之前，一般使用命名模式表明有些程序元素需要通过某种工具或者框架进行特殊处理。例如，在老版本的junit测试框架原本要求用户一定要用test作为测试方法名称的开头，这种方式就是命名模式。","10.覆盖tostr","11.337201","11.388120","11;","12.考虑实现comparable接口","13.使类和成员的可访问性最小化","14.在公有类中使用访问方法而非公有域","15.使可变性最小化","16.复合优于继承","16;","17.要么为继承而设计，并提供文档说明，要么就禁止继承","17;","19.接口只用于定义类型","1;","1l;","1、0、1。","1。常量域是唯一一个推荐使用下划线的情形；","1这段代码旨在通过位操作的方式将多种text风格进行组合。但是，很显然这是一种int枚举的方式，自然存在很多问题（见31条），应该使用什么样的类型数据能够替代位域？","2","2).","2,","2,0,2。这里最根本的原因在于，由于泛型和自动拆箱和装箱，使得remove(e)和remove(i)这两个方法中的参类型上数并没有“根本的不同”。","2.","2.000000","2.439e6),","2.477e7);","2.556e7),","2.serializable适用场景","2.多个参数使用builder模式创建对象","20.类层次优于标签类","21.用函数对象表示策略","22.优先考虑静态成员类","23.使用泛型不要使用原生类型","23;","24.消除非受检警告","25.list优于数组","27.145664","27.151530","2;","2;1234567","3)","3,","3.","3.393e6),","3.serializable不适用场景","3.使用枚举类型强化singleton","30.000000","30.使用枚举代替int常量","31","31.965423","31.用实例域代替序数","32.用enumset代替位域","33.用enummap代替序数索引","34.087906","35.注解优于命名模式","38.检查方法参数的有效性","39.参数进行保护性拷贝","3;","3不会报错，但它也不会执行测试，导致错误的安全感；","3也不会出错，但它也不会执行测试；","3能够自动测试其所有方法，而不管它们的名称如何。","4","4)","4,","4.000000","4.私有构造器以强化对象不可实例化","40.谨慎的设计方法签名","41.慎用重载","42.慎用可变参数","43.返回长度为0的集合或者数组，而不是null","44.api需要编写文档注释","45.将局部变量的作用域最小化","46.for","47.多使用类库","48.需要精确答案，请避免使用float和doubl","49.基本类型优先于装箱基本类型","5","5)","5.避免创建不必要的对象","50.尽量避免使用字符串","51.谨慎使用字符串连接符","52.通过接口引用对象","53.慎用反射机制","54.慎用本地方法","55.谨慎的进行优化","56.遵守普遍接受的命名规则","57.只针对异常的情况才使用异常","58.选择合适的异常","59.避免不必要的使用受检的异常","6)","6.000000","6.027e7),","6.052e6),","6.23156412e23;","6.378e6),","6.67300e","6.消除过期的对象引用","61.抛出与抽象相对应的异常","62.每个方法抛出的异常都要有文档","63.编写合适的异常信息","65.不要忽略异常","66.同步访问共享的可变数据","68.executor和task优于创建线程","69.优先使用提供的并发工具","7)","7.149e7),","7.避免使用finalize()方法","70.线程安全性的文档化","71.慎用延迟初始化","72.不要依赖于线程调度器","73.避免使用线程组","74.谨慎的实现serializable接口","75.890383","75.考虑使用自定义的序列化形式","76.保护性地编写readobject方法","77.单例模式，枚举类型优先于readresolv","78.考虑用序列化代理代替序列化实例","8.000000","8.覆盖equals方法请遵守通用规定","8;","9.覆盖equals时要同时覆盖hashcod",":",";","=","==","={",">","?","@interfac","@overrid","@param","@retention(retentionpolicy.runtime)","@retention（retentionpolicy.runtime）元注解指示test注解应该在运行时保留。","@return","@target(elementtype.method)","@target.get（elementtype.method）元注解表明test注解只对方法声明合法：它不能应用于类声明，属性声明或其他程序元素。target的取值有这些：","@test","@test:","@throw","[[i@15db9742]","[to,","a\"的关系的时候，类b才应该扩展a。如果打算让类b扩展类a，就应该确定一个问题：b确实也是a吗？如果不能确定答案是肯定的，那么b就不应该扩展a。如果答案是否定的，通常情况下b应该包含a的一个私有实例，并且暴露一个较小的、较简单的api：a本质上不是b的一部分，只是它的实现细节而已(使用api的客户端无需知道)。","a)","a.","a.wulf[wulf72]","a1,","a1}","a2,","a2}","a3,","a3}","abstract","abstractset","add(","addall(collect","addcount","addcount++;","addcount;","address(str","address){","address;","address=\"\";","age){","age;","alloc","annual,","appl","apple_fuji","apple_fuji,","apple_granny_smith","apple_granny_smith;","apple_pippin","apple_pippin,","apply(doubl","applystyles(set","approach","area()","area();","area(){","areacod","areacode,","areacode;","areacodediff","areacodediff;","args)","arguments!\");","array","arraylist(),","arraylist();","arraylist(cheesesinstock);","arrays.aslist(\"to\",","arrays.aslist(42);","arrays.aslist(cheeses).contains(cheese.stilton)){","arrays.copyof","arrays.copyof(elements,","arrays.copyof(value,","arrays.sort(stringarray,","arraystoreexcept","assertionerror(\"unknown","assertionerror();","avogadros_numb","b","b.","babi","backgroundthread","backgroundthread.start();","basepay","befor","better!","bid","biennial,","birthdate.compareto(boom_end)还有一个问题，就是如果改进后person类被初始化了，它的isbabyboomer方法永远不会被调用，那么就没有必要初始化两个静态域了。通过延迟初始化则有可能消除这些不必要的初始化方法，但是不建议这样做。这样做使方法的实现变的更加复杂，从而无法将性能显著提高到超过已经达到的水平；","birthdate.compareto(boom_start)>=0","birthdate.compareto(boomend)在isbabyboomer每次被调用的时候，都会新建一个calendar，一个timezone和两个date实例，这是不必要的，因这它们一旦被创建即无需改变了。下面是一个用静态的初始化器的版本，避免了这种效率的情况。","birthdate.compareto(boomstart)>=0","birthdate;","block","boltzmann_const","boolean","boom","boom_end;","boom_start;","boomend","boomstart","break;","build(){","builder","builder(str","builder){","builder.address;","builder.age;","builder.phonenumber;","builder.username;","builder{","builder模式可以对其参数加以约束，build方法可以检验这些约束条件，将参数从builder拷贝到对象中之后，并在对象域而不是builder域中对它们进行检验，如果违反了任何约束，build方法就应该抛出illegalstateexception。builder模式十分灵活，可以利用单个builder构建多个对象。唯一的不足在于：为了创建对象必须先创建一个中间对象，builder模式还使得构造的过程更加冗长。","byte","c","c)","c.iterator();","c.size();","c;","cach","calcul","calendar","calendar.getinstance(timezone.gettimezone(\"gmt\"));","calendar.january,","capac","care","case","case而导致运行时失败的可能；","cast","catch","catch(thecheckedexcept","catch块中反而阻止了现代jvm可能会执行的一些优化操作；","catch；","cause)","cause){","char","char[]","char[value.length];","charact","charsequ","check","chees","cheese[]","cheesesinstock","circl","circle(doubl","circle:return","class","class.forname(args[0]);","classify(collect","classify(list","classify(set","classnam","classnotfoundexcept","class）、匿名类（anonym","class）、非静态成员类（nonstat","class）。嵌套类有四种：静态成员类（stat","class）。那么，在什么情况下使用应该使用哪种嵌套类才是合适的？","class）。除了第一种之外，其他三种都被称为内部类（inn","class）和局部类（loc","class）提供服务。如果嵌套类将来可能会用于其他的某个环境中，它就应该是顶层类（top","class）是指被定义在另一个类的内部的类。嵌套类存在的目的应该是为它的外围类（enclos","class）有着许多的缺点。它们中充斥着样板代码，包括枚举声明、标签域以及条件语句。","clear()","clone(","cloneable所产生的异常；","clonenotsupportedexcept","code","collect","collection\";","collection[]","collectionclassifi","collections)","collections.emptylist();//alway","collections.synchronizedcollection(mycollection);","collection。因此，在使用重载是应该注意哪些问题？","collection。实际上，它的输出是unknown","collection。这是因为classify方法被重载了，实际上调用哪个重载方法，是在编译时就已经决定了。在这个例子中编译器都认为是collection类，所以输出的是三个unknown","collection进行迭代时，用户必须手工在返回的","collector","com.sun","compar","comparable,","comparator()","comparator,","compare(str","compare(t","compareto(phonenumb","compareto方法是comparable接口中唯一的方法，不但允许进行简单的等同性比较，而且允许执行顺序比较。一旦实现了comparable接口，就可以跟许多泛型方法以及依赖于该接口的集合实现类进行协作。实现compareto方法有哪些规范？","compon","composit","compundkey","computefieldvalue();","computefieldvalues();","condit","constant","constructor","constructor:用于描述构造器","contains(object","containsall(collect","control","convention），其中有许多命名惯例包含在《th","convers","copi","count","count++;","count;","creating错误。为什么会禁止行为？","date","date();","date(end.gettime()));","date(end.gettime());","date(start.gettime()),","date(start.gettime());","dectet(10),","dectet;","default","default:","default:throw","default_initial_capac","defaultparam,","defens","digit","divid","divide(\"/\")","divide:","divide;","dog\",","don't","dosomething((element)","dosomething(e);","doubl","double.parsedouble(args[0]);","double.parsedouble(args[1]);","double_quartet(8),","duet(2),","duet,","e","e)","e){","e.knuth[knuth74]","e;","e[]都是非法的。这些在编译的时候会产生一个gener","each","each循环不仅可以遍历集合和数组，还可以遍历任何实现iterable接口的对象。同时，使用for","each循环也有以下局限性：","each循环优于传统的for循环","each循环的性能要优于传统的for循环，并且能够减少异常的发生，for","each循环的方式去遍历集合和数组，只有在过滤、转换、平行迭代的时候才需要采用传统的迭代器和索引的方式进行遍历。","each遍历的方式，比如下面这种示例代码：","earth","earthweight","effect）","element","element,","elements)","elements;","elements[","elements[size++]","elements[size]","elvi","elvis()","elvis();","emptystackexception();","end","end()","end(){","end)","end);","end){","end.setyear(78);","end;","ensembl","ensemble(int","ensemble{","ensur","ensurecapacity()","ensurecapacity();","enum","enum.ordin","enummap>","enummap>(herb.type.class);","enummap不允许使用null作为key值，但允许使用null作为value。如果试图使用null作为key将抛出nullpointerexception异常。如果仅仅只是查询是否包含值为null的key、或者仅仅只是使用删除值为null的key，都不会抛出异常。","enummap在内部以数组形式保存，所以这种实现形式非常紧凑、高效。","enummap是一个与枚举类一起使用的map实现，enummap中所有key都必须是单个枚举类的枚举值。创建enummap时必须显式或隐式指定它对应的枚举类。","enummap根据key的自然顺序（即枚举值在枚举类中的定义顺序）来维护来维护key","enummap的介绍","enum使用方法","enum枚举常量来分发不同的方法","enum枚举数据域和方法","enum规范中谈到ordinal时这么写到：“大多数的程序员都不需要这个方法。它是设计成用于像enumset和enummap这种基于枚举的通用数据结构的。”除非你在编写的是这种数据结构，否则最好完全避免使用ordinal方法。","enum默认构建","equality)”的测试功能。如java.util.random覆盖了equals，以检查两个random实例是否产生相同的随机序列，但是调用者并不期望这样的功能。在这样的情况下，从object继承得到的equals实现已经足够了；","equals(object","error(错误)表示系统级的错误和程序不必处理的异常，是java运行环境中的内部错误或者硬件问题，比如，内存资源不足、操作系统出错。在大多数情况下，当遇到这样的错误时，建议让该程序中断。这样的异常超出了程序可控制的范围。","exc","exc)","exc);","except","exception）和错误（error）。那么，这三种异常结构的使用场景是什么？","expens","extend","e）","f","failed:","favoritesong","few","field","field:用于描述域","field;","field=","fieldholder{","fields,","fieldtyp","fieldtype.field;","figur","figure(doubl","fildtyp","final","finalize()方法的缺点在于不能保证会及时的执行。从一个对象变成不可达开始，到它的终结方法被执行，所花费的时间是任意长的。这意味着，注重时间的任务不应该由finalize()方法来完成。例如，使用finalize()方法来关闭已经打开的文件，这就是十分严重的错误。因此，不应该以来finalize()方法来更新重要的持久状态。还有一点，使用finalize()方法有非常严重的性能损失；","finalize()方法的缺点：","finalize()通常是不可预测的，也是很危险的，一般情况下也是不必要的。使用finalize()会导致行为不稳定、降低性能，以及可移植性的问题。虽然终结方法也有可用之处，但是还是应该避免使用它，finalize()方法的缺点和用途有哪些？","finalize方法有这样的两个用途：","first","firstname;","fit","float","float和double类型主要是为了科学计算与工程计算而设计的，它们并没有提供完全精确的结果，所以不应该被用于需要精确结果的场合。比如：","foo()","foo(){","foo(i.next());","for(herb","for(herb.typ","for(int","forward","forwardingset","forwardingset(set","friday(paytype.weekday),","friday,","g","garbag","garden","gener","generateserialnumber()","get(key","get(str","get_associations_act","getaddcount()","getcheeselist(){","getcheeses(){","getcount()","getend()","getfield()","getfield(){","getinstance(){","getkey()","getstart()","getx()","gety()","gmtcal","gmtcal.gettime();","gmtcal.set(1946,","gmtcal.set(1965,","good,just","gravit","grow.","h:garden)","h:garden){","handl","hash","hash;","hashcode()","hashcode的写法","hashmap().values()","hashset","hashset());","hashset(),","hashset.addall(arrays.aslist(new","herb","herb(\"1\",","herb(\"2\",","herb(\"3\",","herb(str","herb[]","herbsbytyp","herbsbytype.get(h.type).add(h);","herbsbytype.put(t,","herbsbytype[h.type.ordinal()].add(h);","hiding）的原则：只要有可能，它们就会把设计决策集中在单个模块中，因此，可以改变单个决策，而不会影响到系统的其他部分；","higherlevelexcept","higherlevelexception(...);","higherlevelexception(cause);","higherlevelexceptioncthrow","highlevelexception的构造器为：","holder","homophon","host","hostile）：即便所有的方法都被外部同步保卫，这个类仍不能安全的被多个线程并发使用。这种类或者方法非常少，比如system.runfinalizersonexit方法是线程队里的，但已经废除了。","hotel\"","hours_per_shift","hours_per_shift;","hourswork","hoursworked,","i++;","i.hasnext();","i.next());","i.next()，更好的做法是编写一个类来描述这个数据集，通常是一个私有的静态成员类；","if(args.length==0){","if(chees","if(cheeseinstock.isempt())","if(field","if(nul","if(start.compareto(end)","if(this.start.compareto(this.end)","if(this.start.compareto(this.end)>0){","illegalaccessexcept","illegalargumentexception(\"请传入正确的时间区间!\");","illegalargumentexception(start","illegalargumentexception(this.start","illegalrgumentexception(\"too","imperson","impersonator.","implement","import","in\");","in\";","incompat","index","inherit","initcap,","initi","initialization)是延迟到需要域的值时才将它初始化的这种行为。如果永远不需要这个值，这个域就永远不会被初始化。这种方法既适用于静态域，也适用于实例域。和大多数优化一样，不成熟的优化是大部分错误的源头。那么针对线程安全的延迟初始化有哪些可靠的方式？","instanc","instance;","instance时所产生的异常；","instance）相关联。在非静态成员类的实例方法内部，可以调用外围实例上的方法，或者利用修饰过的this获得外围实例的引用。如果嵌套类的实例可以在外围类的实例之外独立存在，这个嵌套类就必须是静态成员类，在没有外围实例的情况下，要想创建非静态成员类的实例是不可能的。","instantiationexcept","instrumentedset","instrumentedset(set","int","int...","int...args){","int[]","integer(20));","integer(42)==new","integer(42)，虽然这两个装箱类型都是表示数字42，但是同一性判断会返回false；","interfac","interface)：这种接口不包含任何方法，它只包含静态的final域，每个域都导出一个常量。","interface（jni）允许java应用程序调用本地方法，所谓本地方法是指用c或者c++编写的特殊方法，本地方法在本地语言中可以执行任意的计算任务，并返回到java程序设计语言中。使用本地方法来访问特定于平台的机制是合法的，但是随着java平台的不断成熟，它提供了越来越多以前只有在宿主平台上才拥有的特性。那么，本地方法是否应该像java方法一样方便使用，有哪些注意事项？","interruptedexcept","intlist","intlist;","introduct","invalidobjectexcept","invalidobjectexception(\"proxi","invalidobjectexception(start","invalidobjectexception{","invari","inverse(oper","invoc","ioexception,","isbabyboomer()","isempty()","isempty、isenable、hassiblings；","issu","iter","iterator()","iterator(){","iterator{","j.u.c包下的并发工具分为三类：1.负责管理线程的executor框架；2.并发集合；3.同步器。其中，负责管理线程的executor在第68条已经说过，不再单独描述。","j.u.c包下跟我们提供了多种保证线程安全的数据结构，在实际开发中应该使用这些性能和安全性已经得到保证的工具，而不是重复造轮子，并且很难保证安全性。比如，在之前的代码中“生产者","java","java.io.serializable,","java.util.date;","javabean模式","java一共有三种可抛出结构：受检的异常、运行时异常（runtim","java平台建立了一套很好的命名惯例（nam","java异常体系中一共有三种异常结构，应该根据具体的使用场景选择合适的异常，而不是胡乱使用。","java提供了其他更好的方法来定义能表示多种风格对象的单个数据类型：子类型化。标签类正是类层次的一种简单效仿。","java有一个数据类型由两部分组成，包含基本类型（primitive），如int、double和boolean，和引用类型（refer","java没有提供函数指针，但是可以用对象引用实现同样的功能。调用对象上的方法通常是执行该对象上的某个操作。然而，我们也可能定义这样一种对象，它的方法执行其他对象上的操作。如果一个类仅仅导出这样的一个方法，它的实例上就等同于一个指向该方法的指针。这样的实例被称为函数对象。考虑这样一个类：","java的语言规范不仅不保证终结方法被及时执行，而且根本就不保证它们会被执行。当一个程序终结的时候，某些已经无法访问的对象上的终结方法却根本没有被执行，这是完全可能的。这里得到的结论就是：不应该依赖终结方法来更新重要的持久状态。例如，依赖终结方法来释放共享资源（比如，数据库）上的永久锁，很容易让整个分布式系统跨掉。","junit","jupit","jupiter(1.899e+27,","j有可能会溢出，并且返回一个负值。","key","key()","key();","key);","key,","kg","kilogram","languag","lastname;","leavethebuilding()","lenght,doubl","length","length*width;","length,","length;","level","linenumb","linenumber)","linenumber;","list","list,","list.add(o);","list=","list[1];","list[]","list[]、new","list[]和new","list是不可变的，编译无法通过","loadfactor)","loadfactor);","local_variable:用于描述局部变量","lock","long","long[1];","lower","lst)","m","m);","m.invoke(null);","m1()","m^3","ma","main(string[]","map","map>","maps.newhashmap();","mar","mass","mass()","mass)","mass,","mass;","math.pi","math.pi*(radiu","member","memberclass(args)来手工建立这种关系也是有可能的，但是很少使用。","mercuri","mercury(3.302e+23,","message）。程序员会根据打印出来的异常信息进行排错，也就是说，如果异常信息不够充足的话，会减缓排错的速度，那么，应该如何编写合适的异常信息？","meter","method","method:用于描述方法","methods,","middlename;","min(int","min(int...args){","minu","minus(\"","minus,","minus:","monday","monday,","mondy(paytype.weekday),","more","mutabl","myiter","myiterator();","myset","name","name,","name;","namelist","namelist.add(\"test\");","namelist.add(1);","nativ","need","neptun","neptune(1.024e+26,","new","newinstance(","nextserialnumb","nextserialnumber++;","nonet(9),","nonet,","noninstanti","null","null)","null){","null;","number","numberofmusicians(){","numberofmusicians;","o)","o){","obj","obj.action(args);","obj.action(args);.","object","object();","object.hashcode规范","object[]","object[default_initial_capacity];","objectarray","objectarray[0]","objects[0]","object中默认的tostring方法，它返回的字符串只类类名加上一个“＠符号”，后面是十六进制形式的hashcode，这些信息对我们来说用处不大，所以为了提供更好的关于类和对象的说明，我们应该总是覆盖tostring()方法来提供更加清晰的说明，覆盖tostring方法的好处以及覆盖tostring的注意事项？","octet(8),","offset","offset;","oi","ois)","ol","ol.add(\"i","omit","ommit","on","op","op)","op);","op,","op.apply(x,","op:","oper","operation(str","operation.divide;","operation.minus;","operation.plus;","operation.times;","operation.values())","operationdemo","opers_map","opers_map.put(op.tostring(),","orang","orange_blood","orange_blood;","orange_navel","orange_navel,","orange_templ","orange_temple,","order","ordinal()","overtim","overtimepay","overtimepay(doubl","overtimepay;","p","p){","p,","p.end;","p.start;","p.surfaceweight(mass));","package:用于描述包","parameter:用于描述参数","pass","passed);","passed++;","passed,","pay","pay(doubl","payrat","payrate)","payrate);","payrate;","payrol","payroll(paytyp","payrollday","paytyp","paytype)","paytype.pay(hoursworked,","paytype;","peer)有关。本地对等体是一个本地对象，普通对象通过本地方法委托给一个本地对象，因为本地对等体不是一个普通的对象，所以垃圾回收器并不知道它，当它的java对等体被回收的时候，它却不会被回收掉。在本地对等体并不拥有关键资源的前提下，终结方法正好被用来执行回收本地对等体。","perennt","period","period(d","period(new","period(start,","period{","person","phonenumb","phonenumber(int","phonenumber(str","phonenumber){","phonenumber;","phonenumber=\"\";","physicalconst","physicalconstants()","place","planet","planet(doubl","planet.earth.surfacegravity();","planet.values())","planetdemo","plu","plus(\"+\")","plus,","plus:","pn)","pn.areacode)","pn.areacode;","pn.linenumber)","pn.linenumber;","pn.prefix)","pn.prefix;","point","point(doubl","pop()","prefer","prefix","prefix,","prefix;","prefixdiff","prefixdiff)","prefixdiff;","preserv","primitive）。由于java自动装箱和拆箱机制，会使得在实际开发中基本类型和装箱类型混用，那么它们之间有什么区别？","printfavorites()","privat","properti","protected访问级别","proxy），它应该有一个单独的构造器，其参数类型就是那个外围类。这个构造器只从它的参数中复制数据：它不需要进行任何一致性检查或者保护性拷贝。按设计，序列代理的默认序列化形式是外围类最好的序列化形式。外围类及其序列代理都必须声明实现serializable接口。例如，下面这种形式：","public","push(object","queue队列速度大于出队速度的话，就会造成大量对象没有被及时回收；","quintet(4),","quintet,","radius()","radius)","radius);","radius;","range[i++].climb();","readobject(objectinputstream","readobject方法中都不要调用可覆盖的方法，无论是间接的方式还是直接的方式","readresolv","readresolve()","readresolve(){","rectangl","rectangle(doubl","rectangle,circl","rectangle:return","redius){","reference)是指永远不会再被解除的引用，由于jvm有垃圾回收机制，如果存在过期引用，被引用的对象不会被回收掉，容易造成内存泄漏。那么，常见的内存泄漏有哪几种情况？","remove(object","removeall(collect","representation），即它的tostring方法的调用结果。它通常包含该异常的类名，紧随其后的是细节消息（detail","requeststop()","requeststop();","required!\");","rest}","result","result,","result;","result[]","retainall(collect","retentionpolicy.class——","retentionpolicy.runtim","retentionpolicy.sourc","retention的取值有这些：","return","reusabl","roughli","run()","runnable()","runtest","s","s)","s.add(e);","s.addall(c);","s.clear();","s.contains(o);","s.containsall(c);","s.defaultreadobject();","s.equals(o);","s.hashcode();","s.isempty();","s.iterator();","s.remove(o);","s.removeall(c);","s.retainall(c);","s.size();","s.toarray();","s.toarray(a);","s.tostring();","s1,","s1.length()","s2)","s2.length();","s;","s^2","safety）（详见70条）","same","satisfi","saturday(paytype.weekend),","saturday,","saturday:","saturn","septet","septet(7),","serializ","serializable{","serializable”是不够的。为了维护并保证singleton，必须声名所有的实例都是transient，并提供一个readresolve方法。否则的话每次反序列化的时候都会创建一个新的实例，这个时候要加入以下代码：","serializable的缺点","serializabtionproxi","serializabtionproxy(period","serializabtionproxy(this);","serialversionuid","set","set(key","set(str","set[]","set[herb.type.values().length];","setlist","setx(doubl","sety(doubl","set。这是最普通的参数化set集合，可以持有任何集合。通配符类型是安全的，原生态类型不安全。由于可以将任何元素放进原生态类型的集合中，因此很容易破坏改集合的类型约束条件。","set的输出结果如同我们想的一样，但是list的结果不一样。实际发生的情况是：set.remove(e)，选择重载方法的参数实际上是integer，这里进行了自动装箱，把int装箱成了integer；对于list，有两个重载函数，这里直接重载了list.remove(i)，并没有重载到list.remove(e)，是从list的指定位置进行remove，得到结果为","sextet(5),","sextet,","sgn(y.compareto(x))。这也暗示着当且仅当y.compareto(x)抛出异常时，x.compareto(y)才抛出异常。","sgn(y.compareto(z))。","shape","shape;","shape=shape.circle;","shape=shape.rectangle;","shop.getcheeses();","short","singleton","singleton();","singleton(){","singleton(){};","singleton{","singleton的最佳方法。","size","size()","size)","size){","size;","size];","solo(1),","solo,","space","specification》中。不严格的讲，这些命名惯例分为两大类：字面的和语法的。具体的，在实际开发中应该遵守哪些命名规范？","stack","stack()","start","start()","start(){","start,","start,dat","start.after(end)){","start;","state","static","stoprequest","stoprequested()","stoprequested;","storag","storage.","str","strategi","string","string(\"test\");","string(char","string.","string[]","string[]{\"1\",\"2\",\"3\"}));","string_length_compar","stringlengthcompar","stringlengthcomparator()","stringlengthcomparator();","stringlist","stringlists;","stringlists[0].get(0);","string、integer、date，都可以把它们的hashcode方法返回确切值规定为该实例的一个函数，一般来说，这并不是一个好主意，因为这样做严格地限制了在将来的版本中改进散列函数的能力。","string内部所有成员都设置为私有变量","string类被final修饰，不可继承","strlencmp","strlencmp();","strlist","strlist.get(0);","style_bold","styles){","style{bold,italic,underline,strikethrough}","sum","sunday(paytype.weekend);","sunday:","sunday;","super(cause);","super(initcap,","super(s);","super.add(e);","super.addall(c);","suppress","suppresswarnings注解的时候都应该添加一条注释以说明为什么这么做是安全的，这样可以帮助其他人理解代码，更重要的是，可以尽量减少其他人修改代码后导致计算不安全的概率。","surfacegrav","surfacegravity()","surfacegravity;","surfaceweight(doubl","switch","switch(op)","switch(this)","symbol)","symbol;","synchron","synchronized(c)","synchronized(lock){","system.arraycopy(value,","system.out.printf(\"passed:","system.out.printf(\"weight","system.out.println(\"invalid","system.out.println(\"jolli","system.out.println(\"进入readresolve()方法，将返回period对象！\");","system.out.println(\"进入writereplace()方法！\");","system.out.println(1.0","system.out.println(arrays.aslist(digits));","system.out.println(arrays.tostring(favoritesongs));","system.out.println(classify(c));","system.out.println(hashset.getcount());","system.out.println(herbsbytype);","system.out.println(homophones);","system.out.println(m","system.out.println(string.format(\"%f","t","t1,","t2);","t:herb.type.values()){","t[]","take","test","testclass","testclass.getdeclaredmethods())","testhashset","testhashset(16,","testhashset(int","tests++;","test注解对标注的注解元素的语义没有直接影响。","test注解类型的声明本身使用retention和target注解进行标记。","text","text.applystyles(enumset.of(style.bold,style.italic));","text{","thing.\")","this!","this);","this.","this.address","this.ag","this.areacod","this.end","this.end);","this.i","this.length","this.length=lenght;","this.linenumb","this.mass","this.nam","this.numberofmusician","this.paytyp","this.phonenumb","this.prefix","this.radiu","this.radius=radius;","this.start","this.symbol","this.typ","this.usernam","this.valu","this.width","this.width=width;","this.x","this;","thread","thread(new","threadgroup的api非常脆弱；","threadloc","threadlocal()","threadsafe）：某些方法需要为了线程安全需要在外部使用的时候进行同步。如collection.synchronized返回的集合，对它们进行迭代时就需要外部同步。如下代码，当对synchronizecolletcion返回的","threadsafe）：该类的实例是可变的，但是这个类有足够的的内部同步。所以，它的实例可以被并发使用，无需任何外部同步，如random和concurrenthashmap。","throw","throwabl","throwable”。这样的声明没有给开发者关于”这个方法抛出哪些异常”的任何有用信息，实际上掩盖了该方法在同样的执行环境下可能抛出的任何其他异常，","thursday(paytype.weekday),","thursday,","time","times(\"*\")","times,","times:","timeunit.seconds.sleep(1);","toarray()","toarray(t[]","tochararray()","too,","tostring()","tostring(){","tostring方法虽然不会像equals这样的方法对类造成那么大的影响，但是一个好的tostring可以使类用起来更加的舒服。当对象被传给println、printf、字符串联操作符(+)以及assert或者被调试器打印出来时，tostring方法会被自动调用。这是一种重要的调用手段，如果不重写tostring提供更明确的信息，这将很难让人理解。tostring的输出，也可以方便我们debug","treeset();","tri","trio(3),","trio,","triple_quartrt(12);","true","true;","try{","tuesday(paytype.weekday),","tuesday,","two]","type","type)","type.annual),","type.biennial),","type.perenntal)","type:用于描述类、接口(包括注解类型)","type;","type顺序进行排序，在构建的garden数组是与枚举元素的序数强依赖的，加入type中的枚举元素一不小心调换了顺序，而garden并没有改变，再按照枚举元素在枚举类中的序数从garden数组中获取数据自然而然会出错。","type），如string和list。","t表示任意类型的，e表示集合元素类型，k和v表示映射的键和值类型，x表示异常。任何类型的序列可以是t、u、v或者t1、t2、t3；","uncheck","univers","unnecessari","unsafeadd(list","unsafeadd(strlist,","uranu","us","used.","user","user(build","user(this);","user.builder(\"test\",18).address(\"test\").phonenumber(\"test\").build();","username,","username;","util","utilityclass","utilityclass()","utils而不是utilities。只取首字母缩写形似也是可以接受的，例如awt。","valu","value);","value.length);","value[])","value[];","value对的次序。当程序通过keyset()、entryset()、values()等方法来遍历enummap时即可看到这种顺序。","vector","vector();","venu","view），这些集合视图是由map的keyset、entryset和values方法返回的。同样地，诸如set和list这种集合接口的实现往往也是用非静态成员类来实现他们的迭代器（iterator）：","void","volatil","vs","warning)、非受检方法调用警告、非受检普通数组创建警告以及非受检转换警告(uncheck","warnings)，要尽可能消除每一个警告，以确保代码安全。","wednesday(paytype.weekday),","wednesday,","weekday","while(true){","width)","width;","wrappedexc)","wrappedexc.getcause();","wrapper","writereplace(){","x","x)","x,","x;","y","y)","y)));","y);","y,","y.compareto(z)","y;","{","{int","{}","||","}","});","},","};","}cache(lowerlevelexcept","}catch","}}","​","——","——donald","——m.a.jackson[jackson75]","——william","“只要是加了synchronized关键字的方法或者代码块就一定是线程安全的，而没有加这个关键字的代码就不是线程安全的”。这种观点将synchronized于线程安全等同起来，并且认为线程安全只有两种极端的情况，要么是线程安全的，要么是线程不安全的。","“把调用具有受检异常的方法进行重构”的一种方法是，把这个抛出异常的方法分成两个方法，其中第一个方法返回一个boolean，表明状态测试，代表是否应该抛出异常，例如下面的示例代码：","、*、/等算术运算符直接对其对象进行数学运算，而必须调用其相对应的方法，方法中的参数也必须是bigdecimal的对象；","。代码中一般情况下都不使用","。如果你所表示的这种关系是多维的","一个好的散列函数通常倾向于“为不相等的对象产生不相等的hashcode”，编写好的hashcode也如下这种简单的方式：","一种特殊的异常转译形式称为异常链（exceptionchaining)，如果低层的异常对于调试导致髙层异常的问题非常有帮助，使用异常链就很合适。低层的异常（原因）被传到髙层的异常，髙层的异常提供访问方法（thmwable.getcause)来获得低层的异常。例如：","一致性：对于任何非null得引用值x和y，只要equals的比较操作在对象中所用的信息没有被修改，那么多次调用x.equals(y)就会一致的返回true，或者一致的返回false；","一般来说，最好能重用对象而不是在每次需要的时候就创建一个相同功能的实例，如果对象是不可变的，那么它就始终可以被重用。作为一个反例，代码如下","一般，enum中重写了tostring方法之后，enum中自生成的valueof(string)方法不能根据枚举常量的字符串(tostring生成)来获取枚举常量。我们通常需要在enum中新增个静态常量来获取。如：","上例中的代码旨在将herb类型按照enum","上例代码中使用了原生态泛型，编译可以通过，但是很显然由于添加了integer类型，在get集合元素的时候会出现classcastexception。但是如果使用list的话，由于list并不是list的子类型，编译就不会通过，这样的代码就更加安全。","上例代码通过反射，让使用了@test注解的方法能够执行，并且统计了被@test标注的方法的个数以及方法成功执行的个数。可以看出，只有让注解和反射结合起来使用时，才能发挥更强大的语义作用。","上进行同步，不遵从此建议将导致无法确定的行为：","上述的这些规则能够保证设计的方法可读性更强，性能更好，在实际开发中，应该遵守这些规则。","上面例子，虽然捕获了异常，但是是空的catch块，会不经意间忘记处理异常，这样会埋下隐患，面对异常应该有哪些基本的原则？","上面的这种重构方式虽然代码调用更加复杂，但是让程序更有灵活性。但是，需要注意的时候，凡是涉及到状态更新和状态测试的时候，都需要考虑线程安全的问题。","下面是正常初始化实例域的方式，但是要注意采用了final修饰符：","不严格的说，前者逃避了泛型的检查，后者明确告诉编译器，它能够持有任意类型的对象。虽然你可以将list传递给类型list的参数，但是不能将它传给类型list的参数。这是因为泛型有子类型化规则，list","不关心类是否提供了“逻辑相等(logic","不可变的(immutable)：类的实例不可变（不可变类），一定线程安全，如string、long、biginteger等。","不可变类是其实例不能被修改的类，没有实例中所包含的数据域，在实例被创建的时候被初始化，且在实例的生命周期中不能被修改。java中有许多不可变类，如string，值的基本包装类型，biginteger和bigdecimal等，不可变类是线程安全的。不可变有很多优点，那么设计不可变类的原则有哪些？","不可变类有很多好处，因此合适的适用场景下，可以考虑将类设计生不可变类，并遵守不可变类的设计原则。","不存在value的sett","不必纠结于已有解决方案的问题，而专注于自身的逻辑；","不要使用字符串连接操作符来合并多个字符串，除非性能无关紧要。相反，应该使用stringbuilder的append方法。","不要去计校效率上的一些小小的得失，在97％的情况下。不成熟的优化才是一切问题的根源。","不要因为性能而牺牲合理的结构。要努力编写好的程序而不足快的栏序。如果好的程序不够快，它的结构将使它可以得到优化。好的程序体现了信息隐藏","不要将所覆盖的equals方法中的入参object对象替换成其他对象，应该使用@override。","不要提供任何修改实例数据域的setter方法；","不要试图从散列码计算中排除一个对象的关键部分来提高性能。虽然这样可能使计算的速度得到提升，但是效果并不见得会好，可以会导致散列表慢到根本无法使用，如果因此大量的实例映射到极少的散列码上，那基于散列的集合将会显示出平方级的性能。java平台类库中的许多类如","不要过于追求提供便利的方法：每个方法不要做太多逻辑，导致方法体过长，应该尽力去拆分，每个方法都应有尽其所能即可；","与int常量相比，枚举的可读性更强，并且更加安全，功能更加强大，在实际开发中应该使用enum代替int枚举模式。","与方法调用不同的是，继承打破封装性。子类依赖于父类，如果父类的具体实现细节改变，子类也会跟着相应改变。除非父类就是专门为扩展而设计的，并且有良好的文档说明；2.","丧失了编译时类型检查的好处：如果程序企图用反射访问不存在的方法时，在运行时将会失败；","为了将标签类转化成类层次，有这样一些步骤：","为了方法局部变量域污染到其他的作用域，需要将局部变量域尽可能缩小，这样能够增强代码的可读性和可维护性。","为了正确地编写api文档，必须在每个被导出的类、接口、构造器、方法和域声明之前增加一个文档注释；","为了继承而设计的类应该尽可能少地去实现serializable接口，用户接口也应该尽可能不继承serializable接口，原因是子类或实现类也要承担序列化的风险。大多数情况下需要遵守这条原则，极为特殊的情况可以打破这项原则，比如实现serializable接口的的类有throwable类(异常可以从服务器端传到客户端)、component类(gui可以被发送、保存和恢复)、httpservlet抽象类(会话session可以被缓存)；","为了避免创建对象，而重用对象是为了提升性能，但是，这也应该有一个”度“。比如小对象的构造器只做很少量的工作，所以，小对象的创建和回收是非常廉价的，特别是在现在的jvm上，此时，就不需要刻意的为了重用对象而让代码逻辑更加混乱。反之，维护自己的对象池来避免创建对象并不是一种好的做法，除非池中的对象是非常重量级的。比如说数据库连接池，建立数据库连接的代价非常昂贵，因为重用这些对象很有意义。","为了避免局部变量扩大作用域，污染到其他作用域。局部变量的作用域应该最小化，即在第一次使用它的地方进行声明，尽可能在声明处进行初始化。典型的例子是，使用for循环，变量作用域在循环内，而不会扩散。所以，如果循环终止之后不再需要循环变量的内容，for循环就优于while循环；","为了避免由于方法入参不符合规范，将异常扩散到方法执行过程之中，在设计方法或者构造器时，应该考虑方法的入参有哪些限制，应该在方法开头显式的进行参数有效性判断，也应该将这些参数有效性写入在文档中；","为了避免重复对象，在实际编码过程中可以从这几个方面来思考：","为类提供finalize()方法，可能会随意地延迟其实例的回收过程。如果对象进入f","为该域计算int类型的散列码c:","也就是说由于cheesesinstock在特殊情况下返回了null，因此，给调用方增加了额外的判断为null的代码，而从业务意义上来说，null一般是指异常情况下的返回值，那么，针对返回值为集合或者数组来说，特殊情况下应该返回什么？","什么时候使用继承？","什么时候应该让具体类去声明变量呢？","什么时候用装箱类型","什么时候考虑使用保护性拷贝？","从上例的代码可以看出，数组是协变的，因为long是object的子类型，所以long[]是object[]的子类型，第一段代码会编译通过。但是运行时，objectarray运行时类型是long的list，插入string类型的数据就会抛出arraystoreexception。而list是不可变的，泛型在运行时会类型擦除，类型检查会放在编译期间，因此第二段代码在编译期间就不会通过，将问题暴露在编译期间，这样才是可靠的。","从上面可以看出，不推荐在enum中使用switch...case...来判断不同的行为。那什么时候可以使用呢？主要是适用于给外部的枚举类型增加特定于常量的行为。如，假设operation枚举不受开发者自己控制，但是希望它有一个实例方法来返回每个运算的反运算，则可以：","从语法上讲，静态成员类和非静态成员类之间唯一的区别是，静态成员类的声明中包含了修饰符static。尽管他们的语法非常的相似，但是这两种嵌套类有很大的不同。非静态成员类的每个实例都隐含着与外围类的一个外围实例（enclos","从逻辑的角度而言，name类可以简单的由lastname、firstname以及middlename三个属性来进行表示，也就是说，这三个属性可以精确的反映出它的逻辑内容。因此，这种情况可以采用默认的序列化形式，同样也需要在readobject中进行参数有效性检测和保护性拷贝。","仔细检查代码逻辑，确定在类型转换上没有错误，尽力通过ide提示，消除每一个警告；","他们只提供信息供相关程序使用。","代码依赖于具体类的特殊属性，比如上例中假设程序中需要利用vector的线程安全的特性，如果采用接口声明变量的话，无意间将实现类改成了arraylist就会造成极大的错误。","以上代码是计算工人工资。平时工作8小时，超过8小时，以加班工资方式另外计算；如果是双休日，都按照加班方式处理工资。上面代码的写法和上一小节给出的差不多，通过switch来分拆计算。还是一样的问题，如果此时新增加一种工资的计算方式，枚举常量需要改，pay方法也需要改。按上一小节的介绍继续修改：","以上面的apple、orange为例，用enum重写：","以下是test注解在实践中的应用。","任何需要精确答案的计算任务，都不要使用float和double，可以使用int、long或者bigdecimal。使用bigdecimal可以很方便的选择舍入的方式，它一共提供了8种方式；","传递性：对于任何非null得引用值x、y和z，如果x.equals(y)返回true时，并且y.equals(z)也返回true，那么x.equals(z)也返回true;","但是如果将这个类进行序列化的时候，就可能这个类会出现不满足start和end的约束关系了，那么，应该怎样保证在序列化的时候也能保障对象的关键约束关系？","但是还是存在第1种方法里的反射机制进行攻击的问题。以上两种方法还有一个问题，就是在实现singleton类序列化的时候，仅仅在声名中加上“impl","但是需要注意到volatile并不能保证原子性，例如下面的例子：","但是，用这述这种方法有个问题，就是规定了参数的类型，这样就无法传递任何其他的比较策略。相反，对于这种情况，应该定义一个comparator接口，并修改stringlengthcomparator来实现这个接口。换句话说，在设计具体的策略类时，还需要定义一个策略接口：","但需要创建singleton时，可以使用枚举的方式实现，这种实现方式既简洁又能保证序列化安全和反射安全。","你可以写的更详细些：","使方法小而集中。如果把两个操作合并到同一个方法中，与其中一个操作相关的局部变量就有可能会出现在执行另一个操作的代码范围之内。为了防止这种情况发生，只要把这个方法分成两个，每个方法各自执行一个操作；","使用","使用==操作符检查“参数是否为这个对象的引用”；","使用compareto方法有一个重要的约定，就是通常情况下compareto方法施加的等同性测试和equals方法一致。如果不一致的话，集合接口一般是使用equals方法来进行等同性测试，而有序集合是采用compareto方法进行等同性测试，如果两者不一致的话，容易造成灾难性的后果；","使用instanceof操作符检查“参数是否为正确的类型”；","使用javacdoc的@throws标签可以显示方法可能抛出的运行时异常，但是不要使用throws关键字将运行时异常包含在方法的声明中。使用api的程序员必须知道哪些异常是需要受检的,哪些是不需要受检的。","使用不可实例化的工具类来导出这些常量，例如：","使用原生态类型虽然也是合法的，但是不应该这样做，因为这会失去泛型在安全性和表述性方面的所有优势。原生态类型存在的理由是因为老代码的移植兼容性。","使用参数化类型时，如threadlocal类时，只能使用装箱类型","使用可变参数的场景","使用可变参数的规律为：方法强制要求的默认参数，在方法入参明确给出，可变参数用于进行兜底不确定参数个数的情况。","使用字符串连接符（+）将多个字符串拼接起来，是很不合适的。因为string是不可变的，每次拼接都需要拷贝因此非常影响性能。涉及到字符串拼接，应该使用stringbuilder。","使用对象的","使用接口一种典型的错误方式就是：常量接口。常量接口(constant","使用本地方法来提供性能的做法是不值得提倡的，在早期的发型版本中，这样的做法往往是很有必要，但是jvm实现变得越来越快，对于大多数任务，现在即使是不使用本地方法也能获得很好的性能；","使用注解","使用这种方法的时候需要注意，有符号的32位整数还不足以大到能够表达任意两个32位整数的差值，如果i是一个很大的正整数，j是一个很小的负整数，i","使用重载，安全而保守的策略是：永远不要写两个具有相同参数数目的重载方法；","使用默认序列化形式，当一个或多个域字段被标记为transient","例如java.util.timertask抽象类，应该用相关的基类（往往是抽象类）来引用对象，而不是它的实现类；","例如定义一个test的注解：","例如，string不可变类的具体实现为：","例如，上面的反例；","例如，假设调用了testsafetymechanisms类，希望junit","保证类不会被扩展：防止子类恶意修改实例对象，应该禁止类被子类扩展，可以将其定义为final；或者让类所有的构造器都变成私有的或者包级私有的，并添加公有的静态工厂来代替公有的构造器；","假设调用一个方法（如array.sort()），该方法的入参需要创建一个实例，并且已经有一个确定的类型，创建该类的实例时就可以采用创建匿名类的方式来创建该类的实例。如果没有一个现有的类型，就设计成局部类。","像上例中采用接口的方式声明变量更加合适，如：","先来看一个反例：","先来看一个错误的例子：","公有类永远都不应该暴露可变的域，有时候会需要用包级私有的或者私有的嵌套类来暴露域，无论这个类的域是可变的还是不可变的。","关于程序文档的格言：好的api文档应该描述一个给定的方法做了什么工作，而不是描述它是如何做到的。由此看来，上面的这段文档违背了这一格言，这正是继承破坏了封装性所带来的不幸后果，因为在上面这段文档中它必须要说明清楚调用可覆盖方法所带来的影响。所以，为了设计一个类的文档，以便它能够被安全的子类化，必须描述清楚那些有可能未定义的实现细节。","关键字synchronized：synchronized是保证线程安全的一大利器，它可以保证同一时刻，只有一个线程可以执行某个方法和修改某一个可变数据，但是仅仅将它理解成是互斥的也是不完全正确的，它主要有两种意义：","关键字volatile：volatile最重要的功能是能够保证数据可见性，当一个线程修改可变数据后，另一个线程会立刻知道最新的数据。在上面的例子中，因为stoprequested变量的读写本身就是原子的，因此利用synchronized只是利用到它的数据可见性，但是由于synchronized会加锁，如果想性能更优的话，上面的例子就可以采用volatile进行修改：","具体策略类往往使用匿名类声明：","具有的优点：程序更加灵活，如果其他代码使用的是list接口中的方法，当你想改变具体实现类的时候，比如这里将vector换成了arraylist，只需要改变构造器就可以，对其他地方的代码而言是无感知的，并不会影响其他地方的操作。","内存泄漏另一个常见来源是缓存：一旦把对象引用放到了缓存，当很长一段时间没有使用之后仍然存在于缓存之中。如果在缓存之外存在对某个数据项的键的引用的话，该缓存项才有意义。这样的场景是适合用weakhashmap。","内存泄漏第三个常见来源是监听器和回调：如果注册了回调，并没有显式的进行注销，也会造成内存泄漏的问题。确保回调会被正常的垃圾回收，只需要保存他们的弱引用即可，例如，只将它们保存为weakhashmap中的键。","内部类不应该实现serializable，内部类需要保存指向外部类实例的引用及保存来自外部作用域的局部变量的值。这些域如何对应到类定义中不确定。因此内部类的默认序列化形式定义不清楚。","内部类中的readresolve方法是利用类本身的构造器和静态工厂去创建对象，这样就避免了为了安全反序列化而遵守类的约束条件而产生的大量代码。","几乎每个局部变量的声明都应该包含一个初始化表达式，如果没有足够信息来对一个变量进行有意义的初始化，就应该推迟这个声明,直到可以初始化为止，例外情况是与try..catch有关。","函数指针的主要作用就是实现策略模式，为了在java中实现这种模式，要声名一个接口来表示策略，并且为每个具体策略声名一个实现了该接口的类；","则是一个通配符类型，表示只能包含某种未知对象类型的一个集合；set则是原生态类型，它脱离了泛型安全性检查规则。前两个是安全的，最后一种不安全。","创建多种类型的线程池：可以创建单个线程、固定的多个线程以及线程个数可变的线程池，也可以通过threadpoolexecutor类创建适合应用场景的线程池；","判断各个域值是否相等的逻辑不要过于复杂；","利用readresolve方法：readresolve特性允许你用readobject创建的实例代替另一个实例。对于一个正在被反序列化的对象，如果它的类定义了一个readresolve方法，并且具备正确的声明，那么在反序列化之后，新建对象上的readresolve方法就会被调用。然后，该方法返回的对象引用将被返回，取代新建的对象。因此，在每次反序列化的时候，就可以在readresolve方法中返回之前的实例对象，这样就可以确保被多次反序列化后的对象也只会有一个。示例代码为：","利用反射和注解结合发挥语义上的作用","前提条件是指为了使客户能够调用这个方法，而必须满足的条件；","前提条件（precondition）","副作用是指系统状态中可以观察到的变化，它不是为了获得后置条件而明确要求的变化；","副作用（side","努力避免那些限制性能的设计决策。当一个系统设计完成之后，其中最难以更改的组件是那些指定了模块之间交互关系以及模块与外界交互关系的组件。在这些设计组件之中，最主要的是api协议以及永久数据格式。这些设计组件不仅在事后难以甚至不可能改变，而且它们都有可能对系统本该达到的性能产生严重的限制；","包名称的其余部分应该包括一个或者多个描述该包的组成部分。这些组成部分","包的命名：包的名称应该是层次状的，用句号分隔每部分。每个部分都包括小写字母和数字（很少使用数字）。任何将在你的组织之外使用包，其名称都应该以你的组织的internet域名开头，并且顶级域名放在前面，例如：edu.cmu","包级访问；3.","匿名类","匿名类多用于表示具体策略的函数对象，比如arrays.sort()方法中定义的比较器comparator，还可用于创建thread时的runnable等。","匿名类没有类名，它不是外围类的一个成员，并不与其他的成员一起被声明，而是在使用的同时被声明和实例化。匿名类可以出现在代码中任何允许存在表达式的地方。当且仅当匿名类出现在非静态的环境中时，它才有外围实例。但是即使它们出现在静态的环境中，也不可能拥有任何静态成员。","匿名类的适用性受到诸多的限制。除了在它们被声明的时候之外，是无法将它们实例化的，你不能执行instanceof测试。你无法声明一个匿名类来实现多个接口，或者扩展一个类，并同时扩展类和实现接口。由于匿名类出现在表达式当中，它们必须保持简短——大约10行或者更少些——否则会影响程序的可读性。","千万不能让程序依赖线程调度器，这样会失去健壮性和可移植性。而thread.yield和线程优先级这些特性，是最不具有可移植性，程序中不应该使用它们。","千万不要企图通过调整线程优先级来达到程序的正确性，线程的优先级是最不可移植的特性。","千万不要忽略异常：尽管这条原则是很显而易见的，但是它却常常被违反，当api的设计者声明一个方法将抛出某个异常的时候，他们等于正在试图说明一些危险情况，所以，千万不要忽略；","即使要用也是因为特殊情况。","原因","原因及解决方法","原生态类型list和参数化类型list之间到底有什么区别呢？","及时的执行finalize方法是垃圾回收过程中一个重要步骤，这种算法在不同的jvm实现平台上会有很大的差别，也许在测试的jvm平台上测试性能良好，却可能在其他平台上的性能很差。","双重检测：这种模式避免了在初始化之后，再次访问这个域时的锁定开销（在普通的方法里面，会使用synchronized对方法进行同步，每次访问方法的时候都要进行锁定）。这种模式的思想是：两次检查域的值，第一次检查时不锁定，看看其是否初始化；第二次检查时锁定。只用当第二次检查时，表明其没有被初始化，才会调用computefieldvalue方法对其进行初始化。如果已经被初始化了，就不会锁定了，另外该域被声明为volatile非常重要，示例代码为：","反射很强大的功能机制不能否认，对于特定复杂系统编程任务，反射机制很有用途，但是他也有很多缺点，对于普通的方法调用，建议不采用反射机制。","反射机制提供了通过程序来访问关于已装载的类的信息的能力，给定一个class实例，可以获得constructor、method、field实例，这些对象提供了类构造器、访问类成员名称、域类型、方法签名等信息。反射机制很强大，但使用起来有哪些注意事项呢？","反序列化这个类时，虚拟机会调用这个方法，最后返回的对象是一个period对象！这里同样调用了period的构造函数，会和原来的实例对象一样","受检异常通过强制调用者通过catch处理异常情况，能够从一定程度上确保程序的可靠性。如果api设计时，抛出多个受检异常，那么调用方就必须使用多个catch进行相应的处理，或者将它们在throws出去，反而让调用方增加了负担。那么，在设计方法是否抛出异常的时候应该有哪些原则？","受检的异常","另外，java语言规范保证读写一个变量是原子的，除非这个变量是double或者long，即使没有在保证同步的情况下也是如此。","只有当子类真正是超类的子类型(subtype)时，才适合用继承。对于两个类a和b，只有当两者之间确实存在\"i","可以利用别人的使用经验，和利用社区的智慧；","可以改进如下：","可以看出由enummap改造后，程序更加简洁，也更加安全。总之，试图通过ordinal()方法，利用枚举元素在枚举中的位置做逻辑处理的，这种代码一般都是不可取和不安全的。","可以通过将构造器方法访问标识符设置为private，将构造器方法私有化，从而将对象强化为不可实例化。比如在只包含静态域和静态方法的工具类，就有必要通过私有化构造器的方式，让工具类不可被实例化。","可以通过调用operation.opers_map.get(op.tostring())来获取对应的枚举常量。","可变参数可以被用来接受0个或者多个指定类型的参数。","可变数据也就是状态变量stoprequested，被同步方法修改，这里也就是保证stoprequested被修改后，能够被其他线程立即可见。","同样的，如果所有的方法都用到了某些数据域，就应该把他们放在这个类中。","同样重要，因此在没有认真考虑好默认的序列化形式是否合适之前，不要贸然使用默认的序列化行为。在作出决定之前，你需要从灵活性、性能和正确性多个角度对这种编码形式进行考察。一般来讲，只有当你自行设计的自定义序列化形式与默认的形式基本相同时，才能接受默认的序列化形式。选择合适的序列化方式，有哪些注意事项？","同样，junit","同步不仅可以阻止一个线程看到对象处于不一致的状态，还可以保证进入同步方法或者同步代码块的每个线程，都看到由同一个锁保护的之前所有的修改效果。","同步器：同步器能够完成线程之间的协调，最常用的有countdownlatch和semaphore，较不常用的有cyclicbarrier和exechanger。","同步方法：在实例化域值得时候，可以使用同步方法从而保证线程安全性，如：","后置条件（postcondition）","命名模式的缺点：","和objectinputstream.defaultreadobject()方法，这样就可以保证向前或者向后的兼容性；","和readobject()，因此可以在readobject和writeobject方法中实现自己的序列化逻辑。就算没有实现特定的逻辑也应该调用默认的objectoutputstream.defaultwriteobject()","因为int常量是编译时常量，被编译到使用它们的客户端中。若与枚举常量关联的int发生了变化，客户端需重新编译，否则它们的行为就不确定；","因为策略接口被用做所有具体策略实例的类型，所以我们并不需要为了导出具体策略而把具体策略类做成公有的。可以导出公有的静态域或者静态工厂方法，其类型是策略接口，具体的策略类可以是宿主类的私有嵌套类：","因此会妨碍该方法的使用；","因此，为了让period更加安全可靠，需要对构造器进行保护性拷贝，将上面这段代码改变如下这种形式：","在16条中阐述了贸然的将不是为了继承而设计的类进行继承，而实现子类化，是多么的危险，那么，在实际开发中，针对继承而设计的类怎样的处理才算是安全可靠的？","在31条说过在使用enum时最好不要企图通过ordinal()方法以获取枚举元素在枚举类中的索引顺序，然后在其他代码中依赖这种顺序，这样的代码是不安全的。比如代码中数组的索引依赖于enum的序数：","在enum类中同样可以有自己的数据域和方法。","在java1.5之前，对集合的遍历习惯用下面这种方式：","在java平台类库中所有的数值包装类都导出min_value和max_value常量。如果这些常量最好被看作是枚举类型成员，那就应该用枚举类型来导出。","在上面这个企图利用数组越界的异常从而跳出死循环。如果针对的是数组遍历的场景，这么做的目的是企图利用java异常机制，来跳过遍历中每次都需要检查是否越界来达到性能优化。但是，这种用法显然是不合理的，那么，对异常的使用应该注意哪些问题？","在上面这个例子里构造了两个类，一个是用来扩展操作的包裹类，一个是用来与现有类进行交互的转发类，可以看到，在现在这个实现中包裹类不再直接扩展set，而是扩展了他的转发类，而在转发类内部，现有set类是作为它的一个数据域存在的，转发类实现了set接口，这样它就包括了现有类的基本操作。每个转发动作都直接调用现有类的相应方法并返回相应结果。这样就将信赖于set的实现细节排除在包裹类之外。有的时候，复合和转发的结合被错误的称为\"委托(delegation)\"。从技术的角度来说，这不是委托，除非包装对象把自身传递给被包装的对象。","在任何地方均可访问到；","在优化方面，我们应该遵守两条规则：","在使用stack，list等“数据容器”的数据结构时，应该时刻关注容器中的数据元素是否有存在内存泄漏的情况，比如，下例中：","在使用反射机制的时候需要注意如下几点：","在使用异常的时候，应该坚持异常只应该被当做异常来处理，而不应该企图利用异常来达到性能优化的目的。","在使用集合时，键、值都只能使用装箱类型；","在外围类要通过readobject方法中抛出异常，即表明禁止调用者调用readobject，杜绝攻击者企图通过readobject进行伪字节流攻击和内部域盗用攻击；","在大多数情况下都应该使用for","在大多数情况下，不成熟的优化都会造成更严重的问题，在进行性能优化的时候应该着重关注于哪些方面？","在实现comparable接口时，应该遵守这些规范，特别是在做等同性测试的时候，要和equals等同性测试结果保持一致。","在实际应用中，tostring方法应该返回对象中包含的所有值得关注的信息，如果对象太大或者对象中包含的状态信息难以用字符来表达，这样做就有点不切实际了，在这种情况下tostring方法应该返回类的关键域信息；","在实际开发中，有些公共功能已有成熟的解决方案，可以采用开源的组件，利用这些开源的组件的优势在哪里？","在实际开发过程中最好要覆盖tostring方法，将类的有用信息使用tostring方法进行输出，这样就可以方便调试或者打印的时候输出","在序列化过程中，虚拟机会试图调用对象类里的writeobject()","在应用程序的执行期间，只要对象的equals方法的比较操作所用到的信息没有被修改，那么对这同一个对象调用多次，hashcode方法必须都始终如一地返回同一个整数","在所构建的对象中，有多个可选参数的话，可采用builder方式来构建对象：","在文档中描述有条件的线程安全类要特别小心，必须指明哪个调用方法需要外部同步，并且需要获得哪一把锁；","在文档中说明违反参数值限制时会抛出的异常。通常这样的异常为illegalargumentexception，indexoutofboundsexception。","在有些特定的情况下，此写法有个缺点，即如果每个枚举常量都有公共的部分处理该怎么办，如果每个枚举常量关联的方法里都有公共的部分，那不仅不美观，还违反了dry原则。这就是下面的枚举策略模式。","在枚举类型出现之前，一般都常常使用int常量或者string常量表示列举相关事物。如：","在每个类、接口、构造器、方法和域生命处都应该有详细的文档注释，那么好的文档注释有哪些元素？","在每个覆盖了equals方法的类中，也必须覆盖hashcode方法，如果不这样的话，就会违反了object.hashcode的通用约定，从而导致该类无法结合所有基于散列的集合一起正常动作，比如说hashmap，hashset，hashtable。那么，object.hashcode规范是什么？以及一个性能良好的hashcode应该怎样写？","在涉及到多线程程序时，不要使用thread的方式创建线程，应该使用executor来管理和创建线程，它最大的好处在于工作单元（线程）和任务之间的解耦。","在第39条里介绍到了为了让程序更加安全可靠，需要针对可变域在构造器和访问方法中进行保护性拷贝，例如下面的代码：","在类型安全方面，如果你想使用的是orange_navel，但是传递是apple_fuji，编译器并不能检测出错误；","在覆盖equals方法时，需要遵守的约定有：","在覆盖tostring时可以指定输出格式，这样就可以编写相应的代码来解析这种字符串表示法，产生字符串表示法，以及把字符串表示嵌入到持久的数据中。但是，将来一旦输出格式变化了，会造成更大的问题。是否指定输出格式应该权衡。","在设计api时，应该遵守一些哪些通用的规则来设计方法，以保证方法可读性更强，更安全可靠？","在设计方法api时，异常是应该着重关注的，同样地，方法的文档注释上异常条件也需要显式的说明，因此，在针对异常编写文档时，有哪些需要注意的地方？","在设计方法抛出异常的时候，应该换位思考，如果自己是调用方使用你设计的api，处理你抛出的异常应该怎样处理？如果有明确的思路，就说明这个异常抛出来是合适的。也就是说，异常是api中不可避免的，并且一旦产生，调用方能够合理的处理，就说明抛出受检异常是合适的，一定要求这两个前提条件全部成立；","在该类中私有访问；2.","在调用的时候，直接使用enum类型，在编译的时候可以直接指定类型，否则编译不通过；并且debug的时候，显示的是enum中的常量（apple_fuji这样的），可以一眼看出是否用错；最后由于枚举导出的常量域（apple_fuji等）与客户端之间是通过枚举来引用的，再增加或者重排序枚举类型中的常量后，并不需要重新编译客户端代码","在这里，指向stringlengthcomparator对象的引用可以被当作是一个指向该对象内部比较器compare的“函数指针”，可以在任意一对字符串上被调用，stringlengthcomparator实例是用于比较字符串比较操作的具体策略。对于这种具体策略类，它的所有实例在功能上是相互等价的，所以根据前面的原则，将它作成是singleton是非常合适的：","在重视性能的情况下，使用可变参数机制要小心，因为可变参数方法的每次调用都会导致进行一次数组分配和初始化，有一种折中的解决方案，假设确定某个方法大部分调用会有3个或者更少的参数，就声明该方法的5个重载，每个重载带有0至3个普通参数，当参数数目超过3个时，使用可变参数方法。","在集合和数组的遍历时，优先采用for","在需要精确结果的时候需要使用bigdecimal，bigdecimal所创建的是对象，我们不能使用传统的+、","在面对equals方法时，会有这样的疑问，什么时候该覆盖equals方法，什么时候不应该覆盖，也就是说覆盖equals方法的时机是什么？如果覆盖equals方法，那么应该写？","域不能做成final的，除非构造器初始化相关的域，如果不需要初始化相关域，那就会需要增加更多的样板代码；","域所修饰，你就必须提供一个readobject方法。它首先调用defaultreadobject，然后再把这些transi","域进行恢复为之前的初始值；同样的，在序列化过程中，被transient修饰的实例域会被省略掉","基于以上两点原因，创建泛型、参数化类型或者是类型参数的数组都是非法的。如：new","基本类型只具有具体功能值，如数值等，而装箱类型还具有非功能值null；","基本类型只有值，而装箱类型具有和它们值不同的统一性，即new","基本类型和装箱类型主要有3个主要区别：","基本类型通常要比装箱类型更节省空间和运行时间。","堆栈轨迹的用途是与源文件结合起来进行分析，它通常包含抛出该异常的确切文件和行数，以及堆栈中所有其他方法调用所在的文件和行数。因此，如果描述异常信息量过多，实际上也是冗余的，有些信息可以通过阅读源代码而获得；","增加了内存的占用，因为实例承担着属于其他风格的不相关域；","多个实现乱七八糟地挤在了单个类中，破坏了可读性；","多个程序员可以独立的扩展层次结构。并且不用访问根类的源代码就能相互操作；","大多数情况下，我们都喜欢用具体的类型来声明变量，这里有一个弊端，如果将来想将vector换成arraylist的话，可能会影响其他的代码。在声明变量是最佳的实践是什么？","大多数正常的初始化都要优于延迟初始化。如果非要进行延迟初始化的话，针对实例域采用双重检测方式，针对静态域，可以利用静态内部类的第一次访问才进行初始化的特性，使用静态内部类来完成延迟初始化。","大家一开始都会这样写的。实际开发中，有很多开发者也这样写。但是有个不足：如果需要新增加运算，譬如模运算，不仅仅需要添加枚举类型常量，还需要修改apply方法。万一忘记修改了，那就是运行时错误。将代码修改如下：","如上代码所示，可以观察到以下设计细节:","如上例代码，如果我们在声明泛型的时候使用了原生态类型的泛型，但是在添加数据元素一次添加了integer，一次添加了string，编译却能通过，但是很显然会出现运行时异常。因此，如果使用原生类型，就失掉了泛型在安全性和表述性方面的所有优势。","如上例就是一个典型的标签类，一个类通过标签域shape来实现了圆形和矩形这两个不同类型的实例。","如上这样的类绝不应该声名为public，因为一旦声名为了public，该类中所有的数据就全部暴露出来，并且无法改变它的数据表示法，也无法强加任何约束条件，当被访问的时候，无法采取任何辅助措施，这么多问题，归结原因就是因为如果类声明不当，那么可能会将整个数据域全部暴露给客户端。虽然，对于可变类来说，应该用包含私有域和仅有设置方法的类代替：","如以太阳系为例，每个行星都拥有质量和半径，可以依据这两个属性计算行星表面物体的重量。代码如下：","如何定义注解","如果一个stack先增后减，那么会弹出的对象并不会被当成垃圾回收，原因在于stack内部维持着对这些对象的过期引用（在这里是数组的原因），这样就造成了内存泄漏。因此，在弹出数据元素的时，最好是释放元素引用，如:","如果一个嵌套类需要在单个方法之外仍然可见的，或者它太长了，不适合于放在方法内部，就应该使用成员类；","如果一个类有多个关键域，那么比较这些关键域的顺序非常关键。必须从最关键的域开始,逐步进行到所有的重要域。如果某个域的比较产生了非零的结果(0代表着相等)，则整个比较操作结束，并返回该结果。如果最关键的域是相等的，则再比较下一个关键域，以此类推，如果所有域都是相等的，那么才返回0。例如下面的例子：","如果一定要重载，那么对于一对重载方法，至少要有一个对应的参数在两个重载方法中的类型“完全不同”。可以看下面这个例子：","如果上例中的成员域提供了访问方法，那么，period仍然是不安全的。如果不进行保护性拷贝的话，引用类型数据就有可能在类的外部被改变，因此影响类内部的数据结构，污染到类。针对成员域的访问方法，可做如下的保护性拷贝：","如果不能阻止或者处理来自更低层的异常，一般的做法是使用异常转译，除非低层方法碰巧可以保证它抛出的所有异常对髙层也合适才可以将异常从低层传播到高居。异常链对髙层和低层异常都提供了最佳的功能：它允许抛出适当的髙层异常，同时又能捕获底层的原因进行失败分析。","如果两个对象根据equals(object)方法比较是不相等的，那么调用这两个对象中的任意一个对象的hashcode方法，则不一定要产生不同的整数结果。","如果两个对象根据equals(object)方法比较是相等的。那么调用这两个对象中任意一个对象的hashcode方法都必须产生同样的整数结果。","如果代码中存在过期引用，很容易造成内存泄漏，甚至会导致系统崩溃，在实际编码过程中需要仔细检查代码，或者借助于heap工具去检查内存泄漏的问题。","如果你想使用string常量，虽然可以打印，但是字符串的比较是对性能有较大的影响的。另外，容易将字符串硬编码到代码之中；","如果使用类使用的是“一个可公有访问的锁对象”的话，很可能被其他线程超时地保持公有可访问锁，而造成当前线程一直无法获得锁对象，这种行为被称为“拒绝服务攻击”，为了避免这种攻击可以采用","如果具体的类没有实现标准的接口，那么禁止继承可能会给有些程序员带来不便，如果认为必须允许从这样的类继承，一种合理的办法就是确保这个类永远不会调用它的任何可覆盖的方法，并在文档中说明这一点。否则，就禁止被子类化。","如果发现要在长度不止一行的方法或构造器中使用suppresswarnings注解，可以将它移到一个局部变量的声名中。suppresswarnings注解方在return","如果声明成员类不要求访问外围实例，就要始终把static修饰符放在它的生命中，使它成为静态成员类，而不是非静态成员类。如果省略了static修饰符，则每个实例都将包含一个额外的指向外围对象的引用。保存这份引用要消耗时间和空间，并且会导致外围实例在符合垃圾回收时仍然得以保留，造成内存泄漏；","如果对象的所有者忘记显示关闭对象（如文件流，数据库session等），可使用finalize()方法作为最后的兜底，虽然这样做并不能保证终结方法能被及时的调用，但是在客户端无法通过调用显式的终结方法来正常结束操作的情况下，晚一点释放总比不释放的好。但是如果终结方法发现资源还未被终止，应该在日志中记录一条日志信息，因为这表明客户端代码中的一个bug，应该得到修复；","如果成员类的每个示例都需要一个指向外围实例的引用，就要把成员类做成非静态的；否则，就做成静态的；","如果攻击者伪造了一个字节码文件，然后来反序列化也无法成功，因为外围类的readobject方法直接抛异常！","如果数值范围没有超过9为十进制数字，使用int；如果超过9位但不超过18位数字，可以使用long；如果有可能超过18位数字，就必须使用bigdecimal。","如果整个对象图在被反序列化之后必须进行验证，就应该使用objectinputvalidation接口；","如果方法抛出的异常与它所执行的任务没有明显的联系，这种情形物会使人不知所措。当方法将低层异常在高层继续抛出的时候，往往会发生这种情况。除了使人感到困惑之外，这也让实现细节污染了更高层的api。如果高层的实现在后续的发行版本中发生了变化，它所抛出的异常也可能会跟着发生变化，从而潜在地破坏现有的客户端程序。那么，在高低层api处理异常时应该怎么做呢？","如果无法消除警告，同时又可以证明引起警告的代码是类型安全的。可以用一个@suppresswarnings(\"unchecked\")注解来禁止这条警告。suppresswarnings注解可以用任何粒度的级别中，从单独的局部变量声明到整个类都是可以的。应该始终在尽可能小的范围内使用suppresswarnings注解，永远不要在整个类上使用suppresswarnings注解，这么做很可能会掩盖了重要的警告，以更小粒度的使用该注解；","如果无法避免低层异常，次选方案是，让高层api中通过判断绕开这些异常，从而将高层方法的调用者与低层的问题隔离开来。在这种情况下，可以使用日志工具进行记录。","如果有合适的接口类型存在，那么对于参数、返回值、变量和域来说，都应该使用接口类型进行声明。这样做可以让程序变得更加灵活，如果改变接口的具体实现类，其他代码都可以继续工作。","如果期望调用者能够在适当的情况下进行恢复，则使用可受检的异常，让调用者在catch中进行捕获或者继续throws出去。常见的受检异常有","如果没有合适的接口存在，可以用类来引用对象。例如，考虑值类（string、biginteger）很少用多个实现编写，他们通常是final的，并且很少有对应的接口。使用这种值类作为参数、变量、域或者返回值类型就比较合适；","如果没有外围实例的情况下，也需要分配内部类实例，就不能使用非静态成员类，因为非静态成员类的实例必须要有一个外围实例。","如果程序员错拼test或将test注解应用于程序元素而不是方法声明，则该程序将无法编译。","如果类中覆盖了父类中的方法，那么子类中的访问级别不得低于父类中的访问级别，这样就可以保证在任何使用到父类实例的地方可以继续使用子类。如果一个类实现了某接口，那么在类中所有的接口的方法都必须是public的；","如果类具有从客户端得到或者返回到客户端的可变组件，类就必须保护性地拷贝这些组件。如果拷贝的成本受到限制，并且类信任它的客户端不会不恰当地修改这些组件，就可以在文档中进行说明。","如果类的数据域可在它所在的包外部进行访问，就提供访问方法，这样可以保留该类内部表示的灵活性。如果公有类暴露了它的数据域，要想将来想改变公有类的内部数据接口，那是不太可能的事情了，因为使用公有类的数据域已经遍布整个系统中了；","如果类的构造器或者静态工厂中具有多个参数时，设计这种类时，builder模式就是种不错的选择，特别是当大多数参数都是可选的时候，与使用传统的重叠构造器模式项目，使用builder模式代码可读性更强，也比javabean的方式更加安全。","如果类被序列化了，不论是采用默认的序列化方式还是采用自定义的序列化方式，或者在readobject方法中进行所谓的处理，这个类都将不会是单例的了。那么针对这种要满足可序列化的单例应该怎样实现？","如果被序列化的类没有显示的指定serialversionuid标识（序列版本uid），系统会自动根据这个类来调用一个复杂的运算过程生成该标识。此标识是根据类名称、接口名称、所有公有和受保护的成员名称生成的一个标志号。如果改变了类的内部结构，如添加了一个方法，自动产生的序列版本uid也会发生变化。因此，如果没有显式的声明一个版本号的话，兼容性就会遭到破坏，在运行时导致invalidclassexception。","如果要想使一个api真正可用，就必须为其编写文档。传统意义上的api文档是手动生成的，所以保持文档与代码同步是一件很繁琐的事情。java环境提供了一种被称为javadoc的实用工具来完成文档注释的编写；","如果覆盖了equals方法一定要覆盖hashcode方法，否则会造成基于散列值得集合使用出现问题，如hashmap或者hashset等；","如果该域是boolean类型，则计算(f","如果该域是byte、char、short或者int类型，则计算(int)f","如果该域是double类型，则计算double.doubletolongbits(f)，然后按照步","如果该域是float类型，则计算float.floattointbits(f)。","如果该域是long类型，则计算(int)(f^(f>>>32))。","如果该域是一个对象引用，并且该类的equals方法通过递归地调用equals方式来比较这个域，则同样为这个域递归地调用hashcode。如果需要更复杂的比较，则为这个域计算一个范式，然后针对这个范式调用hashcode。如果这个域的值为null，则返回0（不绝对，但通常是0）。","如果该域是一个数组，则要把每个元素当做单独的域来处理。也就是说，递归地应用上面的规则，对每个重要的元素计算一个散列码。然后再用2中的方法组合起来。如果数组中的每个元素都很重要，则可以用arrays.hashcode方法。","如果还有其他的方法行为不依赖于某个标签的值，就把这样的方法放到这个类中；","如果这些常量与某些现有的类或者接口紧密相关，就应该把这些常量添加到这个类或者接口中，注意，这里说添加到接口中并不是指的常量接口。","如果这条语句出现在循环中就会在每一次循环时生成一个新的string实例，而这些string实例的功能完成一样，这会造成资源的巨大浪费，改进版本如下","始终要单独地声明受检异常，并且使用javadoc的@throws标记,准确地记录下抛出每个异常的条件。如果方法抛出多个异常类，不要使用它抛出异常类的父类，永远不要声明方法”throwsexception”，或更糟糕的声明它”throw","字符串不适合代替其他值的类型：当原始类型为int、float等其他类型时，就不要使用字符串替代；","字符串不适合代替枚举类型：枚举类型比字符串更适合用来表示枚举的常量；","字符串不适合代替聚集类型：如果一个实体有多个组件，用字符串来表示这个实体通常不恰当，string","字符串不适合作为授权键：有时候，字符串被用于对某种功能进行授权访问，考虑设计一个提供线程局部变量的机制，这个机制提供的变量在每个线程中都有自己的值，示例代码：","字符串在实际开发中被高频使用，同样也存在着被滥用的情况，那么，字符串不应该使用在哪些情形下呢？","它被称为标记注解，因为它没有参数，只是“标记”注解元素。","实例域决不能是公有的，如何非final实例域指向了可变对象，并且该实例域为public的话，那么包含该实例域的类就是线程不安全的；","实现singleton最安全可靠的方式，可以编写包含单个元素的枚举元素：","实现可序列化最简单安全的方式是采用枚举的形式，应该尽可能采用这种方式。如果采用readresolve实现的话，呀确保该类的所有实例域都为基本类型，或者是transient的。","实际上，上例是想通过枚举值作为数组的索引，是枚举到数组值之间的映射关系，枚举充当着“索引键”的关系，在这样的使用场景下，可以采用enummap，该类专门用于枚举键，更加安全可靠。","对于java的字符串连接操作符（+）将字符串进行拼接，在产生一行输出是合适的。如果在循环中或者大量使用拼接符这是十分不合适的，由于字符串不可变，每次拼接都需要拷贝，性能极差。那么，在频繁的拼接字符串时应该怎么解决？","对于专门为了继承而设计并且具有良好文档说明的类而言，该类的文档必须精确地描述覆盖每个方法所带来的影响。该类必须有文档说明它可覆盖的方法的自用性。对于每个公有的或受保护的方法或者构造器，它的文档必须指明该方法或者构造器调用了哪些可覆盖的方法，是以什么顺序调用的，每个调用的结果又是如何影响后续的处理过程的。更一般的，类必须在文档中说明，在哪些情况下它会调用可覆盖的方法。","对于任何约束条件，如果检查失败，则抛出一个invalidobjectexception异常。这些检查动作应该跟在所有的保护性拷贝之后；","对于公有的方法，要用javadoc的@throws标签","对于公有类有一个约定，公有类永远都不应该暴露可变的域。","对于同时提供了静态工厂方法和构造器的不可变类，通常可以使用静态工厂方法而不是构造器，原因在于构造器在每次被调用的时候都会创造一个新的对象，而静态工厂方法则不要求这样做，完成可以返回同一个对象的引用。例如静态工厂方法boolean.valueof(string)总是优先于boolean(string)；","对于对象中的每个关键域f(指equals方法中涉及的每个域)，完成以下步骤：","对于对象引用域必须保持为私有的，要保护性地拷贝这些域中的每个对象。不可变类的可变组件就属于这一类别；","对于方法如果返回为null，则调用方每一次都要去判断是否为null，从而解决nullpointexception。因此，方法返回类型是数组或者集合时，特殊情况不应该返回null，而是应该返回一个空的集合或者数组。","对于该类中的每个“关键”域，检查参数中的域是否与该对象中对应的域相匹配。对于不是double和float的基本类型，可以使用==进行比较，对于引用类型，可以递归调用equals方法，对于float域，可以使用float.compare方法，对于double域，可以使用double.compare方法；","对于返回boolean值的方法，其名词往往以单词“is”开头，后面跟名词或者名词短语或者具有形容词功能的单词和短语，例如isdigit、isprobaleprime、","对于那些并非为了安全地进行子类化而设计和编写文档的类，要禁止子类化。有两种办法可以禁止子类化：第一，把这个类声名为final。第二、把所有的构造器都声名为private，或者包级私有并增加一些静态工厂来替代构造器。","对于顶层类中声名的每个抽象方法，都确保有一个实现。这样就杜绝了因为遗漏switch","对数组的遍历，习惯采用下面这种方式：","对称性：对于任何非null的引用值x，y，当且仅当y.equals(x)返回true时，x.equals(y)也应该返回true；","对类成员域进行保护性拷贝","对类构造器进行保护性拷贝","将上例由enummap改写","将上例进行修改：","将上面的标签类figure转换成类层次结构：","将对象与指定的对象进行比较。当该对象小于、等于或者大于指定对象的时候，分别返回一个负整数，零或者正整数，如果由于指定对象的类型而无法与该对象进行比较，则抛出classcastexception。在下面的说明中，符号sgn(表达式)表示数学中的signum函数，它根据表达式(expression)的值为负值、零和正值，分别返回","将局部变量的作用域最小化，可以增强代码的可读性和可维护性，并降低出错的可能性。那么，常用的将局部变量作用域最小化的方式有哪几个方面？","就使用","尽可能使每个类或者成员不被外界访问，应该使用与你正在编写的软件的对应功能相一致的、尽可能最小的访问级别；对于成员（域、方法、嵌套类或者嵌套接口）有四种访问级别：1.","尽管使用了volatile，但是由于++运算符不是原子的，因此在多线程的时候会出错。++运算符执行两项操作：1、读取值；2、写回新值（相当于原值+1）。如果第二个线程在第一个线程读取旧值和写会新值的时候读取了这个域，就会产生错误，他们会得到相同的serialnumber。这个时候就需要使用synchorized来使得线程间互斥访问，从而保证原子性。","尽管异常转译与直接在高层将底层的异常继续抛出相比有所改进，但是它也不能被滥用。如有可能，处理来自低层异常的最好做法是，应该极力避免底层异常的发生。有时候，可以在给低层传递参数之前，检査更高层方法的参数的有效性，从而避免低层方法抛出异常；","局部类","局部类是四种嵌套类中用的最少的类。在任何“可以声明局部变量”的地方，都可以声明局部类，并且局部类也遵守同样的作用域规则。局部类与其他三种嵌套类中的每一种都有一些共同的属性。与成员类一样，局部类有名字，可以被重复使用。与匿名类一样，只有当局部类实在非静态环境中定义的时候，才有外围实例，它们也不能包含静态成员。与匿名类一样，它们必须简短以便不会影响到可读性。","嵌套类（nest","常用的实现singleton有两种方式，都是将构造器私有，然后通过导出public的静态域。一种是通过public的静态final成员变量实现：","常量域：包括一个或多个大写的单词，中间用下划线隔开，例如","常量接口是对接口的一种不良使用，主要有这样两个原因：","平行迭代：如果需要并行的遍历多个集合，就需要显式的控制迭代器和索引变量，以便所有的迭代器和索引能够同步前移。","并且需要注意的是，保护性拷贝在参数有效性检查的前面，并且不能使用clone方法进行拷贝对象。","并发程序要比单线程程序的设计更加复杂，并且失败难以重现。但是又无法避免采用多线程，因为采用多线程并发是能够从多核计算机获得最佳性能的一个有效途径。在并发时，如果涉及到可变数据的时候，就是我们需要着重去思考的地方，在面对可变数据的并发访问的时候，有哪些方式可以保证线程安全性？","并发集合：并发集合针对标准的集合接口（如list、queue和map）做了进一步的处理，提供了高性能的并发实现，常用的有courrenthashmap，它就扩展了map接口并保证了线程安全。另外，blockingqueue实现了可阻塞的操作，即当队列为空的时候，会阻塞“取数据”线程，直至队列不为空位置，当队列满时，会阻塞“插入数据”的线程，直至队列未满。blockingqueue被广泛的应用在“生产者","并将value和offset设置为final。","序列化外围类时，通过这个方法，最后其实是序列化了一个内部的代理类对象！","序列化过程是将“一个对象编码成一个字节流”，相反的处理过程被称之为“反序列化过程”。当一个对象被序列化后，它的编码就可以从一台虚拟机传至另一个台虚拟机，可以被保存在磁盘上，方便以后反序列化使用。长期以来有一个误解，为了实现序列化，只需要实现serializable接口即可，事实上这种方式存在诸多危害，贪图这种序列化方式的方便，会带来长期维护的成本。关于serilizable有哪些注意事项？","应该比较简短，通常不超过8个字符。鼓励使用有意义的缩写形式，例如，使用","延迟初始化（lazi","异常应该只用于异常处理的情况，永远不应该应用到控制流中，","异常机制的设计初衷是用于不正常的情形，所以jvm实现不会对其优化，所以企图用异常来达到性能优化，是不可行的；","异常的细节消息不应该与“用户层次的错误消息”混为一谈，后者对于最终用户而言必须是可理解的。与用户层次的错误消息不同，异常的字符串表示法主要是让程序员或者域服务人员用来分析失败的原因。","强烈建议(x.compareto(y)","当一个具体策略只被使用一次时，通常使用匿名类来声名和实例化这个具体策略；","当一个具体策略是设计用来重复使用的时候，它的类通常就要被实现为私有的静态成员类，并通过公有的静态final域或静态工厂方法导出，其类型为策略接口。","当一个对象被一个线程修改的时候，可以阻止另一个线程观察到对象内部不一致的状态；","当一个类的实例或者静态方法被并发使用时，这个类行为的并发情况。","当不确定参数个数的时候可以采用可变参数，那么，在使用可变参数时有哪些需要注意的？","当传入可变数组value[]时，进行深拷贝而不是直接将value[]复制给内部变量.","当你决定将一个类设计成可序列化的时候，就应该详细考虑应该采用什么样的序列化形式。只有当默认的序列化形式能够合理的描述对象的逻辑状态时，才能使用默认的序列化形式。否则就要设计一个自定义的序列化形式，通过它合理的描述出对象的状态。","当可以使用注解代替时，没有理由使用命名模式。实际上java已经提供了很多预定义的注解类型，在实际项目中应该尽可能多使用注解。另外，请考虑使用ide或静态分析工具提供的注解。","当可以选择的时候，基本类型要优先于装箱类型。基本类型更加方便简单，性能更好。如果没办法避免使用装箱类型时，注意类型间同一性的比较，以及nullpointexception。","当实例对象插入到集合中时会进行类型判断，可以将类型不匹配问题在编译时期就可以知道，而不至于等到运行时出现classcastexception；2.","当异常被捕获的时候，如果有关键的异常信息的时候，可以很方便的进行排错，添加关键的异常信息是很有必要的。","当数组元素为int基本类型数据时，arrays.aslist方法将int类型的数组的引用集中到单个元素数组中,并封装成list。","当有多个线程运行时，由线程调度器决定哪些线程将会运行，分配cpu时间片。但是，在大多数系统采用的调度策略都是不太相同的，因此，任何依赖于线程调度器来达到程序性能和正确性的并发程序都是不安全和不可移植的。那么，在编写可移植的，健壮性强的并发程序有哪些好的方法？","当程序不正确的时候，是因为线程无法获得足够的时间片的话，不要企图使用thread.yield的方式，让其他线程让出时间片，来满足自身的需求。这是因为，不同的jvm上对thread.yield语义的是不相同的，这样就失去了可移值性。另外，在测试期间，使用thread.yield人为地来增加线程并发性，应该由thread.sleep(1)来代替thread.yield；","当程序由于未被捕获的异常而失败的时候，系统会自动地打印出该异常的堆栈轨迹。在堆栈轨迹中包含该异常的字符串表示法（string","当类实现接口时，接口就充当可以引用这个类的实例类型。因此，类实现了接口，就表明客户端对这个类的实例可以实施某些动作。为了任何其他目的而定义的接口是不恰当的。那么，在实际开发中存在哪些定义接口不恰当的方式？","当编写完equals方法时，应该问自己三个问题：它是否满足对称性、传递性、以及一致性；","当诸如工具类这种类，被实例化是没有多大意义的，**应该强制将构造器私有化，以强化类的不可实例化属性。","当通过子类继承父类并不是代码重用的最好手段，有这样的缺点：1.","当需要将多个操作（或变量）进行组合时，可以使用enumset来代替使用int枚举进行位域操作的方式。enumset类集位域的简洁和性能的优势，以及枚举类型的所有优点与一身。实际上enumset也有个缺点,即它无法创建不可变的enumset(java1.6为止没有解决)。同时，可以用collections.unmodifiable将enumset封装起来,但是间接性和性能会受到影响。","当非静态成员类的实例被创建的时候，它和外围实例之间的关联关系也随之建立起来；而且，这种关联关系以后也不能被修改。通常情况下，当在外围类的某个实例方法的内部调用了非静态成员类的构造器时，这种管理就自动建立起来。使用表达式enclosinginstance.new","当面对equals方法时，应该根据覆盖equals方法的时机去判断是否需要覆盖equals方法，如果需要覆盖equals方法时，要严格遵守equals方法的规范。","很多计算上的过失都被归咎于效率（没有必要达到的效率），而不是任何其他的原因，——甚至包括盲目地做傻事。","必须确保x.compareto(y)","必须确保所有的x和y都满足sgn(x.compareto(y))","必须确保这个比较关系是可传递的：(x.compareto(y)","性能损失：反射方法调用比普通方法调用要慢很多。","总之，使用原生态类型会在运行时导致异常，因此不要再新代码中使用。但就有人问既然这么不推荐使用，为什么还要存在原生态类型呢？原生态类型只是为了与引入泛型之前的遗留代码进行兼容和互换而提供的；","总之，千万不要将序列化就等同于简单的实现serilizable接口，应该要考虑着重考虑seriablizable的应用场景和上面所述的这些注意事项。","总之，和其他规则一样，尽管可变参数是一个很方便的方式，但是它们不应该被过度滥用。除非有必要，尽量不要使用这种方法。","总之，在大多数情况下不需要重复造轮子，如果你要做的事情看起来十分常见的，就可以考虑去使用开源的组件，通常这些由社区维护的组件在性能上是有保障的，并且会持续迭代更新。","总之，在设计类和成员时，应该尽可能的降低可访问性，除了公有静态final域的特殊情形之外，公有类都不应该包含公有域，并且要确保公有的静态final域所引用的对象是不可变的。","总之，如果可以使用更加合适的数据类型，或者可以编写更加适当的数据类型，就应该避免使用字符串来表示对象。如果使用不当，字符串会比其他类型更加笨拙、速度更慢。字符串经常被错误的用来替代基本类型、枚举类型。","总之，对于任何需要精确答案的计算任务，请不要使用float或者double，如果你想让系统来记录十进制小数点，并且不介意因为不使用基本类型带来的不便，就可以使用bigdecimal。","总之，非受检警告很重要，不要忽略它们。每一条警告都表示可能在运行时抛出classcastexception异常。要尽最大的努力去消除这些警告。如果无法消除但是可以证明引起警告的代码是安全的，就可以在尽可能小的范围中，使用＠suppresswarnings(\"unchecked\")注解来禁止警告，但是要把禁止的原因记录下来。","总结","总而言之，不要费力去编写快速的程序——应该努力编写好的程序，速度自然会随之而来。在设计系统的时候，特别是在设计api、线路层协议和永久数据格式的时候，一定要考虑性能的因素。当构建完系统之后，要测量它的性能。如果它足够快，你的任务就完成了。如果不够快，则可以在性能剖析器的帮助下，找到问题的根源，然后设法优化系统中相关的部分。第一个步骤是检查所选择的算法：再多的底层优化也无法弥补算法的选择不当。必要时重复这个过程，在每次改变之后都要测量性能，直到满意为止。","总而言之，每当你编写readobject方法的时候，都要这样想：你正在编写一个公有的构造器，无论给它传递什么样的字节流，它都必须产生一个有效的实例。下面这些经验，有助于编写出更加健壮的readobject方法：","我们希望打出的是set，list，unknown","我们通常将包含静态方法和静态域的类作为工具类。比如说可以用这种类来组织某种基本类型的相关方法（java.lang.math），也可以通过java.util.collections方式把实现特定接口的对象上的静态方法组织起来，最后还能利用这种类把final类上的方法组织起来，以取代扩展该类的做法。","或enum声明","所有的域都成为私有的，这样可以防止客户端获得访问被域引用的可变对象的权限，并防止客户端修改这些对象；","所有的域都是final的；","所谓位域是指利用就是用int枚举模式，将2的不同倍数赋予每个常量，这样就可以通过位操作将多个常量进行组合来表达具体的业务意义，比如下面的代码实例：","所谓后置条件是指在调用成功完成之后，哪些条件必须要满足；","执行反射访问的方法代码很冗长：由于使用反射，会有很多的exception需要tri","执行某个动作方法通常用动词或者动词短语来命名，例如append和drawimage；","找不到类或接口所产生的异常；","把代码放在tri","把某个非零的常数值，比如说17保存在一个名为result的int类型的变量中。","把标准的命名规范当做是一种内在的机制看待，按照规范命名，不仅会让代码的可读性更强，而且会减少一些不必要的错误。","按照下面的公式，把步骤2.a计算得到的散列码c合并到result中。","按照预想的会打印输出3，但实际上打印输出6。这是因为，addall()方法内部实现调用了add()方法，因此总共的次数就是3+3=6。这种情况就是父类方法中”自用性“导致的。那么，针对由继承带来的问题应该如何解决？","接口只适用被用来定义类型，不应该被用来导出常量。","提供一个只有必要参数的构造器，第二个构造器有一个可选参数，第三个构造器有两个可选参数，依次类推，直到最后一个构造器包含所有的可选参数。","数据类型没有提供任何关于其风格的线索；","数组和泛型化数组的主要区别有：","数组和泛型化的列表在实际使用中经常会被用来装载数据元素，但是不清楚数组和泛型化list之间的区别，经常会造成数组和list的混用；","数组和泛型有着非常不同的类型规则。数组是协变且可具体化的，泛型是不可变的且是可被擦除的。因此，数组提供了运行时的类型安全，但是没有编译时的类型安全，反之，泛型也一样，一般来说，数组和泛型不能很好的混合使用，如果发现自己将它们混合起来使用，并且得到了编译时错误或警告，那么就要考虑用列表代替数组。","数组是具体化的(reified)，数组在运行时才会约束数据类型是否匹配。泛型则是通过擦除(erasure)来实现，因此泛型只在编译时强化它们的类型信息，并在运行时丢弃（或者擦除）它们的元素类型约束。类型擦除主要是为了兼容之前没有泛型特性的代码。","数组是协变的而泛型是不可变的，协变的意思是如果sub为super的子类型，那么数组类型sub[]就是super[]的子类型，不可变的意思是对于任意两个不同的类型type1和type2，list既不是list的子类型，也不是list的超类型。可以看下面这个例子：","数组是协变的，因此编译可以通过，但是会出现运行时异常","数组索引顺序与枚举元素的序数强依赖","文字拼写错误导致失败，测试方法没有执行，也没有报错。例如，假设意外地命名了测试方法tsetsafetyoverride而不是testsafetyoverride。","文档注释的三个部分：","方法和域的名称","方法和域的名称与类和接口的名称一样，都遵守相同的字面惯例，只不过方法或者域的名称的第一个字母应该小写，例如remove，ensurecapacity。","方法将不会如预期执行；","方法的文档注释应该简洁的描述出它和客户端之间的约定。这个约定应该说明这个方法做了什么，而不是说明它是如何完成这项工作的。文档注释应该列举如下内容：","无条件的线程安全（uncondition","无法确保它们只用于相应的程序元素上，","无法给标签类添加风格，除非可以修改它的源文件，如果一定要添加风格，就必须记得给每个条件语句都添加一个条件，否则类就会在运行时失败；","无论你选择了哪种序列化形式，都要为自己编写的每个可序列化的类声明一个显式的序列版本uid。这样可以避免序列版本uid成为潜在的不兼容根源，同时也会带来小小的性能好处，因为不需要去算序列版本uid。","无限制通配符","时，如果要进行反序列化，这些域字段都将被初始化为其类型默认值，如对象引用域被置为null，数值基本域的默认值为0，boolean域的默认值为false。如果这些值不能被任何transi","是个参数化类型，所以可以包含任何对象类型的一个集合；set","是原生态类型list的一个子类型，而不是参数化类型list的子类型。因此，如果使用像list这样的原生态类型，就会丢失类型安全性，但是如果使用像list这样的参数化类型，则不会丢失类型安全性。例如下例代码：","更一般地说，注解不会改变注解代码的语义，但是可以将反射和注解结合起来，发挥更强大的作用。","更容易引发bug和安全漏洞：一般对象是由构造器创建的，而序列化也是一种对象创建机制，反序列化也可以构造对象。由于反序列化机制中没有显式的构造器，反序列化要确保：由真正的构造器建立的约束关系，并且不允许攻击者访问正在构造过程中的对象的内部信息。依靠默认的反序列化机制，很容易使对象的约束关系遭到破坏，以及遭受到非法访问。","更高层的实现应该捕获低层的异常，同时抛出可以按照高层抽象进行解释的异常。这种做法被称为异常转译（exceptiontranslation)，如下所示：","最好不要用序数来索引数组","最好的方式是，保证可运行的线程尽可能少，或不明显高于处理器的数量。如果，可运行的线程足够少，对线程调度器而言就不需要“纠结”为哪个线程分配时间片，只需要让多核处理器处理这些线程就好了。从侧面来说，就降低了对线程调度器的调度策略的依赖。那么，保证尽可能少的线程数唯一的方法就是，让每个线程都做有意义任务，从整体而言，就会降低总线程的个数；","有一个很重要的原则，异常的细节消息应该清晰的描述出异常，便于以后分析。为了清晰的描述异常，异常的细节信息应该包含所有“对该异常有贡献”的参数和域的值。例如，indexoutofboundsexception异常的细节消息应该包含下界、上界以及没有落在界内的下标值。该细节消息提供了许多关于失败的信息。这三个值中任何一个或者全部都有可能是错的。实标的下标值可能小于下界或等于上界（“越界错误”），或者它可能是个无效值，太小或太大。下界也有可能大于上界（严重违反内部约束条件的一种情况）。每一种情形都代表了不同的问题，如果程序员知道应该去查找哪种错误，就可以极大地加速排错过程；为了确保在异常的细节消息中包含足够的能捕获失败的信息，一种办法是在异常的构造器中引入这些信息。","有三条与优化有关的格言是每个人都应该知道的：","有些语言支持函数指针、代理、lambda表达式，或者支持类似的机制，允许程序把”调用特殊函数的能力”储存起来并传递这种能力。最常用的例子就是比较函数，通过传入不同的比较策略会得到不同的比较结果，这也正是策略模式的一个例子。可是java没有提供函数指针。","有时候会使用枚举中的值来作为逻辑条件来分发至不同的方法，如采用枚举来写加、减、乘、除的运算。代码如下：","有时候会有人认为：null返回值比零长度数组更好，因为它避免了分配数组所需要的开销。这种观点是站不住脚的，原因有两点。第一这个级别上担心性能问题是不明智的，除非分析表明这个方法正是造成性能问题的真正源头。第二每次都返回同一个零长度数组有可能的，因为零长度数组是不可变的，而不可变的对象有可能被自由的共享。","有时候通过一个标签域，让一个类实现多种风格的类的实例，这种类称之为标签类。","有条件的线程安全（condition","有这样一个例子","有这样一个反例：","有这样几点需要注意：","有这样几种错误的说法：","有这样的反例：","本地方法不是安全的，并且依赖于平台的具体实现，编写的方法不再是可自由移植的；","极少数的情况会需要使用本地方法来提高性能，如果必须要使用本地方法来访问底层资源，需要全面的进行测试。**使用本地方法来提高性能的做法是不被建议使用的。","枚举策略模式","枚举类有一个ordinal方法，用来表示枚举值在类型中的索引位置，这个方法看起来很美好，但是真的方便维护吗？","标签类很少有适用的时候。当想要编写一个包含显示标签域的类时，应该考虑一下，这个标签是否可以被取消，是否可以用类层次来代替。当遇到一个包含标签域的现有类时，就要考虑一下将它重构到一个层次结构中去。","标签类过于冗长、容易出错，并且效率低下。","模式。在jvm的优化下，这种方式不仅可以达到延迟初始化的效果，也能保证线程安全。示例代码为：","此时，前面的具体策略类声名如下：","每个基本类型都有一个对应的引用类型，称为装箱基本类型（box","每个泛型都定义一个原生态类型，即不带任何实际类型参数的泛型名称，如list对应的原生态类型是list。","每个类型的实现都配有自己的类，这些类都没有受到不相关域的拖累。所有的域都是final的。编译器确保每个类的构造器都初始化它的数据域；","每个类都应该利用严谨的说明或者线程安全注解，清楚地在文档中说明它的线程安全属性。有条件的线程安全类，应该说明哪些方法需要同步访问，以及获得哪把锁。无条件的线程安全类可以采用私有锁对象来防止“拒绝服务攻击”。涉及到线程安全的问题，应该严格按照规范编写文档。","每个组成部分通常都应该由一个单词或者一个缩写词组成；","每当写readobject或者writeobject方法的时候，就应该考虑使用序列化代理模式。要想稳健地将带有重要约束条件的对象序列化时，这种模式可能是最容易的方法。","每当编写方法或者构造器时，如果它允许由客户端提供对象进入到类的内部数据结构时，就需要考虑，客户端提供的对象是否有可能是可变的。如果是，就要考虑能否忍受对象可变时，对类的内部的数据结构发生改变。如果不能，则要在构造器或者方法上对外部对象进行保护性拷贝，让拷贝后的对象进入到类，而不是原始的可变的对象。例如，如果使用外部的对象作为set的元素或者作为map的key，就应该意识到，这个对象在插入之后再被修改，相应的set或者map就会遭到破坏。","每当编写方法或者构造器的时候，应该考虑它的参数有哪些限制，应该把这些限制写在文档中，并且在这个方法体的开头处，通过显示的检查来实施这些限制。养成这样的习惯是非常重要的。","每次新增加运算种类，都需要重写apply方法，这样就不会有遗漏修改。","每种类型都有一种相关的独立的数据类型，就是相应的子类类型，允许程序员指明变量的类型，限制变量，并将参数输入到特殊的类型；","没有便利方法将int常量翻译成可打印的字符串。这里的意思应该是比如你想调用的是orange_navel，debug的时候显示的是0，但你不能确定是apple_fuji还是orange_navel；","没有提供将参数值与程序元素关联起来的好方法。","没有返回值","泛型指声明中具有一个或者多个类型参数的类或者接口。每种泛型定义一组参数化的类型，构成格式为：类或者接口的名称，接着用尖括号<>把实际类型参数列表括起来。例如list，是一个参数化的类型，表示元素类型为string的列表，（string是与形式类型参数e相对应的实际类型参数）。","泛型的优势在于：1.","注意：保护性拷贝在参数有效性检查之前，并且参数有效性检查针对的是已拷贝的对象，而非是原始对象。","注意：如果基本类型和装箱类型混合使用，装箱类型会拆箱为基本类型，这时，如果装箱类型为null，就会容易报nullpointexception。","注解很好地解决了由命名模式带来的所有这些问题，实际上junit4也开始采用注解的方式代替了以往的命名模式。","注解类型声明上的这种注解称为元注解。","消费者”中；","消费者”使用wait和notify的方式去实现，代码就很难维护，如果使用可阻塞操作的blockingqueue代码更加简洁，逻辑也更加清晰。","添加文档注释规范：","父类方法中的”自用性“问题，导致的子类方法逻辑出错，比如统计hashset自创建以来插入了多少个元素，需要覆盖add()方法和addall()方法：","现在要对这个实例域进行延迟初始化，有这样几种方式：","用泛型编程的时候，会遇到许多的编译器警告：非受检强制转化警告(uncheck","由于反序列化也可以作为一种构造对象的方式，但是往往因为这种利用语言之外的机制来创建，而不是普通的构造器，就容易遭受攻击。在反序列化时，实例的创建是由readobject方法来完成的。由于这是一个不同于构造函数的创建类实例的通道，因此在构造函数中的状态约束条件在readobjetc中也得一条不落下的实现。而且readobject的出现，让伪字节流攻击和内部域的盗用攻击成为可能。伪字节流攻击就是伪造一个字节流，通过readobject读取，内部域的盗用攻击是指用一个外部类包含该类，用外部类的字段去指向该类的可变对象。那么应该使用哪种方式，能够极大的减少风险？","由于受检异常，需要调用方必须做出处理，因此，在设计api的时候就需要着重去考虑所抛出的受检异常，是否真的是合理的，要站在调用方的角度去考虑。","由于并发程序很容易出现线程安全的问题，并且线程的管理也是件很复杂的事情，所以当创建一个线程时，不要通过thread的方式手动创建，可以使用executor框架进行管理。executor的优点是什么？","由于该方法要求参数至少有1个，但是可变参数可以接受的是0个或者多个指定类型的参数，因此需要判断当前的参数args的长度是否为0，最终的结果是将这种检验放到了运行时而不是编译时。针对这种情况，做这样的调整：","由于通过方法入参要求了必须传入一个参数defaultparam，因此就少了参数个数的判断，方法变得优雅。","由于集合已经知道装载的是哪种类型的实例对象，因此从集合中取出对象时就无需再进行转换；","的无限制通配符类型为","目前线程等待执行，另一线程中断目前线程所产生的异常。","直接上例子来分析：","直接实现serializable接口有如下这些缺点：","相关测试负担加重：当一个可序列化的类被修改后，需要检查“在新版中序列化一个实例，在旧版本中反序列化”及“在旧版本中序列化一个实例，在新版本反序列化”是否正常，当发布版本增多时，这种测试量与“可序列化的类的数量和发行版本号”的乘积成正比。","看了上面的代码，我觉得大家都不会这样写吧。其实细想一下，最主要的不同就是计算加班时间的工资方式不同，也就是分工作日和双休日的。继续修改：","确保对于任何可变组件的互斥性访问：如果类具有指向可变对象的域，则必须确保客户端无法获得指向这些对象的引用；","示例","示例代码为：","示例：当方法需要1个或者多个参数的方法时，直接使用可变参数就会变得不优雅：","私有锁对象，例如：","私有静态成员类的一种常见用法用来代表外围类所代表的对象的组件。例如，考虑一个map实例，他把键和值关联起来。许多map实现的内部都有一个entry对象，对应于map中的每个键值对。虽然每个entry都与一个map关联，但是entry上的方法并不需要访问该map。因此，使用非静态成员来表示entry是很浪费的：private修饰的静态成员类是最佳的选择。如果不小心漏掉了entry声明中的static修饰符，该map依然可以工作，但是每个entry中将会包含一个指向该map的引用，这样就浪费了空间和时间。","程序更难调试，进入和退出本地方法都需要巨大性能消耗，如果仅仅是实现简单的逻辑，使用本地方法就是得不偿失的；","第一部分是简述。文档中，对于属性和方法都是先有一个列表，然后才在后面一个一个的详细的说明；","第三部分是特殊说明部分。这部分包括版本说明、参数说明、返回值说明等。","第二种合理用途与对象的本地对等体(natvi","第二部分是详细说明部分。该部分对属性或者方法进行详细的说明，在格式上没有什么特殊的要求，可以包含若干个点号；","等待任务执行完成的方式多样：当前线程可以等待提交到executor中的线程集合全部执行完成（invokeall()或invokeany()）,也可以优雅的等待结束（awaittermination()），也可以在任务完成时逐个获取这些任务的结果（利用executorcompletionservice）等等；","答案","简而言之，共有四种不同的嵌套类，每一种都有自己的用途。","简而言之，继承的功能非常强大，但是也存在诸多问题，因为它违反了封装原则。只有当子类和超类之间确实存在子类型的关系时，使用继承才是恰当的。即使如此，如果子类和超类处在不同的包中，并且超类并不是为了继承而设计的，那么继承将会导致脆弱性。为了避免这种情况，可以使用复合和转发机制来代替继承，尤其是当存在适当的接口可以实现包装类的时候。包装类不仅比子类更加健壮，而且功能也更强大","类和接口的命名，包括枚举和注解类型的名称，都应该包括一个或者多个单词没个单词都首字母大写；","类在内部使用某些常量，纯粹是实现细节，实现常量接口，会导致把这样的实现细节泄露到该类的导出api中，因为接口中所有的域都是及方法public的。","类型参数名称通常由单个字母组成。这个字母通常是以下五种类型之一；","类定义不明确所产生的异常；","类实现常量接口，这对于这个类的用户来讲并没有实际的价值。实际上，这样做返回会让他们感到更糊涂，这还代表了一种承诺：如果在将来的发行版本中，这个类被修改了，它不再需要使用这些常量了，依然必须实现这个接口，以确保二进制兼容性。如果非final类实现了常量接口，它的所有子类的命名空间都受到了污染。java平台类库中存在几个常量å接口，如java.io.objectstreamconstants，这些接口都是反面典型，不值得效仿。","类层次的另一个好处在于，它们可以用来反映类型之间本质上的层次关系。有助于增强灵活性，并进行更好的编译时类型检查。","类或者方法的线程安全性（thread","类是私有的或是包级私有的，可以确定它的equals方法永远不会被调用。","类的内部成员域为引用类型数据，而非是基本类型数据时，就要在类构造器和成员域的访问方法上考虑对这些内部成员域进行保护，以防止外界条件破坏了这种约束，对实例对象的状态发生改变。那么，对类的成员域为引用类型数据时，应该怎样处理？","类的每个实例本质上都是唯一的。对于代表活动实体而不是值（value）的类来说确实如此，例如thread。object提供的equals实现对于这些类来说是正确的行为；","线程和执行间的解耦：使用executor最大的好处在于将线程执行机制和任务解耦开，之前的thread类既充当了工作单元又是执行机制，更好管理和使用起来更加安全可靠。","线程对立的（thread","线程的安全性级别：","线程组并没有提供太多有用的功能，而且它们提供的许多功能还都是有缺陷的。当管理线程或处理线程组逻辑时，应该考虑使用executor。","经过instanceof类型检查之后把参数转换成正确的类型；","结束时间：\"","结论","绝大多数方法和构造器对于传递给他们的参数值都会有某些限制。例如索引值必须是非负数，对象引用不能为null等等。在编写方法有一个普遍的原则是“应该在发生错误之后尽快检测出错误”，按照这样的原则，在实际开发中应该怎样做？","编写的技巧有：","缺点：构造过程被分到了几个调用之中，在构造过程中无法保证javabean的一致性，容易出现线程安全的问题。","缺点：这种方式，可以通过反射改变构造器的私有属性，创建多个实例对象，这样需要在构造方法中加入逻辑判断不允许创建第二个实例。","缺点：重叠构造器模式在有许多可选参数的时候，代码可读性很差，而且调用者想知道每个参数的意思，甚至需要深入到源码中去看每个参数的意义。如果多个参数的类型相同，调用者颠倒了参数的位置，编译的时候也不会报错，就会产生一些微妙的错误。","考虑到这样一个示例，线程通过轮询标志位而达到优雅的停止线程的功能，示例代码如下：","能够重载并不意味者应该重载，一般来说，对于多个具有相同参数数目的重载方法，还是尽量避免使用重载。如果不能避免重载，就需要保证每一个重载方法的参数类型无论经过怎样的转换（如泛型和自动拆箱和装箱）后都能“完全不同”，从而根据参数类型能够指向不同的重载方法。","自反性：对于任何非null的引用值x，x.equals(x)必须返回true;","自己的代码可以融入主流，更方便让其他人阅读和理解。","若一个类要加入某个框架，而该框架是依赖序列化来实现对象的传输和持久化，那么该类实现seriablizable就是有必要，更进一步来看，一个类属于一个组件，如果父组件实现了seriablizable接口，那么该类也需要实现seriablizable接口。根据经验，比如date和biginteger这样的值类应该实现serializable，大多数集合类也需要实现。","获取value时不是直接返回对象引用，而是返回对象的copy.","虽然不应该在新代码中使用想list这样原生态类型，使用参数化的类型以允许插入任意对象，如list","虽然看起来代码不够简洁，但是修改起来确实比较安全，不怕有遗漏。","补充一点","表示显示，fals","表示隐藏","要为api编写文档，文档注释是最好、最有效的途径。对于所有可导出的api元素来说，使用文档注释应该被看作是强制性的。要采用一致的风格来遵循标准的约定。在文档注释内部出现任何html标签都是允许的，但是html字符必须要经过转义。","要为你编写的每个方法所抛出的每个异常建立文档，对受检的异常和未受检的异常，就像对于抽象和具体的方法都一样。要为每个受检的异常提供单独的throws字句，不要为未受检的异常提供throws语句。如果没有为可以抛出的异常建立文档,那么其他开发人员很难或者根本不可能有效使用你的类或接口。","要使用泛型，但不确定或者不关心实际的类型参数，就可以使用一个问号替代。例如，泛型set","要区分设计良好的模块和设计不好的模块，最重要的因素在于，这个模块对于外部其他模块而言，是否隐藏其内部数据和其他细节。设计良好的模块会隐藏所有的实现细节，把它的api于它的实现清晰的隔离起来，模块之间只通过它们的api进行通信，那么，在设计类和成员时有怎样的设计原则？","要满足可序列化的单例，有两种方式：","要确保能够安全的进行反序列化构造对象，可以采用序列化代理模式。所谓序列化代理模式相当简单，首先，为可序列化的类设计一个私有的静态嵌套类，精确地表示外围类的实例的逻辑状态。这个嵌套类被称作序列化代理（serial","要考虑api设计决策的性能后果。使公有的类型成为可变的（mut","覆盖equals方法总要覆盖hashcode()方法；","覆盖equals方法的时机","覆盖equals方法的规范写法","覆盖equals方法看起来似乎很简单，但是有许多覆盖方式会导致错误，并且后果非常严重，最容易避免这类问题的办法就是不覆盖equals方法，在这种情况下，类的每个实例都只与它自身相等。下面这几种情况就不需要覆盖equals()方法：","覆盖tostring方法的好处","覆盖tostring的注意事项","规则1：不要进行优化。","规则2（仅针对专家）：还是不要进行优化一一也就是说，在你还没有绝对清晰的未优化方案之前，请不要进行优化．","解决","解决方案","解决这一问题的最好办法其实是尽量避免在线程间共享可变数据，将可变数据限制在单线程中。如果想要多个线程共享可变数据，那么读写都需要进行同步。","警惕自动装箱和拆箱。在自动装箱(autoboxing)的机制下，可以将基本类型和装箱基本类型混用，但是这两种类型在性能上有着比较明显的差别，如反例:","许多枚举天生就与一个单独的int值相关联。所有的枚举都有一个ordinal方法，它返回每个枚举常量在类型中的数字位置，如下例：","设计一个类的序列化形式和设计该类的api","设计不可变类有以下几条规则：","设计类和成员有这样几个基本原则：","该方法忽略了被反序列化的对象，只返回该类初始化时创建的那个特殊的elvis实例。事实上，如果依赖readresolve进行实例控制，带有对象引用类型的所有实例域则都必须声明为transient的。否则，利用readresolve方法实现的单例也会遭受到攻击。","该类的子类或者包类所有类均可访问到；4.public","语句中是非法的，可以通过增加一个局部变量，在变量上使用suppresswarnings注解，然后将这个变量return的方式解决；","调用哪个具体的重载方法是在编译时就决定了，根据方法中参数的编译时类型。而对于被覆盖的方法的选择则是动态的，是根据调用该方法的对象的运行时类型，来选择合适的“被覆盖的版本”。覆盖是用来实现多态的，而重载并不是；","调用方客户端代码：","谨慎的选择方法的名称：遵循标准的命名规范；","超类已经覆盖了equals，从超类继承过来的行为对于子类来说也是合适的。例如大多数set实现都从abstractset继承equals实现，类似的有list和map等；","转换类型的方法、返回不同的类型对象方法，通常被称为totype，例如tostring和toarray。","转换：如果在遍历的过程中，需要转换部分元素，就需要使用迭代器或者索引，一遍设定特定的元素；","过期引用(obsolet","过滤：如果需要在遍历的过程中删除特定的元素，就需要用显式的迭代器，调用remove方法进行删除；","运行时异常","运行时异常通常用来表明程序错误，大多数运行时异常是指前提条件违例，api提供方和api调用方没有遵守双方的约定，比如在访问数组时，访问的索引超过了数组的长度就会出现arrayindexoutofboundsexception。如果，不想调用者恢复异常情况，则可以抛出运行时异常。常见的运行时异常有arithmeticexception、arraystoreexception、arrayindexoutofboundsexception等等。","返回result。","返回一个与被调对象同值的基本类型的方法，通常被称为typevalue，例如intvalue；","返回类型为数组或者集合的方法没理由返回null，而应该返回一个长度为零的数组或者集合。","返回视图的方法通常被称为astype。例如aslist。","还有一种方式，是通过导出public的静态方法：","还要注意，因继承而需要的特殊文档会打乱正常的文档信息，普通的文档被设计用来让程序员可以创建该类的实例，并调用类的方法。而特殊文档看起来混用了很多内容。为了允许继承，类还必须遵守其他的一些约束。构造器决不能调用可被覆盖的方法，无论是直接调用还是间接调用。这是因为超类的构造器在子类的构造器之前运行，所以，子类中覆盖版本的方法将会在子类的构造器运行之前就先被调用。如果该覆盖版本的方法信赖于子类构造器所执行的任何初始化操作，该","这个抽象类是类层次的根；","这个方法的本意是通过枚举常量在类中的序号来表示每种音乐类型演奏的人数。虽然这个枚举不错，但是维护起来就像一场噩梦。如果常量重新排序，numberofmusicians方法就会遭到破坏。好的做法应该是：永远不要根据枚举的序号导出与它有关的值，而是要将它保存到一个实例中：","这个类层次纠正了前面提到过的标签类的所有缺点：","这些习惯用法要好于while循环，但也不完美。代迭器与索引都有些混乱。而且，它们还可能引起错误。在上面的循环中迭代器与索引都出现了三次，其中有两个地方可能带来错误，如果的确出现了这种错误，却无法保证编译器能捕获到这些错误。那么，在集合和数组的遍历中优先采用哪种方式？","这些注解可以提高这些工具提供的诊断信息的质量。","这时，私有锁对象只能被当前类内部访问到，并不能被外部访问到，因此不可能妨碍到当前类的同步，就可以避免“拒绝服务攻击”。但是，这种方式只适合“无条件线程安全”级别，并不能适用于“有条件性的线程安全”的级别，有条件的线程安全级别，必须在文档中说明，在调用方法时应该获得哪把锁。","这是两种普遍错误的观点，事实上，线程安全性是有多种级别的，那么，应该如何建立线程安全性的文档？","这是我的gitbook","这条原则同样适用于受检异常和未受检的异常，不管异常代表了可预见的异常条件，还是编程错误，用空的catch块忽略它，将会导致程序在遇到错误的情况下悄然地执行下去。然后，有可能在将来的某个点上，当程序不能再容忍与错误源明显相关的问题时，它就会让系统失败。","这样，在传递具体策略类的对象的时候，只需要将参数类型定为接口类型(使用接口做类型定义)，现在可以传递其他的比较策略了,","这段代码看上去没有什么问题，本意以为是period被构造后，状态是不会被改变的，但是由于date是可变的，period的状态也是会被改变的，如下面的这样的使用：","这段代码简洁而清楚，没有包含在原来的版本中所见到的所有样本代码；","这种写法只用了一个string实例，而不是每次都创建一个新的实例，而且，它可以保证在所有同一台虚拟机上运行的代码，只要它们包含的字符串字面量相同，就可以保证该对象会被重用。","这种工具类的实例化是没有任何用处的，但是需要注意到的是在不提供构造函数的时候，编译器会自动提供一个默认的构造器，这会造成无意识的实例化。一种补救方法是企图将类做成抽象类来阻止实例化，但是这种方法并不可靠，因为抽象类可以被继承，而它的子类是可以实例化的，这样甚至会误导用户以为这个类就是做出来让用户来继承使用的。针对这种工具类应该如何避免被实例化？","这种方式要求在高层api中，捕获到底层异常的时候抛出与高层业务意义吻合的高层异常highlevelexception，而不是直接将底层异常继续抛出去。","这种方法更加简洁，无偿的提供了序列化机制，绝对防止多次实例化（由enum保证），即使是在面对复杂的序列化或者反序列化或者反射攻击的时候也可以保证唯一。这已成为实现","这种方法的问题在于，字符串键代表一个共享的全局命名空间，要使这种办法可行，客户端提供的字符串必须是唯一的，如果使用了相同的字符串，实际上就共享了这个变量。可以采用以下这种方式进行修正：","这种标签类（tag","这种类型的annotations只在源代码级别保留，编译时就会被忽略","这种类型的annotations将被jvm保留,所以他们能在运行时被jvm或其他使用反射机制的代码所读取和使用.","这种类型的annotations编译时被保留,在class文件中存在,但jvm将会忽略","这种采用对象实例作为授权键的话，就能够保证全局唯一。事实上，threadlocal也是采用这种方式，将threadlocal实例作为了threadlocalmap的键。","这里存在一个问题，就是在每次执行调用的时候都会创建一个新的实例。如果它被重复执行，那就应该考虑将函数对象存储到一个私有的静态final域里并重用它。这样做的另一个好处就是为这个函数对象取一个有意义的声明。","这里进行保护性拷贝！","通过一个无参构造器创建对象，然后调用setter方法来设置每个必要的参数。这样创建实例很容易，产生的代码读起来也比较容易，因为通过setter的方法名能知道设置的参数是哪一个。","通过查看文档是否出现synchronized修饰符，来判断当前方法是否是安全的。这种说话的错误在于，synchronized并不会通过javadoc输出，成为api文档的一部分，这是因为synchronized是方法具体的实现细节，并不属于导出api和外界模块通信的一部分；","遍历数组","避免使用位域组合的方式的弊端，可以采用enumset类型数据。enumset支持从枚举类型中提取多个枚举常量进行组合的方式，并且这个类实现了set接口，也具有类型安全性。使用enumset将上面的例子重写如下：","避免被实例化最简单而且可靠的方法是，通过显示的提供一个私有的构造函数来阻止实例化。比如：","避免过长的参数列表：方法参数个数不能超过四个，否则让人难以理解参数的意义。减小参数个数有三种方式：1.拆分出子方法；2.将多个参数抽象成一个实体类，这样方法的入参就仅仅只是这一个实体类；3.使用builder模式","那么如何使用泛型以插入任意对象？","那么如何解决？","那么，在使用对象避免反复创建对象有哪些原则？","那么，对类中的数据域的访问级别应该如何设计？","那么，当构建对象的时候有多个可选参数的时候，应该如何处理？","那么，当需要精确结果的时候，应该怎样处理？","那么，是否应该使用原生态类型？","那么，构建singleton最简单安全可靠的方式是什么？","那么，针对这样的情况应该怎样解决？","那既然不适合存在全部都是导出常量的常量接口，那么如果需要导出常量，它们应该放在哪里呢？","采用arrays.tostring()方法遍历数组，而不要采用arrays.tolist().tostring去遍历数组，这是因为tolist方法接受的是可变参数，如果想要正确输出数组内容的话，数组里元素必须是对象引用型数据，而不能是基本类型数据。如下例：","采用复合/转发的方式重写上面的testhash，包含了两个部分：新类本身以及被包含的转发类：","采用枚举实现：可以采用枚举实现可序列化的单例，这种安全性由jvm提供保障，而且代码十分简洁，实例域也不需要用transient修饰：","重叠构造器","重构为：","针对int常量以下不足：","针对singleton，最简单的一种方式是：","针对上例，对数组标准的遍历模式并不会导致冗余的检查，jvm会对其进行优化；","针对上面的分析，可以看出禁止创建参数化类型数组等情况是合理的，能够将错误暴露在编译期。像e、list、list这样的类型应称作不可具体化的类型。唯一可具体化的参数化类型是无限制的通配符类型，如list和map。虽然不常用，但是创建无限制通配类型的数组是合法的。","针对命名模式带来的这些问题，该如何解决？","针对继承带来的问题，可以采用复合的方式进行解决，即不用扩展现有的类，而是在新的类中增加一个私有域，它引用现有类的一个实例。因此现有类变成了一个新类的一个组件，新类中的每个实例方法就可以调用被包含的类的实例方法，并返回相应的结果，这称之为转发。","针对自用性问题，也可以机械的消除类中可覆盖方法的自用特征，而不改变它们的行为。将每个可覆盖方法的代码体移动到一个私有的辅助方法中。并且让每个可覆盖的方法调用它的私有辅助方法。然后，用”直接调用可覆盖方法的私有辅助方法“来代替”可覆盖方法的每个自用调用“。","针对这样的情况，可以采用enum来解决。","错误","问题","问题在于sum被声名成long而不是long，long是装箱基本类型，而long是基本类型，这样就在无意的情况了增加了拆装箱的开销，结论是：要优先使用基本类型而不是装箱基本类型，要当心无意识的自动装箱。","降低灵活性：如果一个类实现了serializable接口，它的字节流编码也变成了它导出api的一部分，一旦这个类被广泛使用，就必须永远支持这种序列化方法。并且，如果使用了默认的serializable，这个类中私有的和包即级私有的实例域都会变成导出的api的一部分，这不符合域最小访问级别的设计原则。另外，如果改变了类的内部结构的话，客户端企图用类的旧版本来序列化，而使用新版本来进行反序列化的话，程序就会出错。","除了安全性没有达到预期外，可用的基本功能很少；","除了构造器构造对象外，反序列化也是一种构造对象的方式，因此，也需要在构造对象的时候进行参数有效性检查以及保护性拷贝。所以在readobject方法也需要确保period的关键约束不变以及保持它的不可变性：","除了线程、锁和监视器外，线程系统还提供了另外一个抽象单元：线程组。线程组的设计初衷是作为隔离applet的机制，达到安全性。但是，实际上并未达到所期待的安全性，甚至都差到在java安全模型上都未提及。除了安全性的糟点外，还有哪些缺陷？","除了重用不可变的对象之外，也可以重用那些已知不会被修改的可变对象。例如下面的例子：","除非使用finalze()来作为回收对象最后的兜底操作，就不要使用finalize()方法。如果使用了finalize()方法就要调用super.finalize，并且要在日志上记录使用了finalize()的特殊情况，应该当做bug去修复。","需要将writereplace方法添加到外围类中，该方法可以产生一个序列化代理对象来代替外围类的实例。换句话说，writereplace方法在序列化之前，将外围类的实例转换成了它的代理对象；","静态内部类：为了减小上面这种方式的同步访问成本，可以采用静态内部类的方式，被称之为lazi","静态工厂和构造器有个共同特征，就是无法支持多个可选参数。如果构建一个多个可选参数的对象，常用的方式有重叠构造器和javabean的方式：","静态工厂的常用名称为valueof、of、getinstance、newinstance、gettype和newtyp","静态成员类","静态成员类是最简单的一种嵌套类。最好把它看作是普通的类，只是碰巧被声明在另一个类的内部而已，它可以访问外围类的所有成员，包括那些声明为私有的成员。静态成员类是外围类的一个静态成员，与其他的静态成员一样，也遵守同样的可访问性规则。如果它被声明为私有的，它就只能在外围类的内部才可以被访问。","静态成员类的一种常见的用法就是作为公有的辅助类，仅当它的外部类一起使用时才有意义。例如，一个描述了计算器支持的各种操作的枚举。operation枚举应该是calculator类的公有静态成员类，然后使用calculator类的客户端就可以用诸如calculator.operation.plus这样的名称来引用这些操作。","非空性：对于任何非null的引用值x，x.equals(null)必须返回false；","非线程安全（unthreadsafe）：该类是实例可变的，如需安全地并发使用，必须外部手动同步。如hashmap和arraylist；","非静态成员类","非静态成员类常见用法是定义一个adapter，它允许外部类的实例被看作是另一个不相关的类的实例。例如，map接口的实现往往使用非静态成员类来实现它们的集合视图（collect","面对异常到底应该怎样做？","面对异常，最基本最重要的原则是，不要忽略异常，必须对异常进行处理。","顶层类是抽象类的情况，","项目中如果部分功能，开源社区有相应的类库可以实现，应该充分利用开源的类库，原因有：","首先要为标签类中的每一个方法都定义一个包含抽象方法的抽象类，这每个方法的行为都依赖于标签值。在figure类中，只有一个这样的方法：area。","骤2.a.3)，为得到的long类型值计算散列值。","高并发程序既很难保证线程安全的问题，而且一旦出现问题之后，也很难排错和分析出来原因。而j.u.c包中提供了很多线程安全的工具，应该在实际开发中多使用这些性能已经得到了验证的工具，这使得我们的开发能够十分方便又能保证我们代码的稳定性。常用的并发工具有哪些？","默认的序列化形式描述了该兑现内部所包含的数据，以及每一个可以从这个对象到达的其他对象的内部数据，即完整了描述了所有对象被链接起来的拓扑结构。对于一个对象来说，理想的序列化形式应该只包含该对象所表示的逻辑数据，而逻辑数据和物理表示应该是相互独立。也就是说，如果一个对象的物理表示等同于它的逻辑内容的话，就适合使用默认的序列化形式。","默认级别","（someexcept","，这还是可以的。","："],"pipeline":["stopWordFilter","stemmer"]},"store":{"./":{"url":"./","title":"Introduction","keywords":"","body":"Introduction\n这是我的gitBook\n"},"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html":{"url":"第一章 创建和销毁对象/2.多个参数使用Builder模式创建对象.html","title":"2.多个参数使用Builder模式创建对象","keywords":"","body":"\n问题\n静态工厂和构造器有个共同特征，就是无法支持多个可选参数。如果构建一个多个可选参数的对象，常用的方式有重叠构造器和JavaBean的方式：\n\n重叠构造器\n提供一个只有必要参数的构造器，第二个构造器有一个可选参数，第三个构造器有两个可选参数，依次类推，直到最后一个构造器包含所有的可选参数。\n缺点：重叠构造器模式在有许多可选参数的时候，代码可读性很差，而且调用者想知道每个参数的意思，甚至需要深入到源码中去看每个参数的意义。如果多个参数的类型相同，调用者颠倒了参数的位置，编译的时候也不会报错，就会产生一些微妙的错误。\n\nJavaBean模式\n通过一个无参构造器创建对象，然后调用setter方法来设置每个必要的参数。这样创建实例很容易，产生的代码读起来也比较容易，因为通过setter的方法名能知道设置的参数是哪一个。\n缺点：构造过程被分到了几个调用之中，在构造过程中无法保证JavaBean的一致性，容易出现线程安全的问题。\n\n\n那么，当构建对象的时候有多个可选参数的时候，应该如何处理？\n\n答案\n在所构建的对象中，有多个可选参数的话，可采用Builder方式来构建对象：\npublic class User {\n\n    private String userName;\n    private int age;\n    //可选参数\n    private String address;\n    private String phoneNumber;\n    public static class Builder{\n        private String userName;\n        private int age;\n        //可选参数的默认值\n        private String address=\"\";\n        private String phoneNumber=\"\";\n        public Builder(String userName, int age){\n            this.userName = userName;\n            this.age = age;\n        }\n        public Builder address(String address){\n            this.address = address;\n            return this;\n        }\n        public Builder phoneNumber(String phoneNumber){\n            this.phoneNumber = phoneNumber;\n            return this;\n        }\n        public User build(){\n            return new User(this);\n        }\n    }\n     private User(Builder builder){\n        this.userName = builder.userName;\n        this.age = builder.age;\n        this.address = builder.address;\n        this.phoneNumber = builder.phoneNumber;\n     }\n} \n//调用方式\nUser user = new User.Builder(\"test\",18).address(\"test\").phoneNumber(\"test\").build();\n Builder模式可以对其参数加以约束，build方法可以检验这些约束条件，将参数从builder拷贝到对象中之后，并在对象域而不是builder域中对它们进行检验，如果违反了任何约束，build方法就应该抛出IllegalStateException。Builder模式十分灵活，可以利用单个Builder构建多个对象。唯一的不足在于：为了创建对象必须先创建一个中间对象，builder模式还使得构造的过程更加冗长。\n\n结论\n如果类的构造器或者静态工厂中具有多个参数时，设计这种类时，Builder模式就是种不错的选择，特别是当大多数参数都是可选的时候，与使用传统的重叠构造器模式项目，使用Builder模式代码可读性更强，也比JavaBean的方式更加安全。\n\n\n"},"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html":{"url":"第一章 创建和销毁对象/3.使用枚举类型强化singleton.html","title":"3.使用枚举类型强化singleton","keywords":"","body":"\n问题\n常用的实现Singleton有两种方式，都是将构造器私有，然后通过导出public的静态域。一种是通过public的静态final成员变量实现：\npublic class Singleton{\n    public static final Singleton instance = new Singleton();\n    private Singleton(){\n    ......\n    }\n}\n缺点：这种方式，可以通过反射改变构造器的私有属性，创建多个实例对象，这样需要在构造方法中加入逻辑判断不允许创建第二个实例。\n还有一种方式，是通过导出public的静态方法：\nclass Singleton{\n    private static final Singleton instance = new Singleton();\n    public static Singleton getInstance(){\n        return instance;\n    }\n    private Singleton(){};\n}\n但是还是存在第1种方法里的反射机制进行攻击的问题。以上两种方法还有一个问题，就是在实现Singleton类序列化的时候，仅仅在声名中加上“implement Serializable”是不够的。为了维护并保证Singleton，必须声名所有的实例都是transient，并提供一个readResolve方法。否则的话每次反序列化的时候都会创建一个新的实例，这个时候要加入以下代码：\n// readResolve method to preserve singleton property\nprivate Object readResolve() {\n    // Return the one true Elvis and let the garbage collector\n    // take care of the Elvis impersonator\n    return INSTANCE;\n}\n那么，构建Singleton最简单安全可靠的方式是什么？\n\n解决\n实现Singleton最安全可靠的方式，可以编写包含单个元素的枚举元素：\npublic enum Elvis {\n    INSTANCE;\n    public void leaveTheBuilding() { ... }\n}\n这种方法更加简洁，无偿的提供了序列化机制，绝对防止多次实例化（由Enum保证），即使是在面对复杂的序列化或者反序列化或者反射攻击的时候也可以保证唯一。这已成为实现 Singleton的最佳方法。\n\n结论\n但需要创建Singleton时，可以使用枚举的方式实现，这种实现方式既简洁又能保证序列化安全和反射安全。\n\n\n"},"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html":{"url":"第一章 创建和销毁对象/4.私有构造器以强化对象不可实例化.html","title":"4.私有构造器以强化对象不可实例化","keywords":"","body":"\n问题\n我们通常将包含静态方法和静态域的类作为工具类。比如说可以用这种类来组织某种基本类型的相关方法（java.lang.Math），也可以通过java.util.Collections方式把实现特定接口的对象上的静态方法组织起来，最后还能利用这种类把final类上的方法组织起来，以取代扩展该类的做法。\n这种工具类的实例化是没有任何用处的，但是需要注意到的是在不提供构造函数的时候，编译器会自动提供一个默认的构造器，这会造成无意识的实例化。一种补救方法是企图将类做成抽象类来阻止实例化，但是这种方法并不可靠，因为抽象类可以被继承，而它的子类是可以实例化的，这样甚至会误导用户以为这个类就是做出来让用户来继承使用的。针对这种工具类应该如何避免被实例化？\n\n解决\n避免被实例化最简单而且可靠的方法是，通过显示的提供一个私有的构造函数来阻止实例化。比如：\n// Noninstantiable utility class\npublic class UtilityClass {\n    // Suppress default constructor for noninstantiability\n    private UtilityClass() {\n        //防止在类的内部被调用实例化\n        //或者被反射攻击\n        throw new AssertionError();\n    }\n}\n可以通过将构造器方法访问标识符设置为private，将构造器方法私有化，从而将对象强化为不可实例化。比如在只包含静态域和静态方法的工具类，就有必要通过私有化构造器的方式，让工具类不可被实例化。\n\n结论\n当诸如工具类这种类，被实例化是没有多大意义的，**应该强制将构造器私有化，以强化类的不可实例化属性。\n\n\n"},"第一章 创建和销毁对象/5.避免创建不必要的对象.html":{"url":"第一章 创建和销毁对象/5.避免创建不必要的对象.html","title":"5.避免创建不必要的对象","keywords":"","body":"\n问题\n一般来说，最好能重用对象而不是在每次需要的时候就创建一个相同功能的实例，如果对象是不可变的，那么它就始终可以被重用。作为一个反例，代码如下\nString s = new String(\"test\");\n 如果这条语句出现在循环中就会在每一次循环时生成一个新的String实例，而这些String实例的功能完成一样，这会造成资源的巨大浪费，改进版本如下\nString s = \"test\";\n这种写法只用了一个String实例，而不是每次都创建一个新的实例，而且，它可以保证在所有同一台虚拟机上运行的代码，只要它们包含的字符串字面量相同，就可以保证该对象会被重用。\n那么，在使用对象避免反复创建对象有哪些原则？\n\n解决\n为了避免重复对象，在实际编码过程中可以从这几个方面来思考：\n\n对于同时提供了静态工厂方法和构造器的不可变类，通常可以使用静态工厂方法而不是构造器，原因在于构造器在每次被调用的时候都会创造一个新的对象，而静态工厂方法则不要求这样做，完成可以返回同一个对象的引用。例如静态工厂方法Boolean.valueOf(String)总是优先于Boolean(String)；\n\n除了重用不可变的对象之外，也可以重用那些已知不会被修改的可变对象。例如下面的例子：\npublic class Person {\n    private final Date birthDate;\n\n    // Other fields, methods, and constructor ommitted\n    // Don't DO THIS!\n    public boolean isBabyBoomer() {\n        // Unnecessary allocation of expensive object\n        Calendar gmtCal = Calendar.getInstance(TimeZone.getTimeZone(\"GMT\"));\n        gmtCal.set(1946, Calendar.JANUARY, 1, 0, 0, 0);\n        Date boomStart = gmtCal.getTime();\n        gmtCal.set(1965, Calendar.JANUARY, 1, 0, 0, 0);\n        Date boomEnd = gmtCal.getTime();\n        return birthDate.compareTo(boomStart)>=0 && birthDate.compareTo(boomEnd)在isBabyBoomer每次被调用的时候，都会新建一个Calendar，一个TimeZone和两个Date实例，这是不必要的，因这它们一旦被创建即无需改变了。下面是一个用静态的初始化器的版本，避免了这种效率的情况。\npublic class Person {\n    private final Date birthDate;\n    // Other fields, methods, and constructor ommitted\n\n    /**\n     * The starting and ending dates of the baby boom\n     */\n    private static final Date BOOM_START;\n    private static final Date BOOM_END;\n\n    static {\n        Calendar gmtCal = Calendar.getInstance(TimeZone.getTimeZone(\"GMT\"));\n        gmtCal.set(1946, Calendar.JANUARY, 1, 0, 0, 0);\n        Date boomStart = gmtCal.getTime();\n        gmtCal.set(1965, Calendar.JANUARY, 1, 0, 0, 0);\n        Date boomEnd = gmtCal.getTime();\n    }\n\n    public boolean isBabyBoomer() {\n        return birthDate.compareTo(BOOM_START)>=0 && birthDate.compareTo(BOOM_END)还有一个问题，就是如果改进后Person类被初始化了，它的isBabyBoomer方法永远不会被调用，那么就没有必要初始化两个静态域了。通过延迟初始化则有可能消除这些不必要的初始化方法，但是不建议这样做。这样做使方法的实现变的更加复杂，从而无法将性能显著提高到超过已经达到的水平；\n\n警惕自动装箱和拆箱。在自动装箱(autoboxing)的机制下，可以将基本类型和装箱基本类型混用，但是这两种类型在性能上有着比较明显的差别，如反例:\npublic static void main(String[] args) {\n    Long sum = 0L;\n    for (long i = 0; i 问题在于sum被声名成Long而不是long，Long是装箱基本类型，而long是基本类型，这样就在无意的情况了增加了拆装箱的开销，结论是：要优先使用基本类型而不是装箱基本类型，要当心无意识的自动装箱。\n\n\n\n结论\n为了避免创建对象，而重用对象是为了提升性能，但是，这也应该有一个”度“。比如小对象的构造器只做很少量的工作，所以，小对象的创建和回收是非常廉价的，特别是在现在的JVM上，此时，就不需要刻意的为了重用对象而让代码逻辑更加混乱。反之，维护自己的对象池来避免创建对象并不是一种好的做法，除非池中的对象是非常重量级的。比如说数据库连接池，建立数据库连接的代价非常昂贵，因为重用这些对象很有意义。\n\n\n"},"第一章 创建和销毁对象/6.消除过期的对象引用.html":{"url":"第一章 创建和销毁对象/6.消除过期的对象引用.html","title":"6.消除过期的对象引用","keywords":"","body":"\n问题\n过期引用(obsolete reference)是指永远不会再被解除的引用，由于JVM有垃圾回收机制，如果存在过期引用，被引用的对象不会被回收掉，容易造成内存泄漏。那么，常见的内存泄漏有哪几种情况？\n\n解决\n\n在使用Stack，List等“数据容器”的数据结构时，应该时刻关注容器中的数据元素是否有存在内存泄漏的情况，比如，下例中：\npublic class Stack {\n    private Object[] elements;\n    private int size = 0;\n    private static final int DEFAULT_INITIAL_CAPACITY = 16;\n\n    public Stack() {\n        elements = new Object[DEFAULT_INITIAL_CAPACITY];\n    }\n\n    public void push(Object e) {\n        ensureCapacity();\n        elements[size++] = e;\n    }\n\n    public Object pop() {\n        if (size == 0)\n            throw new EmptyStackException();\n        return elements[--size];\n    }\n\n    /**\n     * Ensure space for at least one more element, roughly\n     * doubling the capacity each time the array needs to grow.\n     */\n    private void ensureCapacity() {\n        if (elements.length == size)\n            elements = Arrays.copyOf(elements, 2 * size + 1);\n    }\n}\n如果一个stack先增后减，那么会弹出的对象并不会被当成垃圾回收，原因在于stack内部维持着对这些对象的过期引用（在这里是数组的原因），这样就造成了内存泄漏。因此，在弹出数据元素的时，最好是释放元素引用，如:\nObject obj = elements[--size];\nelements[size] = null\n\n内存泄漏另一个常见来源是缓存：一旦把对象引用放到了缓存，当很长一段时间没有使用之后仍然存在于缓存之中。如果在缓存之外存在对某个数据项的键的引用的话，该缓存项才有意义。这样的场景是适合用WeakHashMap。\n\n内存泄漏第三个常见来源是监听器和回调：如果注册了回调，并没有显式的进行注销，也会造成内存泄漏的问题。确保回调会被正常的垃圾回收，只需要保存他们的弱引用即可，例如，只将它们保存为WeakHashMap中的键。\n\n\n\n结论\n如果代码中存在过期引用，很容易造成内存泄漏，甚至会导致系统崩溃，在实际编码过程中需要仔细检查代码，或者借助于Heap工具去检查内存泄漏的问题。\n\n\n"},"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html":{"url":"第二章 对象通用的方法/8.覆盖equals方法请遵守通用规定.html","title":"8.覆盖equals方法请遵守通用规定","keywords":"","body":"\n问题\n在面对equals方法时，会有这样的疑问，什么时候该覆盖equals方法，什么时候不应该覆盖，也就是说覆盖equals方法的时机是什么？如果覆盖equals方法，那么应该写？\n\n解决\n\n覆盖equals方法的时机\n覆盖equals方法看起来似乎很简单，但是有许多覆盖方式会导致错误，并且后果非常严重，最容易避免这类问题的办法就是不覆盖equals方法，在这种情况下，类的每个实例都只与它自身相等。下面这几种情况就不需要覆盖equals()方法：\n\n类的每个实例本质上都是唯一的。对于代表活动实体而不是值（value）的类来说确实如此，例如Thread。Object提供的equals实现对于这些类来说是正确的行为；\n不关心类是否提供了“逻辑相等(logical equality)”的测试功能。如java.util.Random覆盖了equals，以检查两个Random实例是否产生相同的随机序列，但是调用者并不期望这样的功能。在这样的情况下，从Object继承得到的equals实现已经足够了；\n超类已经覆盖了equals，从超类继承过来的行为对于子类来说也是合适的。例如大多数Set实现都从AbstractSet继承equals实现，类似的有List和Map等；\n类是私有的或是包级私有的，可以确定它的equals方法永远不会被调用。\n\n\n覆盖equals方法的规范写法\n在覆盖equals方法时，需要遵守的约定有：\n\n自反性：对于任何非null的引用值x，x.equals(x)必须返回true;\n对称性：对于任何非null的引用值x，y，当且仅当y.equals(x)返回true时，x.equals(y)也应该返回true；\n传递性：对于任何非null得引用值x、y和z，如果x.equals(y)返回true时，并且y.equals(z)也返回true，那么x.equals(z)也返回true;\n一致性：对于任何非null得引用值x和y，只要equals的比较操作在对象中所用的信息没有被修改，那么多次调用x.equals(y)就会一致的返回true，或者一致的返回false；\n非空性：对于任何非null的引用值x，x.equals(null)必须返回false；\n\n编写的技巧有：\n\n使用==操作符检查“参数是否为这个对象的引用”；\n使用instanceof操作符检查“参数是否为正确的类型”；\n经过instanceof类型检查之后把参数转换成正确的类型；\n对于该类中的每个“关键”域，检查参数中的域是否与该对象中对应的域相匹配。对于不是double和float的基本类型，可以使用==进行比较，对于引用类型，可以递归调用equals方法，对于float域，可以使用Float.compare方法，对于double域，可以使用Double.compare方法；\n当编写完equals方法时，应该问自己三个问题：它是否满足对称性、传递性、以及一致性；\n覆盖equals方法总要覆盖hashCode()方法；\n判断各个域值是否相等的逻辑不要过于复杂；\n不要将所覆盖的equals方法中的入参Object对象替换成其他对象，应该使用@Override。\n\n\n\n\n结论\n当面对equals方法时，应该根据覆盖equals方法的时机去判断是否需要覆盖equals方法，如果需要覆盖equals方法时，要严格遵守equals方法的规范。\n\n\n"},"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html":{"url":"第二章 对象通用的方法/9.覆盖equals时要同时覆盖hashCode.html","title":"9.覆盖equals时要同时覆盖hashCode","keywords":"","body":"\n问题\n在每个覆盖了equals方法的类中，也必须覆盖hashCode方法，如果不这样的话，就会违反了Object.hashCode的通用约定，从而导致该类无法结合所有基于散列的集合一起正常动作，比如说HashMap，HashSet，Hashtable。那么，Object.hashCode规范是什么？以及一个性能良好的hashCode应该怎样写？\n\n解决\n\nObject.hashCode规范\n\n在应用程序的执行期间，只要对象的equals方法的比较操作所用到的信息没有被修改，那么对这同一个对象调用多次，hashCode方法必须都始终如一地返回同一个整数\n如果两个对象根据equals(Object)方法比较是相等的。那么调用这两个对象中任意一个对象的hashCode方法都必须产生同样的整数结果。\n如果两个对象根据equals(Object)方法比较是不相等的，那么调用这两个对象中的任意一个对象的hashCode方法，则不一定要产生不同的整数结果。\n\n\nhashCode的写法\n一个好的散列函数通常倾向于“为不相等的对象产生不相等的hashCode”，编写好的hashCode也如下这种简单的方式：\n\n把某个非零的常数值，比如说17保存在一个名为result的int类型的变量中。\n对于对象中的每个关键域f(指equals方法中涉及的每个域)，完成以下步骤：\n\n\n\n​             a. 为该域计算int类型的散列码c:\n​                   1)  如果该域是boolean类型，则计算(f ? 1 : 0)\n​                   2).  如果该域是byte、char、short或者int类型，则计算(int)f\n​                   3) 如果该域是long类型，则计算(int)(f^(f>>>32))。\n​                   4) 如果该域是float类型，则计算Float.floatToIntBits(f)。\n​                   5) 如果该域是double类型，则计算Double.doubleToLongBits(f)，然后按照步                                骤2.a.3)，为得到的long类型值计算散列值。\n​                   6) 如果该域是一个对象引用，并且该类的equals方法通过递归地调用equals方式来比较这个域，则同样为这个域递归地调用hashCode。如果需要更复杂的比较，则为这个域计算一个范式，然后针对这个范式调用hashCode。如果这个域的值为null，则返回0（不绝对，但通常是0）。\n​                   7) 如果该域是一个数组，则要把每个元素当做单独的域来处理。也就是说，递归地应用上面的规则，对每个重要的元素计算一个散列码。然后再用2中的方法组合起来。如果数组中的每个元素都很重要，则可以用Arrays.hashCode方法。\n​              b. 按照下面的公式，把步骤2.a计算得到的散列码c合并到result中。\n​              result = 31 * result + c;\n​    3. 返回result。\n\n示例\npublic final class PhoneNumber {\n    private final short areaCode;\n    private final short prefix;\n    private final short lineNumber;\n\n    @Override\n    public int hashCode() {\n        int result = 17;\n        result = 31 * result + areaCode;\n        result = 31 * result + prefix;\n        result = 31 * result + lineNumber;\n        return result;\n    }\n}\n\n\n\n结论\n\n如果覆盖了equals方法一定要覆盖hashCode方法，否则会造成基于散列值得集合使用出现问题，如HashMap或者HashSet等；\n不要试图从散列码计算中排除一个对象的关键部分来提高性能。虽然这样可能使计算的速度得到提升，但是效果并不见得会好，可以会导致散列表慢到根本无法使用，如果因此大量的实例映射到极少的散列码上，那基于散列的集合将会显示出平方级的性能。Java平台类库中的许多类如 String、Integer、Date，都可以把它们的hashCode方法返回确切值规定为该实例的一个函数，一般来说，这并不是一个好主意，因为这样做严格地限制了在将来的版本中改进散列函数的能力。\n\n\n\n"},"第二章 对象通用的方法/10.覆盖toString.html":{"url":"第二章 对象通用的方法/10.覆盖toString.html","title":"10.覆盖toString","keywords":"","body":"\n问题\nObject中默认的toString方法，它返回的字符串只类类名加上一个“＠符号”，后面是十六进制形式的hashCode，这些信息对我们来说用处不大，所以为了提供更好的关于类和对象的说明，我们应该总是覆盖toString()方法来提供更加清晰的说明，覆盖toString方法的好处以及覆盖toString的注意事项？\n\n解决\n\n覆盖toString方法的好处\ntoString方法虽然不会像equals这样的方法对类造成那么大的影响，但是一个好的toString可以使类用起来更加的舒服。当对象被传给println、printf、字符串联操作符(+)以及assert或者被调试器打印出来时，toString方法会被自动调用。这是一种重要的调用手段，如果不重写toString提供更明确的信息，这将很难让人理解。toString的输出，也可以方便我们debug\n\n覆盖toString的注意事项\n\n在实际应用中，toString方法应该返回对象中包含的所有值得关注的信息，如果对象太大或者对象中包含的状态信息难以用字符来表达，这样做就有点不切实际了，在这种情况下toString方法应该返回类的关键域信息；\n在覆盖toString时可以指定输出格式，这样就可以编写相应的代码来解析这种字符串表示法，产生字符串表示法，以及把字符串表示嵌入到持久的数据中。但是，将来一旦输出格式变化了，会造成更大的问题。是否指定输出格式应该权衡。\n\n\n\n\n总结\n在实际开发过程中最好要覆盖toString方法，将类的有用信息使用toString方法进行输出，这样就可以方便调试或者打印的时候输出\n\n\n"},"第二章 对象通用的方法/12.考虑实现Comparable接口.html":{"url":"第二章 对象通用的方法/12.考虑实现Comparable接口.html","title":"12.考虑实现Comparable接口","keywords":"","body":"\n问题\ncompareTo方法是Comparable接口中唯一的方法，不但允许进行简单的等同性比较，而且允许执行顺序比较。一旦实现了Comparable接口，就可以跟许多泛型方法以及依赖于该接口的集合实现类进行协作。实现CompareTo方法有哪些规范？\n\n解决\n\n使用compareTo方法有一个重要的约定，就是通常情况下compareTo方法施加的等同性测试和equals方法一致。如果不一致的话，集合接口一般是使用equals方法来进行等同性测试，而有序集合是采用compareTo方法进行等同性测试，如果两者不一致的话，容易造成灾难性的后果；\n\n将对象与指定的对象进行比较。当该对象小于、等于或者大于指定对象的时候，分别返回一个负整数，零或者正整数，如果由于指定对象的类型而无法与该对象进行比较，则抛出ClassCastException。在下面的说明中，符号sgn(表达式)表示数学中的signum函数，它根据表达式(expression)的值为负值、零和正值，分别返回-1、0、1。\n\n必须确保所有的x和y都满足sgn(x.compareTo(y)) == -sgn(y.compareTo(x))。这也暗示着当且仅当y.compareTo(x)抛出异常时，x.compareTo(y)才抛出异常。\n必须确保这个比较关系是可传递的：(x.compareTo(y) > 0 && y.compareTo(z) > 0)暗示着x.compareTo(z) > 0也成立。对应着equals使用规范里面的传递性。\n必须确保x.compareTo(y) == 0暗示着所有的z都满足sgn(x.compareTo(z)) == sgn(y.compareTo(z))。\n强烈建议(x.compareTo(y) == 0) == (x.equals(y))，但是这个并非绝对必要。一般来说，任何实现了Comparable接口的类，若违反了这个条件，都应该明确予以说明。推荐使用这样的说法：“注意，该类具有内在的排序功能，但是与equals不一致”。\n\n\n示例\n如果一个类有多个关键域，那么比较这些关键域的顺序非常关键。必须从最关键的域开始,逐步进行到所有的重要域。如果某个域的比较产生了非零的结果(0代表着相等)，则整个比较操作结束，并返回该结果。如果最关键的域是相等的，则再比较下一个关键域，以此类推，如果所有域都是相等的，那么才返回0。例如下面的例子：\npublic final class PhoneNumber implements Comparable {\n\n    private final short areaCode;\n    private final short prefix;\n    private final short lineNumber;\n\n    public PhoneNumber(int areaCode, int prefix,\n                        int lineNumber) {\n        this.areaCode = (short) areaCode;\n        this.prefix = (short) prefix;\n        this.lineNumber = (short) lineNumber;\n    }\n\n    @Override\n    public int compareTo(PhoneNumber pn) {\n        if (areaCode  pn.areaCode)\n            return 1;\n\n        if (prefix  pn.prefix)\n            return 1;\n\n        if (lineNumber  pn.lineNumber)\n            return 1;\n\n        return 0;\n    }\n}\n可以改进如下：\npublic int compareTo(PhoneNumber pn) {\n    int areaCodeDiff = areaCode - pn.areaCode;\n    if (areaCodeDiff != 0)\n        return areaCodeDiff;\n\n    int prefixDiff = prefix - pn.prefix;\n    if (0 != prefixDiff)\n        return prefixDiff;\n\n    return lineNumber - pn.lineNumber;\n}\n使用这种方法的时候需要注意，有符号的32位整数还不足以大到能够表达任意两个32位整数的差值，如果i是一个很大的正整数，j是一个很小的负整数，i-j有可能会溢出，并且返回一个负值。\n\n\n\n结论\n在实现Comparable接口时，应该遵守这些规范，特别是在做等同性测试的时候，要和equals等同性测试结果保持一致。\n\n\n"},"第三章 类和接口/13.使类和成员的可访问性最小化.html":{"url":"第三章 类和接口/13.使类和成员的可访问性最小化.html","title":"13.使类和成员的可访问性最小化","keywords":"","body":"\n问题\n要区分设计良好的模块和设计不好的模块，最重要的因素在于，这个模块对于外部其他模块而言，是否隐藏其内部数据和其他细节。设计良好的模块会隐藏所有的实现细节，把它的API于它的实现清晰的隔离起来，模块之间只通过它们的API进行通信，那么，在设计类和成员时有怎样的设计原则？\n\n解决\n设计类和成员有这样几个基本原则：\n\n尽可能使每个类或者成员不被外界访问，应该使用与你正在编写的软件的对应功能相一致的、尽可能最小的访问级别；对于成员（域、方法、嵌套类或者嵌套接口）有四种访问级别：1. private--在该类中私有访问；2. 默认级别--包级访问；3. protected访问级别--该类的子类或者包类所有类均可访问到；4.public--在任何地方均可访问到；\n如果类中覆盖了父类中的方法，那么子类中的访问级别不得低于父类中的访问级别，这样就可以保证在任何使用到父类实例的地方可以继续使用子类。如果一个类实现了某接口，那么在类中所有的接口的方法都必须是public的；\n实例域决不能是公有的，如何非final实例域指向了可变对象，并且该实例域为public的话，那么包含该实例域的类就是线程不安全的；\n\n\n总结\n总之，在设计类和成员时，应该尽可能的降低可访问性，除了公有静态final域的特殊情形之外，公有类都不应该包含公有域，并且要确保公有的静态final域所引用的对象是不可变的。\n\n\n"},"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html":{"url":"第三章 类和接口/14.在公有类中使用访问方法而非公有域.html","title":"14.在公有类中使用访问方法而非公有域","keywords":"","body":"\n问题\n有这样一个反例：\nclass Point {\n    public double x;\n    public double y;\n}\n如上这样的类绝不应该声名为public，因为一旦声名为了public，该类中所有的数据就全部暴露出来，并且无法改变它的数据表示法，也无法强加任何约束条件，当被访问的时候，无法采取任何辅助措施，这么多问题，归结原因就是因为如果类声明不当，那么可能会将整个数据域全部暴露给客户端。虽然，对于可变类来说，应该用包含私有域和仅有设置方法的类代替：\nclass Point {\n    private double x;\n    private double y;\n\n    public Point(double x, double y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    public double getX() { return x; }\n    public double getY() { return y; }\n\n    public void setX(double x) { this.x = x; }\n    public void setY(double y) { this.y = y; }\n}\n那么，对类中的数据域的访问级别应该如何设计？\n\n解决\n\n如果类的数据域可在它所在的包外部进行访问，就提供访问方法，这样可以保留该类内部表示的灵活性。如果公有类暴露了它的数据域，要想将来想改变公有类的内部数据接口，那是不太可能的事情了，因为使用公有类的数据域已经遍布整个系统中了；\n对于公有类有一个约定，公有类永远都不应该暴露可变的域。\n\n\n结论\n公有类永远都不应该暴露可变的域，有时候会需要用包级私有的或者私有的嵌套类来暴露域，无论这个类的域是可变的还是不可变的。\n\n\n"},"第三章 类和接口/15.使可变性最小化.html":{"url":"第三章 类和接口/15.使可变性最小化.html","title":"15.使可变性最小化","keywords":"","body":"\n问题\n不可变类是其实例不能被修改的类，没有实例中所包含的数据域，在实例被创建的时候被初始化，且在实例的生命周期中不能被修改。JAVA中有许多不可变类，如String，值的基本包装类型，BigInteger和BigDecimal等，不可变类是线程安全的。不可变有很多优点，那么设计不可变类的原则有哪些？\n\n解决\n\n设计不可变类有以下几条规则：\n\n不要提供任何修改实例数据域的setter方法；\n保证类不会被扩展：防止子类恶意修改实例对象，应该禁止类被子类扩展，可以将其定义为final；或者让类所有的构造器都变成私有的或者包级私有的，并添加公有的静态工厂来代替公有的构造器；\n所有的域都是final的；\n所有的域都成为私有的，这样可以防止客户端获得访问被域引用的可变对象的权限，并防止客户端修改这些对象；\n确保对于任何可变组件的互斥性访问：如果类具有指向可变对象的域，则必须确保客户端无法获得指向这些对象的引用；\n\n\n示例\n例如，String不可变类的具体实现为：\npublic final class String\n    implements java.io.Serializable, Comparable, CharSequence\n{\n    /** The value is used for character storage. */\n    private final char value[];\n    /** The offset is the first index of the storage that is used. */\n    private final int offset;\n    /** The count is the number of characters in the String. */\n    private final int count;\n    /** Cache the hash code for the string */\n    private int hash; // Default to 0\n    ....\n    public String(char value[]) {\n        this.value = Arrays.copyOf(value, value.length); \n     }\n    ...\n     public char[] toCharArray() {\n     // Cannot use Arrays.copyOf because of class initialization order issues\n        char result[] = new char[value.length];\n        System.arraycopy(value, 0, result, 0, value.length);\n        return result;\n    }\n    ...\n}\n如上代码所示，可以观察到以下设计细节:\n\nString类被final修饰，不可继承\nstring内部所有成员都设置为私有变量\n不存在value的setter\n并将value和offset设置为final。\n当传入可变数组value[]时，进行深拷贝而不是直接将value[]复制给内部变量.\n获取value时不是直接返回对象引用，而是返回对象的copy.\n\n\n\n\n结论\n不可变类有很多好处，因此合适的适用场景下，可以考虑将类设计生不可变类，并遵守不可变类的设计原则。\n\n\n"},"第三章 类和接口/16.复合优于继承.html":{"url":"第三章 类和接口/16.复合优于继承.html","title":"16.复合优于继承","keywords":"","body":"\n问题\n当通过子类继承父类并不是代码重用的最好手段，有这样的缺点：1. 与方法调用不同的是，继承打破封装性。子类依赖于父类，如果父类的具体实现细节改变，子类也会跟着相应改变。除非父类就是专门为扩展而设计的，并且有良好的文档说明；2. 父类方法中的”自用性“问题，导致的子类方法逻辑出错，比如统计HashSet自创建以来插入了多少个元素，需要覆盖add()方法和addAll()方法：\npublic class TestHashSet extends HashSet {\n    private int count = 0;\n\n    public TestHashSet(int initCap, float loadFactor) {\n        super(initCap, loadFactor);\n    }\n\n    @Override\n    public boolean add(E e) {\n        count++;\n        return super.add(e);\n    }\n\n    @Override\n    public boolean addAll(Collection c) {\n        count += c.size();\n        return super.addAll(c);\n    }\n\n    public int getCount() {\n        return count;\n    }\n\n    public static void main(String[] args) {\n        TestHashSet hashSet = new TestHashSet(16, 0.75f);\n        hashSet.addAll(Arrays.asList(new String[]{\"1\",\"2\",\"3\"}));\n        System.out.println(hashSet.getCount());\n    }\n}\n按照预想的会打印输出3，但实际上打印输出6。这是因为，addAll()方法内部实现调用了add()方法，因此总共的次数就是3+3=6。这种情况就是父类方法中”自用性“导致的。那么，针对由继承带来的问题应该如何解决？\n\n解决\n针对继承带来的问题，可以采用复合的方式进行解决，即不用扩展现有的类，而是在新的类中增加一个私有域，它引用现有类的一个实例。因此现有类变成了一个新类的一个组件，新类中的每个实例方法就可以调用被包含的类的实例方法，并返回相应的结果，这称之为转发。\n采用复合/转发的方式重写上面的TestHash，包含了两个部分：新类本身以及被包含的转发类：\n// Wrapper class - uses composition in place of inheritance\npublic class InstrumentedSet extends ForwardingSet {\n    private int addCount = 0;\n    public InstrumentedSet(Set s) {\n        super(s);\n    }\n    @Override\n    public boolean add(E e) {\n        addCount++;\n        return super.add(e);\n    }\n    @Override\n    public boolean addAll(Collection c) {\n        addCount += c.size();\n        return super.addAll(c);\n    }    \n    public int getAddCount() {\n        return addCount;\n    }\n}\n// Reusable forwarding class\npublic class ForwardingSet implements Set {\n    private final Set s;\n    public ForwardingSet(Set s) { this.s = s; }\n    public void clear() { s.clear(); }\n    public boolean contains(Object o) { return s.contains(o); }\n    public boolean isEmpty() { return s.isEmpty(); }\n    public int size() { return s.size(); }\n    public Iterator iterator() { return s.iterator(); }\n    public boolean add(E e) { return s.add(e); }\n    public boolean remove(Object o) { return s.remove(o); }\n    public boolean containsAll(Collection c) { return s.containsAll(c); }\n    public boolean addAll(Collection c) { return s.addAll(c); }\n    public boolean removeAll(Collection c) { return s.removeAll(c); }\n    public boolean retainAll(Collection c) { return s.retainAll(c); }\n    public Object[] toArray() { return s.toArray(); }\n    public  T[] toArray(T[] a) { return s.toArray(a); }\n    @Override\n    public boolean equals(Object o) { return s.equals(o); }\n    @Override\n    public int hashCode() { return s.hashCode(); }\n    @Override\n    public String toString() { return s.toString(); }\n}\n在上面这个例子里构造了两个类，一个是用来扩展操作的包裹类，一个是用来与现有类进行交互的转发类，可以看到，在现在这个实现中包裹类不再直接扩展Set，而是扩展了他的转发类，而在转发类内部，现有Set类是作为它的一个数据域存在的，转发类实现了Set接口，这样它就包括了现有类的基本操作。每个转发动作都直接调用现有类的相应方法并返回相应结果。这样就将信赖于Set的实现细节排除在包裹类之外。有的时候，复合和转发的结合被错误的称为\"委托(delegation)\"。从技术的角度来说，这不是委托，除非包装对象把自身传递给被包装的对象。\n\n什么时候使用继承？\n只有当子类真正是超类的子类型(subtype)时，才适合用继承。对于两个类A和B，只有当两者之间确实存在\"is-a\"的关系的时候，类B才应该扩展A。如果打算让类B扩展类A，就应该确定一个问题：B确实也是A吗？如果不能确定答案是肯定的，那么B就不应该扩展A。如果答案是否定的，通常情况下B应该包含A的一个私有实例，并且暴露一个较小的、较简单的API：A本质上不是B的一部分，只是它的实现细节而已(使用API的客户端无需知道)。\n\n\n\n总结\n简而言之，继承的功能非常强大，但是也存在诸多问题，因为它违反了封装原则。只有当子类和超类之间确实存在子类型的关系时，使用继承才是恰当的。即使如此，如果子类和超类处在不同的包中，并且超类并不是为了继承而设计的，那么继承将会导致脆弱性。为了避免这种情况，可以使用复合和转发机制来代替继承，尤其是当存在适当的接口可以实现包装类的时候。包装类不仅比子类更加健壮，而且功能也更强大\n\n\n"},"第三章 类和接口/17.要么为继承而设计，并提供文档说明，要么就禁止继承.html":{"url":"第三章 类和接口/17.要么为继承而设计，并提供文档说明，要么就禁止继承.html","title":"17.要么为继承而设计，并提供文档说明，要么就禁止继承","keywords":"","body":"\n问题\n在16条中阐述了贸然的将不是为了继承而设计的类进行继承，而实现子类化，是多么的危险，那么，在实际开发中，针对继承而设计的类怎样的处理才算是安全可靠的？\n\n解决\n\n对于专门为了继承而设计并且具有良好文档说明的类而言，该类的文档必须精确地描述覆盖每个方法所带来的影响。该类必须有文档说明它可覆盖的方法的自用性。对于每个公有的或受保护的方法或者构造器，它的文档必须指明该方法或者构造器调用了哪些可覆盖的方法，是以什么顺序调用的，每个调用的结果又是如何影响后续的处理过程的。更一般的，类必须在文档中说明，在哪些情况下它会调用可覆盖的方法。\n关于程序文档的格言：好的API文档应该描述一个给定的方法做了什么工作，而不是描述它是如何做到的。由此看来，上面的这段文档违背了这一格言，这正是继承破坏了封装性所带来的不幸后果，因为在上面这段文档中它必须要说明清楚调用可覆盖方法所带来的影响。所以，为了设计一个类的文档，以便它能够被安全的子类化，必须描述清楚那些有可能未定义的实现细节。\n还要注意，因继承而需要的特殊文档会打乱正常的文档信息，普通的文档被设计用来让程序员可以创建该类的实例，并调用类的方法。而特殊文档看起来混用了很多内容。为了允许继承，类还必须遵守其他的一些约束。构造器决不能调用可被覆盖的方法，无论是直接调用还是间接调用。这是因为超类的构造器在子类的构造器之前运行，所以，子类中覆盖版本的方法将会在子类的构造器运行之前就先被调用。如果该覆盖版本的方法信赖于子类构造器所执行的任何初始化操作，该 方法将不会如预期执行；\n对于那些并非为了安全地进行子类化而设计和编写文档的类，要禁止子类化。有两种办法可以禁止子类化：第一，把这个类声名为final。第二、把所有的构造器都声名为private，或者包级私有并增加一些静态工厂来替代构造器。\n\n\n结论\n\n如果具体的类没有实现标准的接口，那么禁止继承可能会给有些程序员带来不便，如果认为必须允许从这样的类继承，一种合理的办法就是确保这个类永远不会调用它的任何可覆盖的方法，并在文档中说明这一点。否则，就禁止被子类化。\n针对自用性问题，也可以机械的消除类中可覆盖方法的自用特征，而不改变它们的行为。将每个可覆盖方法的代码体移动到一个私有的辅助方法中。并且让每个可覆盖的方法调用它的私有辅助方法。然后，用”直接调用可覆盖方法的私有辅助方法“来代替”可覆盖方法的每个自用调用“。\n\n\n\n"},"第三章 类和接口/19.接口只用于定义类型.html":{"url":"第三章 类和接口/19.接口只用于定义类型.html","title":"19.接口只用于定义类型","keywords":"","body":"\n问题\n当类实现接口时，接口就充当可以引用这个类的实例类型。因此，类实现了接口，就表明客户端对这个类的实例可以实施某些动作。为了任何其他目的而定义的接口是不恰当的。那么，在实际开发中存在哪些定义接口不恰当的方式？\n\n解决\n使用接口一种典型的错误方式就是：常量接口。常量接口(constant interface)：这种接口不包含任何方法，它只包含静态的final域，每个域都导出一个常量。\n常量接口是对接口的一种不良使用，主要有这样两个原因：\n\n类在内部使用某些常量，纯粹是实现细节，实现常量接口，会导致把这样的实现细节泄露到该类的导出API中，因为接口中所有的域都是及方法public的。\n类实现常量接口，这对于这个类的用户来讲并没有实际的价值。实际上，这样做返回会让他们感到更糊涂，这还代表了一种承诺：如果在将来的发行版本中，这个类被修改了，它不再需要使用这些常量了，依然必须实现这个接口，以确保二进制兼容性。如果非final类实现了常量接口，它的所有子类的命名空间都受到了污染。Java平台类库中存在几个常量å接口，如java.io.ObjectStreamConstants，这些接口都是反面典型，不值得效仿。 \n\n那既然不适合存在全部都是导出常量的常量接口，那么如果需要导出常量，它们应该放在哪里呢？\n\n如果这些常量与某些现有的类或者接口紧密相关，就应该把这些常量添加到这个类或者接口中，注意，这里说添加到接口中并不是指的常量接口。\n\n在Java平台类库中所有的数值包装类都导出MIN_VALUE和MAX_VALUE常量。如果这些常量最好被看作是枚举类型成员，那就应该用枚举类型来导出。\n\n使用不可实例化的工具类来导出这些常量，例如：\npublic class PhysicalConstants {\n    private PhysicalConstants() {}\n    public static final double AVOGADROS_NUMBER = 6.23156412e23;\n    public static final double BOLTZMANN_CONSTANT = 1.12588456e-23;\n}\n\n\n\n结论\n接口只适用被用来定义类型，不应该被用来导出常量。\n\n\n"},"第三章 类和接口/20.类层次优于标签类.html":{"url":"第三章 类和接口/20.类层次优于标签类.html","title":"20.类层次优于标签类","keywords":"","body":"\n问题\n有时候通过一个标签域，让一个类实现多种风格的类的实例，这种类称之为标签类。\npublic class Figure {\n    enum Shape { RECTANGLE,CIRCLE };\n    //Tag field - the shape of this figure\n    final Shape shape;\n    //These fields are used only if shape is RECTANGLE\n    double length;\n    double width;\n    //This field is used only if shape is CIRCLE\n    double radius;\n    //Constructor for circle\n    Figure(double redius){\n        shape=Shape.CIRCLE;\n        this.radius=radius;\n    }\n    //Constructor for rectangle\n    public Figure (double lenght,double width) {\n       shape=Shape.RECTANGLE;\n        this.length=lenght;\n        this.width=width;\n    }\n    double area(){\n        switch (shape){\n            case RECTANGLE:return length*width;\n            case CIRCLE:return Math.PI*(radius * radius);\n            default:throw new AssertionError();\n        }\n    }\n}\n如上例就是一个典型的标签类，一个类通过标签域shape来实现了圆形和矩形这两个不同类型的实例。 这种标签类（tagged class）有着许多的缺点。它们中充斥着样板代码，包括枚举声明、标签域以及条件语句。\n\n多个实现乱七八糟地挤在了单个类中，破坏了可读性；\n增加了内存的占用，因为实例承担着属于其他风格的不相关域；\n域不能做成final的，除非构造器初始化相关的域，如果不需要初始化相关域，那就会需要增加更多的样板代码；\n无法给标签类添加风格，除非可以修改它的源文件，如果一定要添加风格，就必须记得给每个条件语句都添加一个条件，否则类就会在运行时失败；\n数据类型没有提供任何关于其风格的线索；\n\n标签类过于冗长、容易出错，并且效率低下。\n\n解决\nJava提供了其他更好的方法来定义能表示多种风格对象的单个数据类型：子类型化。标签类正是类层次的一种简单效仿。 为了将标签类转化成类层次，有这样一些步骤：\n\n首先要为标签类中的每一个方法都定义一个包含抽象方法的抽象类，这每个方法的行为都依赖于标签值。在Figure类中，只有一个这样的方法：area。 这个抽象类是类层次的根；\n\n如果还有其他的方法行为不依赖于某个标签的值，就把这样的方法放到这个类中；\n\n同样的，如果所有的方法都用到了某些数据域，就应该把他们放在这个类中。\n将上面的标签类Figure转换成类层次结构：\n\n\nabstract class Figure {\n    abstract double area();\n}\nclass Circle extends Figure {\n    final double radius;\n    public Circle(double radius) {\n        this.radius = radius;\n    }\n    double area() {\n        return Math.PI * (radius * radius);\n    }\n}\nclass Rectangle extends Figure {\n    final double length;\n    final double width;\n    public Rectangle(double length, double width) {\n        this.length = length;\n        this.width = width;\n    }\n    double area() {\n        return length * width;\n    }\n}\n这个类层次纠正了前面提到过的标签类的所有缺点：\n\n这段代码简洁而清楚，没有包含在原来的版本中所见到的所有样本代码；\n每个类型的实现都配有自己的类，这些类都没有受到不相关域的拖累。所有的域都是final的。编译器确保每个类的构造器都初始化它的数据域；\n对于顶层类中声名的每个抽象方法，都确保有一个实现。这样就杜绝了因为遗漏switch case而导致运行时失败的可能；\n多个程序员可以独立的扩展层次结构。并且不用访问根类的源代码就能相互操作；\n每种类型都有一种相关的独立的数据类型，就是相应的子类类型，允许程序员指明变量的类型，限制变量，并将参数输入到特殊的类型；\n类层次的另一个好处在于，它们可以用来反映类型之间本质上的层次关系。有助于增强灵活性，并进行更好的编译时类型检查。\n\n\n结论\n标签类很少有适用的时候。当想要编写一个包含显示标签域的类时，应该考虑一下，这个标签是否可以被取消，是否可以用类层次来代替。当遇到一个包含标签域的现有类时，就要考虑一下将它重构到一个层次结构中去。\n\n\n"},"第三章 类和接口/21.用函数对象表示策略.html":{"url":"第三章 类和接口/21.用函数对象表示策略.html","title":"21.用函数对象表示策略","keywords":"","body":"\n问题\n有些语言支持函数指针、代理、lambda表达式，或者支持类似的机制，允许程序把”调用特殊函数的能力”储存起来并传递这种能力。最常用的例子就是比较函数，通过传入不同的比较策略会得到不同的比较结果，这也正是策略模式的一个例子。可是Java没有提供函数指针。\n\n解决方案\nJava没有提供函数指针，但是可以用对象引用实现同样的功能。调用对象上的方法通常是执行该对象上的某个操作。然而，我们也可能定义这样一种对象，它的方法执行其他对象上的操作。如果一个类仅仅导出这样的一个方法，它的实例上就等同于一个指向该方法的指针。这样的实例被称为函数对象。考虑这样一个类：\n\nclass StringLengthComparator {\n    public int compare(String s1, String s2) {\n        return s1.length() - s2.length();\n    }\n}\n\n\n在这里，指向StringLengthComparator对象的引用可以被当作是一个指向该对象内部比较器compare的“函数指针”，可以在任意一对字符串上被调用，StringLengthComparator实例是用于比较字符串比较操作的具体策略。对于这种具体策略类，它的所有实例在功能上是相互等价的，所以根据前面的原则，将它作成是Singleton是非常合适的：\nclass StringLengthComparator {\n    private StringLengthComparator() {}\n    public static final StringLengthComparator \n        INSTANCE = new StringLengthComparator();\n    public int compare(String s1, String s2) {\n        return s1.length() - s2.length();\n    }\n}\n但是，用这述这种方法有个问题，就是规定了参数的类型，这样就无法传递任何其他的比较策略。相反，对于这种情况，应该定义一个Comparator接口，并修改StringLengthComparator来实现这个接口。换句话说，在设计具体的策略类时，还需要定义一个策略接口：\n// Strategy interface\npublic interface Comparator {\n    public int compare(T t1, T t2);\n}\n此时，前面的具体策略类声名如下：\nclass StringLengthComparator implements Comparator {\n    ......\n}\n 这样，在传递具体策略类的对象的时候，只需要将参数类型定为接口类型(使用接口做类型定义)，现在可以传递其他的比较策略了, 具体策略类往往使用匿名类声明：\nArrays.sort(stringArray, new Comparator() {\n    public int compare(String s1, String s2) {\n        return s1.length() - s2.length();\n    }\n});\n这里存在一个问题，就是在每次执行调用的时候都会创建一个新的实例。如果它被重复执行，那就应该考虑将函数对象存储到一个私有的静态final域里并重用它。这样做的另一个好处就是为这个函数对象取一个有意义的声明。\n因为策略接口被用做所有具体策略实例的类型，所以我们并不需要为了导出具体策略而把具体策略类做成公有的。可以导出公有的静态域或者静态工厂方法，其类型是策略接口，具体的策略类可以是宿主类的私有嵌套类： \nclass Host {\n    private static class StrlenCmp implements Comparator, Serializable {\n        public int compare(String s1, String s2) {\n            return s1.length() - s2.length();\n        }\n    }\n    // Returned comparator is serializable\n    public static final Comparator STRING_LENGTH_COMPARATOR = new StrlenCmp();\n}\n\n结论\n\n函数指针的主要作用就是实现策略模式，为了在Java中实现这种模式，要声名一个接口来表示策略，并且为每个具体策略声名一个实现了该接口的类；\n当一个具体策略只被使用一次时，通常使用匿名类来声名和实例化这个具体策略；\n当一个具体策略是设计用来重复使用的时候，它的类通常就要被实现为私有的静态成员类，并通过公有的静态final域或静态工厂方法导出，其类型为策略接口。\n\n\n\n"},"第三章 类和接口/22.优先考虑静态成员类.html":{"url":"第三章 类和接口/22.优先考虑静态成员类.html","title":"22.优先考虑静态成员类","keywords":"","body":"\n问题\n嵌套类（nested class）是指被定义在另一个类的内部的类。嵌套类存在的目的应该是为它的外围类（enclosing class）提供服务。如果嵌套类将来可能会用于其他的某个环境中，它就应该是顶层类（top-level class）。嵌套类有四种：静态成员类（static member class）、非静态成员类（nonstatic member class）、匿名类（anonymous class）和局部类（local class）。除了第一种之外，其他三种都被称为内部类（inner class）。那么，在什么情况下使用应该使用哪种嵌套类才是合适的？\n\n解决方案\n\n静态成员类\n静态成员类是最简单的一种嵌套类。最好把它看作是普通的类，只是碰巧被声明在另一个类的内部而已，它可以访问外围类的所有成员，包括那些声明为私有的成员。静态成员类是外围类的一个静态成员，与其他的静态成员一样，也遵守同样的可访问性规则。如果它被声明为私有的，它就只能在外围类的内部才可以被访问。\n静态成员类的一种常见的用法就是作为公有的辅助类，仅当它的外部类一起使用时才有意义。例如，一个描述了计算器支持的各种操作的枚举。Operation枚举应该是Calculator类的公有静态成员类，然后使用Calculator类的客户端就可以用诸如Calculator.Operation.PLUS这样的名称来引用这些操作。\n私有静态成员类的一种常见用法用来代表外围类所代表的对象的组件。例如，考虑一个Map实例，他把键和值关联起来。许多Map实现的内部都有一个Entry对象，对应于map中的每个键值对。虽然每个entry都与一个map关联，但是entry上的方法并不需要访问该map。因此，使用非静态成员来表示entry是很浪费的：private修饰的静态成员类是最佳的选择。如果不小心漏掉了entry声明中的static修饰符，该map依然可以工作，但是每个entry中将会包含一个指向该map的引用，这样就浪费了空间和时间。\n\n非静态成员类\n从语法上讲，静态成员类和非静态成员类之间唯一的区别是，静态成员类的声明中包含了修饰符static。尽管他们的语法非常的相似，但是这两种嵌套类有很大的不同。非静态成员类的每个实例都隐含着与外围类的一个外围实例（enclosing instance）相关联。在非静态成员类的实例方法内部，可以调用外围实例上的方法，或者利用修饰过的this获得外围实例的引用。如果嵌套类的实例可以在外围类的实例之外独立存在，这个嵌套类就必须是静态成员类，在没有外围实例的情况下，要想创建非静态成员类的实例是不可能的。\n当非静态成员类的实例被创建的时候，它和外围实例之间的关联关系也随之建立起来；而且，这种关联关系以后也不能被修改。通常情况下，当在外围类的某个实例方法的内部调用了非静态成员类的构造器时，这种管理就自动建立起来。使用表达式enclosingInstance.new MemberClass(args)来手工建立这种关系也是有可能的，但是很少使用。\n非静态成员类常见用法是定义一个Adapter，它允许外部类的实例被看作是另一个不相关的类的实例。例如，Map接口的实现往往使用非静态成员类来实现它们的集合视图（collection view），这些集合视图是由Map的keySet、entrySet和Values方法返回的。同样地，诸如Set和List这种集合接口的实现往往也是用非静态成员类来实现他们的迭代器（iterator）：\npublic class MySet extends AbstractSet\n{\n    public Iterator iterator(){\n        return new MyIterator();\n    }\n    private class MyIterator implements Iterator{\n    }\n}\n静态成员类 VS 非静态成员类\n\n如果声明成员类不要求访问外围实例，就要始终把static修饰符放在它的生命中，使它成为静态成员类，而不是非静态成员类。如果省略了static修饰符，则每个实例都将包含一个额外的指向外围对象的引用。保存这份引用要消耗时间和空间，并且会导致外围实例在符合垃圾回收时仍然得以保留，造成内存泄漏；\n如果没有外围实例的情况下，也需要分配内部类实例，就不能使用非静态成员类，因为非静态成员类的实例必须要有一个外围实例。\n\n\n匿名类\n匿名类没有类名，它不是外围类的一个成员，并不与其他的成员一起被声明，而是在使用的同时被声明和实例化。匿名类可以出现在代码中任何允许存在表达式的地方。当且仅当匿名类出现在非静态的环境中时，它才有外围实例。但是即使它们出现在静态的环境中，也不可能拥有任何静态成员。\n匿名类的适用性受到诸多的限制。除了在它们被声明的时候之外，是无法将它们实例化的，你不能执行instanceof测试。你无法声明一个匿名类来实现多个接口，或者扩展一个类，并同时扩展类和实现接口。由于匿名类出现在表达式当中，它们必须保持简短——大约10行或者更少些——否则会影响程序的可读性。\n匿名类多用于表示具体策略的函数对象，比如Arrays.sort()方法中定义的比较器Comparator，还可用于创建Thread时的Runnable等。\n\n局部类\n局部类是四种嵌套类中用的最少的类。在任何“可以声明局部变量”的地方，都可以声明局部类，并且局部类也遵守同样的作用域规则。局部类与其他三种嵌套类中的每一种都有一些共同的属性。与成员类一样，局部类有名字，可以被重复使用。与匿名类一样，只有当局部类实在非静态环境中定义的时候，才有外围实例，它们也不能包含静态成员。与匿名类一样，它们必须简短以便不会影响到可读性。\n\n\n\n总结\n简而言之，共有四种不同的嵌套类，每一种都有自己的用途。\n\n如果一个嵌套类需要在单个方法之外仍然可见的，或者它太长了，不适合于放在方法内部，就应该使用成员类；\n如果成员类的每个示例都需要一个指向外围实例的引用，就要把成员类做成非静态的；否则，就做成静态的；\n假设调用一个方法（如Array.sort()），该方法的入参需要创建一个实例，并且已经有一个确定的类型，创建该类的实例时就可以采用创建匿名类的方式来创建该类的实例。如果没有一个现有的类型，就设计成局部类。\n\n\n\n"},"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html":{"url":"第四章 泛型/23.使用泛型时不要使用原生态类型（raw type）.html","title":"23.使用泛型不要使用原生类型","keywords":"","body":"\n问题\n泛型指声明中具有一个或者多个类型参数的类或者接口。每种泛型定义一组参数化的类型，构成格式为：类或者接口的名称，接着用尖括号<>把实际类型参数列表括起来。例如List，是一个参数化的类型，表示元素类型为String的列表，（String是与形式类型参数E相对应的实际类型参数）。\n每个泛型都定义一个原生态类型，即不带任何实际类型参数的泛型名称，如List对应的原生态类型是List。\n那么，是否应该使用原生态类型？\n\n解决方案\n\n泛型的优势在于：1. 当实例对象插入到集合中时会进行类型判断，可以将类型不匹配问题在编译时期就可以知道，而不至于等到运行时出现ClassCastException；2. 由于集合已经知道装载的是哪种类型的实例对象，因此从集合中取出对象时就无需再进行转换；\n\n使用原生态类型虽然也是合法的，但是不应该这样做，因为这会失去泛型在安全性和表述性方面的所有优势。原生态类型存在的理由是因为老代码的移植兼容性。\nList  nameList = new ArrayList();\nnameList.add(1);   \nnameList.add(\"test\");\n如上例代码，如果我们在声明泛型的时候使用了原生态类型的泛型，但是在添加数据元素一次添加了Integer，一次添加了String，编译却能通过，但是很显然会出现运行时异常。因此，如果使用原生类型，就失掉了泛型在安全性和表述性方面的所有优势。\n\n那么如何使用泛型以插入任意对象？\n虽然不应该在新代码中使用想List这样原生态类型，使用参数化的类型以允许插入任意对象，如List ，这还是可以的。\n原生态类型List和参数化类型List之间到底有什么区别呢？\n不严格的说，前者逃避了泛型的检查，后者明确告诉编译器，它能够持有任意类型的对象。虽然你可以将List传递给类型List的参数，但是不能将它传给类型List的参数。这是因为泛型有子类型化规则，List 是原生态类型List的一个子类型，而不是参数化类型List的子类型。因此，如果使用像List这样的原生态类型，就会丢失类型安全性，但是如果使用像List这样的参数化类型，则不会丢失类型安全性。例如下例代码：\npublic static void main(String[] args) {\n        List strList = new ArrayList();\n        unsafeAdd(strList, new Integer(20));\n        String str = strList.get(0);\n}\n\nprivate static void unsafeAdd(List list, Object o){\n    list.add(o);\n}\n上例代码中使用了原生态泛型，编译可以通过，但是很显然由于添加了Integer类型，在get集合元素的时候会出现ClassCastException。但是如果使用List的话，由于List并不是List的子类型，编译就不会通过，这样的代码就更加安全。\n\n无限制通配符\n要使用泛型，但不确定或者不关心实际的类型参数，就可以使用一个问号替代。例如，泛型Set 的无限制通配符类型为 Set。这是最普通的参数化Set集合，可以持有任何集合。通配符类型是安全的，原生态类型不安全。由于可以将任何元素放进原生态类型的集合中，因此很容易破坏改集合的类型约束条件。\n\n\n\n\n\n结论\n\n总之，使用原生态类型会在运行时导致异常，因此不要再新代码中使用。但就有人问既然这么不推荐使用，为什么还要存在原生态类型呢？原生态类型只是为了与引入泛型之前的遗留代码进行兼容和互换而提供的；\nSet 是个参数化类型，所以可以包含任何对象类型的一个集合；Set 则是一个通配符类型，表示只能包含某种未知对象类型的一个集合；Set则是原生态类型，它脱离了泛型安全性检查规则。前两个是安全的，最后一种不安全。\n\n\n\n"},"第四章 泛型/24.消除非受检警告.html":{"url":"第四章 泛型/24.消除非受检警告.html","title":"24.消除非受检警告","keywords":"","body":"\n问题\n用泛型编程的时候，会遇到许多的编译器警告：非受检强制转化警告(unchecked cast warning)、非受检方法调用警告、非受检普通数组创建警告以及非受检转换警告(unchecked conversion warnings)，要尽可能消除每一个警告，以确保代码安全。\n\n解决方案\n\n仔细检查代码逻辑，确定在类型转换上没有错误，尽力通过IDE提示，消除每一个警告；\n如果无法消除警告，同时又可以证明引起警告的代码是类型安全的。可以用一个@SuppressWarnings(\"unchecked\")注解来禁止这条警告。SuppressWarnings注解可以用任何粒度的级别中，从单独的局部变量声明到整个类都是可以的。应该始终在尽可能小的范围内使用SuppressWarnings注解，永远不要在整个类上使用SuppressWarnings注解，这么做很可能会掩盖了重要的警告，以更小粒度的使用该注解；\n如果发现要在长度不止一行的方法或构造器中使用SuppressWarnings注解，可以将它移到一个局部变量的声名中。SuppressWarnings注解方在return 语句中是非法的，可以通过增加一个局部变量，在变量上使用SuppressWarnings注解，然后将这个变量return的方式解决；\nSuppressWarnings注解的时候都应该添加一条注释以说明为什么这么做是安全的，这样可以帮助其他人理解代码，更重要的是，可以尽量减少其他人修改代码后导致计算不安全的概率。\n\n\n结论\n总之，非受检警告很重要，不要忽略它们。每一条警告都表示可能在运行时抛出ClassCastException异常。要尽最大的努力去消除这些警告。如果无法消除但是可以证明引起警告的代码是安全的，就可以在尽可能小的范围中，使用＠SuppressWarnings(\"unchecked\")注解来禁止警告，但是要把禁止的原因记录下来。\n\n\n"},"第四章 泛型/25.List优于数组.html":{"url":"第四章 泛型/25.List优于数组.html","title":"25.List优于数组","keywords":"","body":"\n问题\n数组和泛型化的列表在实际使用中经常会被用来装载数据元素，但是不清楚数组和泛型化List之间的区别，经常会造成数组和List的混用；\n\n原因及解决方法\n数组和泛型化数组的主要区别有：\n\n数组是协变的而泛型是不可变的，协变的意思是如果Sub为super的子类型，那么数组类型Sub[]就是super[]的子类型，不可变的意思是对于任意两个不同的类型Type1和Type2，List既不是List的子类型，也不是List的超类型。可以看下面这个例子：\n// 数组是协变的，因此编译可以通过，但是会出现运行时异常\nObject[] objectArray = new Long[1];\nobjectArray[0] = \"I don't fit in\"; // Throws ArrayStoreException\n\n// List是不可变的，编译无法通过\nList ol = new ArrayList(); // Incompatible types\nol.add(\"I don't fit in\");\n从上例的代码可以看出，数组是协变的，因为Long是Object的子类型，所以Long[]是Object[]的子类型，第一段代码会编译通过。但是运行时，objectArray运行时类型是Long的List，插入String类型的数据就会抛出ArrayStoreException。而List是不可变的，泛型在运行时会类型擦除，类型检查会放在编译期间，因此第二段代码在编译期间就不会通过，将问题暴露在编译期间，这样才是可靠的。\n\n数组是具体化的(reified)，数组在运行时才会约束数据类型是否匹配。泛型则是通过擦除(erasure)来实现，因此泛型只在编译时强化它们的类型信息，并在运行时丢弃（或者擦除）它们的元素类型约束。类型擦除主要是为了兼容之前没有泛型特性的代码。\n\n基于以上两点原因，创建泛型、参数化类型或者是类型参数的数组都是非法的。如：new List[]、new List[]和new E[]都是非法的。这些在编译的时候会产生一个generic array creating错误。为什么会禁止行为？\n//假设可以创建参数化类型数组\nList[] stringLists = new List[1];\nList intList = Arrays.asList(42);\n//由于数组是协变的，可以赋值\nObject[] objects = stringLists;\n//数组赋值在运行时进行，由于initList在运行时会擦除\n//类型信息，转换为List，因此可以插入到数组中\nobjects[0] = intList;\n//取数据时目标类型是String，但是实际类型为Integer，\n//因此就会出现ClassCastException\nString s = stringLists[0].get(0);\n针对上面的分析，可以看出禁止创建参数化类型数组等情况是合理的，能够将错误暴露在编译期。像E、List、List这样的类型应称作不可具体化的类型。唯一可具体化的参数化类型是无限制的通配符类型，如List和Map。虽然不常用，但是创建无限制通配类型的数组是合法的。\n\n\n\n结论\n数组和泛型有着非常不同的类型规则。数组是协变且可具体化的，泛型是不可变的且是可被擦除的。因此，数组提供了运行时的类型安全，但是没有编译时的类型安全，反之，泛型也一样，一般来说，数组和泛型不能很好的混合使用，如果发现自己将它们混合起来使用，并且得到了编译时错误或警告，那么就要考虑用列表代替数组。\n\n\n"},"第五章 枚举和注解/30.使用枚举代替int 常量.html":{"url":"第五章 枚举和注解/30.使用枚举代替int 常量.html","title":"30.使用枚举代替int常量","keywords":"","body":"\n问题\n在枚举类型出现之前，一般都常常使用int常量或者String常量表示列举相关事物。如：\npublic static final int APPLE_FUJI = 0;\npublic static final int APPLE_PIPPIN = 1;\npublic static final int APPLE_GRANNY_SMITH = 2;\n\npublic static final int ORANGE_NAVEL = 0;\npublic static final int ORANGE_TEMPLE = 1;\npublic static final int ORANGE_BLOOD = 2;1234567\n针对int常量以下不足： \n\n在类型安全方面，如果你想使用的是ORANGE_NAVEL，但是传递是APPLE_FUJI，编译器并不能检测出错误； \n因为int常量是编译时常量，被编译到使用它们的客户端中。若与枚举常量关联的int发生了变化，客户端需重新编译，否则它们的行为就不确定； \n没有便利方法将int常量翻译成可打印的字符串。这里的意思应该是比如你想调用的是ORANGE_NAVEL，debug的时候显示的是0，但你不能确定是APPLE_FUJI还是ORANGE_NAVEL；\n如果你想使用String常量，虽然可以打印，但是字符串的比较是对性能有较大的影响的。另外，容易将字符串硬编码到代码之中；\n\n那么，针对这样的情况应该怎样解决？\n\n解决\n针对这样的情况，可以采用enum来解决。\n\nenum使用方法\n\nenum默认构建\n以上面的APPLE、ORANGE为例，用enum重写：\npublic enum Apple {\n    APPLE_FUJI,\n    APPLE_PIPPIN,\n    APPLE_GRANNY_SMITH;\n}\n\npublic enum Orange {\n    ORANGE_NAVEL,\n    ORANGE_TEMPLE,\n    ORANGE_BLOOD;\n}\n在调用的时候，直接使用enum类型，在编译的时候可以直接指定类型，否则编译不通过；并且debug的时候，显示的是enum中的常量（APPLE_FUJI这样的），可以一眼看出是否用错；最后由于枚举导出的常量域（APPLE_FUJI等）与客户端之间是通过枚举来引用的，再增加或者重排序枚举类型中的常量后，并不需要重新编译客户端代码\n\nenum枚举数据域和方法\n在enum类中同样可以有自己的数据域和方法。\n如以太阳系为例，每个行星都拥有质量和半径，可以依据这两个属性计算行星表面物体的重量。代码如下：\npublic enum Planet {\n    MERCURY(3.302e+23, 2.439e6),\n    VENUS (4.869e+24, 6.052e6),\n    EARTH (5.975e+24, 6.378e6),\n    MARS (6.419e+23, 3.393e6),\n    JUPITER(1.899e+27, 7.149e7),\n    SATURN (5.685e+26, 6.027e7),\n    URANUS (8.683e+25, 2.556e7),\n    NEPTUNE(1.024e+26, 2.477e7);\n\n    private final double mass; // In kilograms\n    private final double radius; // In meters\n    private final double surfaceGravity; // In m / s^2\n\n    // Universal gravitational constant in m^3 / kg s^2\n    private static final double G = 6.67300E-11;\n\n    // Constructor\n    Planet(double mass, double radius) {\n        this.mass = mass;\n        this.radius = radius;\n        surfaceGravity = G * mass / (radius * radius);\n    }\n\n    public double mass() { return mass; }\n    public double radius() { return radius; }\n    public double surfaceGravity() { \n        return surfaceGravity; \n    }\n\n    public double surfaceWeight(double mass) {\n        return mass * surfaceGravity; // F = ma\n    }\n}\n\npublic class PlanetDemo {\n    public static void main(String[] args) {\n        double earthWeight = Double.parseDouble(args[0]);\n        double mass = earthWeight / Planet.EARTH.surfaceGravity();\n\n        for (Planet p : Planet.values()) {\n            System.out.printf(\"Weight on %s is %f%n\", p, p.surfaceWeight(mass));\n        }\n\n        //args[0]=30输出结果\n        //Weight on MERCURY is 11.337201\n        //Weight on VENUS is 27.151530\n        //Weight on EARTH is 30.000000\n        //Weight on MARS is 11.388120\n        //Weight on JUPITER is 75.890383\n        //Weight on SATURN is 31.965423\n        //Weight on URANUS is 27.145664\n        //Weight on NEPTUNE is 34.087906\n    }\n}\n\n\n\nenum枚举常量来分发不同的方法\n有时候会使用枚举中的值来作为逻辑条件来分发至不同的方法，如采用枚举来写加、减、乘、除的运算。代码如下：\npublic enum Operation {\n    PLUS, MINUS, TIMES, DIVIDE;\n\n    double apply(double x, double y) {\n        switch(this) {\n            case PLUS: return x + y;\n            case MINUS: return x - y;\n            case TIMES: return x * y;\n            case DIVIDE: return x / y;\n        }\n        throw new AssertionError(\"Unknown op: \" + this);\n    }\n}\n大家一开始都会这样写的。实际开发中，有很多开发者也这样写。但是有个不足：如果需要新增加运算，譬如模运算，不仅仅需要添加枚举类型常量，还需要修改apply方法。万一忘记修改了，那就是运行时错误。将代码修改如下：\npublic enum Operation {\n  PLUS {\n    @Override\n    double apply(double x, double y) {\n      return x + y;\n    }\n  },\n\n  MINUS {\n    @Override\n    double apply(double x, double y) {\n      return x - y;\n    }\n  },\n\n  TIMES {\n    @Override\n    double apply(double x, double y) {\n      return x * y;\n    }\n  },\n\n  DIVIDE {\n    @Override\n    double apply(double x, double y) {\n      return x / y;\n    }\n  };\n\n  abstract double apply(double x, double y);\n}\n每次新增加运算种类，都需要重写apply方法，这样就不会有遗漏修改。\n你可以写的更详细些：\npublic enum Operation {\n  PLUS(\"+\") {\n    @Override\n    double apply(double x, double y) {\n      return x + y;\n    }\n  },\n\n  MINUS(\"-\") {\n    @Override\n    double apply(double x, double y) {\n      return x - y;\n    }\n  },\n\n  TIMES(\"*\") {\n    @Override\n    double apply(double x, double y) {\n      return x * y;\n    }\n  },\n\n  DIVIDE(\"/\") {\n    @Override\n    double apply(double x, double y) {\n      return x / y;\n    }\n  };\n\n  private String symbol;\n  Operation(String symbol) {\n    this.symbol = symbol;\n  }\n\n  @Override\n  public String toString() {\n    return symbol;\n  }\n\n  abstract double apply(double x, double y);\n}\n\npublic class OperationDemo {\n\n  public static void main(String[] args) {\n    double x = Double.parseDouble(args[0]);\n    double y = Double.parseDouble(args[1]);\n\n    for (Operation op : Operation.values()) {\n      System.out.println(String.format(\"%f %s %f = %f%n\", x, op, y, op.apply(x, y)));\n    }\n\n    //输入2 4\n    //2.000000 + 4.000000 = 6.000000\n    //2.000000 - 4.000000 = -2.000000\n    //2.000000 * 4.000000 = 8.000000\n    //2.000000 / 4.000000 = 0.500000\n  }\n}\n一般，enum中重写了toString方法之后，enum中自生成的valueOf(String)方法不能根据枚举常量的字符串(toString生成)来获取枚举常量。我们通常需要在enum中新增个静态常量来获取。如：\npublic enum Operation {\n  PLUS(\"+\") {\n    @Override\n    double apply(double x, double y) {\n      return x + y;\n    }\n  },\n\n  MINUS(\"-\") {\n    @Override\n    double apply(double x, double y) {\n      return x - y;\n    }\n  },\n\n  TIMES(\"*\") {\n    @Override\n    double apply(double x, double y) {\n      return x * y;\n    }\n  },\n\n  DIVIDE(\"/\") {\n    @Override\n    double apply(double x, double y) {\n      return x / y;\n    }\n  };\n\n  private String symbol;\n  public static final Map OPERS_MAP = Maps.newHashMap();\n\n  static {\n    for (Operation op : Operation.values()) {\n      OPERS_MAP.put(op.toString(), op);\n    }\n  }\n\n  Operation(String symbol) {\n    this.symbol = symbol;\n  }\n\n  @Override\n  public String toString() {\n    return symbol;\n  }\n\n  abstract double apply(double x, double y);\n}\n\n\n可以通过调用Operation.OPERS_MAP.get(op.toString())来获取对应的枚举常量。\n在有些特定的情况下，此写法有个缺点，即如果每个枚举常量都有公共的部分处理该怎么办，如果每个枚举常量关联的方法里都有公共的部分，那不仅不美观，还违反了DRY原则。这就是下面的枚举策略模式。\n\n枚举策略模式\n直接上例子来分析：\nenum PayrollDay {\n    MONDAY, \n    TUESDAY, \n    WEDNESDAY, \n    THURSDAY, \n    FRIDAY,\n    SATURDAY, \n    SUNDAY;\n\n    private static final int HOURS_PER_SHIFT = 8;\n\n    double pay(double hoursWorked, double payRate) {\n        double basePay = hoursWorked * payRate;\n\n        double overtimePay; // Calculate overtime pay\n        switch(this) {\n            case SATURDAY: case SUNDAY:\n                overtimePay = hoursWorked * payRate / 2;\n                break;\n            default: // Weekdays\n                overtimePay = hoursWorked 以上代码是计算工人工资。平时工作8小时，超过8小时，以加班工资方式另外计算；如果是双休日，都按照加班方式处理工资。上面代码的写法和上一小节给出的差不多，通过switch来分拆计算。还是一样的问题，如果此时新增加一种工资的计算方式，枚举常量需要改，pay方法也需要改。按上一小节的介绍继续修改：\nenum PayrollDay {\n    MONDAY {\n        @Override\n        double pay(double hoursWorked, double payRate) {\n            double basePay = hoursWorked * payRate;\n            double overtimePay = hoursWorked 看了上面的代码，我觉得大家都不会这样写吧。其实细想一下，最主要的不同就是计算加班时间的工资方式不同，也就是分工作日和双休日的。继续修改：\npublic enum PayRoll {\n  MONDY(PayType.WEEKDAY),\n  TUESDAY(PayType.WEEKDAY),\n  WEDNESDAY(PayType.WEEKDAY),\n  THURSDAY(PayType.WEEKDAY),\n  FRIDAY(PayType.WEEKDAY),\n  SATURDAY(PayType.WEEKEND),\n  SUNDAY(PayType.WEEKEND);\n\n  private final PayType payType;\n  PayRoll(PayType payType) {\n    this.payType = payType;\n  }\n\n  double pay(double hoursWorked, double payRate) {\n    return payType.pay(hoursWorked, payRate);\n  }\n\n  private enum PayType {\n    WEEKDAY {\n      @Override\n      double overtimePay(double hoursWorked, double payRate) {\n        double overtime = hoursWorked - HOURS_PER_SHIFT;\n        return overtime 虽然看起来代码不够简洁，但是修改起来确实比较安全，不怕有遗漏。\n\n补充一点\n\n从上面可以看出，不推荐在enum中使用switch...case...来判断不同的行为。那什么时候可以使用呢？主要是适用于给外部的枚举类型增加特定于常量的行为。如，假设Operation枚举不受开发者自己控制，但是希望它有一个实例方法来返回每个运算的反运算，则可以：\npublic static Operation inverse(Operation op) {\n    switch(op) {\n        case PLUS: return Operation.MINUS;\n        case MINUS: return Operation.PLUS;\n        case TIMES: return Operation.DIVIDE;\n        case DIVIDE: return Operation.TIMES;\n        default: throw new AssertionError(\"Unknown op: \" + op);\n    }\n}\n\n结论\n与int常量相比，枚举的可读性更强，并且更加安全，功能更加强大，在实际开发中应该使用enum代替int枚举模式。\n\n\n"},"第五章 枚举和注解/32.用EnumSet代替位域.html":{"url":"第五章 枚举和注解/32.用EnumSet代替位域.html","title":"32.用EnumSet代替位域","keywords":"","body":"\n问题\n所谓位域是指利用就是用int枚举模式，将2的不同倍数赋予每个常量，这样就可以通过位操作将多个常量进行组合来表达具体的业务意义，比如下面的代码实例：\npublic class Text {\n    public static final byte STYLE_BOLD          = 1这段代码旨在通过位操作的方式将多种text风格进行组合。但是，很显然这是一种int枚举的方式，自然存在很多问题（见31条），应该使用什么样的类型数据能够替代位域？\n\n解决\n避免使用位域组合的方式的弊端，可以采用EnumSet类型数据。EnumSet支持从枚举类型中提取多个枚举常量进行组合的方式，并且这个类实现了Set接口，也具有类型安全性。使用EnumSet将上面的例子重写如下：\npublic class Text{\n    public enum Style{BOLD,ITALIC,UNDERLINE,STRIKETHROUGH}\n    public void applyStyles(Set styles){\n    //实现方案\n    }\n}\n//客户端调用该方法为\ntext.applyStyles(EnumSet.of(Style.BOLD,Style.ITALIC));\n\n结论\n当需要将多个操作（或变量）进行组合时，可以使用EnumSet来代替使用int枚举进行位域操作的方式。EnumSet类集位域的简洁和性能的优势，以及枚举类型的所有优点与一身。实际上EnumSet也有个缺点,即它无法创建不可变的EnumSet(Java1.6为止没有解决)。同时，可以用Collections.unmodifiable将EnumSet封装起来,但是间接性和性能会受到影响。\n\n\n"},"第五章 枚举和注解/33.用EnumMap代替序数索引.html":{"url":"第五章 枚举和注解/33.用EnumMap代替序数索引.html","title":"33.用EnumMap代替序数索引","keywords":"","body":"\n问题\n在31条说过在使用enum时最好不要企图通过ordinal()方法以获取枚举元素在枚举类中的索引顺序，然后在其他代码中依赖这种顺序，这样的代码是不安全的。比如代码中数组的索引依赖于enum的序数：\npublic class Herb {\n    public enum Type {\n        ANNUAL, BIENNIAL, PERENNTAL\n    }\n\n    // private static final Herb Type = null;\n    private final String name;\n    private final Type type;\n\n    Herb(String name, Type type) {\n        this.name = name;\n        this.type = type;\n    }\n\n    @Override\n    public String toString() {\n        return name;\n    }\n\n    // 数组索引顺序与枚举元素的序数强依赖\n    Herb[] garden = { new Herb(\"1\", Type.ANNUAL), new Herb(\"2\", Type.BIENNIAL), new Herb(\"3\", Type.PERENNTAL) };\n\n    Set[] herbsByType = (Set[])new Set[Herb.Type.values().length];\n    for(int i = 0;i();\n    }\n    for(Herb h:garden){\n        herbsByType[h.type.ordinal()].add(h);\n    }   \n}}\n上例中的代码旨在将Herb类型按照enum Type顺序进行排序，在构建的garden数组是与枚举元素的序数强依赖的，加入Type中的枚举元素一不小心调换了顺序，而garden并没有改变，再按照枚举元素在枚举类中的序数从garden数组中获取数据自然而然会出错。\n那么如何解决？\n\n解决\n实际上，上例是想通过枚举值作为数组的索引，是枚举到数组值之间的映射关系，枚举充当着“索引键”的关系，在这样的使用场景下，可以采用EnumMap，该类专门用于枚举键，更加安全可靠。\n\nEnumMap的介绍\n\nEnumMap是一个与枚举类一起使用的Map实现，EnumMap中所有key都必须是单个枚举类的枚举值。创建EnumMap时必须显式或隐式指定它对应的枚举类。\n\nEnumMap在内部以数组形式保存，所以这种实现形式非常紧凑、高效。\n\nEnumMap根据key的自然顺序（即枚举值在枚举类中的定义顺序）来维护来维护key-value对的次序。当程序通过keySet()、entrySet()、values()等方法来遍历EnumMap时即可看到这种顺序。\n\nEnumMap不允许使用null作为key值，但允许使用null作为value。如果试图使用null作为key将抛出NullPointerException异常。如果仅仅只是查询是否包含值为null的key、或者仅仅只是使用删除值为null的key，都不会抛出异常。\n\n\n\n\n\n\n\n将上例由EnumMap改写\nHerb[] garden = { new Herb(\"1\", Type.ANNUAL), new Herb(\"2\", Type.BIENNIAL), new Herb(\"3\", Type.PERENNTAL) };\n    Map> herbsByType = new EnumMap>(Herb.Type.class);\n    for(Herb.Type t:Herb.Type.values()){\n        herbsByType.put(t, new HashSet());\n    }\n    for(Herb h:garden)\n        herbsByType.get(h.type).add(h); \n    System.out.println(herbsByType);\n可以看出由EnumMap改造后，程序更加简洁，也更加安全。总之，试图通过ordinal()方法，利用枚举元素在枚举中的位置做逻辑处理的，这种代码一般都是不可取和不安全的。\n\n\n\n总结\n最好不要用序数来索引数组 。如果你所表示的这种关系是多维的 , 就使用 EnumMap> 。代码中一般情况下都不使用 Enum.ordinal , 即使要用也是因为特殊情况。\n\n\n"},"第五章 枚举和注解/35.注解优于命名模式.html":{"url":"第五章 枚举和注解/35.注解优于命名模式.html","title":"35.注解优于命名模式","keywords":"","body":"\n问题\nJava 1.5之前，一般使用命名模式表明有些程序元素需要通过某种工具或者框架进行特殊处理。例如，在老版本的JUnit测试框架原本要求用户一定要用test作为测试方法名称的开头，这种方式就是命名模式。\n命名模式的缺点：\n\n文字拼写错误导致失败，测试方法没有执行，也没有报错。例如，假设意外地命名了测试方法tsetSafetyOverride而不是testSafetyOverride。 JUnit 3不会报错，但它也不会执行测试，导致错误的安全感；\n无法确保它们只用于相应的程序元素上， 例如，假设调用了TestSafetyMechanisms类，希望JUnit 3能够自动测试其所有方法，而不管它们的名称如何。 同样，JUnit 3也不会出错，但它也不会执行测试；\n没有提供将参数值与程序元素关联起来的好方法。\n\n针对命名模式带来的这些问题，该如何解决？\n\n解决\n注解很好地解决了由命名模式带来的所有这些问题，实际上Junit4也开始采用注解的方式代替了以往的命名模式。\n\n如何定义注解\n例如定义一个Test的注解：\n@Retention(RetentionPolicy.RUNTIME)\n\n@Target(ElementType.METHOD)\n\npublic @interface Test {\n\n}\nTest注解类型的声明本身使用Retention和Target注解进行标记。 注解类型声明上的这种注解称为元注解。 @Retention（RetentionPolicy.RUNTIME）元注解指示Test注解应该在运行时保留。 Retention的取值有这些：\n\nRetentionPolicy.SOURCE —— 这种类型的Annotations只在源代码级别保留，编译时就会被忽略  \nRetentionPolicy.CLASS—— 这种类型的Annotations编译时被保留,在class文件中存在,但JVM将会忽略  \nRetentionPolicy.RUNTIME —— 这种类型的Annotations将被JVM保留,所以他们能在运行时被JVM或其他使用反射机制的代码所读取和使用.\n\n@Target.get（ElementType.METHOD）元注解表明Test注解只对方法声明合法：它不能应用于类声明，属性声明或其他程序元素。Target的取值有这些：\n\nCONSTRUCTOR:用于描述构造器 \nFIELD:用于描述域  \nLOCAL_VARIABLE:用于描述局部变量 \nMETHOD:用于描述方法  \nPACKAGE:用于描述包  \nPARAMETER:用于描述参数  \nTYPE:用于描述类、接口(包括注解类型) 或enum声明\n\n\n使用注解\n @Test public static void m1() { }\n以下是Test注解在实践中的应用。 它被称为标记注解，因为它没有参数，只是“标记”注解元素。 如果程序员错拼Test或将Test注解应用于程序元素而不是方法声明，则该程序将无法编译。\n\n利用反射和注解结合发挥语义上的作用\nTest注解对标注的注解元素的语义没有直接影响。 他们只提供信息供相关程序使用。 更一般地说，注解不会改变注解代码的语义，但是可以将反射和注解结合起来，发挥更强大的作用。 \npublic class RunTests {\n    public static void main(String[] args) throws Exception {\n        int tests = 0;\n        int passed = 0;\n        Class testClass = Class.forName(args[0]);\n        for (Method m : testClass.getDeclaredMethods()) {\n            if (m.isAnnotationPresent(Test.class)) {\n                tests++;\n                try {\n                    m.invoke(null);\n                    passed++;\n                } catch (InvocationTargetException wrappedExc) {\n                    Throwable exc = wrappedExc.getCause();\n                    System.out.println(m + \" failed: \" + exc);\n                } catch (Exception exc) {\n                    System.out.println(\"Invalid @Test: \" + m);\n                }\n            }\n        }\n        System.out.printf(\"Passed: %d, Failed: %d%n\",\n                          passed, tests - passed);\n    }\n}\n上例代码通过反射，让使用了@Test注解的方法能够执行，并且统计了被@Test标注的方法的个数以及方法成功执行的个数。可以看出，只有让注解和反射结合起来使用时，才能发挥更强大的语义作用。\n\n\n\n总结\n当可以使用注解代替时，没有理由使用命名模式。实际上Java已经提供了很多预定义的注解类型，在实际项目中应该尽可能多使用注解。另外，请考虑使用IDE或静态分析工具提供的注解。 这些注解可以提高这些工具提供的诊断信息的质量。\n\n\n"},"第六章 方法/38.检查方法参数的有效性.html":{"url":"第六章 方法/38.检查方法参数的有效性.html","title":"38.检查方法参数的有效性","keywords":"","body":"\n问题\n绝大多数方法和构造器对于传递给他们的参数值都会有某些限制。例如索引值必须是非负数，对象引用不能为null等等。在编写方法有一个普遍的原则是“应该在发生错误之后尽快检测出错误”，按照这样的原则，在实际开发中应该怎样做？\n\n解决\n\n为了避免由于方法入参不符合规范，将异常扩散到方法执行过程之中，在设计方法或者构造器时，应该考虑方法的入参有哪些限制，应该在方法开头显式的进行参数有效性判断，也应该将这些参数有效性写入在文档中；\n对于公有的方法，要用Javadoc的@throws标签 在文档中说明违反参数值限制时会抛出的异常。通常这样的异常为IllegalArgumentException，IndexOutOfBoundsException。\n\n\n结论\n每当编写方法或者构造器的时候，应该考虑它的参数有哪些限制，应该把这些限制写在文档中，并且在这个方法体的开头处，通过显示的检查来实施这些限制。养成这样的习惯是非常重要的。\n\n\n"},"第六章 方法/39.参数进行保护性拷贝.html":{"url":"第六章 方法/39.参数进行保护性拷贝.html","title":"39.参数进行保护性拷贝","keywords":"","body":"\n问题\n类的内部成员域为引用类型数据，而非是基本类型数据时，就要在类构造器和成员域的访问方法上考虑对这些内部成员域进行保护，以防止外界条件破坏了这种约束，对实例对象的状态发生改变。那么，对类的成员域为引用类型数据时，应该怎样处理？\n\n解决\n\n对类构造器进行保护性拷贝\n示例代码为：\nimport java.util.Date;\n\npublic final class Period {\n    private final Date start;\n    private final Date end;\n    public Period(Date start,Date end) {\n        if(start.compareTo(end) > 0){\n            throw new IllegalArgumentException(start + \" after \" + end);\n        }\n        this.start = start;\n        this.end = end;\n    }\n\n    public Date start(){\n        return start;\n    }\n\n    public Date end(){\n        return end;\n    }\n    //remainder omitted\n}\n这段代码看上去没有什么问题，本意以为是Period被构造后，状态是不会被改变的，但是由于Date是可变的，Period的状态也是会被改变的，如下面的这样的使用：\nDate start = new Date();\nDate end = new Date();\nPeriod period = new Period(start, end);\nend.setYear(78);\n因此，为了让Period更加安全可靠，需要对构造器进行保护性拷贝，将上面这段代码改变如下这种形式：\npublic Period(Date start,Date end) {\n    this.start = new Date(start.getTime());\n    this.end = new Date(end.getTime());\n    if(this.start.compareTo(this.end) > 0){\n    throw new IllegalArgumentException(this.start + \" after \" + this.end);\n    }\n}\n注意：保护性拷贝在参数有效性检查之前，并且参数有效性检查针对的是已拷贝的对象，而非是原始对象。\n\n对类成员域进行保护性拷贝\n如果上例中的成员域提供了访问方法，那么，Period仍然是不安全的。如果不进行保护性拷贝的话，引用类型数据就有可能在类的外部被改变，因此影响类内部的数据结构，污染到类。针对成员域的访问方法，可做如下的保护性拷贝：\npublic Date start() {\n    return new Date(start.getTime());\n}\n\npublic Date end() {\n    return new Date(end.getTime());\n}\n\n什么时候考虑使用保护性拷贝？\n每当编写方法或者构造器时，如果它允许由客户端提供对象进入到类的内部数据结构时，就需要考虑，客户端提供的对象是否有可能是可变的。如果是，就要考虑能否忍受对象可变时，对类的内部的数据结构发生改变。如果不能，则要在构造器或者方法上对外部对象进行保护性拷贝，让拷贝后的对象进入到类，而不是原始的可变的对象。例如，如果使用外部的对象作为Set的元素或者作为Map的key，就应该意识到，这个对象在插入之后再被修改，相应的Set或者Map就会遭到破坏。\n\n\n\n结论\n如果类具有从客户端得到或者返回到客户端的可变组件，类就必须保护性地拷贝这些组件。如果拷贝的成本受到限制，并且类信任它的客户端不会不恰当地修改这些组件，就可以在文档中进行说明。\n\n\n"},"第六章 方法/40.谨慎的设计方法签名.html":{"url":"第六章 方法/40.谨慎的设计方法签名.html","title":"40.谨慎的设计方法签名","keywords":"","body":"\n问题\n在设计API时，应该遵守一些哪些通用的规则来设计方法，以保证方法可读性更强，更安全可靠？\n\n解决\n\n谨慎的选择方法的名称：遵循标准的命名规范；\n不要过于追求提供便利的方法：每个方法不要做太多逻辑，导致方法体过长，应该尽力去拆分，每个方法都应有尽其所能即可；\n避免过长的参数列表：方法参数个数不能超过四个，否则让人难以理解参数的意义。减小参数个数有三种方式：1.拆分出子方法；2.将多个参数抽象成一个实体类，这样方法的入参就仅仅只是这一个实体类；3.使用Builder模式\n\n\n结论\n上述的这些规则能够保证设计的方法可读性更强，性能更好，在实际开发中，应该遵守这些规则。\n\n\n"},"第六章 方法/41.慎用重载.html":{"url":"第六章 方法/41.慎用重载.html","title":"41.慎用重载","keywords":"","body":"\n问题\n先来看一个错误的例子：\npublic class CollectionClassifier {\n    public static String classify(Set s) {\n        return \"Set\";\n    }\n\n    public static String classify(List lst) {\n        return \"List\";\n    }\n\n    public static String classify(Collection c) {\n        return \"Unknown Collection\";\n    }\n\n    public static void main(String[] args) {\n        Collection[] collections = {\n            new HashSet(),\n            new ArrayList(),\n            new HashMap().values()\n        };\n\n        for (Collection c : collections)\n            System.out.println(classify(c));\n    }\n}\n我们希望打出的是set，list，Unknown Collection。实际上，它的输出是Unknown Collection。这是因为classify方法被重载了，实际上调用哪个重载方法，是在编译时就已经决定了。在这个例子中编译器都认为是Collection类，所以输出的是三个Unknown Collection。因此，在使用重载是应该注意哪些问题？\n\n解决\n\n调用哪个具体的重载方法是在编译时就决定了，根据方法中参数的编译时类型。而对于被覆盖的方法的选择则是动态的，是根据调用该方法的对象的运行时类型，来选择合适的“被覆盖的版本”。覆盖是用来实现多态的，而重载并不是；\n\n使用重载，安全而保守的策略是：永远不要写两个具有相同参数数目的重载方法；\n\n如果一定要重载，那么对于一对重载方法，至少要有一个对应的参数在两个重载方法中的类型“完全不同”。可以看下面这个例子：\npublic class SetList {\n    public static void main(String[] args) {\n        Set set = new TreeSet();\n        List list = new ArrayList();\n\n        for (int i = -3; i Set的输出结果如同我们想的一样，但是List的结果不一样。实际发生的情况是：set.remove(E)，选择重载方法的参数实际上是Integer，这里进行了自动装箱，把int装箱成了Integer；对于List，有两个重载函数，这里直接重载了list.remove(i)，并没有重载到list.remove(E)，是从list的指定位置进行remove，得到结果为-2,0,2。这里最根本的原因在于，由于泛型和自动拆箱和装箱，使得remove(E)和remove(i)这两个方法中的参类型上数并没有“根本的不同”。\n\n\n\n结论\n能够重载并不意味者应该重载，一般来说，对于多个具有相同参数数目的重载方法，还是尽量避免使用重载。如果不能避免重载，就需要保证每一个重载方法的参数类型无论经过怎样的转换（如泛型和自动拆箱和装箱）后都能“完全不同”，从而根据参数类型能够指向不同的重载方法。\n\n\n"},"第六章 方法/42.慎用可变参数.html":{"url":"第六章 方法/42.慎用可变参数.html","title":"42.慎用可变参数","keywords":"","body":"\n问题\n当不确定参数个数的时候可以采用可变参数，那么，在使用可变参数时有哪些需要注意的？\n\n解决\n\n可变参数可以被用来接受0个或者多个指定类型的参数。\n示例：当方法需要1个或者多个参数的方法时，直接使用可变参数就会变得不优雅：            \npublic static min(int...args){\n    if(args.length==0){\n        throw new IllegalrgumentException(\"Too few arguments!\");\n    }\n    ....\n}\n由于该方法要求参数至少有1个，但是可变参数可以接受的是0个或者多个指定类型的参数，因此需要判断当前的参数args的长度是否为0，最终的结果是将这种检验放到了运行时而不是编译时。针对这种情况，做这样的调整：\npublic static min(int defaultParam, int...args){\n    ....\n}\n由于通过方法入参要求了必须传入一个参数defaultParam，因此就少了参数个数的判断，方法变得优雅。\n使用可变参数的规律为：方法强制要求的默认参数，在方法入参明确给出，可变参数用于进行兜底不确定参数个数的情况。\n\n遍历数组\n采用Arrays.toString()方法遍历数组，而不要采用Arrays.toList().toString去遍历数组，这是因为toList方法接受的是可变参数，如果想要正确输出数组内容的话，数组里元素必须是对象引用型数据，而不能是基本类型数据。如下例：\nList homophones = Arrays.asList(\"to\", \"too\", \"two\");\nSystem.out.println(homophones);\nint[] digits = { 1, 2, 3, 4, 5 };\nSystem.out.println(Arrays.asList(digits));\n//输出结果为\n[to, too, two]\n[[I@15db9742]\n当数组元素为int基本类型数据时，Arrays.asList方法将int类型的数组的引用集中到单个元素数组中,并封装成List。\n\n使用可变参数的场景\n在重视性能的情况下，使用可变参数机制要小心，因为可变参数方法的每次调用都会导致进行一次数组分配和初始化，有一种折中的解决方案，假设确定某个方法大部分调用会有3个或者更少的参数，就声明该方法的5个重载，每个重载带有0至3个普通参数，当参数数目超过3个时，使用可变参数方法。\npublic void foo() {}\npublic void foo() {int a1}\npublic void foo() {int a1, int a2}\npublic void foo() {int a1, int a2, int a3}\npublic void foo() {int a1, int a2, int a3, int... rest}\n\n\n\n结论\n总之，和其他规则一样，尽管可变参数是一个很方便的方式，但是它们不应该被过度滥用。除非有必要，尽量不要使用这种方法。\n\n\n"},"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html":{"url":"第六章 方法/43.返回长度为0的集合或者数组，而不是null.html","title":"43.返回长度为0的集合或者数组，而不是null","keywords":"","body":"\n问题\n先来看一个反例：\nprivate final List cheesesInStock = ...;\npublic Cheese[] getCheeses(){\n   if (cheesesInStock.size == 0)\n       return null;\n}\n调用方客户端代码：\nCheese[] cheeses  = shop.getCheeses();\nif(cheeses != null && Arrays.asList(cheeses).contains(Cheese.STILTON)){\n    System.out.println(\"Jolly good,just the thing.\") ;\n}\n也就是说由于cheesesInStock在特殊情况下返回了null，因此，给调用方增加了额外的判断为null的代码，而从业务意义上来说，null一般是指异常情况下的返回值，那么，针对返回值为集合或者数组来说，特殊情况下应该返回什么？\n\n解决\n\n对于方法如果返回为null，则调用方每一次都要去判断是否为null，从而解决NullPointException。因此，方法返回类型是数组或者集合时，特殊情况不应该返回null，而是应该返回一个空的集合或者数组。\n\n有时候会有人认为：null返回值比零长度数组更好，因为它避免了分配数组所需要的开销。这种观点是站不住脚的，原因有两点。第一这个级别上担心性能问题是不明智的，除非分析表明这个方法正是造成性能问题的真正源头。第二每次都返回同一个零长度数组有可能的，因为零长度数组是不可变的，而不可变的对象有可能被自由的共享。\n将上例进行修改：\npublic List getCheeseList(){\n  if(cheeseInStock.isEmpt())\n    return Collections.emptyList();//Always return same list\n  else\n    return new ArrayList(cheesesInStock);\n}\n\n\n\n结论\n返回类型为数组或者集合的方法没理由返回null，而应该返回一个长度为零的数组或者集合。\n\n\n"},"第六章 方法/44.API需要编写文档注释.html":{"url":"第六章 方法/44.API需要编写文档注释.html","title":"44.API需要编写文档注释","keywords":"","body":"\n问题\n在每个类、接口、构造器、方法和域生命处都应该有详细的文档注释，那么好的文档注释有哪些元素？\n\n解决\n\n如果要想使一个API真正可用，就必须为其编写文档。传统意义上的API文档是手动生成的，所以保持文档与代码同步是一件很繁琐的事情。Java环境提供了一种被称为Javadoc的实用工具来完成文档注释的编写；\n文档注释的三个部分：\n第一部分是简述。文档中，对于属性和方法都是先有一个列表，然后才在后面一个一个的详细的说明；\n第二部分是详细说明部分。该部分对属性或者方法进行详细的说明，在格式上没有什么特殊的要求，可以包含若干个点号；\n第三部分是特殊说明部分。这部分包括版本说明、参数说明、返回值说明等。\n@param b true 表示显示，false 表示隐藏\n@return 没有返回值\n\n\n\n\n添加文档注释规范： \n为了正确地编写API文档，必须在每个被导出的类、接口、构造器、方法和域声明之前增加一个文档注释；\n方法的文档注释应该简洁的描述出它和客户端之间的约定。这个约定应该说明这个方法做了什么，而不是说明它是如何完成这项工作的。文档注释应该列举如下内容：\n前提条件（precondition） 前提条件是指为了使客户能够调用这个方法，而必须满足的条件； \n后置条件（postcondition） 所谓后置条件是指在调用成功完成之后，哪些条件必须要满足； \n副作用（side effect） 副作用是指系统状态中可以观察到的变化，它不是为了获得后置条件而明确要求的变化； \n类或者方法的线程安全性（thread safety）（详见70条） 当一个类的实例或者静态方法被并发使用时，这个类行为的并发情况。\n\n\n\n\n\n\n结论\n要为API编写文档，文档注释是最好、最有效的途径。对于所有可导出的API元素来说，使用文档注释应该被看作是强制性的。要采用一致的风格来遵循标准的约定。在文档注释内部出现任何HTML标签都是允许的，但是HTML字符必须要经过转义。\n\n\n"},"第七章 通用程序设计/45.将局部变量的作用域最小化.html":{"url":"第七章 通用程序设计/45.将局部变量的作用域最小化.html","title":"45.将局部变量的作用域最小化","keywords":"","body":"\n问题\n将局部变量的作用域最小化，可以增强代码的可读性和可维护性，并降低出错的可能性。那么，常用的将局部变量作用域最小化的方式有哪几个方面？\n\n解决\n\n为了避免局部变量扩大作用域，污染到其他作用域。局部变量的作用域应该最小化，即在第一次使用它的地方进行声明，尽可能在声明处进行初始化。典型的例子是，使用for循环，变量作用域在循环内，而不会扩散。所以，如果循环终止之后不再需要循环变量的内容，for循环就优于while循环；\n使方法小而集中。如果把两个操作合并到同一个方法中，与其中一个操作相关的局部变量就有可能会出现在执行另一个操作的代码范围之内。为了防止这种情况发生，只要把这个方法分成两个，每个方法各自执行一个操作；\n几乎每个局部变量的声明都应该包含一个初始化表达式，如果没有足够信息来对一个变量进行有意义的初始化，就应该推迟这个声明,直到可以初始化为止，例外情况是与try..catch有关。\n\n\n结论\n为了方法局部变量域污染到其他的作用域，需要将局部变量域尽可能缩小，这样能够增强代码的可读性和可维护性。\n\n\n"},"第七章 通用程序设计/46.for-each循环优于传统的for循环.html":{"url":"第七章 通用程序设计/46.for-each循环优于传统的for循环.html","title":"46.for-each循环优于传统的for循环","keywords":"","body":"\n问题\n在Java1.5之前，对集合的遍历习惯用下面这种方式：\nfor (Iterator i = c.iterator(); i.hasNext(); ) {\n\n       doSomething((Element) i.next()); // (No generics before 1.5)\n\n}\n对数组的遍历，习惯采用下面这种方式：\nfor (int i = 0; i 这些习惯用法要好于while循环，但也不完美。代迭器与索引都有些混乱。而且，它们还可能引起错误。在上面的循环中迭代器与索引都出现了三次，其中有两个地方可能带来错误，如果的确出现了这种错误，却无法保证编译器能捕获到这些错误。那么，在集合和数组的遍历中优先采用哪种方式？\n\n解决\n\n在集合和数组的遍历时，优先采用for-each遍历的方式，比如下面这种示例代码：\nfor (Element e : elements) {\n\n       doSomething(e);\n\n}\n\nfor-each循环的性能要优于传统的for循环，并且能够减少异常的发生，for-each循环不仅可以遍历集合和数组，还可以遍历任何实现Iterable接口的对象。同时，使用for-each循环也有以下局限性：\n\n过滤：如果需要在遍历的过程中删除特定的元素，就需要用显式的迭代器，调用remove方法进行删除；\n转换：如果在遍历的过程中，需要转换部分元素，就需要使用迭代器或者索引，一遍设定特定的元素；\n平行迭代：如果需要并行的遍历多个集合，就需要显式的控制迭代器和索引变量，以便所有的迭代器和索引能够同步前移。\n\n\n\n\n结论\n在大多数情况下都应该使用for-each循环的方式去遍历集合和数组，只有在过滤、转换、平行迭代的时候才需要采用传统的迭代器和索引的方式进行遍历。\n\n\n"},"第七章 通用程序设计/47.多使用类库.html":{"url":"第七章 通用程序设计/47.多使用类库.html","title":"47.多使用类库","keywords":"","body":"\n问题\n在实际开发中，有些公共功能已有成熟的解决方案，可以采用开源的组件，利用这些开源的组件的优势在哪里？\n\n解决\n项目中如果部分功能，开源社区有相应的类库可以实现，应该充分利用开源的类库，原因有：\n\n可以利用别人的使用经验，和利用社区的智慧；\n不必纠结于已有解决方案的问题，而专注于自身的逻辑；\n自己的代码可以融入主流，更方便让其他人阅读和理解。\n\n\n结论\n总之，在大多数情况下不需要重复造轮子，如果你要做的事情看起来十分常见的，就可以考虑去使用开源的组件，通常这些由社区维护的组件在性能上是有保障的，并且会持续迭代更新。\n\n\n"},"第七章 通用程序设计/48.需要精确答案，请避免使用float和double.html":{"url":"第七章 通用程序设计/48.需要精确答案，请避免使用float和double.html","title":"48.需要精确答案，请避免使用float和double","keywords":"","body":"\n问题\nfloat和double类型主要是为了科学计算与工程计算而设计的，它们并没有提供完全精确的结果，所以不应该被用于需要精确结果的场合。比如：\nSystem.out.println(1.0-0.42)\n//输出 0.580000000000001\n那么，当需要精确结果的时候，应该怎样处理？\n\n解决\n\n在需要精确结果的时候需要使用BigDecimal，BigDecimal所创建的是对象，我们不能使用传统的+、-、*、/等算术运算符直接对其对象进行数学运算，而必须调用其相对应的方法，方法中的参数也必须是BigDecimal的对象；\n任何需要精确答案的计算任务，都不要使用float和double，可以使用int、long或者BigDecimal。使用BigDecimal可以很方便的选择舍入的方式，它一共提供了8种方式；\n如果数值范围没有超过9为十进制数字，使用int；如果超过9位但不超过18位数字，可以使用long；如果有可能超过18位数字，就必须使用BigDecimal。\n\n\n结论\n总之，对于任何需要精确答案的计算任务，请不要使用float或者double，如果你想让系统来记录十进制小数点，并且不介意因为不使用基本类型带来的不便，就可以使用BigDecimal。\n\n\n"},"第七章 通用程序设计/49.基本类型优先于装箱基本类型.html":{"url":"第七章 通用程序设计/49.基本类型优先于装箱基本类型.html","title":"49.基本类型优先于装箱基本类型","keywords":"","body":"\n问题\nJava有一个数据类型由两部分组成，包含基本类型（primitive），如int、double和boolean，和引用类型（reference type），如String和List。 每个基本类型都有一个对应的引用类型，称为装箱基本类型（boxed primitive）。由于Java自动装箱和拆箱机制，会使得在实际开发中基本类型和装箱类型混用，那么它们之间有什么区别？\n\n解决\n\n基本类型和装箱类型主要有3个主要区别：\n\n基本类型只有值，而装箱类型具有和它们值不同的统一性，即new Integer(42)==new Integer(42)，虽然这两个装箱类型都是表示数字42，但是同一性判断会返回false；\n基本类型只具有具体功能值，如数值等，而装箱类型还具有非功能值null；\n基本类型通常要比装箱类型更节省空间和运行时间。\n\n注意：如果基本类型和装箱类型混合使用，装箱类型会拆箱为基本类型，这时，如果装箱类型为null，就会容易报NullPointException。\n\n什么时候用装箱类型\n\n在使用集合时，键、值都只能使用装箱类型；\n使用参数化类型时，如ThreadLocal类时，只能使用装箱类型\n\n\n\n\n结论\n当可以选择的时候，基本类型要优先于装箱类型。基本类型更加方便简单，性能更好。如果没办法避免使用装箱类型时，注意类型间同一性的比较，以及NullPointException。\n\n\n"},"第七章 通用程序设计/50.尽量避免使用字符串.html":{"url":"第七章 通用程序设计/50.尽量避免使用字符串.html","title":"50.尽量避免使用字符串","keywords":"","body":"\n问题\n字符串在实际开发中被高频使用，同样也存在着被滥用的情况，那么，字符串不应该使用在哪些情形下呢？\n\n解决\n\n字符串不适合代替其他值的类型：当原始类型为int、float等其他类型时，就不要使用字符串替代；\n\n字符串不适合代替枚举类型：枚举类型比字符串更适合用来表示枚举的常量；\n\n字符串不适合代替聚集类型：如果一个实体有多个组件，用字符串来表示这个实体通常不恰当，String compundKey = className + \"#\" + i.next()，更好的做法是编写一个类来描述这个数据集，通常是一个私有的静态成员类；\n\n字符串不适合作为授权键：有时候，字符串被用于对某种功能进行授权访问，考虑设计一个提供线程局部变量的机制，这个机制提供的变量在每个线程中都有自己的值，示例代码：\npublic class ThreadLocal {\n    private ThreadLocal() {}\n    public static void set(String key, Object value);\n    public static Object get(String key);\n}\n这种方法的问题在于，字符串键代表一个共享的全局命名空间，要使这种办法可行，客户端提供的字符串必须是唯一的，如果使用了相同的字符串，实际上就共享了这个变量。可以采用以下这种方式进行修正：\npublic class ThreadLocal {\n    private ThreadLocal() {}\n    public static class Key {\n        Key() {}\n    }\n    public static Key getKey() {\n        return new Key();\n    }\n    public static void set(Key key, Object value);\n    public static Object get(Key key);\n}\n这种采用对象实例作为授权键的话，就能够保证全局唯一。事实上，ThreadLocal也是采用这种方式，将ThreadLocal实例作为了ThreadLocalMap的键。\n\n\n\n结论\n总之，如果可以使用更加合适的数据类型，或者可以编写更加适当的数据类型，就应该避免使用字符串来表示对象。如果使用不当，字符串会比其他类型更加笨拙、速度更慢。字符串经常被错误的用来替代基本类型、枚举类型。\n\n\n"},"第七章 通用程序设计/51.谨慎使用字符串连接符.html":{"url":"第七章 通用程序设计/51.谨慎使用字符串连接符.html","title":"51.谨慎使用字符串连接符","keywords":"","body":"\n问题\n对于JAVA的字符串连接操作符（+）将字符串进行拼接，在产生一行输出是合适的。如果在循环中或者大量使用拼接符这是十分不合适的，由于字符串不可变，每次拼接都需要拷贝，性能极差。那么，在频繁的拼接字符串时应该怎么解决？\n\n解决\n使用字符串连接符（+）将多个字符串拼接起来，是很不合适的。因为String是不可变的，每次拼接都需要拷贝因此非常影响性能。涉及到字符串拼接，应该使用StringBuilder。\n\n结论\n不要使用字符串连接操作符来合并多个字符串，除非性能无关紧要。相反，应该使用StringBuilder的append方法。\n\n\n"},"第七章 通用程序设计/52.通过接口引用对象.html":{"url":"第七章 通用程序设计/52.通过接口引用对象.html","title":"52.通过接口引用对象","keywords":"","body":"\n问题\n先来看一个反例：\nVector list= new Vector();\n大多数情况下，我们都喜欢用具体的类型来声明变量，这里有一个弊端，如果将来想将Vector换成ArrayList的话，可能会影响其他的代码。在声明变量是最佳的实践是什么？\n\n解决\n像上例中采用接口的方式声明变量更加合适，如：\n List list= new ArrayList();\n具有的优点：程序更加灵活，如果其他代码使用的是List接口中的方法，当你想改变具体实现类的时候，比如这里将Vector换成了ArrayList，只需要改变构造器就可以，对其他地方的代码而言是无感知的，并不会影响其他地方的操作。\n\n什么时候应该让具体类去声明变量呢？\n如果没有合适的接口存在，可以用类来引用对象。例如，考虑值类（String、BigInteger）很少用多个实现编写，他们通常是final的，并且很少有对应的接口。使用这种值类作为参数、变量、域或者返回值类型就比较合适；\n顶层类是抽象类的情况， 例如java.util.TimerTask抽象类，应该用相关的基类（往往是抽象类）来引用对象，而不是它的实现类；\n代码依赖于具体类的特殊属性，比如上例中假设程序中需要利用Vector的线程安全的特性，如果采用接口声明变量的话，无意间将实现类改成了ArrayList就会造成极大的错误。 \n\n\n\n\n结论\n如果有合适的接口类型存在，那么对于参数、返回值、变量和域来说，都应该使用接口类型进行声明。这样做可以让程序变得更加灵活，如果改变接口的具体实现类，其他代码都可以继续工作。\n\n\n"},"第七章 通用程序设计/53.慎用反射机制.html":{"url":"第七章 通用程序设计/53.慎用反射机制.html","title":"53.慎用反射机制","keywords":"","body":"\n问题\n反射机制提供了通过程序来访问关于已装载的类的信息的能力，给定一个Class实例，可以获得Constructor、Method、Field实例，这些对象提供了类构造器、访问类成员名称、域类型、方法签名等信息。反射机制很强大，但使用起来有哪些注意事项呢？\n\n解决\n在使用反射机制的时候需要注意如下几点：\n\n丧失了编译时类型检查的好处：如果程序企图用反射访问不存在的方法时，在运行时将会失败；\n执行反射访问的方法代码很冗长：由于使用反射，会有很多的Exception需要try catch；\n性能损失：反射方法调用比普通方法调用要慢很多。\n\n\n结论\n反射很强大的功能机制不能否认，对于特定复杂系统编程任务，反射机制很有用途，但是他也有很多缺点，对于普通的方法调用，建议不采用反射机制。\n\n\n"},"第七章 通用程序设计/54.慎用本地方法.html":{"url":"第七章 通用程序设计/54.慎用本地方法.html","title":"54.慎用本地方法","keywords":"","body":"\n问题\nJava Native Interface（JNI）允许Java应用程序调用本地方法，所谓本地方法是指用c或者c++编写的特殊方法，本地方法在本地语言中可以执行任意的计算任务，并返回到Java程序设计语言中。使用本地方法来访问特定于平台的机制是合法的，但是随着Java平台的不断成熟，它提供了越来越多以前只有在宿主平台上才拥有的特性。那么，本地方法是否应该像Java方法一样方便使用，有哪些注意事项？\n\n答案\n\n使用本地方法来提供性能的做法是不值得提倡的，在早期的发型版本中，这样的做法往往是很有必要，但是JVM实现变得越来越快，对于大多数任务，现在即使是不使用本地方法也能获得很好的性能；\n本地方法不是安全的，并且依赖于平台的具体实现，编写的方法不再是可自由移植的；\n程序更难调试，进入和退出本地方法都需要巨大性能消耗，如果仅仅是实现简单的逻辑，使用本地方法就是得不偿失的；\n\n\n结论\n极少数的情况会需要使用本地方法来提高性能，如果必须要使用本地方法来访问底层资源，需要全面的进行测试。**使用本地方法来提高性能的做法是不被建议使用的。\n\n\n"},"第七章 通用程序设计/55.谨慎的进行优化.html":{"url":"第七章 通用程序设计/55.谨慎的进行优化.html","title":"55.谨慎的进行优化","keywords":"","body":"\n问题\n有三条与优化有关的格言是每个人都应该知道的：\n1. 很多计算上的过失都被归咎于效率（没有必要达到的效率），而不是任何其他的原因，——甚至包括盲目地做傻事。\n 　　　　　　　　　　　　　　　　　　　　　    ——William A.Wulf[Wulf72]\n2. 不要去计校效率上的一些小小的得失，在97％的情况下。不成熟的优化才是一切问题的根源。\n 　　　　　　　　　　　　　　　　　　　　　　——Donald E.Knuth[Knuth74]\n 3. 在优化方面，我们应该遵守两条规则：\n 　　规则1：不要进行优化。\n 　　规则2（仅针对专家）：还是不要进行优化一一也就是说，在你还没有绝对清晰的未优化方案之前，请不要进行优化．\n 　　　　　　　　　　　　　　　　　　　　　　——M.A.Jackson[Jackson75]\n在大多数情况下，不成熟的优化都会造成更严重的问题，在进行性能优化的时候应该着重关注于哪些方面？\n\n答案\n\n不要因为性能而牺牲合理的结构。要努力编写好的程序而不足快的栏序。如果好的程序不够快，它的结构将使它可以得到优化。好的程序体现了信息隐藏 (information hiding）的原则：只要有可能，它们就会把设计决策集中在单个模块中，因此，可以改变单个决策，而不会影响到系统的其他部分；\n努力避免那些限制性能的设计决策。当一个系统设计完成之后，其中最难以更改的组件是那些指定了模块之间交互关系以及模块与外界交互关系的组件。在这些设计组件之中，最主要的是API协议以及永久数据格式。这些设计组件不仅在事后难以甚至不可能改变，而且它们都有可能对系统本该达到的性能产生严重的限制；\n要考虑API设计决策的性能后果。使公有的类型成为可变的（mutable )。这可能会导致大量不必要的保护性拷贝（见第39条：必要时进行保护性拷贝 )。同样地，在适合使用复合模式的公有类中使用继承，会把这个类与它的超类永远地束缚在一起，从而人为地限制了子类的性能\n\n\n结论\n总而言之，不要费力去编写快速的程序——应该努力编写好的程序，速度自然会随之而来。在设计系统的时候，特别是在设计API、线路层协议和永久数据格式的时候，一定要考虑性能的因素。当构建完系统之后，要测量它的性能。如果它足够快，你的任务就完成了。如果不够快，则可以在性能剖析器的帮助下，找到问题的根源，然后设法优化系统中相关的部分。第一个步骤是检查所选择的算法：再多的底层优化也无法弥补算法的选择不当。必要时重复这个过程，在每次改变之后都要测量性能，直到满意为止。\n\n\n"},"第七章 通用程序设计/56.遵守普遍接受的命名规则.html":{"url":"第七章 通用程序设计/56.遵守普遍接受的命名规则.html","title":"56.遵守普遍接受的命名规则","keywords":"","body":"\n问题\nJava平台建立了一套很好的命名惯例（naming convention），其中有许多命名惯例包含在《The  Java  Language Specification》中。不严格的讲，这些命名惯例分为两大类：字面的和语法的。具体的，在实际开发中应该遵守哪些命名规范？\n\n答案\n\n包的命名：包的名称应该是层次状的，用句号分隔每部分。每个部分都包括小写字母和数字（很少使用数字）。任何将在你的组织之外使用包，其名称都应该以你的组织的Internet域名开头，并且顶级域名放在前面，例如：edu.cmu com.sun  包名称的其余部分应该包括一个或者多个描述该包的组成部分。这些组成部分  应该比较简短，通常不超过8个字符。鼓励使用有意义的缩写形式，例如，使用  utils而不是utilities。只取首字母缩写形似也是可以接受的，例如awt。  每个组成部分通常都应该由一个单词或者一个缩写词组成；\n类和接口的命名，包括枚举和注解类型的名称，都应该包括一个或者多个单词没个单词都首字母大写；\n方法和域的名称\n方法和域的名称与类和接口的名称一样，都遵守相同的字面惯例，只不过方法或者域的名称的第一个字母应该小写，例如remove，ensureCapacity。\n常量域：包括一个或多个大写的单词，中间用下划线隔开，例如 private static final int GET_ASSOCIATIONS_ACTION = 1。常量域是唯一一个推荐使用下划线的情形；\n类型参数名称通常由单个字母组成。这个字母通常是以下五种类型之一；  T表示任意类型的，E表示集合元素类型，K和V表示映射的键和值类型，X表示异常。任何类型的序列可以是T、U、V或者T1、T2、T3；\n执行某个动作方法通常用动词或者动词短语来命名，例如append和drawimage；\n对于返回boolean值的方法，其名词往往以单词“is”开头，后面跟名词或者名词短语或者具有形容词功能的单词和短语，例如isDigit、isProbalePrime、  isEmpty、isEnable、hasSiblings；\n转换类型的方法、返回不同的类型对象方法，通常被称为toType，例如toString和toArray。  返回视图的方法通常被称为asType。例如asList。  返回一个与被调对象同值的基本类型的方法，通常被称为typeValue，例如intValue； 静态工厂的常用名称为valueOf、of、getInstance、newInstance、getType和NewType\n\n\n\n\n结论\n把标准的命名规范当做是一种内在的机制看待，按照规范命名，不仅会让代码的可读性更强，而且会减少一些不必要的错误。\n\n\n"},"第八章 异常/57.只针对异常的情况才使用异常.html":{"url":"第八章 异常/57.只针对异常的情况才使用异常.html","title":"57.只针对异常的情况才使用异常","keywords":"","body":"\n问题\n先来看一个反例：\ntry{\n    int i = 0;\n    while(true){\n        range[i++].climb();\n    }        \n} catch (ArrayIndexOutOfBoundsException){\n\n}\n在上面这个企图利用数组越界的异常从而跳出死循环。如果针对的是数组遍历的场景，这么做的目的是企图利用Java异常机制，来跳过遍历中每次都需要检查是否越界来达到性能优化。但是，这种用法显然是不合理的，那么，对异常的使用应该注意哪些问题？\n\n答案\n\n异常应该只用于异常处理的情况，永远不应该应用到控制流中， 例如，上面的反例；\n异常机制的设计初衷是用于不正常的情形，所以JVM实现不会对其优化，所以企图用异常来达到性能优化，是不可行的；\n把代码放在try-catch块中反而阻止了现代JVM可能会执行的一些优化操作；\n针对上例，对数组标准的遍历模式并不会导致冗余的检查，JVM会对其进行优化；\n\n\n结论\n在使用异常的时候，应该坚持异常只应该被当做异常来处理，而不应该企图利用异常来达到性能优化的目的。\n\n\n"},"第八章 异常/58.选择合适的异常.html":{"url":"第八章 异常/58.选择合适的异常.html","title":"58.选择合适的异常","keywords":"","body":"\n问题\nJava一共有三种可抛出结构：受检的异常、运行时异常（Runtime Exception）和错误（Error）。那么，这三种异常结构的使用场景是什么？\n\n答案\n\n受检的异常\n如果期望调用者能够在适当的情况下进行恢复，则使用可受检的异常，让调用者在catch中进行捕获或者继续throws出去。常见的受检异常有\n\nClassNotFoundException ： 找不到类或接口所产生的异常；\nCloneNotSupportedException ： 使用对象的 clone( )方法但无法执行 Cloneable所产生的异常；\nIllegalAccessException ： 类定义不明确所产生的异常；\nInstantiationException ： 使用 newInstance( )方法试图建立一个类 instance时所产生的异常；\nInterruptedException ： 目前线程等待执行，另一线程中断目前线程所产生的异常。\n\n\n运行时异常\n运行时异常通常用来表明程序错误，大多数运行时异常是指前提条件违例，API提供方和API调用方没有遵守双方的约定，比如在访问数组时，访问的索引超过了数组的长度就会出现ArrayIndexOutOfBoundsException。如果，不想调用者恢复异常情况，则可以抛出运行时异常。常见的运行时异常有ArithmeticException、ArrayStoreException、ArrayIndexOutOfBoundsException等等。\n\n错误\nError(错误)表示系统级的错误和程序不必处理的异常，是java运行环境中的内部错误或者硬件问题，比如，内存资源不足、操作系统出错。在大多数情况下，当遇到这样的错误时，建议让该程序中断。这样的异常超出了程序可控制的范围。\n\n\n\n结论\nJava异常体系中一共有三种异常结构，应该根据具体的使用场景选择合适的异常，而不是胡乱使用。\n\n\n"},"第八章 异常/59.避免不必要的使用受检的异常.html":{"url":"第八章 异常/59.避免不必要的使用受检的异常.html","title":"59.避免不必要的使用受检的异常","keywords":"","body":"\n问题\n受检异常通过强制调用者通过catch处理异常情况，能够从一定程度上确保程序的可靠性。如果API设计时，抛出多个受检异常，那么调用方就必须使用多个catch进行相应的处理，或者将它们在throws出去，反而让调用方增加了负担。那么，在设计方法是否抛出异常的时候应该有哪些原则？\n\n问题\n\n在设计方法抛出异常的时候，应该换位思考，如果自己是调用方使用你设计的API，处理你抛出的异常应该怎样处理？如果有明确的思路，就说明这个异常抛出来是合适的。也就是说，异常是API中不可避免的，并且一旦产生，调用方能够合理的处理，就说明抛出受检异常是合适的，一定要求这两个前提条件全部成立；\n\n“把调用具有受检异常的方法进行重构”的一种方法是，把这个抛出异常的方法分成两个方法，其中第一个方法返回一个boolean，表明状态测试，代表是否应该抛出异常，例如下面的示例代码：\n//Invocation with checked exception\ntry {\n     obj.action(args);\n} catch(TheCheckedException e) {\n    // Handle exceptional condition\n}\n重构为：\n// Invocation with state-testing method and unchecked exception\nif (obj.actionPermitted(args))  { \n      obj.action(args);.\n} else {\n       // Handle exceptional condition\n}\n 上面的这种重构方式虽然代码调用更加复杂，但是让程序更有灵活性。但是，需要注意的时候，凡是涉及到状态更新和状态测试的时候，都需要考虑线程安全的问题。\n\n\n\n结论\n由于受检异常，需要调用方必须做出处理，因此，在设计API的时候就需要着重去考虑所抛出的受检异常，是否真的是合理的，要站在调用方的角度去考虑。\n\n\n"},"第八章 异常/61.抛出与抽象相对应的异常.html":{"url":"第八章 异常/61.抛出与抽象相对应的异常.html","title":"61.抛出与抽象相对应的异常","keywords":"","body":"\n问题\n如果方法抛出的异常与它所执行的任务没有明显的联系，这种情形物会使人不知所措。当方法将低层异常在高层继续抛出的时候，往往会发生这种情况。除了使人感到困惑之外，这也让实现细节污染了更高层的API。如果高层的实现在后续的发行版本中发生了变化，它所抛出的异常也可能会跟着发生变化，从而潜在地破坏现有的客户端程序。那么，在高低层API处理异常时应该怎么做呢？\n\n答案\n\n更高层的实现应该捕获低层的异常，同时抛出可以按照高层抽象进行解释的异常。这种做法被称为异常转译（exceptiontranslation)，如下所示：\ntry{\n    //Use lower-level abstraction to do our bidding\n    ...\n}cache(LowerLevelException e){\n    throw new HigherLevelException(...);\n}\n这种方式要求在高层API中，捕获到底层异常的时候抛出与高层业务意义吻合的高层异常HighLevelException，而不是直接将底层异常继续抛出去。\n\n一种特殊的异常转译形式称为异常链（exceptionchaining)，如果低层的异常对于调试导致髙层异常的问题非常有帮助，使用异常链就很合适。低层的异常（原因）被传到髙层的异常，髙层的异常提供访问方法（Thmwable.getCause)来获得低层的异常。例如：\ntry{\n    //Use lower-level abstraction to do our bidding\n}cache(LowerLevelException cause){\n    throw new HigherLevelException(cause);\n}\nHighLevelException的构造器为：\nclass HigherLevelException extends Exception {\n    HigherLevelExceptionCThrowable cause) {\n        super(cause);\n    }\n}\n\n面对异常到底应该怎样做？\n\n尽管异常转译与直接在高层将底层的异常继续抛出相比有所改进，但是它也不能被滥用。如有可能，处理来自低层异常的最好做法是，应该极力避免底层异常的发生。有时候，可以在给低层传递参数之前，检査更高层方法的参数的有效性，从而避免低层方法抛出异常；\n如果无法避免低层异常，次选方案是，让高层API中通过判断绕开这些异常，从而将高层方法的调用者与低层的问题隔离开来。在这种情况下，可以使用日志工具进行记录。\n\n\n\n\n结论\n如果不能阻止或者处理来自更低层的异常，一般的做法是使用异常转译，除非低层方法碰巧可以保证它抛出的所有异常对髙层也合适才可以将异常从低层传播到高居。异常链对髙层和低层异常都提供了最佳的功能：它允许抛出适当的髙层异常，同时又能捕获底层的原因进行失败分析。\n\n\n"},"第八章 异常/62.每个方法抛出的异常都要有文档.html":{"url":"第八章 异常/62.每个方法抛出的异常都要有文档.html","title":"62.每个方法抛出的异常都要有文档","keywords":"","body":"\n问题\n在设计方法API时，异常是应该着重关注的，同样地，方法的文档注释上异常条件也需要显式的说明，因此，在针对异常编写文档时，有哪些需要注意的地方？\n\n答案\n\n始终要单独地声明受检异常，并且使用javadoc的@throws标记,准确地记录下抛出每个异常的条件。如果方法抛出多个异常类，不要使用它抛出异常类的父类，永远不要声明方法”throwsException”，或更糟糕的声明它”throw Throwable”。这样的声明没有给开发者关于”这个方法抛出哪些异常”的任何有用信息，实际上掩盖了该方法在同样的执行环境下可能抛出的任何其他异常， 因此会妨碍该方法的使用；\n使用javacdoc的@throws标签可以显示方法可能抛出的运行时异常，但是不要使用throws关键字将运行时异常包含在方法的声明中。使用API的程序员必须知道哪些异常是需要受检的,哪些是不需要受检的。\n\n\n结论\n要为你编写的每个方法所抛出的每个异常建立文档，对受检的异常和未受检的异常，就像对于抽象和具体的方法都一样。要为每个受检的异常提供单独的throws字句，不要为未受检的异常提供throws语句。如果没有为可以抛出的异常建立文档,那么其他开发人员很难或者根本不可能有效使用你的类或接口。\n\n\n"},"第八章 异常/63.编写合适的异常信息.html":{"url":"第八章 异常/63.编写合适的异常信息.html","title":"63.编写合适的异常信息","keywords":"","body":"\n问题\n当程序由于未被捕获的异常而失败的时候，系统会自动地打印出该异常的堆栈轨迹。在堆栈轨迹中包含该异常的字符串表示法（string representation），即它的toString方法的调用结果。它通常包含该异常的类名，紧随其后的是细节消息（detail message）。程序员会根据打印出来的异常信息进行排错，也就是说，如果异常信息不够充足的话，会减缓排错的速度，那么，应该如何编写合适的异常信息？\n\n答案\n\n有一个很重要的原则，异常的细节消息应该清晰的描述出异常，便于以后分析。为了清晰的描述异常，异常的细节信息应该包含所有“对该异常有贡献”的参数和域的值。例如，IndexOutOfBoundsException异常的细节消息应该包含下界、上界以及没有落在界内的下标值。该细节消息提供了许多关于失败的信息。这三个值中任何一个或者全部都有可能是错的。实标的下标值可能小于下界或等于上界（“越界错误”），或者它可能是个无效值，太小或太大。下界也有可能大于上界（严重违反内部约束条件的一种情况）。每一种情形都代表了不同的问题，如果程序员知道应该去查找哪种错误，就可以极大地加速排错过程；为了确保在异常的细节消息中包含足够的能捕获失败的信息，一种办法是在异常的构造器中引入这些信息。\n堆栈轨迹的用途是与源文件结合起来进行分析，它通常包含抛出该异常的确切文件和行数，以及堆栈中所有其他方法调用所在的文件和行数。因此，如果描述异常信息量过多，实际上也是冗余的，有些信息可以通过阅读源代码而获得；\n异常的细节消息不应该与“用户层次的错误消息”混为一谈，后者对于最终用户而言必须是可理解的。与用户层次的错误消息不同，异常的字符串表示法主要是让程序员或者域服务人员用来分析失败的原因。\n\n\n结论\n当异常被捕获的时候，如果有关键的异常信息的时候，可以很方便的进行排错，添加关键的异常信息是很有必要的。\n\n\n"},"第八章 异常/65.不要忽略异常.html":{"url":"第八章 异常/65.不要忽略异常.html","title":"65.不要忽略异常","keywords":"","body":"\n问题\n有这样的反例：\ntry {\n    ...\n}catch （SomeException e） {\n\n}\n上面例子，虽然捕获了异常，但是是空的catch块，会不经意间忘记处理异常，这样会埋下隐患，面对异常应该有哪些基本的原则？\n\n答案\n\n千万不要忽略异常：尽管这条原则是很显而易见的，但是它却常常被违反，当API的设计者声明一个方法将抛出某个异常的时候，他们等于正在试图说明一些危险情况，所以，千万不要忽略；\n这条原则同样适用于受检异常和未受检的异常，不管异常代表了可预见的异常条件，还是编程错误，用空的catch块忽略它，将会导致程序在遇到错误的情况下悄然地执行下去。然后，有可能在将来的某个点上，当程序不能再容忍与错误源明显相关的问题时，它就会让系统失败。\n\n\n结论\n面对异常，最基本最重要的原则是，不要忽略异常，必须对异常进行处理。\n\n\n"},"第九章 并发/66.同步访问共享的可变数据.html":{"url":"第九章 并发/66.同步访问共享的可变数据.html","title":"66.同步访问共享的可变数据","keywords":"","body":"\n问题\n并发程序要比单线程程序的设计更加复杂，并且失败难以重现。但是又无法避免采用多线程，因为采用多线程并发是能够从多核计算机获得最佳性能的一个有效途径。在并发时，如果涉及到可变数据的时候，就是我们需要着重去思考的地方，在面对可变数据的并发访问的时候，有哪些方式可以保证线程安全性？\n\n答案\n\n关键字synchronized：synchronized是保证线程安全的一大利器，它可以保证同一时刻，只有一个线程可以执行某个方法和修改某一个可变数据，但是仅仅将它理解成是互斥的也是不完全正确的，它主要有两种意义：\n\n当一个对象被一个线程修改的时候，可以阻止另一个线程观察到对象内部不一致的状态；\n同步不仅可以阻止一个线程看到对象处于不一致的状态，还可以保证进入同步方法或者同步代码块的每个线程，都看到由同一个锁保护的之前所有的修改效果。\n\n另外，java语言规范保证读写一个变量是原子的，除非这个变量是double或者long，即使没有在保证同步的情况下也是如此。\n考虑到这样一个示例，线程通过轮询标志位而达到优雅的停止线程的功能，示例代码如下：\n    private static boolean stopRequested;\n    private static synchronized void requestStop() {\n        stopRequested = true;\n    }\n    private static synchronized boolean stopRequested() {\n        return stopRequested;\n    }\n    public static void main(String[] args) throws InterruptedException {\n        Thread backgroundThread = new Thread(new Runnable() {\n            @Override\n            public void run() {\n                int i = 0;\n                while (!stopRequested()) {\n                    i++;\n                }\n            }\n        });\n        backgroundThread.start();\n        TimeUnit.SECONDS.sleep(1);\n        requestStop();\n    }\n 可变数据也就是状态变量stopRequested，被同步方法修改，这里也就是保证stopRequested被修改后，能够被其他线程立即可见。\n\n关键字volatile：volatile最重要的功能是能够保证数据可见性，当一个线程修改可变数据后，另一个线程会立刻知道最新的数据。在上面的例子中，因为stopRequested变量的读写本身就是原子的，因此利用synchronized只是利用到它的数据可见性，但是由于synchronized会加锁，如果想性能更优的话，上面的例子就可以采用volatile进行修改：\nprivate static volatile boolean stopRequested; \npublic static void main(String[] args) throws InterruptedException {\n    Thread backgroundThread = new Thread(new Runnable() {\n        @Override\n        public void run() {\n            int i = 0;\n            while (!stopRequested) {\n                i++;\n            }\n        }\n    });\n    backgroundThread.start();\n    TimeUnit.SECONDS.sleep(1);\n    stopRequested = true;\n}\n但是需要注意到volatile并不能保证原子性，例如下面的例子：\nprivate static volatile int nextSerialNumber = 0; \n public static int generateSerialNumber() {\n     return nextSerialNumber++;\n }\n尽管使用了volatile，但是由于++运算符不是原子的，因此在多线程的时候会出错。++运算符执行两项操作：1、读取值；2、写回新值（相当于原值+1）。如果第二个线程在第一个线程读取旧值和写会新值的时候读取了这个域，就会产生错误，他们会得到相同的SerialNumber。这个时候就需要使用synchorized来使得线程间互斥访问，从而保证原子性。\n\n\n\n总结\n解决这一问题的最好办法其实是尽量避免在线程间共享可变数据，将可变数据限制在单线程中。如果想要多个线程共享可变数据，那么读写都需要进行同步。\n\n\n"},"第九章 并发/68.executor和task优于创建线程.html":{"url":"第九章 并发/68.executor和task优于创建线程.html","title":"68.executor和task优于创建线程","keywords":"","body":"\n问题\n由于并发程序很容易出现线程安全的问题，并且线程的管理也是件很复杂的事情，所以当创建一个线程时，不要通过Thread的方式手动创建，可以使用Executor框架进行管理。Executor的优点是什么？\n\n答案\n\n等待任务执行完成的方式多样：当前线程可以等待提交到executor中的线程集合全部执行完成（invokeAll()或invokeAny()）,也可以优雅的等待结束（awaitTermination()），也可以在任务完成时逐个获取这些任务的结果（利用ExecutorCompletionService）等等；\n创建多种类型的线程池：可以创建单个线程、固定的多个线程以及线程个数可变的线程池，也可以通过ThreadPoolExecutor类创建适合应用场景的线程池；\n线程和执行间的解耦：使用executor最大的好处在于将线程执行机制和任务解耦开，之前的Thread类既充当了工作单元又是执行机制，更好管理和使用起来更加安全可靠。\n\n\n结论\n在涉及到多线程程序时，不要使用Thread的方式创建线程，应该使用executor来管理和创建线程，它最大的好处在于工作单元（线程）和任务之间的解耦。\n\n\n"},"第九章 并发/69.优先使用提供的并发工具.html":{"url":"第九章 并发/69.优先使用提供的并发工具.html","title":"69.优先使用提供的并发工具","keywords":"","body":"\n问题\n高并发程序既很难保证线程安全的问题，而且一旦出现问题之后，也很难排错和分析出来原因。而j.u.c包中提供了很多线程安全的工具，应该在实际开发中多使用这些性能已经得到了验证的工具，这使得我们的开发能够十分方便又能保证我们代码的稳定性。常用的并发工具有哪些？ \n\n答案\nj.u.c包下的并发工具分为三类：1.负责管理线程的executor框架；2.并发集合；3.同步器。其中，负责管理线程的executor在第68条已经说过，不再单独描述。\n\n并发集合：并发集合针对标准的集合接口（如List、Queue和Map）做了进一步的处理，提供了高性能的并发实现，常用的有CourrentHashMap，它就扩展了Map接口并保证了线程安全。另外，BlockingQueue实现了可阻塞的操作，即当队列为空的时候，会阻塞“取数据”线程，直至队列不为空位置，当队列满时，会阻塞“插入数据”的线程，直至队列未满。BlockingQueue被广泛的应用在“生产者-消费者”中；\n同步器：同步器能够完成线程之间的协调，最常用的有CountdownLatch和Semaphore，较不常用的有CyclicBarrier和Exechanger。\n\n\n结论\nj.u.c包下跟我们提供了多种保证线程安全的数据结构，在实际开发中应该使用这些性能和安全性已经得到保证的工具，而不是重复造轮子，并且很难保证安全性。比如，在之前的代码中“生产者-消费者”使用wait和notify的方式去实现，代码就很难维护，如果使用可阻塞操作的BlockingQueue代码更加简洁，逻辑也更加清晰。\n\n\n"},"第九章 并发/70.线程安全性的文档化.html":{"url":"第九章 并发/70.线程安全性的文档化.html","title":"70.线程安全性的文档化","keywords":"","body":"\n问题\n有这样几种错误的说法：\n\n通过查看文档是否出现synchronized修饰符，来判断当前方法是否是安全的。这种说话的错误在于，synchronized并不会通过javadoc输出，成为api文档的一部分，这是因为synchronized是方法具体的实现细节，并不属于导出API和外界模块通信的一部分；\n“只要是加了synchronized关键字的方法或者代码块就一定是线程安全的，而没有加这个关键字的代码就不是线程安全的”。这种观点将synchronized于线程安全等同起来，并且认为线程安全只有两种极端的情况，要么是线程安全的，要么是线程不安全的。\n\n这是两种普遍错误的观点，事实上，线程安全性是有多种级别的，那么，应该如何建立线程安全性的文档？\n\n答案\n\n线程的安全性级别：\n\n不可变的(Immutable)：类的实例不可变（不可变类），一定线程安全，如String、Long、BigInteger等。\n\n无条件的线程安全（Unconditionally ThreadSafe）：该类的实例是可变的，但是这个类有足够的的内部同步。所以，它的实例可以被并发使用，无需任何外部同步，如Random和ConcurrentHashMap。\n\n有条件的线程安全（Conditionally ThreadSafe）：某些方法需要为了线程安全需要在外部使用的时候进行同步。如Collection.synchronized返回的集合，对它们进行迭代时就需要外部同步。如下代码，当对synchronizeColletcion返回的 collection进行迭代时，用户必须手工在返回的 collection 上进行同步，不遵从此建议将导致无法确定的行为：\nCollection c = Collections.synchronizedCollection(myCollection);\nsynchronized(c) {\n    Iterator i = c.iterator(); // Must be in the synchronized block\n    while (i.hasNext())\n        foo(i.next());\n}\n\n非线程安全（UnThreadSafe）：该类是实例可变的，如需安全地并发使用，必须外部手动同步。如HashMap和ArrayList；\n\n线程对立的（thread-hostile）：即便所有的方法都被外部同步保卫，这个类仍不能安全的被多个线程并发使用。这种类或者方法非常少，比如System.runFinalizersOnExit方法是线程队里的，但已经废除了。\n\n\n\n在文档中描述有条件的线程安全类要特别小心，必须指明哪个调用方法需要外部同步，并且需要获得哪一把锁；\n\n如果使用类使用的是“一个可公有访问的锁对象”的话，很可能被其他线程超时地保持公有可访问锁，而造成当前线程一直无法获得锁对象，这种行为被称为“拒绝服务攻击”，为了避免这种攻击可以采用 私有锁对象，例如：\nprivate final Object lock = new Object();\npublic void foo(){\n    synchronized(lock){\n        ...\n    }\n}\n\n这时，私有锁对象只能被当前类内部访问到，并不能被外部访问到，因此不可能妨碍到当前类的同步，就可以避免“拒绝服务攻击”。但是，这种方式只适合“无条件线程安全”级别，并不能适用于“有条件性的线程安全”的级别，有条件的线程安全级别，必须在文档中说明，在调用方法时应该获得哪把锁。\n\n\n\n总结\n每个类都应该利用严谨的说明或者线程安全注解，清楚地在文档中说明它的线程安全属性。有条件的线程安全类，应该说明哪些方法需要同步访问，以及获得哪把锁。无条件的线程安全类可以采用私有锁对象来防止“拒绝服务攻击”。涉及到线程安全的问题，应该严格按照规范编写文档。\n\n\n \n"},"第九章 并发/71.慎用延迟初始化.html":{"url":"第九章 并发/71.慎用延迟初始化.html","title":"71.慎用延迟初始化","keywords":"","body":"\n问题\n延迟初始化（lazy initialization)是延迟到需要域的值时才将它初始化的这种行为。如果永远不需要这个值，这个域就永远不会被初始化。这种方法既适用于静态域，也适用于实例域。和大多数优化一样，不成熟的优化是大部分错误的源头。那么针对线程安全的延迟初始化有哪些可靠的方式？\n\n答案\n下面是正常初始化实例域的方式，但是要注意采用了final修饰符：\nprivate final FildType field= computeFieldValue();\n现在要对这个实例域进行延迟初始化，有这样几种方式：\n\n同步方法：在实例化域值得时候，可以使用同步方法从而保证线程安全性，如：\nprivate FieldType field;\nsynchronized FieldType getField(){\n    if(field == null){\n        field = computeFieldValues();\n    }\n    return field;\n}\n\n静态内部类：为了减小上面这种方式的同步访问成本，可以采用静态内部类的方式，被称之为lazy initialization holder class 模式。在jvm的优化下，这种方式不仅可以达到延迟初始化的效果，也能保证线程安全。示例代码为：\nprivate static class FieldHolder{\n    static final FieldType field = computeFieldValue();\n}\nstatic FieldType getField(){\n    return FieldType.field;\n}\n\n双重检测：这种模式避免了在初始化之后，再次访问这个域时的锁定开销（在普通的方法里面，会使用synchronized对方法进行同步，每次访问方法的时候都要进行锁定）。这种模式的思想是：两次检查域的值，第一次检查时不锁定，看看其是否初始化；第二次检查时锁定。只用当第二次检查时，表明其没有被初始化，才会调用computeFieldValue方法对其进行初始化。如果已经被初始化了，就不会锁定了，另外该域被声明为volatile非常重要，示例代码为：\nprivate volatile FieldType field;\npublic FieldType getField() {\n    FieldType result = field;\n    if (result == null) {\n        synchronized (this) {\n            result = field;\n            if (result == null) {\n                field = result = computeFieldValue();\n            }\n        }\n    }\n    return result;\n}\n\n\n\n结论\n大多数正常的初始化都要优于延迟初始化。如果非要进行延迟初始化的话，针对实例域采用双重检测方式，针对静态域，可以利用静态内部类的第一次访问才进行初始化的特性，使用静态内部类来完成延迟初始化。\n\n\n"},"第九章 并发/72.不要依赖于线程调度器.html":{"url":"第九章 并发/72.不要依赖于线程调度器.html","title":"72.不要依赖于线程调度器","keywords":"","body":"\n问题\n当有多个线程运行时，由线程调度器决定哪些线程将会运行，分配CPU时间片。但是，在大多数系统采用的调度策略都是不太相同的，因此，任何依赖于线程调度器来达到程序性能和正确性的并发程序都是不安全和不可移植的。那么，在编写可移植的，健壮性强的并发程序有哪些好的方法？\n\n答案\n\n最好的方式是，保证可运行的线程尽可能少，或不明显高于处理器的数量。如果，可运行的线程足够少，对线程调度器而言就不需要“纠结”为哪个线程分配时间片，只需要让多核处理器处理这些线程就好了。从侧面来说，就降低了对线程调度器的调度策略的依赖。那么，保证尽可能少的线程数唯一的方法就是，让每个线程都做有意义任务，从整体而言，就会降低总线程的个数；\n当程序不正确的时候，是因为线程无法获得足够的时间片的话，不要企图使用Thread.yield的方式，让其他线程让出时间片，来满足自身的需求。这是因为，不同的JVM上对Thread.yield语义的是不相同的，这样就失去了可移值性。另外，在测试期间，使用Thread.yield人为地来增加线程并发性，应该由Thread.sleep(1)来代替Thread.yield；\n千万不要企图通过调整线程优先级来达到程序的正确性，线程的优先级是最不可移植的特性。\n\n\n结论\n千万不能让程序依赖线程调度器，这样会失去健壮性和可移植性。而Thread.yield和线程优先级这些特性，是最不具有可移植性，程序中不应该使用它们。\n\n\n"},"第九章 并发/73.避免使用线程组.html":{"url":"第九章 并发/73.避免使用线程组.html","title":"73.避免使用线程组","keywords":"","body":"\n问题\n除了线程、锁和监视器外，线程系统还提供了另外一个抽象单元：线程组。线程组的设计初衷是作为隔离applet的机制，达到安全性。但是，实际上并未达到所期待的安全性，甚至都差到在JAVA安全模型上都未提及。除了安全性的糟点外，还有哪些缺陷？\n\n答案\n\n除了安全性没有达到预期外，可用的基本功能很少；\nThreadGroup的API非常脆弱；\n\n\n结论\n线程组并没有提供太多有用的功能，而且它们提供的许多功能还都是有缺陷的。当管理线程或处理线程组逻辑时，应该考虑使用executor。\n\n\n \n"},"第十章 序列化/74.谨慎的实现Serializable接口.html":{"url":"第十章 序列化/74.谨慎的实现Serializable接口.html","title":"74.谨慎的实现Serializable接口","keywords":"","body":"\n问题\n\n序列化过程是将“一个对象编码成一个字节流”，相反的处理过程被称之为“反序列化过程”。当一个对象被序列化后，它的编码就可以从一台虚拟机传至另一个台虚拟机，可以被保存在磁盘上，方便以后反序列化使用。长期以来有一个误解，为了实现序列化，只需要实现Serializable接口即可，事实上这种方式存在诸多危害，贪图这种序列化方式的方便，会带来长期维护的成本。关于Serilizable有哪些注意事项？\n\n答案\n\nSerializable的缺点\n直接实现Serializable接口有如下这些缺点：\n\n降低灵活性：如果一个类实现了Serializable接口，它的字节流编码也变成了它导出API的一部分，一旦这个类被广泛使用，就必须永远支持这种序列化方法。并且，如果使用了默认的Serializable，这个类中私有的和包即级私有的实例域都会变成导出的API的一部分，这不符合域最小访问级别的设计原则。另外，如果改变了类的内部结构的话，客户端企图用类的旧版本来序列化，而使用新版本来进行反序列化的话，程序就会出错。\n如果被序列化的类没有显示的指定serialVersionUID标识（序列版本UID），系统会自动根据这个类来调用一个复杂的运算过程生成该标识。此标识是根据类名称、接口名称、所有公有和受保护的成员名称生成的一个标志号。如果改变了类的内部结构，如添加了一个方法，自动产生的序列版本UID也会发生变化。因此，如果没有显式的声明一个版本号的话，兼容性就会遭到破坏，在运行时导致InvalidClassException。\n\n更容易引发Bug和安全漏洞：一般对象是由构造器创建的，而序列化也是一种对象创建机制，反序列化也可以构造对象。由于反序列化机制中没有显式的构造器，反序列化要确保：由真正的构造器建立的约束关系，并且不允许攻击者访问正在构造过程中的对象的内部信息。依靠默认的反序列化机制，很容易使对象的约束关系遭到破坏，以及遭受到非法访问。\n\n相关测试负担加重：当一个可序列化的类被修改后，需要检查“在新版中序列化一个实例，在旧版本中反序列化”及“在旧版本中序列化一个实例，在新版本反序列化”是否正常，当发布版本增多时，这种测试量与“可序列化的类的数量和发行版本号”的乘积成正比。\n\n\n\n\n2.Serializable适用场景\n​    若一个类要加入某个框架，而该框架是依赖序列化来实现对象的传输和持久化，那么该类实现Seriablizable就是有必要，更进一步来看，一个类属于一个组件，如果父组件实现了Seriablizable接口，那么该类也需要实现Seriablizable接口。根据经验，比如Date和BigInteger这样的值类应该实现Serializable，大多数集合类也需要实现。\n3.Serializable不适用场景\n\n为了继承而设计的类应该尽可能少地去实现Serializable接口，用户接口也应该尽可能不继承Serializable接口，原因是子类或实现类也要承担序列化的风险。大多数情况下需要遵守这条原则，极为特殊的情况可以打破这项原则，比如实现Serializable接口的的类有Throwable类(异常可以从服务器端传到客户端)、Component类(GUI可以被发送、保存和恢复)、HttpServlet抽象类(会话session可以被缓存)；\n内部类不应该实现Serializable，内部类需要保存指向外部类实例的引用及保存来自外部作用域的局部变量的值。这些域如何对应到类定义中不确定。因此内部类的默认序列化形式定义不清楚。\n\n\n结论\n总之，千万不要将序列化就等同于简单的实现Serilizable接口，应该要考虑着重考虑Seriablizable的应用场景和上面所述的这些注意事项。\n\n\n"},"第十章 序列化/75.考虑使用自定义的序列化形式.html":{"url":"第十章 序列化/75.考虑使用自定义的序列化形式.html","title":"75.考虑使用自定义的序列化形式","keywords":"","body":"\n问题\n设计一个类的序列化形式和设计该类的API 同样重要，因此在没有认真考虑好默认的序列化形式是否合适之前，不要贸然使用默认的序列化行为。在作出决定之前，你需要从灵活性、性能和正确性多个角度对这种编码形式进行考察。一般来讲，只有当你自行设计的自定义序列化形式与默认的形式基本相同时，才能接受默认的序列化形式。选择合适的序列化方式，有哪些注意事项？\n\n答案\n\n默认的序列化形式描述了该兑现内部所包含的数据，以及每一个可以从这个对象到达的其他对象的内部数据，即完整了描述了所有对象被链接起来的拓扑结构。对于一个对象来说，理想的序列化形式应该只包含该对象所表示的逻辑数据，而逻辑数据和物理表示应该是相互独立。也就是说，如果一个对象的物理表示等同于它的逻辑内容的话，就适合使用默认的序列化形式。\n有这样一个例子\npublic class Name implements Serializable { \n      private final String lastName; \n      private final String firstName; \n      private final String middleName; \n      ... ... \n  }\n从逻辑的角度而言，Name类可以简单的由lastName、firstName以及middleName三个属性来进行表示，也就是说，这三个属性可以精确的反映出它的逻辑内容。因此，这种情况可以采用默认的序列化形式，同样也需要在readObject中进行参数有效性检测和保护性拷贝。\n\n使用默认序列化形式，当一个或多个域字段被标记为transient 时，如果要进行反序列化，这些域字段都将被初始化为其类型默认值，如对象引用域被置为null，数值基本域的默认值为0，boolean域的默认值为false。如果这些值不能被任何transient 域所修饰，你就必须提供一个readObject方法。它首先调用defaultReadObject，然后再把这些transient 域进行恢复为之前的初始值；同样的，在序列化过程中，被transient修饰的实例域会被省略掉\n\n在序列化过程中，虚拟机会试图调用对象类里的writeObject() 和readObject()，因此可以在readObject和writeObject方法中实现自己的序列化逻辑。就算没有实现特定的逻辑也应该调用默认的ObjectOutputStream.defaultWriteObject() 和ObjectInputStream.defaultReadObject()方法，这样就可以保证向前或者向后的兼容性；\n\n无论你选择了哪种序列化形式，都要为自己编写的每个可序列化的类声明一个显式的序列版本UID。这样可以避免序列版本UID成为潜在的不兼容根源，同时也会带来小小的性能好处，因为不需要去算序列版本UID。\n\n\n\n结论\n当你决定将一个类设计成可序列化的时候，就应该详细考虑应该采用什么样的序列化形式。只有当默认的序列化形式能够合理的描述对象的逻辑状态时，才能使用默认的序列化形式。否则就要设计一个自定义的序列化形式，通过它合理的描述出对象的状态。\n\n\n"},"第十章 序列化/76.保护性地编写readObject方法.html":{"url":"第十章 序列化/76.保护性地编写readObject方法.html","title":"76.保护性地编写readObject方法","keywords":"","body":"\n问题\n在第39条里介绍到了为了让程序更加安全可靠，需要针对可变域在构造器和访问方法中进行保护性拷贝，例如下面的代码：\npublic final static class Period{\n    private final Date start;\n    private final Date end;\n    public Period(Date start, Date end){\n        this.start = new Date(start.getTime());\n        this.end = new Date(end.getTime());\n        if(this.start.compareTo(this.end)>0){\n            throw new IllegalArgumentException(start + \"after\" +end);\n        }\n    }\n    public Date getStart() {\n        return new Date(start.getTime());\n    }\n    public Date getEnd() {\n        return new Date(end.getTime());\n    }\n  }\n但是如果将这个类进行序列化的时候，就可能这个类会出现不满足start和end的约束关系了，那么，应该怎样保证在序列化的时候也能保障对象的关键约束关系？\n\n答案\n除了构造器构造对象外，反序列化也是一种构造对象的方式，因此，也需要在构造对象的时候进行参数有效性检查以及保护性拷贝。所以在readObject方法也需要确保Period的关键约束不变以及保持它的不可变性：\n\n\n  private void readObject(ObjectInputStream s)\n  throws IOException, ClassNotFoundException {\n      s.defaultReadObject();\n      // Defensively copy our mutable components\n      start = new Date(start.getTime());\n      end = new Date(end.getTime());\n      // Check that our invariants are satisfied\n      if (start.compareTo(end) > 0)\n          throw new InvalidObjectException(start +\" after \"+ end);\n      }\n  }\n  并且需要注意的是，保护性拷贝在参数有效性检查的前面，并且不能使用clone方法进行拷贝对象。\n\n结论\n总而言之，每当你编写readObject方法的时候，都要这样想：你正在编写一个公有的构造器，无论给它传递什么样的字节流，它都必须产生一个有效的实例。下面这些经验，有助于编写出更加健壮的readObject方法：\n\n对于对象引用域必须保持为私有的，要保护性地拷贝这些域中的每个对象。不可变类的可变组件就属于这一类别；\n对于任何约束条件，如果检查失败，则抛出一个InvalidObjectException异常。这些检查动作应该跟在所有的保护性拷贝之后；\n如果整个对象图在被反序列化之后必须进行验证，就应该使用ObjectInputValidation接口；\nreadObject方法中都不要调用可覆盖的方法，无论是间接的方式还是直接的方式\n\n\n\n"},"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html":{"url":"第十章 序列化/77.单例模式，枚举类型优先于readResolve.html","title":"77.单例模式，枚举类型优先于readResolve","keywords":"","body":"\n问题\n针对Singleton，最简单的一种方式是：\npublic class Elvis {\n    public static final Elvis INSTANCE = new Elvis();\n    private Elvis() { ... }\n    public void leaveTheBuilding() { ... }\n}\n如果类被序列化了，不论是采用默认的序列化方式还是采用自定义的序列化方式，或者在readObject方法中进行所谓的处理，这个类都将不会是单例的了。那么针对这种要满足可序列化的单例应该怎样实现？\n\n答案\n要满足可序列化的单例，有两种方式：\n\n利用readResolve方法：readResolve特性允许你用readObject创建的实例代替另一个实例。对于一个正在被反序列化的对象，如果它的类定义了一个readResolve方法，并且具备正确的声明，那么在反序列化之后，新建对象上的readResolve方法就会被调用。然后，该方法返回的对象引用将被返回，取代新建的对象。因此，在每次反序列化的时候，就可以在readResolve方法中返回之前的实例对象，这样就可以确保被多次反序列化后的对象也只会有一个。示例代码为：\n// readResolve for instance control - you can do better!\nprivate Object readResolve() {\n    // Return the one true Elvis and let the garbage collector\n    // take care of the Elvis impersonator.\n    return INSTANCE;\n}\n该方法忽略了被反序列化的对象，只返回该类初始化时创建的那个特殊的Elvis实例。事实上，如果依赖readResolve进行实例控制，带有对象引用类型的所有实例域则都必须声明为transient的。否则，利用readResolve方法实现的单例也会遭受到攻击。\n\n采用枚举实现：可以采用枚举实现可序列化的单例，这种安全性由JVM提供保障，而且代码十分简洁，实例域也不需要用transient修饰：\n// Enum singleton - the preferred approach\npublic enum Elvis {\n    INSTANCE;\n    private String[] favoriteSongs ={ \"Hound Dog\", \"Heartbreak Hotel\" };\n    public void printFavorites() {\n        System.out.println(Arrays.toString(favoriteSongs));\n    }\n}\n\n\n\n结论\n实现可序列化最简单安全的方式是采用枚举的形式，应该尽可能采用这种方式。如果采用readResolve实现的话，呀确保该类的所有实例域都为基本类型，或者是transient的。\n\n\n"},"第十章 序列化/78.考虑用序列化代理代替序列化实例.html":{"url":"第十章 序列化/78.考虑用序列化代理代替序列化实例.html","title":"78.考虑用序列化代理代替序列化实例","keywords":"","body":"\n问题\n由于反序列化也可以作为一种构造对象的方式，但是往往因为这种利用语言之外的机制来创建，而不是普通的构造器，就容易遭受攻击。在反序列化时，实例的创建是由readObject方法来完成的。由于这是一个不同于构造函数的创建类实例的通道，因此在构造函数中的状态约束条件在readObjetc中也得一条不落下的实现。而且readObject的出现，让伪字节流攻击和内部域的盗用攻击成为可能。伪字节流攻击就是伪造一个字节流，通过readObject读取，内部域的盗用攻击是指用一个外部类包含该类，用外部类的字段去指向该类的可变对象。那么应该使用哪种方式，能够极大的减少风险？\n\n答案\n要确保能够安全的进行反序列化构造对象，可以采用序列化代理模式。所谓序列化代理模式相当简单，首先，为可序列化的类设计一个私有的静态嵌套类，精确地表示外围类的实例的逻辑状态。这个嵌套类被称作序列化代理（serialization proxy），它应该有一个单独的构造器，其参数类型就是那个外围类。这个构造器只从它的参数中复制数据：它不需要进行任何一致性检查或者保护性拷贝。按设计，序列代理的默认序列化形式是外围类最好的序列化形式。外围类及其序列代理都必须声明实现Serializable接口。例如，下面这种形式：\npublic class Period implements Serializable{  \n\nprivate static final long serialVersionUID = 1L;  \nprivate final Date start;  \nprivate final Date end;  \n\npublic Period(Date start, Date end) {  \n\n    if(null == start || null == end || start.after(end)){  \n\n        throw new IllegalArgumentException(\"请传入正确的时间区间!\");  \n    }  \n    this.start = start;  \n    this.end = end;  \n}  \n\npublic Date start(){  \n\n    return new Date(start.getTime());  \n}  \n\npublic Date end(){  \n\n    return new Date(end.getTime());  \n}  \n\n@Override  \npublic String toString(){  \n\n    return \"起始时间：\" + start + \" , 结束时间：\" + end;  \n}  \n\n/** \n * 序列化外围类时，通过这个方法，最后其实是序列化了一个内部的代理类对象！ \n * @return \n */  \nprivate Object writeReplace(){  \n\n    System.out.println(\"进入writeReplace()方法！\");  \n    return new SerializabtionProxy(this);  \n}  \n\n/** \n * 如果攻击者伪造了一个字节码文件，然后来反序列化也无法成功，因为外围类的readObject方法直接抛异常！ \n * @param ois \n * @throws InvalidObjectException \n */  \nprivate void readObject(ObjectInputStream ois) throws InvalidObjectException{  \n\n    throw new InvalidObjectException(\"Proxy required!\");  \n}  \nprivate static class SerializabtionProxy implements Serializable{  \n\n    private static final long serialVersionUID = 1L;  \n    private final Date start;  \n    private final Date end;  \n    SerializabtionProxy(Period p){  \n\n        this.start = p.start;  \n        this.end = p.end;  \n    }  \n\n    /** \n     * 反序列化这个类时，虚拟机会调用这个方法，最后返回的对象是一个Period对象！这里同样调用了Period的构造函数，会和原来的实例对象一样 \n     */  \n    private Object readResolve(){  \n\n        System.out.println(\"进入readResolve()方法，将返回Period对象！\");  \n        // 这里进行保护性拷贝！  \n        return new Period(new Date(start.getTime()), new Date(end.getTime()));  \n    }  \n\n}\n有这样几点需要注意：\n\n需要将writeReplace方法添加到外围类中，该方法可以产生一个序列化代理对象来代替外围类的实例。换句话说，writeReplace方法在序列化之前，将外围类的实例转换成了它的代理对象；\n在外围类要通过readObject方法中抛出异常，即表明禁止调用者调用readObject，杜绝攻击者企图通过readObject进行伪字节流攻击和内部域盗用攻击；\n内部类中的readResolve方法是利用类本身的构造器和静态工厂去创建对象，这样就避免了为了安全反序列化而遵守类的约束条件而产生的大量代码。\n\n\n结论\n每当写readObject或者writeObject方法的时候，就应该考虑使用序列化代理模式。要想稳健地将带有重要约束条件的对象序列化时，这种模式可能是最容易的方法。\n\n\n"},"第一章 创建和销毁对象/7.避免使用finalize方法.html":{"url":"第一章 创建和销毁对象/7.避免使用finalize方法.html","title":"7.避免使用finalize()方法","keywords":"","body":"\n问题\nfinalize()通常是不可预测的，也是很危险的，一般情况下也是不必要的。使用finalize()会导致行为不稳定、降低性能，以及可移植性的问题。虽然终结方法也有可用之处，但是还是应该避免使用它，finalize()方法的缺点和用途有哪些？\n\n解决\nfinalize()方法的缺点：\n\nfinalize()方法的缺点在于不能保证会及时的执行。从一个对象变成不可达开始，到它的终结方法被执行，所花费的时间是任意长的。这意味着，注重时间的任务不应该由finalize()方法来完成。例如，使用finalize()方法来关闭已经打开的文件，这就是十分严重的错误。因此，不应该以来finalize()方法来更新重要的持久状态。还有一点，使用finalize()方法有非常严重的性能损失；\n为类提供finalize()方法，可能会随意地延迟其实例的回收过程。如果对象进入F-Queue队列速度大于出队速度的话，就会造成大量对象没有被及时回收；\nJAVA的语言规范不仅不保证终结方法被及时执行，而且根本就不保证它们会被执行。当一个程序终结的时候，某些已经无法访问的对象上的终结方法却根本没有被执行，这是完全可能的。这里得到的结论就是：不应该依赖终结方法来更新重要的持久状态。例如，依赖终结方法来释放共享资源（比如，数据库）上的永久锁，很容易让整个分布式系统跨掉。\n及时的执行finalize方法是垃圾回收过程中一个重要步骤，这种算法在不同的JVM实现平台上会有很大的差别，也许在测试的JVM平台上测试性能良好，却可能在其他平台上的性能很差。\n\nfinalize方法有这样的两个用途：\n\n如果对象的所有者忘记显示关闭对象（如文件流，数据库session等），可使用finalize()方法作为最后的兜底，虽然这样做并不能保证终结方法能被及时的调用，但是在客户端无法通过调用显式的终结方法来正常结束操作的情况下，晚一点释放总比不释放的好。但是如果终结方法发现资源还未被终止，应该在日志中记录一条日志信息，因为这表明客户端代码中的一个bug，应该得到修复；\n第二种合理用途与对象的本地对等体(natvie peer)有关。本地对等体是一个本地对象，普通对象通过本地方法委托给一个本地对象，因为本地对等体不是一个普通的对象，所以垃圾回收器并不知道它，当它的java对等体被回收的时候，它却不会被回收掉。在本地对等体并不拥有关键资源的前提下，终结方法正好被用来执行回收本地对等体。\n\n\n结论\n除非使用finalze()来作为回收对象最后的兜底操作，就不要使用finalize()方法。如果使用了finalize()方法就要调用super.finalize，并且要在日志上记录使用了finalize()的特殊情况，应该当做Bug去修复。\n\n\n"},"第五章 枚举和注解/31.用实例域代替序数.html":{"url":"第五章 枚举和注解/31.用实例域代替序数.html","title":"31.用实例域代替序数","keywords":"","body":"\n问题\n枚举类有一个ordinal方法，用来表示枚举值在类型中的索引位置，这个方法看起来很美好，但是真的方便维护吗？\n\n原因\n许多枚举天生就与一个单独的int值相关联。所有的枚举都有一个ordinal方法，它返回每个枚举常量在类型中的数字位置，如下例：\npublic enum Ensemble {\n  SOLO, DUET, TRIO, QUINTET, SEXTET, SEPTET ,OCTET, NONET, DECTET;\n  public int numberOfMusicians(){\n    return ordinal() + 1;\n  }\n}\n这个方法的本意是通过枚举常量在类中的序号来表示每种音乐类型演奏的人数。虽然这个枚举不错，但是维护起来就像一场噩梦。如果常量重新排序，numberOfMusicians方法就会遭到破坏。好的做法应该是：永远不要根据枚举的序号导出与它有关的值，而是要将它保存到一个实例中：\npublic enum Ensemble{\n  SOLO(1), DUET(2), TRIO(3), QUINTET(4), SEXTET(5), \n  SEPTET(7), OCTET(8), DOUBLE_QUARTET(8), NONET(9),\n  DECTET(10), TRIPLE_QUARTRT(12);\n\n  private final int numberOfMusicians;\n  Ensemble(int size){\n    this.numberOfMusicians = size;\n  }\n  public int numberofMusicians(){\n    return numberOfMusicians;\n  }\n}\n\n结论\nEnum规范中谈到ordinal时这么写到：“大多数的程序员都不需要这个方法。它是设计成用于像EnumSet和EnumMap这种基于枚举的通用数据结构的。”除非你在编写的是这种数据结构，否则最好完全避免使用ordinal方法。 \n\n\n"}}}